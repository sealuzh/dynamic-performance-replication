/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 18:55:39 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 40;
      intArray0[1] = 0;
      intArray0[2] = 11379;
      intArray0[3] = 439;
      intArray0[4] = 0;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.reinit();
      regexp0.min = (-178);
      regexp0.subs = regexpArray0;
      regexp0.cap = (-178);
      regexp0.reinit();
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      String string0 = regexp0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp2.equals(regexp1);
      assertTrue(boolean0);
      
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op2 = Regexp.Op.PLUS;
      boolean boolean0 = regexp_Op2.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp_Op0);
      assertFalse(regexp2.equals((Object)regexp0));
      
      regexp2.op = regexp0.op;
      Regexp.Op regexp_Op3 = Regexp.Op.CAPTURE;
      Regexp regexp3 = new Regexp(regexp_Op3);
      Regexp regexp4 = new Regexp(regexp0);
      Regexp regexp5 = new Regexp(regexp4);
      regexp3.equals(regexp4);
      Regexp regexp6 = new Regexp(regexp3);
      int int0 = regexp4.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op regexp_Op4 = Regexp.Op.QUEST;
      Regexp regexp7 = new Regexp(regexp_Op4);
      int int1 = regexp7.maxCap();
      assertEquals(0, int1);
      
      boolean boolean1 = regexp1.equals("CE{^+Q!9RI@&D,");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      boolean boolean1 = regexp1.equals(regexp0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 2194;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 2194;
      regexp0.max = 2194;
      regexp1.reinit();
      regexp1.toString();
      regexp1.equals(regexp_Op0);
      regexp0.flags = 0;
      regexp1.name = "Mongolian";
      regexp1.maxCap();
      regexp1.flags = 0;
      regexp_Op0.isPseudo();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2194;
      intArray0[3] = 2194;
      intArray0[4] = 0;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp1.toString();
      Object object0 = new Object();
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("{afxqF@1}Bm:)Qw6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.{afxqF@1}Bm:)Qw6
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.toString();
      regexp0.reinit();
      regexp1.reinit();
      regexp_Op1.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.min = (-322);
      regexp1.op = regexp_Op0;
      regexp1.cap = 1233;
      regexp0.equals(regexp1);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp1 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp[] regexpArray1 = new Regexp[8];
      regexpArray1[0] = regexp0;
      regexpArray1[1] = regexp0;
      regexpArray1[2] = regexp0;
      regexpArray1[3] = regexp0;
      regexpArray1[4] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.equals(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      Regexp.Op regexp_Op2 = Regexp.Op.CAPTURE;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexp3.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-8307);
      Object object0 = new Object();
      String string0 = regexp1.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
      
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      int[] intArray0 = new int[8];
      intArray0[0] = (-8307);
      intArray0[1] = (-8307);
      intArray0[2] = 2193;
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp2);
      assertTrue(boolean0);
      
      Regexp.Op.values();
      Regexp.Op.values();
      boolean boolean1 = regexp_Op1.isPseudo();
      regexp1.reinit();
      Object object1 = new Object();
      regexp2.equals(object1);
      regexp_Op1.isPseudo();
      Object object2 = new Object();
      boolean boolean2 = regexp1.equals(object2);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\A", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals((Object) null);
      regexp_Op0.isPseudo();
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp1;
      regexp1.subs = regexpArray0;
      regexp0.flags = 2383;
      Object object0 = new Object();
      boolean boolean1 = regexp1.equals(object0);
      assertTrue(boolean1 == boolean0);
      
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 63;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp0.cap = 474;
      regexp1.equals(regexp0);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp1.cap = 63;
      regexp0.op = regexp_Op0;
      regexp0.min = 1354;
      regexp1.toString();
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Kr7O=-okE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Kr7O=-okE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      int int0 = (-16);
      String string0 = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Regexp regexp0 = null;
      Regexp regexp1 = null;
      try {
        regexp1 = new Regexp((Regexp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.reinit();
      boolean boolean0 = regexp2.equals((Object) null);
      assertFalse(boolean0);
      
      Regexp regexp3 = new Regexp(regexp2);
      regexp3.toString();
      int int0 = regexp3.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-8307);
      regexp1.max = 2193;
      Object object0 = new Object();
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      int[] intArray0 = new int[8];
      intArray0[0] = (-8307);
      intArray0[1] = (-8307);
      intArray0[2] = 2193;
      intArray0[3] = 2193;
      intArray0[4] = 2193;
      intArray0[5] = 2193;
      intArray0[6] = 2193;
      intArray0[7] = 2193;
      regexp0.runes = intArray0;
      regexp1.op = regexp_Op1;
      regexp1.op.isPseudo();
      regexp1.op = regexp_Op1;
      regexp1.equals(object0);
      regexp1.reinit();
      regexp0.toString();
      Regexp.Op.values();
      regexp1.reinit();
      assertNotSame(regexp1, regexp0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 36;
      regexp0.equals(regexp1);
      regexp1.toString();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[10];
      intArray0[3] = 2;
      intArray0[3] = 0;
      intArray0[3] = 0;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.equals("");
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexpArray0[2] = regexp2;
      regexp1.subs = regexpArray0;
      regexp2.max = (-2544);
      regexp2.cap = (-2544);
      regexp_Op0.isPseudo();
      regexp2.maxCap();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4128;
      regexp0.reinit();
      regexp1.min = 1525;
      regexp1.flags = 0;
      regexp1.max = 0;
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      regexp0.max = 0;
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp1.reinit();
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      boolean boolean1 = regexp_Op0.isPseudo();
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = regexp0.equals(regexp_Op0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.flags = 0;
      regexp0.cap = 0;
      regexp0.reinit();
      regexp0.name = "";
      regexp0.equals(object0);
      regexp0.flags = 2575;
      regexp0.flags = 40;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      regexp0.min = 36;
      regexp0.equals(regexp_Op0);
      regexp_Op0.isPseudo();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("RgtAt-y{w~]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.RgtAt-y{w~]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp.Op.values();
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.STAR;
      regexp_Op2.isPseudo();
      Object object0 = new Object();
      Regexp.Op regexp_Op3 = Regexp.Op.EMPTY_MATCH;
      regexp_Op3.isPseudo();
      Object object1 = new Object();
      Object object2 = new Object();
      Regexp.Op regexp_Op4 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op4);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp0);
      regexp1.equals(regexp2);
      regexp2.toString();
      regexp2.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp4 = new Regexp(regexp1);
      Regexp.Op regexp_Op2 = Regexp.Op.CHAR_CLASS;
      Regexp regexp5 = new Regexp(regexp_Op2);
      regexp3.equals(regexp_Op1);
      boolean boolean0 = regexp_Op2.isPseudo();
      Object object0 = new Object();
      boolean boolean1 = regexp5.equals(regexp0);
      assertTrue(boolean1 == boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp2.toString();
      Object object1 = new Object();
      boolean boolean2 = regexp1.equals(regexp_Op2);
      assertFalse(boolean2);
      
      regexp0.toString();
      assertFalse(regexp0.equals((Object)regexp5));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 127169;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 3506;
      regexp1.toString();
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      Regexp regexp2 = new Regexp(regexp0);
      regexpArray0[4] = regexp2;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp0;
      regexpArray0[8] = regexp0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      Regexp regexp3 = new Regexp(regexp0);
      regexp0.equals(regexp3);
      Regexp.Op regexp_Op2 = Regexp.Op.LITERAL;
      Regexp regexp4 = new Regexp(regexp_Op2);
      regexp4.maxCap();
      regexp2.maxCap();
      Regexp.Op.values();
      Object object0 = new Object();
      regexp_Op1.isPseudo();
      regexp3.reinit();
      regexp1.maxCap();
      regexp1.reinit();
      regexp3.reinit();
      Regexp regexp5 = new Regexp(regexp1);
      regexp5.reinit();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("44Jc~P7-r.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.44Jc~P7-r.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      regexp0.cap = (-2591);
      int[] intArray0 = new int[6];
      intArray0[0] = (-2591);
      intArray0[1] = (-27);
      intArray0[2] = (-2591);
      intArray0[3] = (-2591);
      intArray0[4] = 2492;
      intArray0[5] = 94;
      regexp0.runes = intArray0;
      regexp0.equals(regexp1);
      regexp0.cap = 104;
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(" a-N*@}jm.:%$f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op. a-N*@}jm.:%$f
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 9;
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      regexp0.cap = 577;
      regexp0.equals(regexp1);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexpArray0[2] = regexp2;
      regexp1.subs = regexpArray0;
      regexp2.max = (-2544);
      regexpArray0[0].max = (-2544);
      regexp2.cap = (-2544);
      regexp_Op0.isPseudo();
      regexp2.maxCap();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      regexp1.toString();
      // Undeclared exception!
      try { 
        regexp2.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Object object0 = new Object();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-1210);
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      regexp0.runes = null;
      regexp0.op = regexp_Op1;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      regexp0.equals((Object) null);
      regexp0.min = 19;
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      regexp2.cap = (-462);
      regexp2.flags = 42510;
      regexp2.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp2.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexpArray0[2] = regexp2;
      regexp1.subs = regexpArray0;
      regexp2.max = (-2544);
      regexp2.cap = (-2544);
      boolean boolean0 = regexp_Op0.isPseudo();
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
      
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op2 = Regexp.Op.PLUS;
      regexp_Op2.isPseudo();
      Regexp regexp3 = new Regexp(regexp1);
      regexp3.reinit();
      Regexp regexp4 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op3 = Regexp.Op.CAPTURE;
      Regexp regexp5 = new Regexp(regexp_Op3);
      Regexp regexp6 = new Regexp(regexp0);
      boolean boolean1 = regexp6.equals((Object) null);
      assertTrue(boolean1 == boolean0);
      
      Regexp regexp7 = new Regexp(regexp6);
      int int1 = regexp5.maxCap();
      assertEquals(0, int1);
      
      Regexp regexp8 = new Regexp(regexp_Op1);
      int int2 = regexp0.maxCap();
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.flags = 6908;
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexpArray0[2] = regexp2;
      regexp1.subs = regexpArray0;
      regexp2.max = (-2544);
      regexp2.cap = (-2544);
      regexp_Op0.isPseudo();
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op2 = Regexp.Op.PLUS;
      regexp_Op2.isPseudo();
      Regexp regexp3 = new Regexp(regexp1);
      regexp3.reinit();
      Object object0 = new Object();
      regexp1.equals(regexp3);
      Regexp.Op regexp_Op3 = Regexp.Op.STAR;
      regexp_Op3.isPseudo();
      Object object1 = new Object();
      Regexp regexp4 = new Regexp(regexpArray0[0].op);
      boolean boolean1 = regexp4.equals((Object) null);
      assertFalse(regexp4.equals((Object)regexp0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[1];
      regexp0.equals((Object) null);
      intArray0[0] = (-462);
      regexp0.runes = intArray0;
      regexp0.min = 0;
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      regexp2.cap = 93;
      regexp2.flags = 42510;
      regexp2.equals(regexp_Op0);
      regexp2.maxCap();
      regexp0.maxCap();
      regexp2.op = regexp_Op0;
      Regexp.Op.values();
      regexp2.runes = intArray0;
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp_Op0.isPseudo();
      regexp2.reinit();
      regexp2.maxCap();
      regexp0.reinit();
      regexp0.reinit();
      regexp2.reinit();
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 40;
      intArray0[1] = 0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      regexp_Op2.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[7] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[8] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op0;
      regexp0.equals(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp2.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\z", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      String string0 = "";
      regexp0.equals((Object) null);
      Regexp.Op regexp_Op2 = Regexp.Op.PLUS;
      Regexp regexp1 = new Regexp(regexp_Op2);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[6];
      intArray0[0] = 12;
      intArray0[1] = 2433;
      intArray0[2] = 2433;
      intArray0[3] = 2433;
      intArray0[4] = 2433;
      intArray0[5] = 2433;
      regexp0.runes = intArray0;
      regexp1.flags = 2433;
      regexp0.equals(regexp1);
      assertFalse(regexp1.equals((Object)regexp0));
      
      Regexp regexp2 = new Regexp(regexp0);
      int int0 = regexp2.maxCap();
      assertTrue(regexp2.equals((Object)regexp0));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
      
      Regexp regexp2 = new Regexp(regexp1);
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 14;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.max = 14;
      regexp1.op = regexp_Op0;
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("^", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.flags = (-1151);
      regexp0.equals(regexp_Op1);
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      String string0 = regexp0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.reinit();
      Regexp regexp3 = new Regexp(regexp1);
      regexp1.equals(regexp3);
      regexp_Op0.isPseudo();
      regexp0.equals(regexp3);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      String string0 = "tOOv/^;%hy)Ave}xc\\";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexpArray0[2] = regexp2;
      regexp1.subs = regexpArray0;
      regexp2.max = (-2544);
      regexpArray0[0].max = (-2544);
      regexp2.cap = (-2544);
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      regexp1.toString();
      // Undeclared exception!
      try { 
        regexp2.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[10];
      intArray0[3] = 0;
      intArray0[3] = 0;
      regexp0.runes = intArray0;
      regexp0.equals(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp1 = new Regexp(regexp_Op2);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp2);
      Regexp regexp3 = new Regexp(regexp0);
      Regexp regexp4 = new Regexp(regexp_Op1);
      regexp0.reinit();
      regexp0.maxCap();
      regexp3.maxCap();
      Regexp.Op.values();
      Object object0 = new Object();
      Object object1 = new Object();
      regexp3.equals((Object) null);
      Regexp.Op regexp_Op3 = Regexp.Op.NO_MATCH;
      regexp_Op3.isPseudo();
      Regexp.Op regexp_Op4 = Regexp.Op.ANY_CHAR;
      Regexp regexp5 = new Regexp(regexp_Op4);
      regexp5.reinit();
      Regexp regexp6 = new Regexp(regexp_Op3);
      Regexp regexp7 = new Regexp(regexp6);
      regexp7.maxCap();
      regexp6.reinit();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      regexp6.runes = intArray0;
      regexp3.reinit();
      regexp7.reinit();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.|
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.equals(regexp0);
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp0.equals((Object) null);
      Object object0 = new Object();
      boolean boolean0 = regexp3.equals(object0);
      assertFalse(boolean0);
      
      int int0 = regexp3.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "Avestan";
      regexp0.equals(regexp1);
      Regexp regexp2 = new Regexp(regexp1);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("(?-s:.)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp_Op0.isPseudo();
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      Regexp regexp4 = new Regexp(regexp_Op1);
      regexp4.min = 43137;
      Regexp regexp5 = new Regexp(regexp2);
      Regexp regexp6 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp2.equals(regexp3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = 853;
      intArray0[1] = 723;
      intArray0[2] = 237;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("[invalid char class]", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-595);
      intArray0[3] = (-807);
      intArray0[4] = (-1245);
      intArray0[5] = 667;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 2635;
      regexp1.runes = intArray0;
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      regexp0.op = regexp_Op1;
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      regexp0.toString();
      Regexp regexp2 = new Regexp(regexp_Op0);
      Object object1 = new Object();
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp0.equals(regexp3);
      Regexp regexp4 = new Regexp(regexp1);
      regexp4.reinit();
      Regexp regexp5 = new Regexp(regexp0);
      boolean boolean0 = regexp2.equals(regexp4);
      assertTrue(boolean0);
      
      int int0 = regexp5.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 125;
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp1);
      regexp3.reinit();
      Regexp regexp4 = new Regexp(regexp2);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp_Op1.isPseudo();
      String string0 = "TYU[/f_KjRG\"Q*$";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("TYU[/f_KjRG\"Q*$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.TYU[/f_KjRG\"Q*$
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.subs = null;
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.subs = null;
      regexp1.cap = (-3007);
      regexp0.equals(regexp2);
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      regexp_Op1.isPseudo();
      regexp1.maxCap();
      Regexp.Op regexp_Op2 = Regexp.Op.LEFT_PAREN;
      regexp_Op2.isPseudo();
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp0.toString();
      Regexp.Op regexp_Op3 = Regexp.Op.QUEST;
      regexp_Op3.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.cap = 4128;
      regexp0.reinit();
      regexp1.min = 1525;
      boolean boolean0 = regexp_Op0.isPseudo();
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      
      regexp0.reinit();
      regexp0.toString();
      Regexp.Op.values();
      regexp1.reinit();
      assertTrue(regexp1.equals((Object)regexp0));
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      int int0 = (-16);
      String string0 = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      Regexp[] regexpArray1 = new Regexp[8];
      regexpArray1[0] = regexp0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.equals(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp2);
      Object object0 = new Object();
      Regexp.Op regexp_Op2 = Regexp.Op.PLUS;
      Regexp regexp4 = new Regexp(regexp_Op2);
      regexp3.equals((Object) null);
      Regexp regexp5 = new Regexp(regexp2);
      regexp3.reinit();
      Regexp regexp6 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp3.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      String string0 = regexp0.toString();
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 1608;
      regexp0.equals(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.maxCap();
      Object object0 = new Object();
      boolean boolean1 = regexp0.equals(object0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.min = 1525;
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.reinit();
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean1 = regexp1.equals(regexp2);
      assertFalse(boolean1 == boolean0);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      String string0 = regexp2.toString();
      assertEquals("\\z", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      regexp1.name = ".0r\"0Wj)=BUpZ0";
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean1 = regexp1.equals(regexp2);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.toString();
      regexp1.reinit();
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-522);
      int int0 = regexp0.maxCap();
      assertEquals((-522), int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("$", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      regexp0.equals(object0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.reinit();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 3881;
      regexp0.runes = intArray0;
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.maxCap();
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op2 = Regexp.Op.PLUS;
      regexp_Op2.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.op = regexp0.op;
      Regexp.Op regexp_Op3 = Regexp.Op.CAPTURE;
      Regexp regexp3 = new Regexp(regexp_Op3);
      Regexp regexp4 = new Regexp(regexp0);
      Regexp regexp5 = new Regexp(regexp1);
      regexp4.equals(regexp_Op1);
      regexp1.maxCap();
      Regexp.Op regexp_Op4 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp6 = new Regexp(regexp_Op4);
      regexp6.toString();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("VERTICAL_BAR", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      Regexp[] regexpArray1 = new Regexp[8];
      regexpArray1[0] = regexp0;
      regexpArray1[1] = regexp0;
      regexpArray1[2] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.toString();
      regexp0.equals((Object) null);
      assertTrue(regexp0.equals((Object)regexp2));
      
      regexp2.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp regexp3 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      boolean boolean1 = regexp2.equals(object0);
      assertTrue(boolean1 == boolean0);
      
      regexp1.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.equals((Object) null);
      regexp0.min = 0;
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      regexp2.cap = (-462);
      regexp2.flags = 42510;
      regexp2.max = (-1232);
      regexp2.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp2.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
