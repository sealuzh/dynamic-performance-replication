/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:05:24 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 4285;
      regexp0.equals("&");
      regexp0.name = "&";
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 4285;
      regexp1.equals(regexp0);
      regexp1.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      int int0 = 1;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.flags = 1313;
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.flags = 330;
      regexp0.equals(regexp1);
      regexp0.max = 9;
      regexp1.cap = 2026;
      regexp0.cap = 9;
      regexp0.maxCap();
      regexp0.reinit();
      regexp1.toString();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("\\");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.\\
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.cap = 0;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.equals("z");
      regexp0.flags = 891;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?-m:$)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?-m:$)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      regexp0.cap = 11;
      regexp0.maxCap();
      regexp0.cap = 14;
      regexp0.name = "ANY_CHAR_NOT_NL";
      regexp0.maxCap();
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.equals(regexp0);
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[2] = regexp2;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexp1.subs = regexpArray0;
      regexp1.flags = (-1989);
      regexp1.cap = (-1989);
      regexp1.toString();
      regexp1.maxCap();
      regexp0.flags = 11;
      String string0 = "`M!juhCy";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("`M!juhCy");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.`M!juhCy
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = (-1714);
      regexp0.max = 16;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp[] regexpArray0 = new Regexp[1];
      regexp0.name = "";
      regexp2.subs = regexpArray0;
      regexpArray0[0] = regexp1;
      regexpArray0[0].flags = 11;
      regexp0.subs = regexpArray0;
      regexp1.equals(regexp2);
      regexp1.maxCap();
      Regexp.Op.values();
      regexp2.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("tcSA,5*a^k+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.tcSA,5*a^k+
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp0.reinit();
      regexp1.cap = 865;
      regexp1.reinit();
      regexp0.subs = regexp1.subs;
      Regexp.Op.values();
      regexp0.equals("~;d");
      Regexp.Op.values();
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.cap = 865;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[8];
      regexp0.max = 64217;
      intArray0[0] = 64217;
      regexp1.op = regexp_Op0;
      intArray0[1] = 9;
      intArray0[2] = 41;
      intArray0[3] = (-138);
      intArray0[4] = 3305;
      intArray0[5] = 5690;
      intArray0[6] = 36;
      intArray0[7] = 17;
      regexp1.runes = intArray0;
      regexp1.cap = 0;
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.min = 10;
      regexp2.name = ";CN0+k+!Qg{C|";
      regexp0.equals(regexp2);
      regexp0.equals(regexp2);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(";CN0+k+!Qg{C|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.;CN0+k+!Qg{C|
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "Javanese";
      int[] intArray0 = new int[9];
      intArray0[0] = 6;
      intArray0[1] = 2;
      intArray0[2] = 2441;
      intArray0[3] = (-2666);
      intArray0[4] = 43711;
      intArray0[5] = 14;
      intArray0[6] = 6824;
      intArray0[7] = (-788);
      intArray0[8] = 1161;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      Regexp.Op.values();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op0;
      int[] intArray0 = new int[0];
      regexp0.cap = 21956;
      regexp0.runes = intArray0;
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      String string0 = "";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      String string0 = "/7D";
      Regexp[] regexpArray0 = new Regexp[4];
      regexp0.reinit();
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[0].max = 45;
      regexpArray0[3] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.toString();
      regexp0.equals(regexp1);
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      regexp0.name = "(?-s:.)";
      regexp0.flags = 45;
      regexpArray0[2].cap = 10;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("/7D");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op./7D
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      regexp0.runes = null;
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = 10;
      regexp1.op = regexp_Op0;
      regexp0.reinit();
      regexp1.cap = 10;
      regexp0.max = 10;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.max = (-707);
      regexp0.name = "";
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.min = (-707);
      regexp1.name = "Noncharacter_Code_Point";
      Object object0 = new Object();
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.name = "(?:";
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.name = "(?:";
      regexp0.equals(regexp1);
      regexp1.toString();
      regexp1.max = 14;
      regexp1.equals(regexp0);
      regexp1.maxCap();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      int[] intArray0 = new int[4];
      regexp0.name = "e-";
      intArray0[0] = (-5293);
      regexp0.min = 1863;
      intArray0[1] = (-2528);
      regexp1.runes = intArray0;
      regexp0.max = (-2528);
      regexp1.runes = intArray0;
      intArray0[2] = 917506;
      intArray0[3] = (-1504);
      regexp0.runes = intArray0;
      regexp1.maxCap();
      regexp1.equals(regexp0);
      regexp_Op0.isPseudo();
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.max = (-573);
      regexp0.equals("|");
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
      
      regexp0.toString();
      boolean boolean1 = regexp_Op0.isPseudo();
      Regexp.Op.values();
      boolean boolean2 = regexp0.equals(regexp_Op0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 18;
      regexp0.reinit();
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.equals("");
      regexp0.equals(regexp1);
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      boolean boolean0 = regexp1.equals(object0);
      assertFalse(boolean0);
      
      boolean boolean1 = regexp1.equals(regexp0);
      regexp1.toString();
      boolean boolean2 = regexp_Op0.isPseudo();
      assertFalse(boolean2 == boolean1);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.min = (-2902);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp0.equals("\b");
      boolean boolean1 = regexp1.equals(regexp0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 12;
      intArray0[2] = (-1304);
      intArray0[3] = 43;
      intArray0[4] = 2213;
      intArray0[5] = 919;
      regexp0.max = 3047;
      intArray0[6] = 20;
      intArray0[7] = (-158);
      intArray0[8] = (-2462);
      regexp0.runes = intArray0;
      regexp0.op = regexp_Op0;
      regexp0.reinit();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[9];
      Regexp regexp2 = new Regexp(regexp0);
      regexpArray0[0] = regexp2;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp[] regexpArray1 = new Regexp[5];
      regexpArray1[0] = regexp2;
      regexpArray1[1] = regexp0;
      regexpArray1[2] = regexp0;
      regexp_Op0.isPseudo();
      regexpArray1[3] = regexp0;
      regexpArray1[4] = regexp1;
      regexpArray0[0].subs = regexpArray1;
      regexpArray0[7] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexpArray0[8] = regexp3;
      regexp1.subs = regexpArray0;
      boolean boolean1 = regexp1.equals(regexp_Op0);
      assertFalse(boolean1);
      
      boolean boolean2 = regexp0.equals(regexp1);
      assertFalse(regexp1.equals((Object)regexp3));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.reinit();
      regexp0.cap = 17;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 17;
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp0.toString();
      regexp0.maxCap();
      String string0 = regexp0.toString();
      int[] intArray0 = new int[7];
      intArray0[0] = 11;
      regexp1.reinit();
      intArray0[1] = 2659;
      intArray0[2] = 0;
      intArray0[3] = 17;
      intArray0[4] = 17;
      intArray0[5] = 17;
      intArray0[6] = 0;
      regexp0.runes = intArray0;
      regexp_Op0.isPseudo();
      regexp0.equals("");
      regexp1.equals("");
      regexp1.equals(regexp_Op0);
      regexp1.toString();
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      regexp0.equals("(?:)");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1440);
      regexp0.op = regexp_Op0;
      intArray0[1] = (-1440);
      regexp0.cap = (-1440);
      regexp0.min = 1;
      intArray0[2] = (-1440);
      regexp0.runes = intArray0;
      regexp0.flags = (-1440);
      regexp0.cap = (-1440);
      regexp0.flags = (-207);
      regexp0.flags = (-1440);
      regexp0.toString();
      regexp0.toString();
      regexp0.cap = (-1440);
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 93;
      int[] intArray0 = new int[4];
      intArray0[0] = 93;
      intArray0[1] = 3322;
      intArray0[2] = 93;
      intArray0[3] = 10;
      regexp0.runes = intArray0;
      regexp1.min = 10;
      Object object0 = new Object();
      regexp0.max = 10;
      regexp0.equals(object0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.toString();
      Regexp.Op.values();
      regexp0.toString();
      boolean boolean0 = regexp0.equals(object0);
      regexp_Op0.isPseudo();
      regexp1.toString();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp0.equals("$");
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.max = 14;
      regexp2.max = (-1267);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op0;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp2.reinit();
      regexp1.equals(regexp2);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.op = regexp_Op0;
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp1.op = regexp_Op1;
      regexp0.toString();
      regexp2.max = 14;
      regexp1.reinit();
      regexp2.name = "^";
      regexp2.cap = (-1);
      regexp1.equals(regexp2);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp2.max = 0;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp1);
      Regexp.Op.values();
      Regexp.Op.valueOf("BEGIN_TEXT");
      Regexp.Op.values();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      regexp0.toString();
      Regexp.Op.valueOf("VERTICAL_BAR");
      regexp1.maxCap();
      regexp1.toString();
      Regexp.Op.values();
      regexp1.maxCap();
      regexp1.runes = null;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean1 = regexp1.equals("VERTICAL_BAR");
      assertFalse(boolean1);
      
      boolean boolean2 = regexp_Op0.isPseudo();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp_Op0.isPseudo();
      regexp1.op = regexp_Op1;
      regexp1.name = "\b";
      regexp0.equals(regexp1);
      regexp1.max = 2938;
      regexp0.cap = 3040;
      Regexp.Op.values();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp1.toString();
      boolean boolean0 = regexp1.equals(regexp_Op1);
      assertFalse(regexp1.equals((Object)regexp0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 1209;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = (-3688);
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.name = "";
      boolean boolean1 = regexp0.equals(regexp2);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 43;
      regexp0.equals(regexp_Op0);
      regexp0.min = 5;
      regexp0.flags = 5;
      regexp0.equals((Object) null);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.max = 18;
      regexp0.min = 9;
      regexp0.flags = 8;
      regexp0.flags = (-182);
      Object object0 = null;
      regexp0.equals((Object) null);
      regexp0.name = "]g//ktS?XOTWjb1v";
      regexp0.maxCap();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.toString();
      regexp1.cap = 3;
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?-s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?-s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp0.flags = 0;
      Regexp.Op.values();
      regexp0.flags = 0;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp0.op = regexp_Op1;
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.cap = 0;
      regexp0.reinit();
      boolean boolean0 = regexp0.op.isPseudo();
      regexp0.subs = regexpArray0;
      Regexp.Op.values();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.op = regexp_Op0;
      boolean boolean1 = regexp0.equals("");
      assertTrue(boolean1 == boolean0);
      
      regexp0.toString();
      Regexp.Op.values();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean2 = regexp0.op.isPseudo();
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp0.flags = 0;
      Regexp.Op.values();
      regexp0.flags = 0;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp0.op = regexp_Op1;
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.cap = 0;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.reinit();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp0.flags = 0;
      Regexp.Op.values();
      regexp0.flags = 0;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp0.op = regexp_Op1;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2620;
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      regexp0.cap = 12;
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      String string0 = regexp0.toString();
      assertEquals("(?s:.)", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp0.reinit();
      regexp1.equals(regexp2);
      regexp0.equals(regexp1);
      regexp2.cap = 4;
      regexp2.min = 4;
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexp3.cap = 4;
      regexp0.max = 4;
      regexp3.max = (-3456);
      regexp2.max = (-2414);
      regexp3.op = regexp_Op2;
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp2.equals(regexp3);
      regexp3.equals(regexp0);
      String string0 = "";
      int[] intArray0 = new int[6];
      intArray0[0] = 4;
      intArray0[1] = 2039;
      intArray0[2] = (-3456);
      intArray0[3] = (-2414);
      intArray0[4] = 40;
      intArray0[5] = (-3456);
      regexp3.runes = intArray0;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-56);
      Regexp[] regexpArray0 = new Regexp[2];
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.flags = (-56);
      regexp0.flags = (-56);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "Buhid";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Buhid");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Buhid
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      regexp1.runes = intArray0;
      regexp0.max = 17;
      regexp0.runes = intArray0;
      regexp0.reinit();
      regexp0.max = 0;
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      regexp0.op = regexp_Op1;
      regexp0.op = regexp_Op0;
      Regexp.Op regexp_Op2 = Regexp.Op.LITERAL;
      regexp1.op = regexp_Op2;
      regexp_Op0.isPseudo();
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp0.op.isPseudo();
      regexp1.toString();
      regexp0.op.isPseudo();
      regexp0.maxCap();
      regexp0.op.isPseudo();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertNotSame(regexp_OpArray1, regexp_OpArray0);
  }
}
