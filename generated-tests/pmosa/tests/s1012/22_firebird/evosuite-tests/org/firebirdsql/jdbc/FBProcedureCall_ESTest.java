/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 21:49:18 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-1);
      try { 
        fBProcedureCall0.registerOutParam(997, (-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1, "bZ");
      fBProcedureCall0.registerOutParam((-1), 1539);
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(1854);
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParams();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.setName("");
      fBProcedureCall0.hashCode();
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.getOutputParam(1866);
      fBProcedureCall0.setName("");
      fBProcedureCall0.setName("");
      fBProcedureCall0.getName();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1), "S");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      boolean boolean0 = FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY;
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
      
      Object object1 = fBProcedureCall0.clone();
      assertNotSame(object1, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 547;
      fBProcedureCall0.getSQL(false);
      boolean boolean0 = true;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(547, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      int int0 = 840;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.getInputParam(840);
      fBProcedureParam0.setType(1);
      fBProcedureParam0.setIndex(840);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall1.getOutputParam(840);
      fBProcedureParam1.setType(840);
      try { 
        fBProcedureParam1.setValue(fBProcedureParam0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "rp;^n~Gfk");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      Object object0 = new Object();
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(rp;^n~Gfk)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParams();
      int int0 = 0;
      fBProcedureCall0.addParam(63, "my0e*MJ4?T?XSBDW:]q");
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      int int1 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "# R?J6(qQ#Q\\ExTp");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(# R?J6(qQ#Q\\ExTp)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 2557;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2557);
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2557, "EXECUTE PROCEDURE null(null)");
      try { 
        fBProcedureParam0.setValue(fBProcedureParam1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1854, "eJD");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(1854, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(63);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.setName("1~J=,v#k{X!Q");
      fBProcedureCall0.setName("1~J=,v#k{X!Q");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam0.clone();
      fBProcedureCall1.clone();
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureParam0.setIndex(63);
      fBProcedureCall0.clone();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.addParam(0, "1~J=,v#k{X!Q");
      fBProcedureCall1.clone();
      fBProcedureCall1.getOutputParam(63);
      fBProcedureCall1.setName("SELECT * FROM null(null)");
      fBProcedureCall1.getSQL(true);
      fBProcedureCall0.addParam(63, "EXECUTE PROCEDURE");
      fBProcedureCall1.getOutputParam(2156);
      try { 
        fBProcedureCall1.registerOutParam(2156, 3987);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.setName("gO0u^|,Z^h");
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(570, "");
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.setName("");
      fBProcedureCall0.clone();
      fBProcedureCall0.getInputParams();
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(63);
      assertEquals(840, fBProcedureParam0.getType());
      
      fBProcedureParam0.setType(63);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(63);
      fBProcedureParam0.setIndex(63);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(63, "26000");
      fBProcedureCall0.getInputParam(909);
      fBProcedureCall0.mapOutParamIndexToPosition((-76));
      fBProcedureCall0.mapOutParamIndexToPosition((-229));
      fBProcedureCall0.hashCode();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.getInputParams();
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null, 26000, null)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(63);
      fBProcedureParam0.setType(63);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(63);
      fBProcedureParam0.setIndex(63);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(63, "26000");
      assertEquals(63, fBProcedureParam1.getPosition());
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null, 26000)", string0);
      
      fBProcedureCall0.getInputParam(909);
      fBProcedureCall0.mapOutParamIndexToPosition((-76));
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-229));
      assertEquals((-229), int0);
      
      fBProcedureCall0.hashCode();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.setName((String) null);
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParams();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(63, "my0e*MJ4?T?XSBDW:]q");
      boolean boolean0 = FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY;
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(my0e*MJ4?T?XSBDW:]q)", string0);
      
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(63, fBProcedureParam0.getPosition());
      assertNotSame(fBProcedureCall0, object0);
      assertTrue(fBProcedureCall0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "# R?J6(qQ#Q\\ExTp");
      assertEquals(0, fBProcedureParam1.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(# R?J6(qQ#Q\\ExTp)", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("tK_5c!#NS}o%6_");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean0);
      
      fBProcedureCall1.getName();
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1834, "Mnym/jm4SQg");
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1834, "Mnym/jm4SQg");
      fBProcedureCall0.registerOutParam((-1), 63);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.registerOutParam(2, 2);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(49, true);
      fBProcedureCall0.addParam(49, "put@v6|:i=Io#");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(49, "iB?*4(~m");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(49, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1, "?,zm");
      fBProcedureCall0.registerOutParam((-1), (-1613));
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2627);
      assertEquals(2627, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-7), "iN*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -7
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParams();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(63, "my0e*MJ4?T?XSBDW:]q");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setValue((Object) null);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(my0e*MJ4?T?XSBDW:]q)", string0);
      
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertTrue(fBProcedureCall0.equals((Object)object0));
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(22, "Out@v6|:=Io#");
      assertEquals("Out@v6|:=Io#", fBProcedureParam0.getParamValue());
  }
}
