/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 14:11:46 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Qm5T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)30, (byte)30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      javaCharStream0.backup((byte)30);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L:Uk84_<8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)3, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-788);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("L", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Qm5T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-830), 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(49, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.SwitchTo(0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uVnt\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 455);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qsLzoCuGO*CY`g~Q:;y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 105, 1320);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-370));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -370. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LN-?)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1, 0);
      assertEquals(50, javaCharStream1.getBeginColumn());
      assertEquals(51, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(128);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 128);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 128. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2728), (-2728), 82);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 28);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 28. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<EXPONENT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, 765, 72);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("H+Pv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 26, 47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3548), (-3548));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals((-3548), javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nI6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n}I7~ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      javaCharStream0.maxNextCharInd = (-606);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "\\u";
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 1 column 2.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n}I7~ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      javaCharStream0.bufpos = 26;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.inBuf = 4;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2264, 2264, 2264);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = 122;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.TokenLexicalActions((Token) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo((byte)2);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(7);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 7. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x1FkvadxY.$^]|2{");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'+zKt)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 455, 455);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 455, column 457.  Encountered: \"z\" (122), after : \"\\'+\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1387, 68);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4094, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x1FkvadxY.$^]|2{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 119;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, (-3274));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-2457));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2457. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-7);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), 47, (-1804));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1, column 48.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)3, 51);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)3);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3, column 52.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte) (-85);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("\u056B", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte) (-39);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 23, 892, (byte)48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-43);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")@}0Fn?|3VCWQAm^_R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 26, column 30.  Encountered: \"F\" (70), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("'N{O/O=Jwme");
      javaCharStream0.ReInit((Reader) stringReader0, 2804, 1806, 1806);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2804, column 1808.  Encountered: \"{\" (123), after : \"\\'N\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-46);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("$", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 23, 892, (byte)48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 23, column 893.  Encountered: \"0\" (48), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"int\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, (byte)109);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("\"int\"", token0.toString());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("extends");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals("extends", token0.toString());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, 888, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(897, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, (byte)40, (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(">>>=", token0.toString());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 888, 2999);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(888, javaCharStream0.getBeginColumn());
      assertEquals(86, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2848), (-2848));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals((-2848), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 225, 92, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(93, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<=");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(94, token0.kind);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-99), 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, 57);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(48, token0.kind);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(27, token0.kind);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">kE5YBU8CdJO;7-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1877), 517, (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("enju0Ia)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, (-761), (byte)40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals((-756), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)60, (byte)60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|t-AVfhSy+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 49, 42);
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(45, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3548), (-572));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals((-572), javaCharStream0.getBeginColumn());
      assertEquals((-3548), javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z|dv5@)'2Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, (-2905));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-2903), javaCharStream0.getBeginColumn());
      assertEquals((-2901), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, 888, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(894, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^b%`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 17, 32, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(34, javaCharStream0.getColumn());
      assertEquals("%", token0.toString());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gc_|8B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 104, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("c_", token0.toString());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[9];
      StringReader stringReader0 = new StringReader("x1FkvadxY.$^]|2{");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<EXPONENT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, 765, 72);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ew-V#e=75.A%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 42, 42);
      char[] charArray0 = new char[9];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(42, javaCharStream0.getBeginColumn());
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("-=", token0.toString());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N/t;MSIDAf\u0002");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 27, (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d9xP#`aeacZ@}JVj|`j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L:Uk84_<8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)3, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(29, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=g46;:A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")@}0Fn?|3VCWQAm^_R");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals(106, token0.kind);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":>,1m5P^iv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(124, token0.kind);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P&*boPbt9d5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)3, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<'#:gy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1711, 1075, 582);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1711, column 1078.  Encountered: \":\" (58), after : \"\\'#\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      StringReader stringReader0 = new StringReader("kSJn4q2u9Ks|zB");
      javaCharStream0.ReInit((Reader) stringReader0, 115, (-850), (int) (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-839), javaCharStream0.getBeginColumn());
      assertEquals((-839), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qyT;X]zF4w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3819, 94, 12);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(95, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i}vGIc@A>;j^9\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, 50);
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(54, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uVnt\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 455);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(458, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o<c)fz,4'@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)3, (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("o", token0.toString());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("m", token0.toString());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 225, 32, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("j", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)104;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3548), (-572));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("f", token0.toString());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a.cM5<9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 105, 26, 105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_WzYVa^>#~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1650, (-1305));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals((-1299), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qyT;X]zF64w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3819, 3819);
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gNno7[J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[`j'S|\"?K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Uvbr=Z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("Z", token0.toString());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      char[] charArray0 = new char[8];
      StringReader stringReader0 = new StringReader("x1FkvadxY.$^]|2{");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("Y", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qyT;X]zF64w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(75, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qyT;X]zF64w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3819, 3819);
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("T", token0.toString());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DN>RK`&H o^IFw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4181), (-1), (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Qm5T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)30, (byte)30);
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("Qm5T", token0.toString());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k7X%M:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Nd{^yi!88K]r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 62);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      char[] charArray0 = new char[8];
      stringReader0.read(charArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("K", token0.toString());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*Ggz#b_SUy2}Xm`,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(23, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<CHARACTER_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, (-1505), 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(17, javaCharStream0.bufpos);
      assertEquals("CHARACTER_LITERAL", token0.toString());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lVRCXC B>n:>S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<SINGLE_LINE_COMMENT>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(19, javaCharStream0.bufpos);
      assertEquals(20, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("s:5)A)':Nro5)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-954), (byte)88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-954), javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("84F_'NQJe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4788, (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A>6>6M (");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \">\" (62), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ew-V#e75.A%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50);
      char[] charArray0 = new char[6];
      stringReader0.read();
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 50, column 51.  Encountered: \".\" (46), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'3YE4~l@LXMXUk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, 57);
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 22, column 58.  Encountered: \"Y\" (89), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-148), 26, (byte)3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -148, column 28.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x1FkvadxY.$^]|2{");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"F\" (70), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F,@eV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(",", token0.toString());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("H+Pv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 26, 47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(28, javaCharStream0.getBeginColumn());
      assertEquals(29, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("enju0Ia)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, (-761), (byte)40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(")", token0.toString());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)40, (byte)40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n&I7 ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals(105, token0.kind);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ew-V#e75.A%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50);
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 50, column 51.  Encountered: \"5\" (53), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ew-V#e75.A%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1075, 116, 582);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1075, column 120.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tp5z\",aXs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-71), 32, 1308);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -71, column 41.  Encountered: <EOF> after : \"\\\",aXs\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"int\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, (byte)109);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(111, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)39, 11);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("do", token0.toString());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)40, (byte)40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ew-V#e=7D.A%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 86);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(86, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n}I7~ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(30, javaCharStream0.getBeginColumn());
      assertEquals("~", token0.toString());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x1FkvadxY.$^]|2{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(10, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N/t;MSIDAf\u0002");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 27, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("exte1ds");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(32, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)2, 43);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(44, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-71), 26, 1308);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("byte", token0.toString());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LN-?)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LN-?)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }
}
