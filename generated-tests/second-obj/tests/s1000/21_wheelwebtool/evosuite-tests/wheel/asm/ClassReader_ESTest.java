/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:09:15 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Frame;
import wheel.asm.Label;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("L");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = (-1486);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[11] = (byte) (-39);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte) (-33);
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readLong(470);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 470
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 8);
      // Undeclared exception!
      try { 
        classReader1.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18771
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 8);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) null, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29243
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 8);
      Locale.getISOCountries();
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = 'V';
      charArray0[2] = '7';
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      // Undeclared exception!
      try { 
        classReader1.copyPool((ClassWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7431
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DirectoryFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2880));
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.accept((ClassVisitor) classWriter0, 1);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      int int0 = Frame.SHORT;
      MethodWriter methodWriter1 = methodWriter0.next;
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        classReader0.readConst('?', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 63
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      classReader0.getSuperName();
      char[] charArray0 = new char[6];
      classReader0.readConst(9, charArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-157), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -157
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getInterfaces();
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      classReader0.readInt((byte)62);
      // Undeclared exception!
      try { 
        classReader0.readByte((byte) (-87));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -87
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.readShort(1);
      classReader0.getSuperName();
      int int0 = classReader0.readUnsignedShort(609);
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(363);
      Attribute attribute0 = new Attribute("ic`7v;hNn&lgn");
      classWriter0.visitAttribute(attribute0);
      classReader0.accept((ClassVisitor) classWriter0, 363);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = methodWriter0;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      methodWriter0.signature = "org.apache.commons.io.filefilter.HiddenFileFilter";
      char[] charArray0 = new char[20];
      charArray0[0] = '^';
      int int0 = 7;
      // Undeclared exception!
      try { 
        classReader0.readConst((-3600), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3600
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getClassName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%");
      ClassWriter classWriter0 = new ClassWriter(964);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 150, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45977
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      ClassWriter classWriter1 = new ClassWriter((short) (-21267));
      int int0 = 1660;
      classReader0.accept((ClassVisitor) classWriter0, 1660);
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(64, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getInterfaces();
      assertEquals(609, classReader0.header);
      
      String string0 = classReader0.getClassName();
      assertEquals("org/apache/commons/io/filefilter/HiddenFileFilter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitOuterClass("org.apache.commons.io.filefilter.HiddenFileFilter", "org/apache/commons/io/filefilter/HiddenFileFilter", "org/apache/commons/io/filefilter/HiddenFileFilter");
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      classAdapter0.cv = (ClassVisitor) classWriter0;
      classWriter0.newClassItem("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      ClassAdapter classAdapter2 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader0.b, 609, 383);
      classReader2.getSuperName();
      int int0 = Edge.EXCEPTION;
      classReader1.getAccess();
      int int1 = classReader1.readUnsignedShort(1);
      assertEquals(65210, int1);
      
      int int2 = classReader1.readInt(383);
      assertEquals(1718185076, int2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      int int0 = 1950;
      Label[] labelArray0 = new Label[4];
      Edge edge0 = new Edge();
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = 'z';
      charArray0[2] = '0';
      charArray0[3] = 'Z';
      charArray0[4] = 'p';
      charArray0[5] = '{';
      charArray0[6] = '^';
      // Undeclared exception!
      try { 
        classReader0.readConst(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      classReader0.getInterfaces();
      char[] charArray0 = new char[4];
      charArray0[0] = '2';
      charArray0[2] = '{';
      charArray0[3] = 'L';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(374);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 374, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45977
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      int int0 = 33;
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        classReader0.getItem(204);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 204
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      boolean boolean1 = ClassReader.SIGNATURES;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "org.apache.commons.io.filefilter.DirectoryFileFilter";
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.DirectoryFileFilter");
      ClassReader classReader2 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader3 = null;
      try {
        classReader3 = new ClassReader(classReader1.b, 248, 609);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 745
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getInterfaces();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader2 = new ClassReader(classReader0.b, 749, 1);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader2, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4864
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "java/lang/Throwable";
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 8);
      // Undeclared exception!
      try { 
        classReader1.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 59146
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 8);
      classReader0.getAccess();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(252, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10316
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Frame");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("5");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = attribute0;
      Attribute attribute2 = attribute0.next;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      char char0 = '';
      char[] charArray0 = new char[0];
      classReader0.readConst(9, charArray0);
      char[] charArray1 = new char[8];
      charArray1[0] = char0;
      classReader1.readUTF8(classWriter0.COMPUTE_MAXS, charArray1);
      classReader0.getSuperName();
      classReader0.getAccess();
      classReader0.getItem(classReader1.EXPAND_FRAMES);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Frame");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.copyPool(classWriter0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = attribute0;
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(511);
      classReader1.accept((ClassVisitor) classWriter1, attributeArray0, 8);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      char[] charArray0 = new char[5];
      classReader1.readClass(3025, charArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(123);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 28);
      int int0 = Frame.SHORT;
      ClassWriter classWriter1 = new ClassWriter(57);
      ClassWriter classWriter2 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter2, 2);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = true;
      boolean boolean2 = true;
      FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean2);
      int int1 = 0;
      ClassReader classReader1 = new ClassReader(classReader0.b, int1, classWriter2.COMPUTE_FRAMES);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      classReader2.getInterfaces();
      int int2 = Frame.DOUBLE;
      int int3 = 2063;
      classReader1.readUnsignedShort(int3);
  }
}
