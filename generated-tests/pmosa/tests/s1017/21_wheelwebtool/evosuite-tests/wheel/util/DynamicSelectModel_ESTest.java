/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 11:59:15 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.time.temporal.ChronoUnit;
import java.time.temporal.TemporalUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("I}");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label((String) null);
      dynamicSelectModel2.value((String) null);
      dynamicSelectModel2.collection("]T'}");
      dynamicSelectModel2.enumeration((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(1321);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.PropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      ElExpression elExpression0 = new ElExpression("");
      String string1 = null;
      ElExpression elExpression1 = elExpression0.errorMessage((String) null);
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression1, (ElExpression) null, elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("AjFSg(j1");
      String string0 = "PQBQZaXlom";
      dynamicSelectModel1.translator("PQBQZaXlom");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator((String) null);
      dynamicSelectModel0.enumeration("eOaZ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("uba");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression eOaZ.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "<we'KXCIJQ5BbKX|s%";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("<we'KXCIJQ5BbKX|s%");
      dynamicSelectModel1.label("<we'KXCIJQ5BbKX|s%");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty("><t$r%-pI6H$");
      String string0 = " to translate value ' ";
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection(" to translate value ' ");
      dynamicSelectModel0.getComponent();
      dynamicSelectModel0.reset();
      dynamicSelectModel2.reset();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.empty((Object) null);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.enumeration("");
      // Undeclared exception!
      try { 
        dynamicSelectModel4.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression .values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Instant instant0 = MockInstant.ofEpochMilli((-2629L));
      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;
      Instant instant1 = MockInstant.minus(instant0, (-2629L), (TemporalUnit) chronoUnit0);
      MockInstant.toString(instant1);
      Any any0 = new Any(errorPage0, "1969-12-31T23:59:57.373629Z");
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("K_XW.p2saV>7t");
      dynamicSelectModel0.setTopLevelComponent(errorPage0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("K_XW.p2saV>7t");
      dynamicSelectModel2.getComponent();
      int int0 = 0;
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression K_XW.p2saV>7t.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue(" to create a value for dynamic ISelectModel. Index was ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = null;
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration((String) null);
      dynamicSelectModel1.reset();
      dynamicSelectModel0.setComponent((Component) null);
      ErrorPage errorPage0 = new ErrorPage();
      String string1 = " in ";
      errorPage0.attribute("", " in ");
      errorPage0._setSubmitTarget(" in ");
      // Undeclared exception!
      try { 
        errorPage0.commit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("<we'KXCIJQ5BbKX|s%");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("7[vYs|:3\"#B");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("getName");
      dynamicSelectModel2.validate();
      dynamicSelectModel1.enumeration("7[vYs|:3\"#B");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression 7[vYs|:3\"#B.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection(".");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression . evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("wheel.components.Form$Method");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression wheel.components.Form$Method evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.label("\" s?");
      dynamicSelectModel0.collection(" evaluated to null. Can't build a dynamic ISelectModel");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("wheel.components.Form$Method");
      dynamicSelectModel0.getOptionCount();
      dynamicSelectModel1.reset();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(1156);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1156
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
