/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 10:19:12 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.copyPool(classWriter0);
      int int0 = 941;
      ClassWriter classWriter1 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      Attribute[] attributeArray0 = new Attribute[19];
      Attribute attribute0 = new Attribute("StackMapTable");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("NL:./%Xr");
      classAdapter0.visitAttribute(attribute1);
      Attribute attribute2 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 4);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 941);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.readLong(2);
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassWriter classWriter1 = new ClassWriter(2);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, 3039);
      classReader0.getInterfaces();
      classReader0.copyPool(classWriter0);
      int int0 = classReader0.getAccess();
      assertEquals(49, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      char[] charArray0 = new char[6];
      charArray0[0] = 'n';
      charArray0[1] = 'p';
      charArray0[2] = '!';
      charArray0[3] = 'J';
      charArray0[4] = '(';
      charArray0[5] = 'x';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(671, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      classReader0.getClassName();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertEquals(3040, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitAnnotation("java/lang/Object", false);
      classReader0.accept((ClassVisitor) classWriter0, 21);
      String string1 = classReader0.getClassName();
      assertEquals("wheel/asm/Opcodes", string1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      int int0 = 941;
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[19];
      Attribute attribute0 = new Attribute("StackMapTable");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("NL:./%Xr");
      classAdapter0.visitAttribute(attribute1);
      Attribute attribute2 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 4);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 941);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 45);
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("java/lang/String");
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 1);
      classReader0.readLong(33);
      String string0 = classReader0.getClassName();
      assertEquals("java/lang/String", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "wheel.asm.ClassWriter";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      int int0 = 0;
      char[] charArray0 = new char[2];
      char char0 = 'Z';
      int int1 = 46;
      int int2 = (-729);
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.readLong(34);
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = classWriter0.newField("<init>", "<init>", "");
      classReader0.copyPool(classWriter0);
      int int1 = classReader0.getItem(1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.readLong(34);
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.copyPool(classWriter0);
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      charArray0[1] = ' ';
      charArray0[2] = 'Z';
      charArray0[3] = '$';
      charArray0[4] = 'j';
      charArray0[5] = '2';
      classWriter0.index = 363;
      charArray0[6] = 'Z';
      charArray0[7] = 'O';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      // Undeclared exception!
      try { 
        classReader0.readByte((-2413));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2413
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      int int0 = 952;
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 6);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 952);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 926;
      Label[] labelArray0 = new Label[1];
      classReader0.getInterfaces();
      Label label0 = new Label();
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        classReader0.readLabel(926, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)18;
      int int0 = (-8);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-8), (-352));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = 'm';
      charArray0[1] = 'J';
      charArray0[2] = 'G';
      charArray0[3] = '@';
      classReader0.readConst(20, charArray0);
      classReader0.getSuperName();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      int int0 = 191;
      // Undeclared exception!
      try { 
        classReader0.readClass(191, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte) (-64);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-29);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-824), (byte)0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)78;
      byteArray0[7] = (byte)116;
      byteArray0[8] = (byte)77;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      int int0 = (-633);
      char[] charArray0 = new char[7];
      char char0 = 'j';
      char[] charArray1 = new char[4];
      charArray1[0] = 'j';
      charArray1[1] = 'j';
      charArray1[2] = 'j';
      charArray1[3] = 'j';
      // Undeclared exception!
      try { 
        classReader0.readClass(35, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.readLong(34);
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.copyPool(classWriter0);
      classReader0.getClassName();
      // Undeclared exception!
      try { 
        classReader0.readClass(9, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)112;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)78;
      byteArray0[7] = (byte)114;
      byteArray0[3] = (byte)77;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      int int0 = 941;
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[19];
      Attribute attribute0 = new Attribute("");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, (-14));
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 941);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(";wj=4U8LX");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
