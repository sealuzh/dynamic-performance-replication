/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 19:01:08 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 257, "zAm5x/5xb[xU^`7", "The strings must not be null", "zAm5x/5xb[xU^`7", "zAm5x/5xb[xU^`7");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte((-1910));
      byte[] byteArray0 = new byte[0];
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, (String) null, "", "SVUrd<_?p9>Fsk$B4", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-938));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "OA;cL2", "OA;cL2", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@357d86d6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(120);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "<tL:k#3Lr", "i<?F\",&V", "wheel.asm.FieldWriter", "i<?F\",&V");
      Attribute attribute0 = new Attribute("<tL:k#3Lr");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(120);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "WuoA?~'~UH~1N57", "WuoA?~'~UH~1N57", "WuoA?~'~UH~1N57", "WuoA?~'~UH~1N57");
      ByteVector byteVector0 = new ByteVector(24);
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.DirectoryFileFilter", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "RuntimeVisibleAnnotations", "=:>t) xC#G.wXU", "=:>t) xC#G.wXU", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "java/lang/Class", "java/lang/Class", "$o%LLoS", "$o%LLoS");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1166));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Pcj", "Pcj", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(36);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33554432, "", "O*m", "", "");
      Attribute attribute0 = new Attribute("O*m");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 257, "zAm5x/5xb[xU^`7", "The strings must not be null", "zAm5x/5xb[xU^`7", "zAm5x/5xb[xU^`7");
      fieldWriter0.visitAnnotation("Signature", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2153), "%iU{t", "%iU{t", "%iU{t", "%iU{t");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1166));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Pcj", "Pcj", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "WuoA?~'~UH~1N57", "WuoA?~'~UH~1N57", "WuoA?~'~UH~1N57", "WuoA?~'~UH~1N57");
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.DirectoryFileFilter", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1166));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65535, "7U r@#hOb&H6D)Um&{", "", "n'LPf{)Hva", "7U r@#hOb&H6D)Um&{");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1166));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(65535, "7U r@#hOb&H6D)Um&{", "", "n'LPf{)Hva", "7U r@#hOb&H6D)Um&{");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Pcj", "Pcj", (String) null, (Object) null);
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(120);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "<tL:k#3Lr", "i<?F\",&V", "wheel.asm.FieldWriter", "i<?F\",&V");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1166));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(65535, "7U r@#hOb&H6D)Um&{", "", "n'LPf{)Hva", "7U r@#hOb&H6D)Um&{");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
