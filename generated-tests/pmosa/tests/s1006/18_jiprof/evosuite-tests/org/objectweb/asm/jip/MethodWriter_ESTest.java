/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 06:11:10 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      int int1 = 1024;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "StackMap";
      stringArray0[1] = "Ea<";
      stringArray0[2] = "Ea<";
      stringArray0[3] = "Ea<";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1024, "Ea<", "Ea<", "Ea<", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 66;
      intArray0[1] = 0;
      intArray0[2] = 16777219;
      intArray0[3] = (-1673);
      intArray0[4] = 0;
      intArray0[5] = 279;
      intArray0[6] = 363;
      intArray0[7] = 408;
      Label label0 = new Label();
      label0.inputStackTop = 279;
      label0.info = (Object) intArray0;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)21;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)63;
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 1564, 66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1564
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      intArray0[0] = 6;
      intArray0[1] = (-1553);
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {6, (-1553)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-24);
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte)0;
      byte byte0 = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)98;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1474156573));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "AnnotationDefault", "AnnotationDefault", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitTypeInsn(1, "AnnotationDefault");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1474156573));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "AnnotationDefault", "AnnotationDefault", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(1, 2);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(505);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", (String[]) null, true, true);
      ByteVector byteVector0 = new ByteVector(1);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<)6k$o5^:;Rz$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<)6k$o5^:;Rz$C(1y", "<)6k$o5^:;Rz$C(1y", "<)6k$o5^:;Rz$C(1y", stringArray0, true, true);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong(27);
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "char", "char", "k<)k$ol[^:;Rn$C(1y", stringArray0, false, false);
      classWriter0.visitAnnotation("YU56f%A*PlOrRGL", true);
      methodWriter0.visitIntInsn(6, 127);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(109);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitIntInsn(2, 109);
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(109, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[v^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[v^:;Rn$C(1y", "k<)k$ol[v^:;Rn$C(1y", "k<)k$ol[v^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, stringArray0, 66, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(104);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "j6eQP6");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "RuntimeInvisibleAnnotations", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Label label0 = new Label();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = 2520;
      int int1 = (-3532);
      ClassWriter classWriter0 = new ClassWriter((-3532));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777228, "Q0WEiG8N1@tS", "", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", stringArray0, false, false);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Q0WEiG8N1@tS");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3532), "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "char", "char", "", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(1, 22);
      methodWriter0.visitTypeInsn(30, "'{7*?%rJzy`L+\"23$9");
      methodWriter0.visitTypeInsn((-75), "6BT%)uZ3>'?;");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(94);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5352);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "rUc%*(", "]5nTF0X", "]5nTF0X", (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(742);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "SourceDebugExtension";
      stringArray0[2] = "";
      stringArray0[3] = "SourceDebugExtension";
      stringArray0[4] = "SourceDebugExtension";
      stringArray0[5] = "SourceDebugExtension";
      stringArray0[6] = "rUc%*(";
      stringArray0[7] = "";
      stringArray0[8] = "SourceDebugExtension";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "SourceDebugExtension", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 127, "", "rUc%*(", "java/lang/dyn/Dynamic", stringArray0, false, false);
      methodWriter1.getSize();
      methodWriter1.visitIincInsn(742, 42);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(729);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[1] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[2] = "#2e=]/";
      stringArray0[3] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[4] = "#2e=]/";
      classWriter0.newLong(729);
      stringArray0[5] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[6] = "#2e=]/";
      stringArray0[7] = "#2e=]/";
      classWriter0.visitSource("ms^+?>{uNrf{K\"'xA", "ms^+?>{uNrf{K\"'xA");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1473592338), "ms^+?>{uNrf{K\"'xA", "#2e=]/", "#2e=]/", stringArray0, false, false);
      methodWriter0.visitMaxs((-1473592338), (-1402));
      methodWriter0.visitMultiANewArrayInsn("ms^+?>{uNrf{K\"'xA", 1);
      methodWriter0.visitMaxs(16777219, 2);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      classWriter0.newNameType("^UQ", "Ea<");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "char", "char", "", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(30, 2);
      methodWriter0.visitFieldInsn(2475, "short", "char", "short");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(25);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "iQ^!f@S^)&Pa2", "iQ^!f@S^)&Pa2", "cF*E5x7N2q]  42>K3", (String[]) null, false, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("L2{8x<O{md3w*", "6rI2'#-:6e9M$\"E", "L2{8x<O{md3w*", label0, label0, 17);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(104);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisiblqAnnotations", "RuntimeInvisiblqAnnotations", "RuntimeInvisiblqAnnotations", (String[]) null, false, false);
      methodWriter0.exceptionCount = 1396;
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("RuntimeInvisiblqAnnotations", "RuntimeInvisiblqAnnotations", "RuntimeInvisiblqAnnotations", (Label) null, (Label) null, 104);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = 390;
      int int1 = 2841;
      ClassWriter classWriter0 = new ClassWriter(2841);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Q0WEiG8N1@tS";
      stringArray0[1] = "Q0WEiG8N1@tS";
      stringArray0[2] = "Q0WEiG8N1@tS";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Q0WEiG8N1@tS", "Q0WEiG8N1@tS", "Q0WEiG8N1@tS", stringArray0, false, false);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(390, "Y0Qx7*?Jx@+5", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "char", "Code", "5*6uq##G", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = methodWriter0.next;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("char", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "char", "char", "k<)k$ol[^:;Rn$C(1y", stringArray0, false, false);
      methodWriter0.visitTypeInsn((-166), "char");
      methodWriter0.visitInsn((-166));
      methodWriter0.visitIincInsn((-2005231459), 285212682);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1474156573));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 65535, "AnnotationDefault", "AnnotationDefault", "AnnotationDefault", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      classWriter0.thisName = null;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-654), "char", "}]|;T+QwQ", "@p1`/ULd6NIQ", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "char", "char", "", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(30, 2);
      methodWriter0.visitFrame(17, 30, stringArray0, 196, stringArray0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(729);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[1] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[2] = "#2e=]/";
      stringArray0[3] = "ms^+?>{uNrf{K\"'xA";
      stringArray0[4] = "#2e=]/";
      Item item0 = classWriter0.newLong(729);
      stringArray0[5] = "ms^+?>{uNrf{K\"'xA";
      Item[] itemArray0 = new Item[5];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      classWriter0.typeTable = itemArray0;
      stringArray0[6] = "#2e=]/";
      stringArray0[7] = "#2e=]/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1473592338), "ms^+?>{uNrf{K\"'xA", "#2e=]/", "#2e=]/", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, (-475));
      methodWriter0.visitMultiANewArrayInsn("ms^+?>{uNrf{K\"'xA", 1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(505);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", (String[]) null, true, true);
      methodWriter0.visitVarInsn(2, 505);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitVarInsn(2, (-4));
      methodWriter0.visitMaxs(2, (-4));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "char", "char", "u", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(30, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 30, stringArray0, 196, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<init>");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ")Q JB0=aV)ynq<JyFD", "8rKKG|c'h)g", "&IS>oU{|^:-X>J", (String[]) null, false, true);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(91, ")Q JB0=aV)ynq<JyFD", "8rKKG|c'h)g", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3999));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "char";
      stringArray0[3] = "char";
      stringArray0[4] = "char";
      stringArray0[5] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "char", "", "zI$ =9-", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(36, (-3562));
      methodWriter0.visitFrame(22, 541, stringArray0, 541, stringArray0);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(197, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(501, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "WI_UE0Tp]V!8h9P)T8", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4027), "Km^Fq,1", "iQ^!|@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, true, true);
      classWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      methodWriter0.visitFrame(1, 3297, (Object[]) null, 2048, (Object[]) null);
      methodWriter0.visitIntInsn(101, 101);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(3394, (-759));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(25);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "iQ^!f@S^)&Pa2", "iQ^!f@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, true, false);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 179, (Object[]) null, (-1), (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Exceptions";
      stringArray0[2] = ")d[P>aG&Yha*9P,%";
      stringArray0[3] = "Exceptions";
      stringArray0[4] = "Exceptions";
      stringArray0[5] = "Exceptions";
      stringArray0[6] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-718), "Exceptions", "Exceptions", "char", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn((-2104), (-34));
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 54, stringArray0, (-956), stringArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "}]|;T+QwQ", "SourceFile", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
      
      methodWriter0.visitMethodInsn(501, "fQ<4jZyYP9K'\"YC", "7T|>lDgE", "LineNumberTable");
      int int1 = methodWriter0.getSize();
      assertEquals(49, int1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Km^Fq,1", "Km^Fq,1", "Km^Fq,1", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("Km^Fq,1", 70);
      int int0 = methodWriter0.getSize();
      assertEquals(38, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Km^Fq,1", "Km^Fq,1", "Km^Fq,1", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("Km^Fq,1", 70);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-654), "", "iQ^!|@S^)&Pa2", "", (String[]) null, false, true);
      methodWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitLdcInsn("k<)k$ol[^:;Rn$C(1y");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "k<)k$ol[^:;Rn$C(1y", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "";
      stringArray0[3] = "char";
      stringArray0[4] = "char";
      stringArray0[5] = "char";
      stringArray0[6] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-345), "", "", "char", stringArray0, false, false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      methodWriter0.visitLdcInsn("char");
      methodWriter0.visitIincInsn((-2112), (-345));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)78;
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte)78, (byte)78);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 78
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.lastMethod = null;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "char", "char", "", stringArray0, false, false);
      methodWriter1.getSize();
      methodWriter1.visitMethodInsn(0, "GQ@c", "char", "RuntimeVisibleAnnotations");
      Label label0 = new Label();
      methodWriter1.visitIincInsn(74, 1256);
      methodWriter1.visitLocalVariable("", "GQ@c", "", label0, label0, 1);
      methodWriter1.visitVarInsn(30, 74);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "Ljava/lang/Synthetic;", "zN3@", "Km^Fq,1", stringArray0, false, false);
      classWriter0.visitAnnotation("YU56f%A*PlOrRGL", false);
      methodWriter0.visitFrame(83, 2048, stringArray0, 2048, stringArray0);
      methodWriter0.visitVarInsn(256, (-34));
      methodWriter0.visitIntInsn(1618, 83);
      methodWriter0.visitMaxs(83, 2);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Km^Fq,1", "Km^Fq,1", "=u-Ng7fG8S9rf,P-AA", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("=u-Ng7fG8S9rf,P-AA", 83);
      methodWriter0.visitVarInsn(83, 83);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";A`&n@<%Pg9U";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "zI$ =9-", "char", ";A`&n@<%Pg9U", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(1, 70);
      int[] intArray0 = new int[0];
      methodWriter0.exceptions = intArray0;
      methodWriter0.visitFrame((-3531), 28, stringArray0, 541, stringArray0);
      methodWriter0.visitIincInsn(28, 541);
      methodWriter0.visitFrame(1443168256, (-2112), stringArray0, 262144, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(54, 292, stringArray0, 38, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitFrame((-547), 16777222, stringArray0, 2, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-547), (-1634282924), stringArray0, 74, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(82);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "iQ^!@^)&Pa2", "iQ^!@^)&Pa2", "iQ^!@^)&Pa2", (String[]) null, true, false);
      methodWriter0.visitTypeInsn(183, "iQ^!@^)&Pa2");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2267));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitInsn(1);
      methodWriter0.visitFieldInsn((-2267), "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(94);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
      methodWriter0.visitMethodInsn(2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "RuntimeInvisibleAnnotations", "iQ^!|@S^)&Pa2", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      methodWriter0.visitFrame(7, 2, (Object[]) null, 7, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("RuntimeInvisibleAnnotations", (-2228));
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LineNumberTable";
      classWriter0.addType("Q SG");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitTypeInsn(1049, "LineNumberTable");
      int int0 = 1052;
      methodWriter0.visitFrame(1052, (-2594), stringArray0, 2, stringArray0);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn(255, (Label) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          boolean boolean0 = ClassReader.SIGNATURES;
          ClassWriter classWriter0 = new ClassWriter(82);
          FieldWriter fieldWriter0 = classWriter0.firstField;
          classWriter0.lastField = null;
          MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "iQ^!f@S^)&Pa2", "iQ^!f@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, true, true);
          methodWriter0.visitIincInsn(50331648, 1);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1649));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1649), "+m+Fw,", "+m+Fw,", "LocalVariableTable", (String[]) null, false, false);
      classWriter0.version = 3;
      methodWriter0.visitMultiANewArrayInsn("+m+Fw,", 0);
      methodWriter0.visitFrame(3, (-1649), (Object[]) null, 0, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, false, false);
      classWriter0.visitAnnotation(")Q JB0=aV)ynq<JyFD", false);
      methodWriter0.visitFrame(3, (-1673), (Object[]) null, 76, (Object[]) null);
      methodWriter0.visitIntInsn(340, (-662));
      methodWriter0.visitMaxs(2866, (-1837));
      methodWriter0.visitTypeInsn((-2104), ")Q JB0=aV)ynq<JyFD");
      methodWriter0.visitIntInsn(1552, 2866);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 177, "v", "Syt5etic", "ConstantValue", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = methodWriter0.next;
      ClassWriter classWriter1 = new ClassWriter(177);
      ByteVector byteVector0 = classWriter1.pool;
      methodWriter1.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("K$k-<#;S ^uW", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.threshold = 304;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4027), "Km^Fq,1", "iQ^!|@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      classWriter0.visitAnnotation("Ljava/lang/Synthetic;", false);
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(1, "Ljava/lang/Synthetic;", "iQ^!|@S^)&Pa2", "iQ^!|@S^)&Pa2");
      methodWriter0.getSize();
      methodWriter0.visitFrame(1, (-700), (Object[]) null, 101, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      classWriter0.newField("RuntimeInvisibleAnnotations", "char", "Z9ITS;)d");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "}]|;T+QwQ", "SourceFile", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitFrame(4, 1, stringArray0, 4, stringArray0);
      methodWriter0.visitVarInsn(32, 2048);
      methodWriter0.visitIntInsn(4, 0);
      methodWriter0.visitMaxs(4, 501);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "char", "SourceFile", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitFrame(4, 1, stringArray0, 4, stringArray0);
      methodWriter0.visitLdcInsn("RuntimeInvisibleAnnotations");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LineNumberTable";
      classWriter0.addType("Q SG");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitTypeInsn(1049, "LineNumberTable");
      int int0 = 1052;
      methodWriter0.visitFrame(1052, (-2594), stringArray0, 2, stringArray0);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k<)k$ol[^:;Rn$C(1y");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "zI$ =9-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "zI$ =9-", "char", "char", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(1, 70);
      int int0 = 28;
      methodWriter0.visitFrame(2, 28, stringArray0, 541, stringArray0);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2056), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1518, "iQ^!|@S^)&Pa2", "LocalVariableTable", "iQ^!|@S^)&Pa2", (String[]) null, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(1518, (-1673));
      methodWriter0.visitFieldInsn(340, "Km^Fq,1", "Km^Fq,1", "");
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LineNumberTable";
      classWriter0.addType("Q SG");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitIincInsn((-1934988375), 1049);
      methodWriter0.visitTypeInsn(1049, "");
      methodWriter0.visitInsn(1);
      methodWriter0.visitIincInsn(242, (-1840700267));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitTypeInsn(1049, "LineNumberTable");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String string0 = "iQ^!|@S^\\)&Pa2";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "iQ^!|@S^)&Pa2", "iQ^!|@S^)&Pa2", ".]Ao A4,~Tp~E", (String[]) null, false, true);
      classWriter0.visitAnnotation("Ljava/lang/Synthetic;", false);
      methodWriter0.visitFrame(262144, (-2526), (Object[]) null, 101, (Object[]) null);
      methodWriter0.visitVarInsn(5, 172);
      methodWriter0.visitIntInsn(127, (-2112));
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1979, (-185));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      boolean boolean0 = false;
      String string0 = "LineNumberTable";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LineNumberTable";
      boolean boolean1 = true;
      classWriter0.addType("Q SG");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      int int0 = 1049;
      methodWriter0.visitTypeInsn(1049, "");
      methodWriter0.visitInsn(1);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1, "k<)k$ol[^:;Rn$C(1y", "LineNumberTable", ">owMhAz;3MGL2( )[");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[6];
      intArray0[0] = 74;
      label0.line = 0;
      intArray0[1] = (-1673);
      intArray0[3] = 0;
      intArray0[4] = 74;
      label0.line = 0;
      intArray0[5] = 74;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " J)96H%0c";
      stringArray0[1] = " J)96H%0c";
      stringArray0[2] = " J)96H%0c";
      stringArray0[3] = " J)96H%0c";
      stringArray0[4] = " J)96H%0c";
      stringArray0[5] = "";
      classWriter0.newUTF8("`a|1^]'6wL");
      stringArray0[6] = " J)96H%0c";
      stringArray0[7] = " J)96H%0c";
      stringArray0[8] = " J)96H%0c";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "", "", " J)96H%0c", stringArray0, false, false);
      methodWriter0.visitLocalVariable(".jar", "", " J)96H%0c", label0, label0, 74);
      methodWriter0.classReaderLength = 17;
      Attribute attribute0 = new Attribute("ohbl8?r^%");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute("iK?_0NIku=n\"i");
      methodWriter1.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(94);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitIntInsn(94, (-1396));
      methodWriter0.visitTypeInsn(1, "k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = (-1673);
      int int1 = 7;
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      classWriter0.visitAnnotation(")Q JB0=aV)ynq<JyFD", true);
      methodWriter0.visitFrame(3, (-1673), (Object[]) null, 76, (Object[]) null);
      methodWriter0.visitIntInsn(340, (-662));
      int int2 = 2866;
      int int3 = (-128);
      methodWriter0.visitFrame((-128), (-1673), (Object[]) null, 76, (Object[]) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn((-128), 1418);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -128
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitVarInsn(66, 66);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      methodWriter0.visitFrame(3, (-1673), (Object[]) null, 76, (Object[]) null);
      methodWriter0.visitIntInsn(340, (-662));
      methodWriter0.visitFrame((-128), (-1673), (Object[]) null, 76, (Object[]) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitIntInsn((-128), 7);
      methodWriter0.visitMaxs(2866, (-1673));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Label label0 = new Label();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-3532));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777228, "Ea<", "", "AAAAAAAAAwAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA^AAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIBIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", stringArray0, false, false);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Ea<");
      methodWriter0.visitFrame(65535, 1, stringArray0, 1, stringArray0);
      methodWriter0.visitTypeInsn(2, "");
      methodWriter0.visitLabel(label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "AAAAAAAAAwAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA^AAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIBIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 7;
      ClassWriter classWriter0 = new ClassWriter(7);
      String string0 = "LocalVariableTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      classWriter0.visitAnnotation(")Q JB0=aV)ynq<JyFD", true);
      methodWriter0.visitFrame((-1343), 2, (Object[]) null, 340, (Object[]) null);
      Integer integer0 = new Integer((-1150));
      methodWriter0.visitLdcInsn(integer0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "cj";
      stringArray0[3] = ")Q JB0=aV)ynq<JyFD";
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-1303), "o4", "cj", "cj", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      classWriter0.visitAnnotation(")Q JB0=aV)ynq<JyFD", true);
      methodWriter0.visitFrame((-1343), 2, (Object[]) null, 340, (Object[]) null);
      Integer integer0 = new Integer((-1150));
      Integer.getInteger("LocalVariableTable", (Integer) 2);
      Integer.toUnsignedString((-2249));
      methodWriter0.visitLdcInsn(integer0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "cj";
      stringArray0[3] = ")Q JB0=aV)ynq<JyFD";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Km^Fq,1");
      int[] intArray0 = new int[2];
      intArray0[0] = 7;
      intArray0[1] = 7;
      MethodWriter.getNewOffset(intArray0, intArray0, (-288), 7);
      methodWriter0.visitVarInsn(57, 187);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "iQ^!|@S^)&Pa2", "j@%vP1vo+;?tsx", (String[]) null, false, true);
      methodWriter0.visitMultiANewArrayInsn("iQ^!|@S^)&Pa2", 2);
      methodWriter0.visitFrame(1, 2, (Object[]) null, 2, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(168);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "Ljava/lang/Synthetic;", "?p)Z (", "f6=fd.gI", (String[]) null, true, false);
      classWriter0.visitAnnotation(".]Ao A4,~rTp~E", true);
      methodWriter0.visitFrame((-1673), 262144, (Object[]) null, (-2526), (Object[]) null);
      methodWriter0.visitVarInsn(7, 16777228);
      methodWriter0.visitAnnotation("boolean", false);
      methodWriter0.visitIntInsn(1534, 127);
      methodWriter0.visitMaxs(2, (-185));
      methodWriter0.visitLdcInsn("f6=fd.gI");
      methodWriter0.visitMultiANewArrayInsn("?p)Z (", (-1673));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "Ljava/lang/Synthetic;", "?p)Z (", "f6=fd.gI", (String[]) null, true, false);
      classWriter0.visitAnnotation(".]Ao A4,~rTp~E", true);
      methodWriter0.visitFrame((-1673), 262144, (Object[]) null, (-2526), (Object[]) null);
      methodWriter0.visitFieldInsn(1, "Synthetic", "T)E~E", "`26{a6&!");
      methodWriter0.visitVarInsn(7, 16777228);
      methodWriter0.visitIntInsn(1534, 127);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      methodWriter0.visitFrame(186, (-1673), (Object[]) null, (-1673), (Object[]) null);
      methodWriter0.visitTypeInsn(3, "LineNumberTable");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("LineNumberTable", "float", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "LineNumberTable";
      classWriter0.addType("LineNumberTable");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 197, "LineNumberTable", "nWGG-)zUATvMZv", "LocalVariableTypeTable", stringArray0, false, false);
      classWriter0.visitAnnotation("org.objectweb.asm.jip.Frame", true);
      methodWriter1.getSize();
      methodWriter0.visitMethodInsn(54, "LineNumberTable", "LineNumberTable", "nWGG-)zUATvMZv");
      methodWriter1.getSize();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "nWGG-)zUATvMZv";
      objectArray0[1] = (Object) "k<)k$ol[^:;Rn$C(1y";
      objectArray0[2] = (Object) "nWGG-)zUATvMZv";
      objectArray0[3] = (Object) classWriter0;
      objectArray0[4] = (Object) "org.objectweb.asm.jip.Frame";
      objectArray0[5] = (Object) classWriter0;
      methodWriter1.visitFrame(3890, 26, stringArray0, 26, objectArray0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(49);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "iQ^!|@S^)&Pa2", "iQ^!|@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, true, false);
      methodWriter0.visitMultiANewArrayInsn("iQ^!|@S^)&Pa2", 49);
      MethodWriter methodWriter1 = methodWriter0.next;
      ByteVector byteVector0 = classWriter0.pool;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.put(byteVector0);
      methodWriter0.visitMaxs(32, 3834);
      methodWriter2.visitCode();
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitIincInsn((-891), 428);
      methodWriter0.visitFrame((-2262), 501, (Object[]) null, (-2262), (Object[]) null);
      Label label0 = new Label();
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "Ljava/lang/Synthetic;", "?p)Z (", "f6=fd.gI", (String[]) null, true, false);
      classWriter0.visitAnnotation(".]Ao A4,~rTp~E", true);
      int int0 = 262144;
      methodWriter0.visitFrame((-1673), 262144, (Object[]) null, (-2526), (Object[]) null);
      methodWriter0.visitFieldInsn(1, "Synthetic", "T)E~E", "`26{a6&!");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.getSize();
      int int1 = (-31);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-31), "T)E~E", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      methodWriter0.visitFrame(3, (-1673), (Object[]) null, 58, (Object[]) null);
      methodWriter0.visitIntInsn(340, (-662));
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter1.put(byteVector0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitMaxs(58, (-34));
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2490), "Syt5etic", "o", "Syt5etic", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.visitMaxs(1, (-2758));
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter1.visitJumpInsn(2, label1);
      methodWriter1.visitLabel(label1);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      classWriter0.visitAnnotation(")Q JB0=aV)ynq<JyFD", true);
      methodWriter0.visitFrame((-1343), 2, (Object[]) null, 340, (Object[]) null);
      Integer integer0 = new Integer((-1150));
      Integer.getInteger("LocalVariableTable", (Integer) 2);
      Integer.toUnsignedString((-2249));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "cj";
      stringArray0[3] = ")Q JB0=aV)ynq<JyFD";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Km^Fq,1");
      methodWriter0.visitVarInsn(57, (-2249));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisiblqAnnotations", "RuntimeInvisiblqAnnotations", "RuntimeInvisiblqAnnotations", (String[]) null, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(197, 3395, label0, labelArray0);
      methodWriter0.getSize();
      methodWriter0.visitFieldInsn(2, "RuntimeInvisiblqAnnotations", "1Z;PeS@?CVR\"CLPJ$%", "RuntimeInvisiblqAnnotations");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4027), "Km^Fq,1", "iQ^!|@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, true, true);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "0q EGaTk*d|ZjK90/", "0q EGaTk*d|ZjK90/", "0q EGaTk*d|ZjK90/", (String[]) null, false, false);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitFrame(1, (-4027), (Object[]) null, 22, (Object[]) null);
      methodWriter0.visitVarInsn(101, (-4027));
      methodWriter2.visitIntInsn(187, 861);
      MethodWriter methodWriter3 = methodWriter1.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 55);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<)k$o[^:;Rz$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<)k$o[^:;Rz$C(1y", "<)k$o[^:;Rz$C(1y", "<)k$o[^:;Rz$C(1y", stringArray0, true, true);
      methodWriter0.visitVarInsn(127, 27);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(49);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "iQ^!f@S^)&Pa2", "iQ^!f@S^)&Pa2", "Ljava/lang/Synthetic;", (String[]) null, true, false);
      methodWriter0.visitMultiANewArrayInsn("iQ^!f@S^)&Pa2", 49);
      MethodWriter methodWriter1 = methodWriter0.next;
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitInsn(1);
      classWriter0.visitAnnotation("Ljava/lang/Synthetic;", false);
      methodWriter0.visitFrame(1467, 1467, (Object[]) null, 2, (Object[]) null);
      methodWriter0.visitIntInsn(1, 8);
      methodWriter0.visitAnnotation("iQ^!f@S^)&Pa2", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(3179);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3179
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-65), "vgUVB.t:|", "", "chDa", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMethodInsn(2, "chDa", "2XcJo", "!g]^!B");
      Label label0 = new Label();
      methodWriter1.visitLocalVariable("vgUVB.t:|", "2XcJo", "GQ@c", label0, label0, 268435456);
      methodWriter0.visitLabel(label0);
      methodWriter1.visitJumpInsn(1, label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2490), "Syt5etic", "o", "Syt5etic", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.visitMaxs(1, (-2758));
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label1.status = (-2758);
      label1.toString();
      methodWriter1.visitJumpInsn(2, label1);
      methodWriter1.visitLabel(label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("LineNumberTable", "float", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "LineNumberTable";
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitInsn(2);
      classWriter0.visitAnnotation("LineNumberTable", true);
      methodWriter0.visitFrame(8, 8, stringArray0, 1467, stringArray0);
      methodWriter0.visitIntInsn(1, 187);
      methodWriter0.visitVarInsn(24, 101);
      methodWriter0.visitMaxs(1, 16777222);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(501);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      classWriter0.newField("RuntimeInvisibleAnnotations", "char", "Z9ITS;)d");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "char", "SourceFile", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitFrame(0, 1, stringArray0, 0, stringArray0);
      methodWriter0.visitLdcInsn("RuntimeInvisibleAnnotations");
      int int0 = methodWriter0.getSize();
      assertEquals(66, int0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1651));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1651), "+m+Fw,1", "+m+Fw,1", "+m+Fw,1", (String[]) null, false, false);
      classWriter0.version = 0;
      methodWriter0.exceptionCount = 2;
      methodWriter0.visitInsn((-1651));
      methodWriter0.visitMultiANewArrayInsn("+m+Fw,1", (-3557));
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-1651), (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.newClass("java/lang/Throwable");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^F),1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter1.visitMaxs(1551, 2);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label1.toString();
      Label label2 = label0.getFirst();
      methodWriter0.visitJumpInsn(3, label2);
      methodWriter0.visitLabel(label0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      Label label0 = new Label();
      label0.visitSubroutine((Label) null, 0L, 22);
      int[] intArray0 = new int[12];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Label label0 = new Label();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter(1520);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777228, "Ear<", "", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", stringArray0, false, false);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Ear<");
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 16777228;
      intArray0[2] = (-1996200404);
      intArray0[3] = 2;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {2, 16777228, (-1996200404), 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "RuntimeInvisibleAnnotations", "iQ^!|@S^)&Pa2", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      methodWriter0.visitFrame(22, 2, (Object[]) null, 22, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(168, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(22, "iQ^!|@S^)&Pa2", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(167);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 285212681, "|XU@(G} 0", "k<)k$ol[^:;Rn$C(1y", "StackMapTable", (String[]) null, false, true);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Pk:iV!3B\"!|U", 2);
      methodWriter0.visitJumpInsn(167, label0);
      methodWriter0.visitTypeInsn((-3298), "void");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1104));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2792, "iQ8|@SB^)&Pa2", "iQ8|@SB^)&Pa2", "l7F/Vk", (String[]) null, false, true);
      methodWriter0.visitFrame(1475, 2792, (Object[]) null, 192, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(7, label0);
      methodWriter0.visitAnnotation("~leJI@%I-!xj|4y{fT", false);
      String string0 = "c/)R9yz2[mhly;s";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1343), "double", "Code", "c/)R9yz2[mhly;s", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(1475, "double", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "i8|@SB^)&VC", "i8|@SB^)&VC", "java/lang/dyn/Dynamic", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("S igpatuPe", 4);
      methodWriter0.visitJumpInsn(191, label0);
      methodWriter0.visitTypeInsn(7, "java/lang/dyn/Dynamic");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(505);
      classWriter0.newDouble(812.2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "%\"[f^mIV4Q#O[18", "iQ^!|@S^)&Pa2", "%\"[f^mIV4Q#O[18", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitMaxs(22, 22);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "Km^Fq,1", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      methodWriter0.visitFrame((-1343), 2, (Object[]) null, 340, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Km^Fq,1", (-2228));
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitAnnotation("LocalVariableTable", false);
      methodWriter0.visitMaxs(2, 132);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(54, "Signature", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      classWriter0.newUTF8("L~Mva/lang/0yntheyic4");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "DrU+b";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "L~Mva/lang/0yntheyic4", "L~Mva/lang/0yntheyic4", "Km^Fq,1", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      methodWriter0.visitLdcInsn("L~Mva/lang/0yntheyic4");
      methodWriter0.visitVarInsn(157, (-34));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":8>9~ 3IqMEa");
      methodWriter0.visitVarInsn(168, (-1764));
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("k<)k$ol[^:;Rn$C(1y", "float", "k<)k$ol[^:;Rn$C(1y", true);
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      methodWriter1.visitLineNumber(101, label0);
      classWriter0.visitAnnotation("org.objectweb.asm.jip.Frame", true);
      methodWriter1.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.objectweb.asm.jip.Frame");
      Label label1 = new Label();
      methodWriter0.visitLocalVariable("v3n", "M*<JD~=QnuH", "float", label0, label0, 101);
      assertFalse(label0.equals((Object)label1));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      Integer integer0 = new Integer(1);
      methodWriter0.visitIntInsn(197, 197);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("LineNumberTable", "float", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "LineNumberTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitInsn(2);
      classWriter0.newClass("float");
      methodWriter0.visitVarInsn(24, 66);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("k<)k$ol[^:;Rn$C(1y", "LineNumberTable", "LineNumberTable", label0, label0, 7);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "RuntimeInvisibleAnnotations", "iQ^!|@S^)&Pa2", "LocalVariableTable", (String[]) null, true, false);
      methodWriter0.visitFrame(7, 2, (Object[]) null, 7, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("RuntimeInvisibleAnnotations", (-2228));
      methodWriter0.visitJumpInsn(168, label0);
      Label label1 = new Label();
      methodWriter0.visitLocalVariable("_X", "J{]_", "RuntimeInvisibleAnnotations", label1, label0, 2);
      assertFalse(label1.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String string0 = "\\j@%vP1vo+;?ts\\x";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-654), "", "iQ^!|@S^)&Pa2", "j@%vP1vo+;?tsx", (String[]) null, false, true);
      Label label0 = new Label();
      int[] intArray0 = new int[3];
      intArray0[0] = (-654);
      intArray0[1] = (-654);
      intArray0[2] = 2;
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(82, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(505);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", "WI_UE0Tp]V!8h9P)T8", (String[]) null, true, true);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLineNumber((-634), label1);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(182, (-634), label1, labelArray0);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "char";
      stringArray0[1] = "char";
      stringArray0[2] = "char";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "char", "char", "char", stringArray0, false, false);
      methodWriter0.visitMethodInsn(0, "char", "char", "char");
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 2, stringArray0, 413, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "iQ8|@SB^)&Pa2";
      ClassWriter classWriter0 = new ClassWriter(21);
      int int0 = 2812;
      String string1 = "l7F/Vk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2812, "iQ8|@SB^)&Pa2", "iQ8|@SB^)&Pa2", "l7F/Vk", (String[]) null, false, true);
      ClassWriter classWriter1 = new ClassWriter(21);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "S5Z7)H,#@htSW~=";
      stringArray0[1] = "a0#^ETn/aVVmlj,";
      MethodWriter methodWriter1 = new MethodWriter(classWriter1, 21, "iQ8|@SB^)&Pa2", "S5Z7)H,#@htSW~=", "a0#^ETn/aVVmlj,", stringArray0, true, false);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) classWriter0;
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(1, 4, objectArray0, 1, stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.ClassWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      String string0 = "k<)\\k$ol[^:;Rn$C(1y";
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      int int0 = (-547);
      Object[] objectArray0 = new Object[5];
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Object object0 = label1.info;
      objectArray0[0] = null;
      objectArray0[1] = (Object) methodWriter0;
      objectArray0[2] = (Object) "k<)k$ol[^:;Rn$C(1y";
      objectArray0[3] = (Object) "k<)k$ol[^:;Rn$C(1y";
      objectArray0[4] = (Object) classWriter0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 2, objectArray0, 100, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitIntInsn(267386880, 101);
      methodWriter0.visitFieldInsn(178, "E0<&eff!", "k<)k$ol[^:;Rn$C(1y", "E0<&eff!");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1651));
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)18;
      byteArray0[3] = (byte)113;
      byteArray0[4] = (byte) (-110);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1651), "+m+Fw,1", "+m+Fw,1", "LocalVariableTable", (String[]) null, false, false);
      methodWriter0.visitFrame(1, (byte)0, (Object[]) null, 192, (Object[]) null);
      classWriter0.addUninitializedType("LocalVariableTable", 167);
      classWriter0.version = (int) (byte)113;
      methodWriter0.exceptionCount = 2;
      methodWriter0.getSize();
      methodWriter0.visitIntInsn((byte)0, (byte)18);
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      assertEquals((short) (-21267), short0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 186, ")Q JB0=aV)ynq<JyFD", "iQ8|@SB^)&Pa2", (String) null, stringArray0, true, true);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter1.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "int");
      methodWriter2.visitVarInsn(57, 50331648);
      methodWriter1.visitFieldInsn(1, "", "", "org.objectweb.asm.jip.Frame");
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      classWriter0.newMethod("k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitFrame((-547), 16777222, stringArray0, 2, stringArray0);
      methodWriter0.visitIntInsn(197, 576);
      methodWriter0.visitFieldInsn(178, "StackMap", "StackMap", "short");
      methodWriter0.visitMethodInsn(69, "woGLGUoE]5.a3ctI/P", "short", "k<)k$ol[^:;Rn$C(1y");
      methodWriter0.visitLdcInsn("k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      classWriter0.newClassItem("");
      classWriter0.newMethod("k<)k$ol[^:;Rn$C(1y", "float", "k<)k$ol[^:;Rn$C(1y", false);
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 197, "k<)k$ol[^:;Rn$C(1y", "nWGG-)zUATvMZv", "LocalVariableTypeTable", stringArray0, false, false);
      classWriter0.visitAnnotation("org.objectweb.asm.jip.Frame", true);
      methodWriter1.getSize();
      methodWriter1.signature = "wMTcjML.Vb'F^$";
      methodWriter0.visitMethodInsn(56, "LineNumberTable", "k<)k$ol[^:;Rn$C(1y", "nWGG-)zUATvMZv");
      methodWriter1.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      methodWriter0.visitVarInsn(26, 1754);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "LocalVariableTypeTable");
      methodWriter1.visitLocalVariable("LineNumberTable", "org.objectweb.asm.jip.Frame", (String) null, label0, label0, 1);
      // Undeclared exception!
      try { 
        methodWriter1.visitLocalVariable((String) null, "LocalVariableTable", (String) null, label0, label0, 66);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(492);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntieIvisibleAnnotations";
      stringArray0[1] = "RuntieIvisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntieIvisibleAnnotations", "RuntieIvisibleAnnotations", "RuntieIvisibleAnnotations", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("RuntieIvisibleAnnotations", "RuntieIvisibleAnnotations", "RuntieIvisibleAnnotations", label0, label0, (-492));
      methodWriter0.visitEnd();
      methodWriter0.visitLocalVariable("RuntieIvisibleAnnotations", "KH^9.SwxF", "RuntieIvisibleAnnotations", label0, label0, (-492));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "void";
      stringArray0[1] = "zuF_5_4J";
      stringArray0[2] = "void";
      stringArray0[3] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "void", "k<)k$ol[^:;Rn$C(1y", "*dxO~QY", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitVarInsn(169, 1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("2SLe<2");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "RuntimeInvisibleAnnotations", "iQ^!|@S^)&Pa2", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      methodWriter0.visitFrame(22, 2, (Object[]) null, 22, (Object[]) null);
      Label label0 = new Label();
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 256;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 22;
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitVarInsn(451, 22);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "", "k<)k$ol[^:;Rn$C(1y", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "(");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1651));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1651), "+m+Fw,1", "+m+Fw,1", "LocalVariableTable", (String[]) null, false, false);
      classWriter0.version = (-1651);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter0.put(byteVector0);
      assertSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[v^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[v^:;Rn$C(1y", "k<)k$ol[v^:;Rn$C(1y", "k<)k$ol[v^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "k<)k$ol[v^:;Rn$C(1y", "k<)k$ol[v^:;Rn$C(1y", "Deprecated");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "RuntimeInvisibleAnnotations", "iQ^!|@S^)&Pa2", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      methodWriter0.visitFrame(22, 2, (Object[]) null, 22, (Object[]) null);
      Label label0 = new Label();
      label0.status = (-2228);
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitMaxs(2, (-2228));
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(22, "iQ^!|@S^)&Pa2", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "@8[tN#3qp", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitIincInsn((-2072), (-328));
      methodWriter0.visitLineNumber(1053, label0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-328);
      intArray0[1] = (-2072);
      methodWriter0.visitLineNumber((-2620), label0);
      intArray0[2] = (-2072);
      intArray0[3] = 2;
      intArray0[4] = (-328);
      intArray0[5] = 1;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "%\"[f^mIV4Q#O[18", "iQ^!|@S^)&Pa2", "%\"[f^mIV4Q#O[18", (String[]) null, true, false);
      methodWriter0.visitFrame(22, 2, (Object[]) null, 22, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitVarInsn(22, 252);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2267));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitInsn(179);
      methodWriter0.visitInsn(1);
      methodWriter0.visitFieldInsn(179, " 5Buvi|w*8jTy(B", " 5Buvi|w*8jTy(B", "k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2267));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "k<)k$ol[^:;Rn$C(1y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", stringArray0, true, false);
      methodWriter0.visitInsn(179);
      methodWriter0.visitInsn(1);
      methodWriter0.visitFieldInsn(179, "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y", "k<)k$ol[^:;Rn$C(1y");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "%f^mIV4Q#O[18", "iQ^!|@S^)&Pa2", "%f^mIV4Q#O[18", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitMaxs(2, (-2228));
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitMaxs(168, (-6));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 27, "<)k$o[^:;Rz$C(1y", "<)k$o[^:;Rz$C(1y", "VA>9Tb", stringArray0, true, true);
      Integer integer0 = new Integer(1);
      methodWriter0.visitMaxs((-38), 2);
      methodWriter0.visitFrame((-38), 18, stringArray0, (-2205), stringArray0);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "<)k$o[^:;Rz$C(1y");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(94);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<)k$o[^:;Rz$C(1y";
      stringArray0[1] = "VA>9Tb";
      stringArray0[2] = "VA>9Tb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1312), "VA>9Tb", "<)k$o[^:;Rz$C(1y", "<)k$o[^:;Rz$C(1y", stringArray0, true, true);
      Integer integer0 = new Integer(907);
      methodWriter0.visitMaxs(1, (-3));
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "VA>9Tb";
      objectArray0[1] = (Object) "VA>9Tb";
      objectArray0[2] = (Object) "VA>9Tb";
      objectArray0[3] = (Object) methodWriter0;
      objectArray0[4] = (Object) "VA>9Tb";
      objectArray0[5] = (Object) integer0;
      objectArray0[6] = (Object) "VA>9Tb";
      objectArray0[7] = (Object) classWriter0;
      methodWriter0.visitFrame((-234), (-234), stringArray0, 24, objectArray0);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "<)k$o[^:;Rz$C(1y");
  }
}
