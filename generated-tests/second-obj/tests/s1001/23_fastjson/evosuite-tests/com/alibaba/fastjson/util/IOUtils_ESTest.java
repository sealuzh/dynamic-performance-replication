/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:48:58 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedReader;
import java.io.Closeable;
import java.io.DataInputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[6];
      IOUtils.getChars((byte)5, (int) (byte)5, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '5', '\u0000'}, charArray0);
      
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize((long) (byte)5);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64("tg!;fN");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte)124}, byteArray0);
      
      int int0 = IOUtils.encodeUTF8(iOUtils0.replaceChars, 3, 3, iOUtils0.specicalFlags_singleQuotes);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter();
      IOUtils.close(pipedWriter0);
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHJAVABEAN;
      int int0 = ObjectStreamConstants.baseWireHandle;
      assertEquals(8257536, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8((char[]) null, 2032, 3, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = '\u0084';
      charArray0[6] = '\u0084';
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 3, 255, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, (-2655), 37, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2655
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) (byte) (-28), (int) (byte) (-28), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -29
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 3, 3, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      IOUtils.decodeBase64("");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", 5, 5);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.charset();
      IOUtils.getChars(994L, 33, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'L';
      IOUtils.getChars((long) (byte)5, (int) (byte)5, charArray0);
      assertArrayEquals(new char[] {'L', '\u0000', '\u0000', '\u0000', '5', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fastjson.compatibleWithJavaBean", (-1694), (-1694));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOUtils.getStringProperty("\u0005Av-${co4]jla");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("\r1Z'aNR`", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      int int0 = IOUtils.stringSize(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = IOUtils.stringSize(310L);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("c");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, (-901), (-1561), iOUtils0.replaceChars);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("T.Wym}EE79;Oibw`oYM");
      IOUtils.isValidJsonpQueryParam("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.close((Closeable) null);
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.DIGITS, 1023, (-1449));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -427
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[7];
      IOUtils.decodeBase64(charArray0, (-1772), 0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 0, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils.close((Closeable) null);
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((-566), (-566), iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -567
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("6");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      char[] charArray0 = new char[2];
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      boolean boolean0 = IOUtils.isIdent('d');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("VJ");
      assertArrayEquals(new byte[] {(byte)84}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars(384, 94, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[10];
      byteArray0[6] = (byte) (-14);
      char[] charArray0 = new char[5];
      IOUtils.decodeUTF8(byteArray0, 1, 12, charArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertFalse(int0 == int1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8((byte[]) null, 3, 3, charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte) (-86);
      byteArray0[4] = (byte) (-34);
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      IOUtils.decodeUTF8(byteArray0, 1, (byte)17, charArray0);
      IOUtils.stringSize((int) (byte)17);
      String string0 = IOUtils.getStringProperty("}]yW8&Q}CU6?E");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[7];
      int int0 = 3;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[6];
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize((long) (byte)5);
      assertEquals(1, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 1, 1);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[4] = (byte)30;
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, (byte)30, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[8] = (byte) (-32);
      byteArray0[5] = (byte) (-32);
      char[] charArray0 = new char[6];
      IOUtils.decodeUTF8(byteArray0, 1, 6, charArray0);
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-32), 2294, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2293
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte) (-34);
      char[] charArray0 = new char[5];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, 12, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-34);
      byteArray0[2] = (byte) (-34);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9v,u+aq4C:^");
      byteArray0[3] = (byte) (-86);
      byteArray0[4] = (byte)30;
      char[] charArray0 = new char[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'd';
      charArray0[1] = 'T';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, (byte)30, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[10];
      byteArray0[6] = (byte) (-14);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        IOUtils.getChars((int) (byte) (-14), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'u';
      charArray0[1] = '*';
      IOUtils.getChars(53, 4, charArray0);
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-16), (int) '*', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 41
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 57;
      IOUtils.stringSize(57);
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = 'c';
      charArray0[2] = 'd';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("M4^a7et\"");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-38), (byte) (-19), (byte) (-21)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.getChars((-43L), 6, iOUtils0.ASCII_CHARS);
      boolean boolean0 = IOUtils.firstIdentifier('k');
      boolean boolean1 = IOUtils.isValidJsonpQueryParam("v\"");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-46);
      byteArray0[2] = (byte) (-46);
      byteArray0[4] = (byte)30;
      char[] charArray0 = new char[1];
      IOUtils.decodeUTF8(byteArray0, 1, (byte)30, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 18, 107, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Charset.defaultCharset();
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = IOUtils.stringSize(128);
      assertEquals(3, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("V%S5T7fk@y3IMZ/H", 3, 3);
      assertArrayEquals(new byte[] {(byte)75, (byte) (-108)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'v';
      charArray0[1] = '4';
      IOUtils.getChars(53, 4, charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars((byte) (-50), 4, charArray0);
      assertArrayEquals(new char[] {'v', '-', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSThVWXYZabcdelghijklmnopqrstuvwxyz0123456789+/");
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSThVWXYZabcdelghijklmnopqrstuvwxyz0123456789+/", 31, 31);
      String string0 = IOUtils.getStringProperty("ABCDEFGHIJKLMNOPQRSThVWXYZabcdelghijklmnopqrstuvwxyz0123456789+/");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", 24, 16);
      IOUtils.stringSize(24);
      int int0 = IOUtils.stringSize(2);
      assertEquals(1, int0);
      
      boolean boolean0 = IOUtils.firstIdentifier('X');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onMalformedInput(codingErrorAction0);
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = iOUtils0.UTF8.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOUtils.stringSize(80);
      IOUtils.decodeBase64("V%S5T7&Mfk@y3IMZP/H", 2, 2);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.firstIdentifier('5');
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.stringSize((-2841L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[2];
      charArray0[1] = '\u00E7';
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, '\u00E7', byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Charset.defaultCharset();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 11, 11);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, iOUtils0.specicalFlags_singleQuotes);
      IOUtils.getChars((-423), 11, iOUtils0.CA);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[8] = (byte) (-32);
      byteArray0[5] = (byte) (-32);
      char[] charArray0 = new char[6];
      IOUtils.decodeUTF8(byteArray0, 1, 10, charArray0);
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-32), 2294, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2293
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[5] = (byte) (-28);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = '.';
      IOUtils.decodeUTF8(byteArray0, 1, 12, charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        uTF8Decoder0.detectedCharset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[8];
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[10];
      byteArray0[6] = (byte) (-14);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.isIdent('$');
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("..xgjMeb6s<WD{9\"", 16, (int) (byte) (-14));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.loadPropertiesFromFile();
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils.getStringProperty("sZ9tH!pfRD*--0d");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPORT;
      uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(8257536, 8257536, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IOUtils.decodeBase64("i)')([fr/@=");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = IOUtils.UTF8;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte) (-63);
      byteArray0[4] = (byte) (-34);
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      IOUtils.decodeUTF8(byteArray0, 1, (byte)17, charArray0);
      IOUtils.stringSize((int) (byte)17);
      String string0 = IOUtils.getStringProperty("}]yW8&Q}CU6?E");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils iOUtils0 = new IOUtils();
      StringReader stringReader0 = new StringReader("fastjson.compatibleWithJavaBean");
      int int0 = 33;
      IOUtils.readAll(stringReader0);
      int int1 = 46;
      // Undeclared exception!
      try { 
        IOUtils.getChars(100000000039L, 46, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      IOUtils.isIdent('\u0103');
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = charset0.encode("jF8Ig\"#o");
      Charset charset1 = Charset.defaultCharset();
      IOUtils.isIdent('P');
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      ByteBuffer byteBuffer1 = charset1.encode(" xFm");
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      uTF8Decoder0.charset();
      CharBuffer charBuffer0 = charset1.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder2, byteBuffer1, charBuffer0);
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0103';
      charArray0[0] = 'P';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 66, (-1789), (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.decodeBase64("i)')([r/@=");
      Charset.defaultCharset();
      Properties properties0 = new Properties();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = charset0.encode("i)')([r/@=");
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      ByteBuffer byteBuffer1 = charset0.encode("utfE8 decoeker@ror, ");
      byteBuffer1.getInt();
      charset0.decode(byteBuffer0);
      byteBuffer1.getLong();
      IOUtils.stringSize(4044342852001424747L);
      charset0.encode("{NL0$f=*qYsaL");
      // Undeclared exception!
      try { 
        byteBuffer1.get(byteArray0, 76, 76);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.replaceChars, 4, 85);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      uTF8Decoder0.charset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RCA}AI1W|6`X8<");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("fastjson.properties");
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertEquals("\uFFFD", charsetDecoder0.replacement());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils.firstIdentifier('\u0108');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      // Undeclared exception!
      try { 
        charset0.encode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
