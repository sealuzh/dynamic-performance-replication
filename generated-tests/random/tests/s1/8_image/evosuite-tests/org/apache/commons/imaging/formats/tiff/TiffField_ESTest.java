/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 10:04:00 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-2317), 3378, fieldTypeShort0, 3648L, (-2317), byteArray0, (ByteOrder) null, (byte) (-25));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(7296, tiffField0.getBytesLength());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals((-2317), tiffField0.getOffset());
      assertEquals((-2317), tiffField0.getTag());
      assertEquals(3378, tiffField0.getDirectoryType());
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-43);
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1174, 1528, fieldTypeRational0, 1174, (-2745L), byteArray0, byteOrder0, (byte)30);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1174, tiffField0.getTag());
      assertEquals(9392, tiffField0.getBytesLength());
      assertEquals((-2745), tiffField0.getOffset());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(213, int0);
      assertEquals(1528, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1174, 1528, fieldTypeRational0, 1174, (-2745L), byteArray0, byteOrder0, (byte)30);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-2745), tiffField0.getOffset());
      assertEquals(1174, tiffField0.getTag());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(9392, tiffField0.getBytesLength());
      assertEquals(1528, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 1, fieldTypeRational0, 0L, 95L, byteArray0, byteOrder0, (byte) (-25));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(95, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1880, "Missing value: ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, (-2145659106), fieldTypeAscii0, 1437L, 1437L, byteArray0, byteOrder0, 358);
      int int0 = tiffField0.getTag();
      assertEquals(358, tiffField0.getSortHint());
      assertEquals(1437, tiffField0.getOffset());
      assertEquals(33445, int0);
      assertEquals((-2145659106), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(389, 389, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte) (-38));
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-38), int0);
      assertEquals(389, tiffField0.getDirectoryType());
      assertEquals(389, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2317), 3378, fieldTypeShort0, 3648L, (-2317), byteArray0, (ByteOrder) null, (byte) (-25));
      int int0 = tiffField0.getOffset();
      assertEquals((-2317), tiffField0.getTag());
      assertEquals((-2317), int0);
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(3378, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-13);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1L, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1233), (-1233), fieldTypeShort0, (-586L), (-1233), byteArray0, byteOrder0, (byte) (-50));
      tiffField0.getCount();
      assertEquals((-1233), tiffField0.getDirectoryType());
      assertEquals((-50), tiffField0.getSortHint());
      assertEquals((-1233), tiffField0.getOffset());
      assertEquals((-1233), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 1, fieldTypeRational0, 0L, 95L, byteArray0, byteOrder0, (byte) (-25));
      tiffField0.getByteOrder();
      assertEquals(24, tiffField0.getTag());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeFloat0, (-4286342860L), (-629L), byteArray0, byteOrder0, (byte)89);
      tiffField0.getByteArrayValue();
      assertEquals(34497744, tiffField0.getBytesLength());
      assertEquals(89, tiffField0.getSortHint());
      assertEquals((-629), tiffField0.getOffset());
      assertEquals(529, tiffField0.getDirectoryType());
      assertEquals(529, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 1, fieldTypeRational0, 0L, 95L, byteArray0, byteOrder0, (byte) (-25));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals(95, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 14, fieldTypeDouble0, 1353L, 0, (byte[]) null, byteOrder0, (-1348));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(389, 389, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte) (-38));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, " (0x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeLong0, (-2206L), 2189L, byteArray0, byteOrder0, (byte) (-60));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 1, fieldTypeAscii0, 389L, (-14376L), byteArray0, byteOrder0, 33448);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(33448, tiffField0.getTag());
      assertEquals(33448, tiffField0.getSortHint());
      assertEquals((-14376), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40965, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1418, 1418, fieldTypeDouble0, 1418, (-2784L), byteArray0, byteOrder0, (-394));
      tiffField0.getFieldType();
      assertEquals(1418, tiffField0.getTag());
      assertEquals((-394), tiffField0.getSortHint());
      assertEquals(1418, tiffField0.getDirectoryType());
      assertEquals((-2784), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 1, fieldTypeAscii0, 389L, (-14376L), byteArray0, byteOrder0, 33448);
      tiffField0.getValue();
      assertEquals(33448, tiffField0.getSortHint());
      assertEquals((-14376), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(33448, tiffField0.getTag());
      assertEquals(389, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(389, 389, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte) (-38));
      int int0 = tiffField0.getOffset();
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(389, tiffField0.getTag());
      assertEquals(389, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-152), (-1), fieldTypeFloat0, 4883L, (-1), byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getTagInfo();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-152), tiffField0.getTag());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-152), (-1), fieldTypeFloat0, 4883L, (-1), byteArray0, byteOrder0, (byte) (-38));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-152), int0);
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-152), (-1), fieldTypeFloat0, 4883L, (-1), byteArray0, byteOrder0, (byte) (-38));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-152), tiffField0.getTag());
      assertEquals(19532, int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-4349), "z+qo");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4349), (-4349), fieldTypeShort0, 0L, 520L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 461, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-266), 5, fieldTypeLong0, 5, (-266), byteArray0, byteOrder0, (-266));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-266), tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getBytesLength());
      assertEquals((-266), tiffField0.getSortHint());
      assertEquals((-266), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1880, "Missing value: ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, (-2145659106), fieldTypeAscii0, 1437L, 1437L, byteArray0, byteOrder0, 358);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@e57361 for: 33445 (0x82a5: MD FileTag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 1, fieldTypeAscii0, 389L, (-14376L), byteArray0, byteOrder0, 33448);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: 33448 (0x82a8: MD LabName): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeFloat0, (-4286342860L), (-629L), byteArray0, byteOrder0, (byte)89);
      tiffField0.getDoubleArrayValue();
      assertEquals(34497744, tiffField0.getBytesLength());
      assertEquals(89, tiffField0.getSortHint());
      assertEquals((-629), tiffField0.getOffset());
      assertEquals(529, tiffField0.getTag());
      assertEquals(529, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(98, "s?O@`h6t|3y7l");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2386, 757, fieldTypeFloat0, 2386, 1L, byteArray0, byteOrder0, (-523));
      tiffField0.getDoubleArrayValue();
      assertEquals(757, tiffField0.getDirectoryType());
      assertEquals(9544, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-523), tiffField0.getSortHint());
      assertEquals(2386, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2327, 2327, fieldTypeLong0, 2327, 2327, byteArray0, byteOrder0, 2976);
      tiffField0.getDoubleArrayValue();
      assertEquals(2327, tiffField0.getOffset());
      assertEquals(2976, tiffField0.getSortHint());
      assertEquals(2327, tiffField0.getTag());
      assertEquals(2327, tiffField0.getDirectoryType());
      assertEquals(9308, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1180, 2874, fieldTypeShort0, 5120L, 1180, byteArray0, byteOrder0, 1180);
      tiffField0.getDoubleArrayValue();
      assertEquals(1180, tiffField0.getTag());
      assertEquals(1180, tiffField0.getOffset());
      assertEquals(1180, tiffField0.getSortHint());
      assertEquals(2874, tiffField0.getDirectoryType());
      assertEquals(10240, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147349939), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 963, fieldTypeRational0, 50, (-2147349939), byteArray0, byteOrder0, (byte) (-27));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(963, tiffField0.getDirectoryType());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals((-2147349939), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1274), (-1274), fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1274), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1274), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40965, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1418, 1418, fieldTypeDouble0, 1418, (-2784L), byteArray0, byteOrder0, (-394));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4ffc5f0a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 37391, fieldTypeShort0, 3112L, 1L, byteArray0, byteOrder0, 73);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(6224, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "");
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-24), 2518, fieldTypeRational0, 4416L, 8589934584L, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(35328, tiffField0.getBytesLength());
      assertEquals(2518, tiffField0.getDirectoryType());
      assertEquals((-24), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1L, byteArray0, (ByteOrder) null, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(2365);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(37378, 37378, fieldTypeLong0, 4L, 708L, byteArray0, byteOrder0, 2056);
      tiffField0.getIntArrayValue();
      assertEquals(2056, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(37378, tiffField0.getDirectoryType());
      assertEquals(37378, tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(708, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1880, "Missing value: ");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte) (-117);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, (-2145659106), fieldTypeAscii0, 1437L, 1437L, byteArray0, byteOrder0, 358);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2145659106), tiffField0.getDirectoryType());
      assertEquals(358, tiffField0.getSortHint());
      assertEquals(33445, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1437, tiffField0.getOffset());
      assertEquals(1437, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeDouble0, 3, 3, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@4a14d2e4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 461, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x32)", string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(461, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 1, fieldTypeAscii0, 389L, (-14376L), byteArray0, byteOrder0, 33448);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-14376), tiffField0.getOffset());
      assertEquals("MD LabName", string0);
      assertEquals(33448, tiffField0.getTag());
      assertEquals(33448, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2047, (-2145659106), fieldTypeShort0, 2047, (-2171L), byteArray0, byteOrder0, (byte)50);
      MockFileWriter mockFileWriter0 = new MockFileWriter("'", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "M");
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2171), tiffField0.getOffset());
      assertEquals((-2145659106), tiffField0.getDirectoryType());
      assertEquals(4094, tiffField0.getBytesLength());
      assertEquals(2047, tiffField0.getTag());
      assertEquals(2047L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 292, fieldTypeFloat0, 23L, 0, byteArray0, byteOrder0, (byte)75);
      String string0 = tiffField0.getValueDescription();
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(23L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(92, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(292, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2234), 2931, fieldTypeByte0, 305L, (-2234), byteArray0, byteOrder0, (-2234));
      try { 
        fieldTypeByte0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: -2234 (0xfffff746: Unknown Tag): 0, 0, 0, 0, 0 (305 SByte) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2443, "JpgFromRawLength");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2443, 2443, fieldTypeDouble0, 2443, (-1L), byteArray0, byteOrder0, (byte) (-72));
      String string0 = tiffField0.toString();
      assertEquals((-72), tiffField0.getSortHint());
      assertEquals(19544, tiffField0.getBytesLength());
      assertEquals("2443 (0x98b: Unknown Tag): 0.0 (2443 JpgFromRawLength)", string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2443, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeDouble0, 3, 3, byteArray0, byteOrder0, (byte) (-1));
      MockFile mockFile0 = new MockFile((File) null, "ResolutionUnit");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(34L, mockFile0.length());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1859, "... (");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2136121300, 5070, fieldTypeAscii0, 77L, 1422L, byteArray0, (ByteOrder) null, 5070);
      tiffField0.dump();
      assertEquals(1422, tiffField0.getOffset());
      assertEquals(2136121300, tiffField0.getTag());
      assertEquals(77L, tiffField0.getCount());
      assertEquals(5070, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getBytesLength());
      assertEquals(5070, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 1, fieldTypeAscii0, 389L, (-14376L), byteArray0, byteOrder0, 33448);
      tiffField0.toString();
      assertEquals(33448, tiffField0.getSortHint());
      assertEquals((-14376), tiffField0.getOffset());
      assertEquals(389L, tiffField0.getCount());
      assertEquals(33448, tiffField0.getTag());
      assertEquals(389, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 461, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, (byte) (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)32, (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(461, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2143514177, 2143514177, fieldTypeLong0, 255L, 2143514177, byteArray0, byteOrder0, 1084);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65535, (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1084, tiffField0.getSortHint());
      assertEquals(2143514177, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2143514177, tiffField0.getOffset());
      assertEquals(2143514177, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1233), (-1233), fieldTypeShort0, (-586L), (-1233), byteArray0, byteOrder0, (byte) (-50));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1233), tiffField0.getDirectoryType());
      assertEquals((-1233), tiffField0.getTag());
      assertEquals((-50), tiffField0.getSortHint());
      assertEquals((-1233), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1274), (-1274), fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals((-1274), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1274), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2143514177, 2143514177, fieldTypeLong0, 255L, 2143514177, byteArray0, byteOrder0, 1084);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2143514177, int0);
      assertEquals(1084, tiffField0.getSortHint());
      assertEquals(2143514177, tiffField0.getOffset());
      assertEquals(2143514177, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1274), (-1274), fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1274), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1274), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2125344641, 119, fieldTypeRational0, 119, 2125344641, byteArray0, byteOrder0, (byte)81);
      int int0 = tiffField0.getSortHint();
      assertEquals(2125344641, tiffField0.getTag());
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(81, int0);
      assertEquals(2125344641, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1106, 40964, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 1106);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(40964, tiffField0.getDirectoryType());
      assertEquals("1106 (0x452: Unknown Tag): ", string0);
      assertEquals(1106, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(2365);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(37378, 37378, fieldTypeLong0, 4L, 708L, byteArray0, byteOrder0, 2056);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("z$/pE1tM&+u>ta+)");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(37378, tiffField0.getDirectoryType());
      assertEquals(2056, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(37378, tiffField0.getTag());
      assertEquals(708, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40965, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1418, 1418, fieldTypeDouble0, 1418, (-2784L), byteArray0, byteOrder0, (-394));
      tiffField0.getDoubleArrayValue();
      assertEquals(11344, tiffField0.getBytesLength());
      assertEquals(1418, tiffField0.getDirectoryType());
      assertEquals((-2784), tiffField0.getOffset());
      assertEquals(1418L, tiffField0.getCount());
      assertEquals(1418, tiffField0.getTag());
      assertEquals((-394), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)61);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1610612735), (-1124), fieldTypeDouble0, 571L, 1266L, byteArray0, byteOrder0, 47);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1266L, tiffElement0.offset);
      assertEquals(571L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals((-1610612735), tiffField0.getTag());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals((-1124), tiffField0.getDirectoryType());
  }
}
