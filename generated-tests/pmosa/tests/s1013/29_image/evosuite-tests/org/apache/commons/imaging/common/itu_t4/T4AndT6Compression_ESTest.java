/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 02:03:24 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, false, (-318));
      assertArrayEquals(new byte[] {(byte)0, (byte)27, (byte) (-128), (byte)10, (byte)0, (byte)32}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte) (-11);
      byteArray0[7] = (byte) (-72);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 2, (byte)62, true, (byte)47);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, true);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, 1472, 1472, true, 667);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, (byte)0);
      T4AndT6Compression.compressT4_2D(byteArray0, 1, 1, true, 1);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 1, 10);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte)28}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)64;
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)1, (byte)1);
      assertArrayEquals(new byte[] {(byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-93), (-93));
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, 63, 63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-3), 33);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-31);
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte) (-31), (byte) (-31));
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray1, (byte) (-31), (-1108));
      assertArrayEquals(new byte[] {}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte)62;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 1, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)64;
      byteArray0[0] = (byte)64;
      byte byte1 = (byte)5;
      byteArray0[1] = (byte)5;
      byte byte2 = (byte)79;
      byteArray0[2] = (byte)79;
      byte byte3 = (byte)25;
      byteArray0[3] = (byte)25;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1344, (byte)64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)1;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)1, 429);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 0000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, 604, (byte)0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte)0;
      boolean boolean0 = false;
      T4AndT6Compression.decompressT4_1D(byteArray0, 195, 0, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT6(byteArray0, (-455), (-2833));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (-2117));
      T4AndT6Compression.compressModifiedHuffman(byteArray0, 717, (-2117));
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT6(byteArray0, (-2117), (-2117));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 5, 5, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 41, 41, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte)0;
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, (byte)19, 549, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)1, (byte)1, true);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte)28, (byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-9);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)0, (byte) (-9));
      int int0 = 0;
      boolean boolean0 = true;
      T4AndT6Compression.compressT4_1D(byteArray1, (byte) (-9), 0, true);
      int int1 = (-460);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (-460), (byte) (-9), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-84);
      byteArray0[0] = (byte) (-84);
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      int int0 = (-985);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte) (-84), (-985));
      T4AndT6Compression.decompressT4_1D(byteArray0, (byte) (-84), 0, true);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte) (-84), (-874), false, (byte) (-84));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (-2117));
      T4AndT6Compression.compressT6(byteArray1, (byte)0, (byte)0);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray0, (-2117), (-2117), false);
      assertFalse(byteArray2.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, true);
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)0, (-1076));
      T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, 8, true);
      int int0 = 2;
      byte[] byteArray3 = T4AndT6Compression.compressT4_1D(byteArray2, (-1076), 2, true);
      int int1 = 2;
      T4AndT6Compression.compressT4_2D(byteArray3, 8, (-3187), false, 2);
      T4AndT6Compression.decompressT4_2D(byteArray1, 444, (-66), true);
      T4AndT6Compression.decompressT4_2D(byteArray0, 8, (byte)0, true);
      T4AndT6Compression.decompressT4_1D(byteArray1, (-1955), (-66), false);
      T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (-2363), true);
      try { 
        T4AndT6Compression.compressT6(byteArray0, 8, 63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 1);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, 1, 623);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (-1318), (-1318));
      T4AndT6Compression.decompressT4_2D(byteArray1, 35, (-1318), true);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte) (-13);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-99);
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte)64;
      byte byte0 = (byte)41;
      byteArray0[8] = (byte)41;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)1, (byte)1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte) (-48);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-48), (byte) (-48), true);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte) (-48), 1792, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)73;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)73, (byte)73, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)39;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)39, (byte)39, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)40;
      byteArray0[0] = (byte)40;
      byte byte1 = (byte) (-109);
      byteArray0[1] = (byte) (-109);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)40, (byte) (-109));
      T4AndT6Compression.decompressT6(byteArray0, 0, (byte)40);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, (byte)40, 832);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte) (-128);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte) (-31), (byte) (-31));
      T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-31), 1, false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 5, 5, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)1;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)7, 36, false, (byte)7);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-123);
      byte byte0 = (byte)14;
      byteArray0[2] = (byte)14;
      int int0 = 0;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)14, 1984, false, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-128);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte) (-128);
      byte[] byteArray2 = T4AndT6Compression.compressT4_1D(byteArray1, (-1657), 21, false);
      T4AndT6Compression.compressT4_2D(byteArray2, 1, 23, true, 780);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray2, 21, 800, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray1, 1, 1, false);
      assertArrayEquals(new byte[] {(byte)0}, byteArray2);
      assertArrayEquals(new byte[] {(byte)0, (byte)17, (byte) (-64), (byte)4}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)19;
      byteArray0[0] = (byte)19;
      byte byte1 = (byte) (-53);
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte)0;
      boolean boolean0 = true;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-2711), (byte)19, true);
      T4AndT6Compression.compressT6(byteArray1, 37, (byte)0);
      int int0 = 217;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-2711), 217, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-31);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte) (-31), (byte) (-31));
      try { 
        T4AndT6Compression.compressT6(byteArray0, 5, 57);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      T4AndT6Compression.compressT4_1D(byteArray0, 4, (-2405), false);
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 2444);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[126];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 64, 1, false);
      assertArrayEquals(new byte[] {(byte)0, (byte)29, (byte) (-102), (byte) (-128), (byte)8}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 101, 101);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      byte byte0 = (byte)122;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte) (-17);
      byte byte1 = (byte) (-50);
      byteArray0[3] = (byte) (-50);
      int int0 = 2;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)122, 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-1318), (-1318));
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte) (-27);
      byteArray1[2] = (byte) (-44);
      byteArray1[3] = (byte)67;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)6, 24, true, (byte) (-44));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = (-1315);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)118;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)118, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 118
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 101, (-3447), false);
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)68;
      byteArray2[1] = (byte) (-80);
      byteArray2[2] = (byte)4;
      T4AndT6Compression.compressT4_1D(byteArray2, 64, (byte) (-80), false);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 3306, (byte)68);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)28;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 8, 16, false, 16);
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, 120, 15);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[3] = (byte)3;
      byteArray0[1] = (byte)3;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)3, 704, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 64, (-2));
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 64, 64, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 2, 2);
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray1, 2, 2);
      assertArrayEquals(new byte[] {(byte)10, (byte)24, (byte)0, (byte) (-128), (byte)8}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)64;
      byte byte0 = (byte)64;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-25);
      T4AndT6Compression.compressT6(byteArray0, 9, 2);
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 32, 581, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-68);
      byte byte0 = (byte)0;
      byteArray0[4] = (byte)0;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 0, 3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = 15;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 128, 15);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)1, 429);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)6;
      byteArray0[0] = (byte)6;
      T4AndT6Compression.compressT6(byteArray0, (byte)6, (byte) (-27));
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-27);
      byteArray1[1] = (byte)6;
      byteArray1[2] = (byte)15;
      byteArray1[3] = (byte) (-27);
      byteArray1[4] = (byte) (-27);
      byteArray1[5] = (byte) (-27);
      byte byte1 = (byte)17;
      byteArray1[6] = (byte)17;
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)6, (byte)17);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-20);
      byteArray0[1] = (byte)28;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 8, (byte)28, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-20);
      byteArray0[1] = (byte)28;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, 13, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-20);
      byteArray0[1] = (byte)28;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 0, 8, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 8, 8);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 8, 193);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[3] = (byte)3;
      byteArray0[1] = (byte)4;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)3, (byte)3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.4 control code 0000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[1] = (byte)4;
      int int0 = 704;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, 704, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte) (-44);
      byteArray0[6] = (byte)26;
      boolean boolean0 = true;
      T4AndT6Compression.compressT4_1D(byteArray0, 52, (-3), true);
      int int0 = (-474);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (-474), 681, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      byte byte0 = (byte)9;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)9, (byte)9);
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)9, 1792, true, (byte)9);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-54);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)6;
      byteArray0[6] = (byte)29;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)13, (byte)13, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-15);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte) (-15), 2284, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      byte byte0 = (byte)18;
      byteArray0[1] = (byte)18;
      int int0 = 748;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)18, 748, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)10;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)10, (byte)10, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
