/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 19:53:10 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1313));
      classWriter0.index = (-1313);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "Signature", "Signature", "");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1313));
      classWriter0.index = (-1313);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "Signature", "Signature", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "$L2=R3NRI_%a`a]Hy=S", (String) null, "XR=Uw%Qax]yLZLdX`");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(741);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "RuntimeInvisibleAnnotations", "d@4Z9VmM");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(222);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 3414, "", "H{#LEhwcE", "U#NhZn!4e", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@41835ed5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg", (Object) null);
      Attribute attribute0 = new Attribute("i}wI*B,}sM(u@1onNt");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5314);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5314, "", "", "double", "CP?bfxe~t}cg");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg");
      fieldWriter0.visitAnnotation("gPX';X_,xK<Cf\"", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1196);
      ByteVector byteVector0 = new ByteVector(1196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2563), "-", "XaUqG\"neQ%LVR>m", "|Rlqu){@.;Ix3", "-");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      classWriter0.version = 4096;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "=Dxc:Z", "=Dxc:Z", (String) null, "=Dxc:Z");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-769), "Signature", "org.apache.commons.io.IOCase", "XR=Uw%Qax]yLZLdX`", "java/lang/Object");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      classWriter0.version = 4096;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "=Dxc:Z", "=Dxc:Z", (String) null, "=Dxc:Z");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg");
      fieldWriter0.visitAnnotation("gPX';X_,xK<Cf\"", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5314);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5314, "", "", "double", "CP?bfxe~t}cg");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "|aQI9Q/Em;JgSB", "|aQI9Q/Em;JgSB", "RT#fU8#V9uXe*", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1196);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg", "CP?bfxe~t}cg");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-2563), "-", "XaUqG\"neQ%LVR>m", "|Rlqu){@.;Ix3", "-");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "|aQI9Q/Em;JgSB", "XR=Uw%Qax]yLZLdX`", "|aQI9Q/Em;JgSB", "XR=Uw%Qax]yLZLdX`");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "=Dxc:Z", "=Dxc:Z", (String) null, "=Dxc:Z");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
