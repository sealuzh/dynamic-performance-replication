/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 05:07:35 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.ASMUtils;
import java.lang.reflect.AccessibleObject;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ASMUtils_ESTest extends ASMUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<String> class0 = String.class;
      ASMUtils.getMethodType(class0, ".@V~y-IK6z{6O@NTv");
      ASMUtils.isAndroid("rQ%");
      // Undeclared exception!
      try { 
        ASMUtils.lookupParameterNames((AccessibleObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.ASMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Method> class0 = Method.class;
      ASMUtils.desc(class0);
      // Undeclared exception!
      try { 
        ASMUtils.lookupParameterNames((AccessibleObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.ASMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Method> class0 = Method.class;
      ASMUtils.type(class0);
      ASMUtils aSMUtils0 = new ASMUtils();
      Class<Object> class1 = Object.class;
      ASMUtils.desc(class1);
      Class<Integer> class2 = Integer.class;
      // Undeclared exception!
      try { 
        ASMUtils.getPrimitiveLetter(class0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Type: java.lang.reflect.Method is not a primitive type
         //
         verifyException("com.alibaba.fastjson.util.ASMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ASMUtils.type(class0);
      String string0 = "I";
      ASMUtils.checkName("I");
      Class<Object> class1 = Object.class;
      // Undeclared exception!
      try { 
        ASMUtils.getPrimitiveLetter(class1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Type: java.lang.Object is not a primitive type
         //
         verifyException("com.alibaba.fastjson.util.ASMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = "B>uVE~j]t";
      ASMUtils.checkName("B>uVE~j]t");
      ASMUtils.isAndroid("B>uVE~j]t");
      ASMUtils.checkName("|");
      ASMUtils.isAndroid((String) null);
      Class<Object> class0 = Object.class;
      ASMUtils.desc(class0);
      ASMUtils aSMUtils0 = new ASMUtils();
      Class<Method> class1 = Method.class;
      Class<Method> class2 = Method.class;
      ASMUtils.desc(class2);
      ASMUtils.getMethodType(class1, "i=VH0~");
      ASMUtils.getMethodType(class0, "B>uVE~j]t");
      ASMUtils.isAndroid("$");
      // Undeclared exception!
      try { 
        ASMUtils.getPrimitiveLetter(class1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Type: java.lang.reflect.Method is not a primitive type
         //
         verifyException("com.alibaba.fastjson.util.ASMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASMUtils.isAndroid("dalvik");
      ASMUtils.isAndroid("dalvik");
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ASMUtils.getPrimitiveLetter(class0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Type: java.lang.Object is not a primitive type
         //
         verifyException("com.alibaba.fastjson.util.ASMUtils", e);
      }
  }
}
