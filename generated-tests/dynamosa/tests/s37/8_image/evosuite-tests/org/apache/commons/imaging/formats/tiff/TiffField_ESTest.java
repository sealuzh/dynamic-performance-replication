/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 03:34:58 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)41;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1715, 1715, fieldTypeShort0, 969L, (-282L), byteArray0, byteOrder0, 64);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(41, int0);
      assertEquals((-282), tiffField0.getOffset());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(1715, tiffField0.getTag());
      assertEquals(1938, tiffField0.getBytesLength());
      assertEquals(1715, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37381, "&<)Q)a9SN!_m");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1229, 37381, fieldTypeLong0, 1L, 2879L, byteArray0, byteOrder0, 37381);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1229, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals(37381, tiffField0.getDirectoryType());
      assertEquals(2879, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-524), fieldTypeShort0, 28, 759L, byteArray0, byteOrder0, (byte)127);
      tiffField0.dump();
      assertEquals(759, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-524), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-410), "s)a>");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-74), 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (byte)19);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-74), tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(631, 0, fieldTypeLong0, 0L, (-1360L), byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1360), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(631, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(513, 143, fieldTypeRational0, 5480L, 143, byteArray0, byteOrder0, (byte)50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertTrue(tagInfo0.isOffset());
      assertEquals(143, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getTag());
      assertEquals(513, tagInfo0.tag);
      assertEquals(143, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-2090L), 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(432, 37383, fieldTypeAscii0, 432, 37383, byteArray0, byteOrder0, 42016);
      int int0 = tiffField0.getTag();
      assertEquals(42016, tiffField0.getSortHint());
      assertEquals(37383, tiffField0.getDirectoryType());
      assertEquals(432, int0);
      assertEquals(37383, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte) (-124);
      byteArray0[5] = (byte) (-116);
      byteArray0[6] = (byte) (-1);
      TiffField tiffField0 = new TiffField(9, 2775, fieldTypeRational0.ASCII, 9, 17672L, byteArray0, byteOrder0, (byte)85);
      String string0 = tiffField0.getStringValue();
      assertEquals(9, tiffField0.getTag());
      assertEquals(2775, tiffField0.getDirectoryType());
      assertEquals(17672, tiffField0.getOffset());
      assertEquals(9, tiffField0.getBytesLength());
      assertEquals(85, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(631, 0, fieldTypeLong0, 0L, (-1360L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(631, tiffField0.getTag());
      assertEquals((-1360), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1026, 0, fieldTypeAscii0, 0L, 1026, byteArray0, byteOrder0, (-634));
      int int0 = tiffField0.getSortHint();
      assertEquals(1026, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-634), int0);
      assertEquals(1026, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, " (");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3408, 0, fieldTypeFloat0, 4L, 4L, byteArray0, byteOrder0, 3408);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3408, tiffField0.getSortHint());
      assertEquals(3408, tiffField0.getTag());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "E1||=");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte) (-4), fieldTypeDouble0, (-1L), (byte) (-36), byteArray0, byteOrder0, (byte)74);
      int int0 = tiffField0.getOffset();
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(74, tiffField0.getSortHint());
      assertEquals((-36), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)110;
      TiffField tiffField0 = new TiffField(37391, (byte)110, fieldTypeByte0.LONG, 50, 1659L, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals(110, tiffField0.getDirectoryType());
      assertEquals(1659, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getTag());
      assertEquals(200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-28);
      TiffField tiffField0 = new TiffField((byte) (-1), (-1541), fieldTypeRational0, 4089L, (-1L), byteArray0, byteOrder0, 476);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-73584), int0);
      assertEquals(476, tiffField0.getSortHint());
      assertEquals(32712, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1541), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(116, 116, fieldTypeShort0, 1, (-3094L), byteArray0, byteOrder0, (-388));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(116, tiffField0.getTag());
      assertEquals(116, tiffField0.getDirectoryType());
      assertEquals((-3094), tiffField0.getOffset());
      assertEquals((-388), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-92);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(132, 132, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte) (-92));
      tiffField0.getIntValue();
      assertEquals((-92), tiffField0.getSortHint());
      assertEquals(132, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(132, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-68);
      TiffField tiffField0 = new TiffField((-1010), (-1010), fieldTypeShort0, 1L, (-1146L), byteArray0, byteOrder0, (byte) (-113));
      tiffField0.getIntValue();
      assertEquals((-1010), tiffField0.getTag());
      assertEquals((-1010), tiffField0.getDirectoryType());
      assertEquals((-1146), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-113), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1840700268), (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1840700268), (-2060), fieldTypeRational0, (-2060), (-2060), byteArray0, (ByteOrder) null, (byte) (-55));
      tiffField0.getFieldTypeName();
      assertEquals((-2060), tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals((-1840700268), tiffField0.getTag());
      assertEquals((-2060), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2497, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2497, (-2729), fieldTypeRational0, 4936L, (-2729), byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getFieldTypeName();
      assertEquals((-2729), tiffField0.getDirectoryType());
      assertEquals((-2729), tiffField0.getOffset());
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(2497, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(203, 203, (FieldType) null, 203, 1L, byteArray0, byteOrder0, 203);
      tiffField0.getFieldType();
      assertEquals(203, tiffField0.getTag());
      assertEquals(203, tiffField0.getDirectoryType());
      assertEquals(203, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (byte)49, fieldTypeDouble0, (byte)49, (byte)49, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(49, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1840700268), (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1840700268), (-2060), fieldTypeRational0, (-2060), (-2060), byteArray0, (ByteOrder) null, (byte) (-55));
      tiffField0.getFieldType();
      assertEquals((-2060), tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals((-1840700268), tiffField0.getTag());
      assertEquals((-2060), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1049), 2244, fieldTypeShort0, 1L, 1138L, byteArray0, byteOrder0, (-1022));
      tiffField0.getDoubleValue();
      assertEquals(2244, tiffField0.getDirectoryType());
      assertEquals((-1049), tiffField0.getTag());
      assertEquals(1138, tiffField0.getOffset());
      assertEquals((-1022), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      TiffField tiffField0 = new TiffField((-3536), 23, fieldTypeLong0, 1L, (-3536), byteArray0, byteOrder0, (-3632));
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-3632), tiffField0.getSortHint());
      assertEquals((-3536), tiffField0.getOffset());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals((-3536), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "T|f}nFe$[");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-127);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeShort0, 0L, 617, byteArray0, byteOrder0, (-1010));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(617, tiffField0.getDirectoryType());
      assertEquals(617, tiffField0.getTag());
      assertEquals(0, doubleArray0.length);
      assertEquals(617, tiffField0.getOffset());
      assertEquals((-1010), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(41487, 0, fieldTypeRational0, 41487, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(41487, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, (-222), fieldTypeShort0, (-222), 0L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-222), int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(325, 2244, fieldTypeShort0, 0L, 525L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(525, tiffField0.getOffset());
      assertEquals(325, tiffField0.getTag());
      assertEquals(2244, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 192, (FieldType) null, 1L, 192, byteArray0, (ByteOrder) null, 0);
      long long0 = tiffField0.getCount();
      assertEquals(1L, long0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(192, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(192, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2426, "Unknown: ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50828, 2426, fieldTypeLong0, (-2147483648L), 16L, byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals((-2147483648L), long0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(2426, tiffField0.getDirectoryType());
      assertEquals(50828, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(325, 2244, fieldTypeShort0, 0L, 525L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2244, tiffField0.getDirectoryType());
      assertEquals(525, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(325, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "T|f}nFe$[");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 123, fieldTypeAscii0, (-309L), 0, byteArray0, byteOrder0, 48325);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(48325, tiffField0.getSortHint());
      assertEquals((-309), int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(123, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1037), 0, fieldTypeLong0, 0L, (-1037), byteArray0, (ByteOrder) null, (byte)110);
      tiffField0.getByteOrder();
      assertEquals(110, tiffField0.getSortHint());
      assertEquals((-1037), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1037), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3077), (-898), fieldTypeShort0, 1405L, (-6166L), byteArray0, byteOrder0, (-898));
      tiffField0.getByteOrder();
      assertEquals((-898), tiffField0.getDirectoryType());
      assertEquals((-898), tiffField0.getSortHint());
      assertEquals((-6166), tiffField0.getOffset());
      assertEquals((-3077), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32898, (byte)110, fieldTypeLong0, 32898, 1659L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getByteArrayValue();
      assertEquals(1659, tiffField0.getOffset());
      assertEquals(32898, tiffField0.getTag());
      assertEquals(131592, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(110, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2670), fieldTypeByte0, 0L, 2288L, byteArray0, byteOrder0, (-3898));
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2670), tiffField0.getDirectoryType());
      assertEquals((-3898), tiffField0.getSortHint());
      assertEquals(2288, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41993, (-2127), fieldTypeByte0, 41993, 41993, (byte[]) null, byteOrder0, 41993);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-874), (-874), fieldTypeRational0, (-874), (-874), byteArray0, byteOrder0, (-874));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeRational0, 1L, 66, byteArray0, byteOrder0, 66);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2018, 2018, (FieldType) null, 2018, (-1L), byteArray0, byteOrder0, 2018);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2547), (-2547), fieldTypeShort0, (-2547), (-2547), byteArray0, byteOrder0, (-2547));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0.SLONG, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2374, 2374, (FieldType) null, 2374, 2374, byteArray0, byteOrder0, 2374);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, (-1352L), 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0.SLONG, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2001, 2001, fieldTypeShort0, 2001, 2001, (byte[]) null, byteOrder0, 2001);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-10), (-10), fieldTypeRational0, (-10), (-10), byteArray0, byteOrder0, (-10));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, (-2139), fieldTypeRational0, 8, (-2207L), (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(638, 638, fieldTypeLong0, 638, 638, (byte[]) null, byteOrder0, 638);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-915), (-915), fieldTypeRational0, (-915), (-915), byteArray0, byteOrder0, (-915));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2773), fieldTypeShort0, (-2773), (-2773), byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-138), (-138), fieldTypeRational0, (-138), (-138), byteArray0, byteOrder0, (-138));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeRational0, 1L, 24, byteArray0, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeRational0, 1L, 24, byteArray0, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, (byte[]) null, byteOrder0, (-829));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2424), (-2424), fieldTypeRational0, (-2424), (-2424), byteArray0, byteOrder0, (-2424));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2004, 2004, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 2004);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-4), (byte)0, (FieldType) null, (byte)0, 0, byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-1183), fieldTypeLong0, 27, 27, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2443), "unq{GuDR,");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 133, fieldTypeFloat0, (-559L), (-559L), byteArray0, byteOrder0, (-1049));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(638, 638, fieldTypeLong0, 638, 638, (byte[]) null, byteOrder0, 638);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-582), (-582), fieldTypeShort0, (-582), (-582), byteArray0, byteOrder0, (-582));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1581, 1581, fieldTypeFloat0, 1581, 1581, (byte[]) null, byteOrder0, 1581);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1333), (-1333), fieldTypeRational0, (-1333), (-1124L), byteArray0, byteOrder0, (-1333));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-3901), 649, fieldTypeRational0, (-3901), 649, byteArray0, byteOrder0, 649);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("BaselineNoise", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "BaselineNoise");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(645, 1, fieldTypeRational0, 1L, 1, byteArray0, byteOrder0, 645);
      MockFile mockFile0 = new MockFile("h~>HvW>x0nI?%tY=-RA", "h~>HvW>x0nI?%tY=-RA");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 7, fieldTypeShort0, 2147483647L, 7, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1L, 1206L, byteArray0, byteOrder0, 9);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeRational0, 24, (-751L), (byte[]) null, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147048317, 2147048317, fieldTypeLong0.FLOAT, 2147048317, 2147048317, byteArray0, byteOrder0, 2147048317);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-7), 1, fieldTypeRational0, 1, (-7), byteArray0, byteOrder0, (-1333));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3076, 33452, fieldTypeRational0, 33452, 0L, byteArray0, byteOrder0, (byte)90);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1058), 0, fieldTypeLong0, 0L, (-1058), byteArray0, (ByteOrder) null, (byte)110);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1058), tiffField0.getTag());
      assertEquals(110, tiffField0.getSortHint());
      assertEquals((-1058), tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1239), "p0bes)2]Jc2>HeY");
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(1526);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1374), (-1840700268), fieldTypeAscii0, (byte)12, 3636L, byteArray0, byteOrder0, (byte)12);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals((-1374), tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(3636, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1049), 50, fieldTypeShort0, 12L, 896L, byteArray0, byteOrder0, 1870);
      tiffField0.getFieldType();
      assertEquals(896, tiffField0.getOffset());
      assertEquals((-1049), tiffField0.getTag());
      assertEquals(1870, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)110, fieldTypeLong0, 0, 0L, byteArray0, (ByteOrder) null, (-1058));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(110, int0);
      assertEquals((-1058), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50763, 50763, fieldTypeRational0, 50763, 50763, byteArray0, byteOrder0, 50763);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(41487, 12, fieldTypeRational0, 41487, 0L, byteArray0, byteOrder0, 12);
      int int0 = tiffField0.getOffset();
      assertEquals(41487, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(27, (byte) (-79), fieldTypeLong0, (-2147483648L), 331896L, byteArray0, byteOrder0, 215);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-79), tiffField0.getDirectoryType());
      assertEquals(215, tiffField0.getSortHint());
      assertEquals(331896, tiffField0.getOffset());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-15), 32898, fieldTypeLong0, (byte)110, (byte) (-15), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(32898, tiffField0.getDirectoryType());
      assertEquals((-15), int0);
      assertEquals((-15), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(5, (byte) (-20), (FieldType) null, (byte) (-20), (byte)2, byteArray0, byteOrder0, (byte)2);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(126, 126, fieldTypeShort0, 126, 126, byteArray0, byteOrder0, 126);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getOffset());
      assertEquals("126 (0x7e: Unknown Tag): ", string0);
      assertEquals(126, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeRational0, 617, 617, byteArray0, byteOrder0, 617);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-871), "]`L");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-524), (-1), fieldTypeLong0, 255L, (-1062L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(642, 642, fieldTypeLong0, 642, 642, byteArray0, byteOrder0, 642);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2568, tiffField0.getBytesLength());
      assertEquals(642, tiffField0.getSortHint());
      assertEquals(642, tiffField0.getOffset());
      assertEquals(642L, tiffField0.getCount());
      assertEquals(642, tiffField0.getTag());
      assertEquals(642, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(629, 629, fieldTypeRational0, 629, 629, byteArray0, byteOrder0, 629);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[151];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0.FLOAT, 50, 50, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5a4f8f5c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2004, 2004, fieldTypeShort0.SBYTE, 2004, 2004, byteArray0, byteOrder0, 2004);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@18c89e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0.FLOAT, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[162];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeLong0, 57, 57, byteArray0, byteOrder0, 57);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getTag());
      assertEquals(40, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(126, 126, fieldTypeShort0, 126, 126, byteArray0, byteOrder0, 126);
      tiffField0.getDoubleArrayValue();
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(126L, tiffField0.getCount());
      assertEquals(126, tiffField0.getTag());
      assertEquals(252, tiffField0.getBytesLength());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeRational0, 617, 617, byteArray0, byteOrder0, 617);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(617, tiffField0.getSortHint());
      assertEquals(617, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(617L, tiffField0.getCount());
      assertEquals(617, tiffField0.getTag());
      assertEquals(617, tiffField0.getOffset());
      assertEquals(4936, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(644, 644, fieldTypeShort0, 1L, 644, byteArray0, byteOrder0, 644);
      tiffField0.getDoubleArrayValue();
      assertEquals(644, tiffField0.getDirectoryType());
      assertEquals(644, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(644, tiffField0.getTag());
      assertEquals(644, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[131];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50725, 50725, fieldTypeLong0.DOUBLE, 50725, 50725, byteArray0, byteOrder0, 50725);
      tiffField0.getDoubleArrayValue();
      assertEquals(50725, tiffField0.getOffset());
      assertEquals(405800, tiffField0.getBytesLength());
      assertEquals(50725, tiffField0.getTag());
      assertEquals(50725, tiffField0.getSortHint());
      assertEquals(50725, tiffField0.getDirectoryType());
      assertEquals(50725L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[98];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(124, 124, fieldTypeLong0, 124, 124, byteArray0, byteOrder0, 124);
      tiffField0.getIntArrayValue();
      assertEquals(124, tiffField0.getOffset());
      assertEquals(124, tiffField0.getTag());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(124, tiffField0.getDirectoryType());
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals(124L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeShort0, 617, 617, byteArray0, byteOrder0, 617);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(617L, tiffField0.getCount());
      assertEquals(617, tiffField0.getTag());
      assertEquals(617, tiffField0.getDirectoryType());
      assertEquals(1234, tiffField0.getBytesLength());
      assertEquals(617, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(617, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(648, 648, fieldTypeRational0, 648, 648, byteArray0, byteOrder0, 648);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeRational0, 617, 617, byteArray0, byteOrder0, 617);
      tiffField0.getIntArrayValue();
      assertEquals(617L, tiffField0.getCount());
      assertEquals(617, tiffField0.getSortHint());
      assertEquals(617, tiffField0.getDirectoryType());
      assertEquals(617, tiffField0.getTag());
      assertEquals(4936, tiffField0.getBytesLength());
      assertEquals(617, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeShort0, 1L, 47, byteArray0, byteOrder0, 47);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0.FLOAT, 50, 50, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7ba8b6e1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(331, 331, fieldTypeAscii0, 331, 331, byteArray0, byteOrder0, 331);
      String string0 = tiffField0.getStringValue();
      assertEquals(331, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(331, tiffField0.getBytesLength());
      assertEquals(331, tiffField0.getDirectoryType());
      assertEquals(331, tiffField0.getSortHint());
      assertEquals(331, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeRational0, 617, 617, byteArray0, byteOrder0, 617);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@245c833e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeRational0, 617, 617, byteArray0, byteOrder0, 617);
      String string0 = tiffField0.getTagName();
      assertEquals(617, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x269)", string0);
      assertEquals(617, tiffField0.getDirectoryType());
      assertEquals(617, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41993, (-2127), fieldTypeByte0, 41993, 41993, (byte[]) null, byteOrder0, 41993);
      String string0 = tiffField0.getTagName();
      assertEquals(41993, tiffField0.getTag());
      assertEquals("Saturation", string0);
      assertEquals(41993, tiffField0.getOffset());
      assertEquals((-2127), tiffField0.getDirectoryType());
      assertEquals(41993, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(109, 109, fieldTypeLong0.FLOAT, 109, 109, byteArray0, byteOrder0, 109);
      tiffField0.dump();
      assertEquals(436, tiffField0.getBytesLength());
      assertEquals(109, tiffField0.getOffset());
      assertEquals(109L, tiffField0.getCount());
      assertEquals(109, tiffField0.getTag());
      assertEquals(109, tiffField0.getSortHint());
      assertEquals(109, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(691, 691, fieldTypeRational0.SBYTE, 691, 691, byteArray0, byteOrder0, 691);
      String string0 = tiffField0.toString();
      assertEquals(691, tiffField0.getDirectoryType());
      assertEquals("691 (0x2b3: Unknown Tag):  (691 SByte)", string0);
      assertEquals(691, tiffField0.getBytesLength());
      assertEquals(691, tiffField0.getSortHint());
      assertEquals(691, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2134776644, 57, fieldTypeLong0.SBYTE, 57, (-9452L), byteArray0, byteOrder0, 2134776644);
      tiffField0.dump();
      assertEquals(2134776644, tiffField0.getSortHint());
      assertEquals(2134776644, tiffField0.getTag());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getBytesLength());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals((-9452), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3145, 3145, fieldTypeLong0, 3145, 3145, byteArray0, byteOrder0, 3145);
      tiffField0.dump();
      assertEquals(3145, tiffField0.getOffset());
      assertEquals(3145, tiffField0.getSortHint());
      assertEquals(3145, tiffField0.getTag());
      assertEquals(12580, tiffField0.getBytesLength());
      assertEquals(3145, tiffField0.getDirectoryType());
      assertEquals(3145L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(133, 133, fieldTypeLong0, 133, 133, byteArray0, byteOrder0, 133);
      String string0 = tiffField0.toString();
      assertEquals("133 (0x85: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (133 IFD)", string0);
      assertEquals(133, tiffField0.getSortHint());
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[197];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(129, 41, fieldTypeLong0.SSHORT, 129, 41, byteArray0, byteOrder0, 41);
      String string0 = tiffField0.toString();
      assertEquals("129 (0x81: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (98) (129 SShort)", string0);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(126, 126, fieldTypeShort0, 126, 126, byteArray0, byteOrder0, 126);
      tiffField0.dump();
      assertEquals(126, tiffField0.getOffset());
      assertEquals(126L, tiffField0.getCount());
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getTag());
      assertEquals(252, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(949, (-3234), fieldTypeAscii0, 949, 949, byteArray0, byteOrder0, 949);
      tiffField0.dump();
      assertEquals((-3234), tiffField0.getDirectoryType());
      assertEquals(949, tiffField0.getSortHint());
      assertEquals(949, tiffField0.getOffset());
      assertEquals(949L, tiffField0.getCount());
      assertEquals(949, tiffField0.getTag());
      assertEquals(949, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(42, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1187), (-1187), fieldTypeAscii0, 42, 4L, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.getValueDescription();
      assertEquals(42, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(42, tiffField0.getSortHint());
      assertEquals((-1187), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1187), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[197];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5331, 5331, fieldTypeRational0, 16L, 5331, (byte[]) null, byteOrder0, 5331);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(5331, 5331);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(5331, tiffField0.getOffset());
      assertEquals(128, tiffField0.getBytesLength());
      assertNull(string0);
      assertEquals(5331, tiffField0.getDirectoryType());
      assertEquals(5331, tiffField0.getSortHint());
      assertEquals(5331, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2004, 2004, fieldTypeShort0, 465L, 465L, byteArray0, byteOrder0, 2004);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(588, 2004);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(2004, tiffField0.getSortHint());
      assertEquals(2004, tiffField0.getDirectoryType());
      assertEquals(465, tiffField0.getOffset());
      assertEquals(2004, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(126, 126, fieldTypeShort0, 126, 126, byteArray0, byteOrder0, 126);
      tiffField0.getFieldTypeName();
      assertEquals(126, tiffField0.getTag());
      assertEquals(126, tiffField0.getOffset());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4350, "MoireFilter");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4350, 4350, fieldTypeLong0, 4350, (-2912L), byteArray0, (ByteOrder) null, 4350);
      int int0 = tiffField0.getSortHint();
      assertEquals(4350, tiffField0.getDirectoryType());
      assertEquals(4350, int0);
      assertEquals(4350, tiffField0.getTag());
      assertEquals((-2912), tiffField0.getOffset());
      assertEquals(4350L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1393), fieldTypeRational0, 27, 908L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50725, 50725, fieldTypeLong0.DOUBLE, 50725, 50725, byteArray0, byteOrder0, 50725);
      tiffField0.dump();
      assertEquals(50725, tiffField0.getTag());
      assertEquals(50725, tiffField0.getDirectoryType());
      assertEquals(50725L, tiffField0.getCount());
      assertEquals(50725, tiffField0.getOffset());
      assertEquals(405800, tiffField0.getBytesLength());
      assertEquals(50725, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeRational0, 617, 617, byteArray0, byteOrder0, 617);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(617, tiffField0.getDirectoryType());
      assertEquals(617, tiffField0.getSortHint());
      assertEquals(617L, tiffElement0.offset);
      assertEquals(617, tiffField0.getTag());
  }
}
