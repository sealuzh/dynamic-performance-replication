/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 14:18:14 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.max = (-451);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.max = 0;
      boolean boolean0 = regexp1.equals(regexp2);
      int[] intArray0 = new int[9];
      intArray0[0] = (-451);
      intArray0[1] = (-451);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-451);
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      regexp1.runes = intArray0;
      boolean boolean1 = regexp1.equals("A");
      assertFalse(boolean1 == boolean0);
      
      Regexp.Op.values();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[16];
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      String string0 = regexp0.toString();
      assertEquals("[\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00]", string0);
      
      boolean boolean0 = regexp0.equals(regexp_Op1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[6];
      intArray0[0] = 3846;
      regexp0.cap = (-3173);
      intArray0[1] = 3846;
      intArray0[2] = 3846;
      intArray0[3] = 3846;
      intArray0[4] = 3846;
      intArray0[5] = 3846;
      regexp1.runes = intArray0;
      regexp1.max = 3846;
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-2562);
      regexp1.maxCap();
      regexp0.toString();
      regexp0.toString();
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.min = 9664;
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp1.min = (-1390);
      int[] intArray0 = new int[1];
      intArray0[0] = (-709);
      regexp1.runes = intArray0;
      regexp0.reinit();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.subs = regexpArray0;
      regexp1.cap = 0;
      regexp0.reinit();
      regexp1.toString();
      regexp1.toString();
      regexp0.toString();
      regexp1.equals(regexp0);
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      regexp1.reinit();
      regexp1.toString();
      regexp1.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      String string0 = regexp0.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = "";
      regexp0.reinit();
      regexp0.cap = 0;
      regexp0.flags = 0;
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      regexp0.flags = 0;
      regexp0.name = "";
      regexp0.runes = null;
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      regexp0.flags = 16;
      int[] intArray0 = new int[1];
      intArray0[0] = 16;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      regexp0.max = 2756;
      regexp1.cap = 2756;
      int[] intArray0 = new int[1];
      intArray0[0] = 13;
      regexp1.toString();
      regexp0.op = regexp_Op0;
      regexp1.cap = (-1700);
      regexp1.max = 11810;
      regexp1.runes = intArray0;
      boolean boolean0 = regexp1.equals(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp1.toString();
      regexp1.toString();
      boolean boolean1 = regexp0.equals("");
      assertFalse(boolean1 == boolean0);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp0.op.isPseudo();
      regexp1.cap = 0;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp2);
      Object object0 = new Object();
      regexp0.equals(regexp1);
      Regexp regexp4 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp4);
      assertTrue(boolean0);
      
      regexp0.reinit();
      Regexp regexp5 = new Regexp(regexp_Op0);
      regexp5.reinit();
      Regexp.Op.values();
      Regexp.Op.values();
      int int0 = regexp2.maxCap();
      assertFalse(regexp2.equals((Object)regexp5));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp1.cap = 0;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp1.equals(regexp2);
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp regexp3 = new Regexp(regexp_Op1);
      String string0 = regexp3.name;
      regexp2.reinit();
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.CAPTURE;
      Regexp regexp4 = new Regexp(regexp_Op2);
      boolean boolean1 = regexp1.equals(regexp4);
      assertTrue(boolean1 == boolean0);
      
      Regexp.Op.values();
      int int0 = regexp4.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp0.equals((Object) null);
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp0.reinit();
      Object object1 = new Object();
      regexp1.equals("8");
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp2);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("[^x00-x{10FFFF}]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.[^x00-x{10FFFF}]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.flags = 1517;
      regexp0.equals(regexp1);
      String string0 = "";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.name = "nQZE2:l";
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      regexp1.toString();
      regexp0.equals(regexp1);
      int[] intArray0 = new int[6];
      intArray0[0] = 304;
      intArray0[1] = 1887;
      regexp1.equals("nQZE2:l");
      Object object1 = new Object();
      regexp1.equals(object1);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 0;
      regexp0.cap = 0;
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      Regexp.Op.values();
      int int1 = 962;
      regexp0.flags = 962;
      regexp0.cap = 0;
      regexp0.cap = 2685;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      String string0 = regexp0.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.REPEAT;
      regexp0.cap = 678;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op2);
      regexp0.op = regexp_Op2;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      regexp0.toString();
      regexp0.equals("z");
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.cap = 0;
      regexp0.runes = null;
      regexp0.equals((Object) null);
      Object object0 = new Object();
      regexp0.equals(object0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("r.ul$*>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.r.ul$*>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.op.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.REPEAT;
      regexp0.cap = 678;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op2);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp.Op regexp_Op3 = Regexp.Op.VERTICAL_BAR;
      Regexp[] regexpArray0 = new Regexp[0];
      regexp2.subs = regexpArray0;
      regexp2.op = regexp_Op3;
      regexp_Op0.isPseudo();
      regexp0.op.isPseudo();
      regexp2.reinit();
      regexp0.op.isPseudo();
      Regexp.Op.values();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("nL");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.nL
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 94;
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[6];
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp2;
      regexpArray0[1] = regexp0;
      Regexp regexp3 = new Regexp(regexp0);
      regexpArray0[0].max = 94;
      int[] intArray0 = new int[7];
      intArray0[0] = 94;
      intArray0[1] = 94;
      intArray0[2] = 94;
      intArray0[3] = 5;
      intArray0[4] = 94;
      intArray0[5] = 94;
      intArray0[6] = 94;
      regexp2.runes = intArray0;
      regexpArray0[2] = regexp3;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexp1.subs = regexpArray0;
      regexp1.flags = 94;
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Pf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Pf
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp2.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 65531;
      regexp0.reinit();
      Regexp[] regexpArray0 = new Regexp[7];
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.max = 65531;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.cap = 0;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.op = regexp_Op0;
      regexp0.name = "";
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp1.min = 2276;
      Regexp[] regexpArray1 = new Regexp[1];
      regexpArray1[0] = regexp1;
      regexp0.subs = regexpArray1;
      regexp1.maxCap();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.toString();
      regexp0.reinit();
      String string0 = "a5a";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("a5a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.a5a
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.END_LINE;
      regexp2.max = (-347);
      regexp2.min = 0;
      regexp2.op = regexp_Op2;
      regexp1.equals(regexp2);
      regexp2.toString();
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("'gW1% D/%8e.+Ow");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.'gW1% D/%8e.+Ow
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp2;
      regexp1.subs = regexpArray0;
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 42;
      regexp0.cap = 0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      regexp1.op = regexp_Op1;
      regexp1.op = regexp_Op0;
      regexp0.flags = 42;
      regexp1.toString();
      boolean boolean0 = regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp0.toString();
      regexp1.reinit();
      boolean boolean1 = regexp_Op1.isPseudo();
      assertTrue(boolean1 == boolean0);
      
      String string0 = regexp1.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = 462;
      regexp1.reinit();
      regexp1.equals(regexp_Op0);
      regexp1.equals("GB,=!&'XDZAr G");
      regexp1.min = 462;
      int[] intArray0 = new int[6];
      intArray0[0] = 462;
      intArray0[1] = 462;
      intArray0[2] = 462;
      intArray0[3] = 462;
      intArray0[4] = 462;
      intArray0[5] = 462;
      regexp0.runes = intArray0;
      regexp1.equals(regexp0);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("1v.HG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.1v.HG
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp2.reinit();
      regexp2.maxCap();
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = 20;
      intArray0[1] = 92;
      intArray0[2] = 15;
      intArray0[3] = (-5780);
      intArray0[4] = 8147;
      intArray0[5] = 93;
      intArray0[6] = 16;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp1);
      regexp0.toString();
      regexp0.equals("x14\\x0fxffffe96c\u1FD3]x10");
      Object object0 = new Object();
      regexp1.equals(object0);
      Object object1 = new Object();
      regexp1.equals("<Fpf#ujVR?:");
      regexp1.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Oriya");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Oriya
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp2.equals(regexp1);
      boolean boolean0 = regexp1.equals(regexp_Op0);
      assertFalse(regexp1.equals((Object)regexp0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 42;
      regexp0.cap = 0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      regexp1.op = regexp_Op1;
      regexp1.op = regexp_Op0;
      regexp0.flags = 42;
      regexp1.toString();
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp0.toString();
      regexp1.reinit();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = "";
      regexp0.name = "";
      regexp0.reinit();
      regexp0.reinit();
      regexp0.equals(regexp_Op0);
      int int0 = (-2149);
      regexp0.flags = (-2149);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.equals("BEGIN_LINE");
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp1.maxCap();
      Regexp.Op.values();
      regexp1.cap = 0;
      regexp1.toString();
      regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("wu_c9DpN.wxwv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.wu_c9DpN.wxwv
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp1.equals(regexp2);
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexp3.toString();
      regexp2.reinit();
      regexp_Op0.isPseudo();
      regexp3.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("u}*&<?-jL]G");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.u}*&<?-jL]G
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[1];
      regexp0.runes = intArray0;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("a 7)-;&uO*&3ZR3H5:j");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.a 7)-;&uO*&3ZR3H5:j
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-1663);
      regexp0.name = "";
      int int0 = regexp0.maxCap();
      assertEquals((-1663), int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.cap = 3;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.equals(regexp2);
      regexp2.toString();
      regexp0.flags = 713;
      regexp0.toString();
      regexp1.runes = null;
      regexp2.max = (-721);
      regexp2.reinit();
      regexp1.name = "GUPn;M%";
      regexp1.toString();
      regexp2.reinit();
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.valueOf("VERTICAL_BAR");
      Regexp.Op.values();
      boolean boolean0 = regexp1.equals(regexp2);
      regexp2.toString();
      regexp_Op1.isPseudo();
      regexp1.equals(regexp2);
      regexp2.toString();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      
      regexp1.toString();
      regexp0.reinit();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[5];
      intArray0[0] = (-643);
      intArray0[1] = 2110;
      intArray0[2] = 4746;
      intArray0[3] = 0;
      intArray0[4] = 69819;
      regexp1.runes = intArray0;
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp1.op = regexp_Op1;
      regexp1.toString();
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.reinit();
      regexp1.equals(regexp0);
      regexp0.maxCap();
      Regexp.Op.valueOf("LEFT_PAREN");
      Regexp.Op.values();
      regexp_Op1.isPseudo();
      regexp0.maxCap();
      regexp1.op.isPseudo();
      regexp_Op0.isPseudo();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(";E1sc'):L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.;E1sc'):L
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-37);
      intArray0[1] = (-2950);
      intArray0[2] = (-498);
      intArray0[3] = 3;
      regexp0.runes = intArray0;
      Regexp regexp2 = new Regexp(regexp1);
      boolean boolean0 = regexp1.equals(regexp0);
      assertFalse(regexp1.equals((Object)regexp0));
      assertTrue(regexp1.equals((Object)regexp2));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 42;
      regexp0.cap = 0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 1847;
      regexp0.toString();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.equals(regexp_Op0);
      regexp1.equals("GB,=!&'XDZAr G");
      regexp1.min = 462;
      int[] intArray0 = new int[6];
      intArray0[0] = 462;
      intArray0[1] = 462;
      intArray0[2] = 462;
      intArray0[3] = 462;
      intArray0[4] = 462;
      intArray0[5] = 462;
      regexp0.runes = intArray0;
      regexp1.equals(regexp0);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("1v.HG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.1v.HG
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 17;
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = "";
      regexp1.reinit();
      regexp1.name = "";
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.min = 9664;
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp1.min = (-1390);
      int[] intArray0 = new int[1];
      intArray0[0] = (-709);
      regexp1.runes = intArray0;
      regexp0.reinit();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.subs = regexpArray0;
      regexp1.cap = 0;
      regexp0.reinit();
      regexp1.toString();
      regexp1.toString();
      regexp0.toString();
      regexp1.equals(regexp0);
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      regexp1.reinit();
      regexp1.toString();
      regexp1.reinit();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?-s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?-s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp0.min = 1541;
      regexp1.flags = 1009;
      regexp0.flags = 1310;
      regexp1.op = regexp_Op0;
      regexp1.max = 1310;
      regexp1.flags = (-3055);
      regexp1.equals(regexp0);
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      regexp1.cap = (-3055);
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.name = "nQZE2:l";
      regexp0.toString();
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp_Op0);
      regexp1.toString();
      regexp0.equals(regexp1);
      int[] intArray0 = new int[6];
      intArray0[0] = 304;
      intArray0[1] = 1887;
      regexp0.op = regexp_Op0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      regexp0.min = 0;
      regexp1.cap = 304;
      intArray0[4] = 93;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp1.toString();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp0.reinit();
      regexp1.toString();
      regexp0.equals("nQZE2:l");
      regexp1.toString();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      
      regexp0.toString();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "Y4JCY=>dkBo^L17";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[3];
      regexp1.subs = null;
      intArray0[0] = 15;
      intArray0[1] = (-5297);
      regexp1.min = (-1331);
      intArray0[2] = 8;
      regexp1.runes = intArray0;
      regexp1.equals(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.min = 2531;
      regexp1.flags = 7960;
      regexp2.toString();
      regexp2.reinit();
      regexp2.flags = 2053;
      regexp1.equals(regexp2);
      regexp2.equals(regexp0);
      regexp2.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
