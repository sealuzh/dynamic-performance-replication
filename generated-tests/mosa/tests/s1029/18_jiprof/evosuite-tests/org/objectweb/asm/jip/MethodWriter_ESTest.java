/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 20:16:06 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-121);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-121), (byte) (-121));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -121
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1994);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1994, ")V", ")V", ")V", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "b((~:MUbE+$z/9C", "", "1ZTq|AV", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "(&eGjE @X=PSD&Npc", "(&eGjE @X=PSD&Npc", "(&eGjE @X=PSD&Npc", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "(&eGjE @X=PSD&Npc", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-452));
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-452), "", "", "", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1129;
      intArray0[1] = (-2884);
      intArray0[2] = (-1104);
      intArray0[3] = 2233;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2233, 1129);
      assertEquals((-3337), int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = 16;
      ClassWriter classWriter0 = new ClassWriter(16);
      String string0 = "<init>";
      String string1 = "Deprecated";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 16777226, "<init>", "<init>", "Deprecated", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 1437);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1437
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-1394));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1394
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitFrame(94, 11, (Object[]) null, 94, (Object[]) null);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      int int0 = methodWriter0.getSize();
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitAnnotation("", true);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", (String[]) null, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitIincInsn(1, 1);
      methodWriter0.visitTypeInsn(2, "");
      methodWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "(p&eGj @X=PSD&Npc", "(p&eGj @X=PSD&Npc", "(p&eGj @X=PSD&Npc", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 169, (Object[]) null, 11, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 21, "sJY{`lWJ7'fRJ;\"", "}nj@|h~X$S@!Z", "sJY{`lWJ7'fRJ;\"", (String[]) null, false, false);
      methodWriter0.getSize();
      methodWriter0.visitFrame(0, 0, (Object[]) null, (-2045222519), (Object[]) null);
      methodWriter0.visitEnd();
      methodWriter0.visitInsn((-1623953025));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitTypeInsn(2, "LineNumberTable");
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitFrame((-1889), 3543, (Object[]) null, (-1649), (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(3543, (-2862), (Object[]) null, (-2862), (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-1898);
      intArray0[1] = 83;
      intArray0[2] = (-204);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-204), 186);
      assertEquals(473, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1889), "", "Signature", "qB@", (String[]) null, false, false);
      methodWriter1.visitFieldInsn(1, "&mOdaUV/2$&'1CBHB", "&mOdaUV/2$&'1CBHB", "qB@");
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitAnnotation("", false);
      methodWriter0.visitIntInsn(1, 1580);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 21, "sJY{`lWJ7'fRJ;\"", "sJY{`lWJ7'fRJ;\"", "sJY{`lWJ7'fRJ;\"", (String[]) null, false, false);
      methodWriter0.getSize();
      classWriter0.visitOuterClass("sJY{`lWJ7'fRJ;\"", "sJY{`lWJ7'fRJ;\"", "sJY{`lWJ7'fRJ;\"");
      methodWriter0.visitMethodInsn(21, "sJY{`lWJ7'fRJ;\"", "'&", "sJY{`lWJ7'fRJ;\"");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-415));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "SpC4,sC):?)c'T8", "SpC4,sC):?)c'T8", "SpC4,sC):?)c'T8", (String[]) null, true, true);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, ")ug/c5");
      methodWriter0.visitFieldInsn(1, "SpC4,sC):?)c'T8", "SpC4,sC):?)c'T8", "SpC4,sC):?)c'T8");
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      methodWriter0.visitTypeInsn(1, "");
      int int0 = methodWriter0.getSize();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitTypeInsn((-1889), "F>0VrF^'[9g");
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".s.IFJDCS", "4$r])!ef[g}+", "H\"\t)", (String[]) null, true, true);
      methodWriter0.visitCode();
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-415));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-371), "Label offset position has not been resolved yet", "Code", "Label offset position has not been resolved yet", (String[]) null, false, false);
      methodWriter0.visitFrame((-1649), 2, (Object[]) null, 2, (Object[]) null);
      methodWriter0.visitAnnotation("W?+.9GmyPKcl5", false);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1048575);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "L";
      stringArray0[1] = "L";
      stringArray0[2] = "L";
      stringArray0[3] = "L";
      stringArray0[4] = "il7-j9eA:)bqg)^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", "L", stringArray0, false, false);
      classWriter0.newMethod("L", "L", "L", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1048575, stringArray0, 1048575, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 143, "4$r])!ef[g}+", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      Frame frame0 = new Frame();
      methodWriter0.visitIntInsn(1, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "4$r])!ef[g}+", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1048582, "}nj@~X$S@!Z", "}nj@~X$S@!Z", "}nj@~X$S@!Z", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("}nj@~X$S@!Z");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3386);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3386, ".(<@", "4$r])!ef[g}+", ".(<@", (String[]) null, true, false);
      Label label0 = new Label();
      label0.addToSubroutine(1, 3386);
      label0.status = (-1740026746);
      methodWriter0.visitInsn(2);
      methodWriter0.visitJumpInsn(2, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitAnnotation("", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-394), ",#n\"K?+wlP%3d3*1", "Code", "'6/=Vq>", (String[]) null, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label1.getFirst();
      label0.position = 172;
      methodWriter0.visitTryCatchBlock(label0, label0, label1, "Code");
      methodWriter0.visitTryCatchBlock(label0, label1, label0, ",#n\"K?+wlP%3d3*1");
      methodWriter0.visitAnnotation("KGr#3spG", false);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-439));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      methodWriter0.visitIincInsn(86, 1241);
      Attribute attribute0 = new Attribute("}nj@|h~X$S@!Z");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      String string0 = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      Label label0 = new Label();
      Label label1 = label0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "(p&eGj @X=PSD&Npc", "(p&eGj @X=PSD&Npc", "(p&eGj @X=PSD&Npc", (String[]) null, false, false);
      methodWriter0.visitAnnotation("(p&eGj @X=PSD&Npc", false);
      methodWriter0.visitVarInsn(1, (-1889));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-417));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-417), "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", ">kcB6=#I\"a\"^ki", (String[]) null, true, true);
      methodWriter0.visitTypeInsn(16, "InnerClasses");
      methodWriter0.visitIntInsn(1, 2);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "sJY{`lWJ7'fRJ;\"", "\"pi4,sC):?)c'T8", ">kcB6=#I\"aO9i", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(1, ">kcB6=#I\"aO9i", "\"pi4,sC):?)c'T8", "sJY{`lWJ7'fRJ;\"");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3309);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3309, "$Signature", "4$r])!ef[g}+", "$Signature", (String[]) null, true, true);
      ClassWriter classWriter1 = new ClassWriter(1);
      methodWriter0.visitLdcInsn(2);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      methodWriter0.visitVarInsn(69, 2);
      methodWriter0.visitAnnotation("baL)#Ed-*1;", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      methodWriter0.put(byteVector1);
      methodWriter0.visitLdcInsn("baL)#Ed-*1;");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn((-1889), label0);
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      methodWriter0.visitTableSwitchInsn(172, (-1150), label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitIntInsn(116, 2048);
      methodWriter0.visitLdcInsn("Signature");
      Object object0 = new Object();
      methodWriter0.visitEnd();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 116;
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {2, 2, 1, 116}, intArray0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-419));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Synthetic", "sJY{`lWJ7'fRJ;\"", "Synthetic", (String[]) null, false, false);
      Attribute attribute0 = new Attribute((String) null);
      methodWriter0.visitFrame(2, 1, (Object[]) null, 1, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(16, (-419), (Object[]) null, 16, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "}nj@|h~X$S@!Z", "@Bu+[^J?zZ++=]n", "}nj@|h~X$S@!Z", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("@Bu+[^J?zZ++=]n");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitIincInsn((-904), (-904));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-417));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-417), "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", ">kcB6=#I\"a\"^ki", (String[]) null, true, true);
      ByteVector byteVector0 = new ByteVector();
      Integer integer0 = new Integer(2);
      methodWriter0.visitAnnotation(">kcB6=#I\"a\"^ki", true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "}nj@|h~X$S@!Z", "@Bu+[^J?zZ++=]n", "}nj@|h~X$S@!Z", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("@Bu+[^J?zZ++=]n");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitMultiANewArrayInsn("@Bu+[^J?zZ++=]n", 2222);
      methodWriter0.visitMethodInsn((-1889), "SS#t/T1yh'L", ")%$_E|n", "D#v|`Lc)T9{<ygh");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "(p&eGj @X=PSD&Npc", "(p&eGj @X=PSD&Npc", "(p&eGj @X=PSD&Npc", (String[]) null, false, false);
      methodWriter0.visitIntInsn(2, 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(1, 200);
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      classWriter0.newClassItem("RuntimeVisibleParameterAnnotations");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitVarInsn((-86), 3333);
      methodWriter0.visitLocalVariable("RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", label0, label0, 3333);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("}nj@|h~X$S@!Z");
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitVarInsn(196, 1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "}nj@|h~X$S@!Z", "@Bu+[^J?zZ++=]n", "}nj@|h~X$S@!Z", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("@Bu+[^J?zZ++=]n");
      methodWriter0.visitAttribute(attribute0);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("@Bu+[^J?zZ++=]n", "@Bu+[^J?zZ++=]n", "}nj@|h~X$S@!Z", label0, label0, 2);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3386);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3386, ".(<@", "4$r])!ef[g}+", ".(<@", (String[]) null, true, false);
      Label label0 = new Label();
      label0.addToSubroutine(1, 3386);
      methodWriter0.visitInsn(2);
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitMaxs(1, 2);
      methodWriter0.visitInsn(1);
      methodWriter0.visitIincInsn(3386, 1);
      Attribute attribute0 = new Attribute("4$r])!ef[g}+");
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", (String[]) null, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitIincInsn((-4258), 1);
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      methodWriter0.visitTypeInsn(2, "");
      methodWriter0.getSize();
      methodWriter0.visitFrame((-1773), 40, (Object[]) null, (-1889), (Object[]) null);
      methodWriter0.getSize();
      methodWriter0.visitMaxs((-4258), 2);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      classWriter0.newClass("9");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "il7-j9eA:)bqg)^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", ".s.IFJDCS", stringArray0, true, true);
      methodWriter0.visitFrame(1, 203, stringArray0, 1048575, stringArray0);
      methodWriter0.visitInsn(12);
      int int0 = methodWriter0.getSize();
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 143, "4$r])!ef[g}+", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      methodWriter0.visitIntInsn(1, 2);
      methodWriter0.visitVarInsn(168, 2);
      methodWriter0.visitMaxs(3333, 3333);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = null;
      ClassWriter classWriter0 = new ClassWriter((-414));
      int int0 = 2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "awZq)'", "awZq)'", "\"}?TC*3ucg/+'*X^L", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-4258), (-4258));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4258
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitIincInsn(49, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "sJY{`lWJ7'fRJ;\"", "\"pi4,sC):?)c'T8", ">kcB6=#I\"aO9i", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.BASE;
      assertEquals(16777216, int0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(28, int1);
      assertFalse(int1 == int0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitLineNumber(1, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(2, (-415));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Synthetic", "sJY{`lWJ7'fRJ;\"", "Synthetic", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute((String) null);
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "RuntimeInvisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-3694), 2, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable((String) null, "sJY{`lWJ7'fRJ;\"", (String) null, label0, label0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ByteVector@b
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3338);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3338, "4$r])!ef[g}+", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(3338);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFrame(2, 1024, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3309);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3309, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Object[] objectArray0 = new Object[0];
      methodWriter0.visitFrame(3309, 2270, objectArray0, (-2047), objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3338);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3529, "4$r])!ef[gt}", "4$r])!ef[gt}", "4$r])!ef[gt}", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitIntInsn(2, 3529);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 1018, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-417));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-417), "2\"4,s):?)c'T8", "2\"4,s):?)c'T8", ">kcB6=#I\"a\"^ki", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(170, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.line = 170;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn((-417), (-572), label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newClass("9");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, int0);
      
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "il7-j9eA:)bqg)^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", ".s.IFJDCS", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertSame(label0, label1);
      assertSame(label0, label2);
      assertSame(label1, label2);
      assertSame(label1, label0);
      assertSame(label2, label0);
      assertSame(label2, label1);
      assertNotNull(label2);
      
      Object[] objectArray0 = new Object[0];
      methodWriter0.visitFrame(2923, 2524, stringArray0, 256, objectArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(16777216, 4096, (Object[]) null, 1527, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label2;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label0, label2);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put11(2923, 1527);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(64, int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "}nj@|h~X$S@!Z", (String) null, (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitFrame(3543, 3942, (Object[]) null, (-2049870752), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitVarInsn(2, (-2598));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("sJY{`lWJ7'fRJ;\"", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter1.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertSame(byteVector0, byteVector1);
      
      methodWriter0.visitLdcInsn(" 2%@9DALvy");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newClass("a9");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "il7-j9eA:)bqg)^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", "a9", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(3333, 3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitIntInsn(2, (-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("a9");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(186, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", "3soWvxn");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-1956097742));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1956097742
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(2, 1311, (Object[]) null, (-781), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(172, (-73));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1311, (-781), (Object[]) null, 17, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(172, 2361);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn((-1384), (-1390));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(101, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 21, "s8wJY{`lWJ7'fRJ;\"", "s8wJY{`lWJ7'fRJ;\"", "s8wJY{`lWJ7'fRJ;\"", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.classReaderOffset = (-1390);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter1.visitTypeInsn(21, "s8wJY{`lWJ7'fRJ;\"");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, int0);
      assertSame(methodWriter1, methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, int1);
      assertTrue(int1 == int0);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitInsn(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-414));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2864), "t,#K@>Uvp71Y", "", "Synthetic", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("Synthetic");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      int int0 = classWriter0.newMethod("L", "Synthetic", "t,#K@>Uvp71Y", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, int0);
      
      methodWriter0.visitFrame(1, (-3413), (Object[]) null, 0, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-2864), "", "-y7>q,gug{K:[\"{L", "-y7>q,gug{K:[\"{L");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1048575, "}nj@|h~X$S@!Z", "4$r])!ef[g}+", "p>d=S^79Jz", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(1048575, "4$r])!ef[g}+", "}nj@|h~X$S@!Z", "}nj@|h~X$S@!Z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(3333, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(3, 4502, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(3, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "", "", "", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-1889), "", "", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitMaxs((-1889), (-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = 1048582;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1048582, "}nj@|h~X$S@!Z", "@Bu+[^J?zZ++=]n", "}nj@|h~X$S@!Z", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("@Bu+[^J?zZ++=]n");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[1] = (Object) classWriter0;
      objectArray0[2] = (Object) classWriter0;
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      objectArray0[3] = object1;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, objectArray0, 1048582, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(1, "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "4$r])!ef[g}+", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(1, "FpFhgSU=$0+.", "4$r])!ef[g}+", "FpFhgSU=$0+.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = label0.next;
      assertNull(label1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1067), "jfXCgFc", "p&j@ve9j&)Z$JO?", "jEu`#:0yL", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("p&j@ve9j&)Z$JO?", (-1773));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMethodInsn(185, "4$r])!ef[g}+", "Signature", "4$r])!ef[g}+");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(762, "4$r])!ef[g}+", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-417));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-417), "2\"4,s):?)c'T8", "2\"4,s):?)c'T8", ">kcB6=#I\"a\"^ki", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitVarInsn(1, 830);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!Hf[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(16777219, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 2, (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3386);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3386, ".(<@", "4$r])!ef[g}+", ".(<@", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3386);
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber(3386, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-417));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-417), "2\"4,s):?)c'T8", "2\"4,s):?)c'T8", ">=cB6=#I\"a\"^ki", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(170, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(51, int0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 3312;
      ClassWriter classWriter0 = new ClassWriter(3312);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = null;
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 21, "sJY{`lWJ7'fRJ;\"", "sJY{`lWJ7'fRJ;\"", "sJY{`lWJ7'fRJ;\"", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      String string0 = "p>d=S^79Jz";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "sJY{`lWJ7'fRJ;\"", "4$r])!ef[g}+", "p>d=S^79Jz", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      
      int int1 = (-1390);
      methodWriter1.classReaderOffset = (-1390);
      int int2 = 3;
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2768);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(170, 170);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(1, (-1862628309));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-1862628309), (-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3336);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3336, "Sgature", "4$r])!ef[g}+", "Sgature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ClassWriter classWriter1 = new ClassWriter(3336);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      methodWriter0.visitInsn(178);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newFieldItem("Signature", "Deprecated", "^[KpR*7:3&f#d");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitIntInsn(17, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(3333, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3333
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-414));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",!3\"?+wl)%3d3*1", "CvTe", "p>d=S^79Jz", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-4230), "p>d=S^79Jz", "p>d=S^79Jz", "p>d=S^79Jz");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertSame(label0, label1);
      assertSame(label0, label2);
      assertSame(label1, label0);
      assertSame(label1, label2);
      assertSame(label2, label0);
      assertSame(label2, label1);
      assertNotNull(label2);
      
      methodWriter0.visitFrame((-414), 186, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(3, 3, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3386);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3386, ".(<@", "4$r])!ef[g}+", ".(<@", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3386);
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(152, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Integer integer0 = new Integer(152);
      assertEquals(152, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ClassWriter classWriter1 = new ClassWriter((-72));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitTypeInsn(24, "EnclosingMethod");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitInsn(191);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation(")V", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertNotNull(annotationVisitor0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3386);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3386, ".(<@", "4$r])!ef[g}+", ".(<@", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3386);
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("4$r])!ef[g}+", "4$r])!ef[g}+", "4$r])!ef[g}+", label0, label0, 3386);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3309);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3309, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      methodWriter0.visitLdcInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("Signature", "Code", "Signature", label0, label0, (-1801));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[4];
      label0.position = 1;
      intArray0[3] = 2;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "il7-j9eA:)bqg)^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFieldInsn(119, (String) null, "StackMapTable", ".k}9qBc,=@{O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "sJY{`lWJ7'fRJ;\"", "\"pi4,sC):?)c'T8", ">kcB6=#I\"aO9i", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(28, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = (-462);
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Frame.BASE;
      assertEquals(16777216, int1);
      assertFalse(int1 == int0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(34, int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      Item item0 = classWriter0.newFloat(28);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitLineNumber(1, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "}nj?@|h~X$S@!Z";
      String string1 = "u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4395, "Synthetic", "Synthetic", "u", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newMethod("u", "Qg#-", "<init>", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(7, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-1), (Object[]) null, 7, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.version = 1550;
      methodWriter0.visitMethodInsn(116, "FgejF>9vJs", "m0''_&EU", "4$r])!ef[g}+");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(83, "Synthetic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(187, 116, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(2949, "&bE2", "0yK.LpECf<e_", "rBP 78b?m+Q+|5x7");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1706, 116, (Object[]) null, 2949, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(65, int0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newFieldItem("Signature", "Deprecated", "^[KpR*7:3&f#d");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3333);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      methodWriter0.visitLocalVariable("Deprecated", "Deprecated", "^[KpR*7:3&f#d", label0, label0, 3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      int int0 = classWriter0.newField("Signature", "LocalVaria%leTable", "Signature");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(10, int0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      Integer integer0 = new Integer(557);
      assertEquals(557, (int)integer0);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(integer0.equals((Object)int0));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter0.visitTypeInsn(3333, "Deprecated");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "p>d=S^79Jz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "p>d=S^79Jz", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string1 = "Fp\\FhgSU=$0+.";
      int int0 = 179;
      methodWriter0.visitFieldInsn(179, "xM*^hlx-#`~&2 CcHb)", "sHuRQH,\"|LI5", "FpFhgSU=$0+.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, (Object[]) null, (-415), (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2069));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "MkQ?", "MkQ?", "", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("yh?S]Om^Tu", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitParameterAnnotation(2286, "Ljava/lang/Synthetic;", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3326);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      int[] intArray0 = new int[4];
      String[] stringArray0 = new String[6];
      stringArray0[0] = "/`94z#l[LNsDb3>";
      stringArray0[1] = "/`94z#l[LNsDb3>";
      stringArray0[2] = "/`94z#l[LNsDb3>";
      stringArray0[3] = "/`94z#l[LNsDb3>";
      stringArray0[4] = "3;z ;6w[$Jpv";
      stringArray0[5] = "/`94z#l[LNsDb3>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2880, "3;z ;6w[$Jpv", "/`94z#l[LNsDb3>", "a-`O&$", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte) (-41);
      boolean boolean0 = label0.resolve(methodWriter0, 2, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)66, (byte)125, (byte)26, (byte) (-41)}, byteArray0);
      
      intArray0[1] = 1;
      label0.position = 1;
      intArray0[3] = 1;
      intArray0[3] = 2;
      label0.addToSubroutine(2, 2);
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "il7-j9eA:)bqg)m";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "il7-j9eA:)bqg)m", "il7-j9eA:)bqg)m", ".s.IFJDCS", stringArray1, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(1, (-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(methodWriter1, methodWriter0);
      assertArrayEquals(new int[] {0, 1, 0, 2}, intArray0);
      
      methodWriter1.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(2, (String) null, (String) null, "il7-j9eA:)bqg)m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3323);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3323, "}AfHK{A@J>c8FtR", "4$r])!ef[g}+", "}AfHK{A@J>c8FtR", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newFieldItem("}AfHK{A@J>c8FtR", "4$r])!ef[g}+", "^[KpR*7:3&fK=#d");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3323);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = label0.successors;
      assertNull(edge1);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(3323, "7,l<Q$y$U+i:4v%]l", "^[KpR*7:3&fK=#d", "7,l<Q$y$U+i:4v%]l");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(3323, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-439));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("}nj@|h~X$S@!Z");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12((-439), 1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector1.putInt(83);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      intArray0[3] = 2;
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".s.IFJDCS";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "il7-j9eA:)bqg)^", "il7-j9eA:)bqg)^", ".s.IFJDCS", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitFrame(186, (-2011), stringArray0, 682, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable(".s.IFJDCS", "MkQ?", "E|=;PEjo_I1`13", label0, label0, (-2049));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 1, 2}, intArray0);
      
      int[] intArray1 = new int[8];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = (-2049);
      intArray1[1] = 186;
      classWriter0.visitInnerClass("}Desm\"Yqe!B~FMK7", "*v>_EF}", "|H+]\"A3", (-2011));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      intArray1[2] = (-2049);
      intArray1[3] = 3333;
      intArray1[4] = 2;
      intArray1[5] = 1;
      intArray1[6] = 682;
      intArray1[7] = 682;
      MethodWriter.getNewOffset((int[]) null, intArray1, label0);
      assertFalse(intArray1.equals((Object)intArray0));
      assertNotSame(intArray1, intArray0);
      assertArrayEquals(new int[] {(-2049), 186, (-2049), 3333, 2, 1, 682, 682}, intArray1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(16777216, (-2011));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMethodInsn(185, "4$r])!ef[g}+", "Signature", "4$r])!ef[g}+");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(767, "4$r])!ef[g}+", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = (-415);
      ClassWriter classWriter0 = new ClassWriter((-415));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-415), "\"pi4,sC):?)c'T8", "\"pi4,sC):?)c'T8", ">kcB6=#I\"aO9i", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = null;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, ")ug/c5");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, 2768);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = 65;
      methodWriter0.visitVarInsn(170, (-2802));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(">kcB6=#I\"aO9i");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-418));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-418), "4$r])!ef[g}+", "4$r])!ef[g}+", "CSK{:Dc6oQ&", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("CSK{:Dc6oQ&", "MkQ?", "CSK{:Dc6oQ&", label0, label0, (-418));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitLocalVariable("MkQ?", "Vv3`3v*Xh/x", "iDi6w[#eZV**y.CB|", label0, label0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newFieldItem("Signature", "Deprecated", "^[KpR*7:3&f#d");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3333);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "H");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMaxs(3333, 9);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "H", "{Eggu+", "Deprecated");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      methodWriter0.visitMaxs(3333, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3336);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "Signature";
      boolean boolean0 = true;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3336, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newClassItem("Signature");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTypeInsn(187, "n}I>{%P;<K#b.m");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(3336);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3336
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3386);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newMethodItem("L:", "q!lK5O.zEs~ZVT^q_", "=mPWlKKYa>=[r639", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3386, ".(<@", "4$r])!ef[g}+", ".(<@", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.addToSubroutine(1, 3386);
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      ClassWriter classWriter1 = new ClassWriter(184);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      int int0 = classWriter1.newField("Signature", "_bg", "LocalVaria%leTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, int0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitFieldInsn(3333, "_bg", "LocalVariableTable", "Signature");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitTypeInsn(187, "uGU+)+*mq&<[)=`4x$");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitInsn(184);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-61);
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)28;
      // Undeclared exception!
      try { 
        methodWriter1.visitInsn((byte) (-128));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -128
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(22, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMethodInsn(185, "4$r])!ef[g}+", "Signature", "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTypeInsn((-1380), "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1889), "Code", "Code", "Code", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(69, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("baL)#E`d-1;", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("baL)#E`d-1;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 248;
      methodWriter0.visitJumpInsn((-1889), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3336);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3336, "Sgature", "4$r])!ef[g}+", "Sgature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      ClassWriter classWriter1 = new ClassWriter(3336);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      methodWriter1.visitFieldInsn(4, "JSR/RET are not supported with computeFrames option", "Sgature", "JSR/RET are not supported with computeFrames option");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(182, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newNameTypeItem("Synthetic", "^[KpR*7:3&f#d");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitLocalVariable("MkQ?", "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", label0, label0, (-2049));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-418));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Synthetic", "qJC/{`dTJ7'fJRJ;\"", "Synthetic", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Item item0 = classWriter0.newNameTypeItem("Synthetic", "-M'4JdNCW-13t<9/eHq");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter1.visitFrame(2, 3543, (Object[]) null, 3543, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIntInsn(1, 540);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitFieldInsn(1757, "-M'4JdNCW-13t<9/eHq", "qJC/{`dTJ7'fJRJ;\"", "qJC/{`dTJ7'fJRJ;\"");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Object[] objectArray0 = new Object[34];
      objectArray0[0] = (Object) classWriter0;
      objectArray0[1] = (Object) classWriter0;
      objectArray0[2] = (Object) methodWriter0;
      objectArray0[3] = (Object) methodWriter0;
      methodWriter1.visitVarInsn(169, (-1936));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Onm0''9&EU", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      methodWriter2.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter1.visitLdcInsn(integer0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter2.visitInsn(984);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-419));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "qJ/{`dTJ7'fRJ;\"", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 1777);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      methodWriter1.visitFieldInsn(3881, "7,l<Q$y$U+i:4v%]l", "qJ/{`dTJ7'fRJ;\"", "qJ/{`dTJ7'fRJ;\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(3881, (-719));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newFieldItem("Signature", "4$r])!ef[g}+", "^[KpR*7:3&f#d");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3333);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(3333, "7,l<Q$y$U+i:4v%]l", "^[KpR*7:3&f#d", "7,l<Q$y$U+i:4v%]l");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Item item0 = classWriter0.newClassItem("BdJCjg[huq`l!");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 143, "4$r])!ef[g}+", "4$r])!ef[g}+", "4$r])!ef[g}+", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("4$r])!ef[g}+", "Ljava/lang/Synthetic;", "MkQ?", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      Integer integer0 = new Integer(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(73, int0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3336);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3336, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      methodWriter0.visitTypeInsn(1, "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotNull(label2);
      
      Label label3 = new Label();
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label2));
      assertNotNull(label3);
      
      methodWriter0.visitLocalVariable("Ljava/lang/Synthetic;", "4$r])!ef[g}+", ";Q}", label2, label3, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label1.equals((Object)label3));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label3));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label2));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label1, label3);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertNotSame(label2, label0);
      assertNotSame(label2, label3);
      assertSame(label2, label1);
      assertNotSame(label3, label0);
      assertNotSame(label3, label1);
      assertNotSame(label3, label2);
      
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter1.visitJumpInsn(167, label3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label2));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(label3, label0);
      assertNotSame(label3, label1);
      assertNotSame(label3, label2);
      
      methodWriter0.visitLineNumber(3336, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label1.equals((Object)label3));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label1, label3);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "Signature", "4$r])!ef[g}+", "Signature", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K!oC(B");
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMethodInsn(185, "4$r])!ef[g}+", "Signature", "4$r])!ef[g}+");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(24, (-649));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Signature", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(185, "4$r])!ef[g}+", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3333, "}AfHK{A@J>c8FtR", "4$r])!ef[g}+", "}AfHK{A@J>c8FtR", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.version = 3333;
      Item item0 = classWriter0.newFieldItem("}AfHK{A@J>c8FtR", "4$r])!ef[g}+", "^[KpR*7:3&f#d");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1, 3333);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, (Label) null, "4$r])!ef[g}+");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(3333, "7,l<Q$y$U+i:4v%]l", "^[KpR*7:3&f#d", "7,l<Q$y$U+i:4v%]l");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(186, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(55, 5);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(3333, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3333
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3333);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1048542, "}nj@|h~X$S@!Z", "4$r])!e4@f[g}+", "4$r])!e4@f[g}+", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(1048542, "4$r])!e4@f[g}+", "}nj@|h~X$S@!Z", "}nj@|h~X$S@!Z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(3333, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(1048542, "4$r])!e4@f[g}+", "}nj@|h~X$S@!Z", "4$r])!e4@f[g}+");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visit(856, 1048542, "LocalVariableTypeTable", "RbW\"Cyd!,a~^8Q[t", "RbW\"Cyd!,a~^8Q[t", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newUTF8("}nj@|h~X$S@!Z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      int int1 = classWriter0.newConst("IQOE=;mxbjHtz 86");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(16, int1);
      assertFalse(int1 == int0);
      
      int int2 = Frame.SHORT;
      assertEquals(16777228, int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      methodWriter0.visitMultiANewArrayInsn("qJ/{`dTJ7'fRJ;\"", 16777228);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      methodWriter2.visitFieldInsn(1048542, "k-Kk}p?", "Exceptions", "Code");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      
      Integer integer0 = Integer.getInteger("L", 3);
      assertEquals(3, (int)integer0);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int2));
      assertNotNull(integer0);
      
      int int3 = classWriter0.newField(",Yx%G h|f{N`~%", "Code", ",Yx%G h|f{N`~%");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(27, int3);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }
}
