/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:59:08 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeFloat0, 83, 83, byteArray0, byteOrder0, 83);
      String string0 = tiffField0.toString();
      assertEquals("83 (0x53: Unknown Tag): 0.0 (83 Float)", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(83, tiffField0.getSortHint());
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals(332, tiffField0.getBytesLength());
      assertEquals(83, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[99];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1645, 1645, fieldTypeDouble0, 1645, 1645, byteArray0, byteOrder0, 1645);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.toString();
      assertEquals(1645, tiffField0.getSortHint());
      assertEquals(1645, tiffField0.getDirectoryType());
      assertEquals(1645, tiffField0.getOffset());
      assertEquals(13160, tiffField0.getBytesLength());
      assertEquals("1645 (0x66d: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1645 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeByte0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6f4a734c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeFloat0, 83, 83, byteArray0, byteOrder0, 83);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4021, 4021, fieldTypeFloat0, 4021, 4021, byteArray0, byteOrder0, 4021);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4021, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(4021, tiffField0.getTag());
      assertEquals(4021, tiffField0.getSortHint());
      assertEquals(4021L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(85, 85, fieldTypeFloat0, 85, 85, byteArray0, byteOrder0, 85);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)24, (byte)24, fieldTypeLong0, (byte)24, (byte)24, byteArray0, byteOrder0, (byte)24);
      tiffField0.getFieldTypeName();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483646), (-2147483646), fieldTypeFloat0, (-2147483646), (-2147483646), byteArray0, byteOrder0, (-2147483646));
      tiffField0.dump();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertNull(tiffElement0);
      assertEquals((-2147483646L), tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-2147483646), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 0);
      assertEquals(0, tiffField0.getBytesLength());
      
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: Unknown Tag):  (0 Float)", string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(291, 291, fieldTypeFloat0, 291, 291, byteArray0, byteOrder0, 291);
      tiffField0.getTagName();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeFloat0, 80, 80, byteArray0, byteOrder0, 80);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@8313e8c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((byte)45, (byte)45, fieldTypeByte0, (byte)45, (byte)45, byteArray0, byteOrder0, (byte)45);
      String string0 = tiffField0.toString();
      assertEquals(45, tiffField0.getOffset());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals("45 (0x2d: Unknown Tag): 0, 0, 0, 0 (45 Undefined)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(85, 85, fieldTypeFloat0, 85, 85, byteArray0, byteOrder0, 85);
      tiffField0.dump();
      assertEquals(85L, tiffField0.getCount());
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getTag());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1207, 1207, fieldTypeFloat0, 1207, 1207, byteArray0, byteOrder0, 1207);
      int int0 = tiffField0.getSortHint();
      assertEquals(1207, int0);
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals(1207, tiffField0.getTag());
      assertEquals(1207, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-748), 85, fieldTypeRational0, 85, (-748), byteArray0, byteOrder0, 85);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals((-748), tiffField0.getTag());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(85L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-748), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(85, 85, fieldTypeFloat0, 85, 85, byteArray0, byteOrder0, 85);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@6971fe91 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-748), 85, fieldTypeRational0, 85, (-748), byteArray0, byteOrder0, 85);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-112), (byte) (-112), fieldTypeRational0, 407480L, (-4066L), byteArray0, byteOrder0, (byte) (-112));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      long long0 = tiffField0.getCount();
      assertEquals((-4066), tiffField0.getOffset());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-112), tiffField0.getTag());
      assertEquals((-112), tiffField0.getDirectoryType());
      assertEquals(407480L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4021, 4021, fieldTypeFloat0, 4021, 4021, byteArray0, byteOrder0, 4021);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2e42ae3f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(85, 85, fieldTypeFloat0, 85, 85, byteArray0, byteOrder0, 85);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(85, tiffField0.getTag());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(85, int0);
      assertEquals(85, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1207, 1207, fieldTypeFloat0, 1207, 1207, byteArray0, byteOrder0, 1207);
      String string0 = tiffField0.toString();
      assertEquals("1207 (0x4b7: Unknown Tag): 0.0, 0.0 (1207 Float)", string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1207, 1207);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1207, tiffField0.getOffset());
      assertNotNull(string1);
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals(1207, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)115, (-1908874352), fieldTypeLong0, 679, (byte)115, byteArray0, byteOrder0, 679);
      tiffField0.getIntValueOrArraySum();
      assertEquals(679, tiffField0.getSortHint());
      assertEquals(115, tiffField0.getOffset());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals(679L, tiffField0.getCount());
      assertEquals(115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      int int0 = Pattern.MULTILINE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeLong0, 8, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x8)", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      int int0 = Byte.BYTES;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[99];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(318, 318, fieldTypeLong0, 318, 318, byteArray0, byteOrder0, 318);
      String string0 = tiffField0.toString();
      assertEquals("318 (0x13e: WhitePoint): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (318 IFD)", string0);
      
      tiffField0.getIntArrayValue();
      assertEquals(318, tiffField0.getSortHint());
      assertEquals(318, tiffField0.getOffset());
      assertEquals(318, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[39];
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, (-1174), fieldTypeShort0, 50784, 72L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(72, tiffField0.getOffset());
      assertEquals((-1174), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50784L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4041, 4041, fieldTypeFloat0, 4041, 4041, byteArray0, byteOrder0, 4041);
      String string0 = tiffField0.toString();
      assertEquals("4041 (0xfc9: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0 (4041 Float)", string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(4041, 4041);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(4041, tiffField0.getOffset());
      assertEquals(4041, tiffField0.getDirectoryType());
      assertEquals(4041, tiffField0.getSortHint());
      assertNull(string1);
      assertEquals(4041, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(903, 903, fieldTypeRational0, 903, 695L, byteArray0, byteOrder0, 903);
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("903 (0x387: Unknown Tag): ", string0);
      
      tiffField0.getDoubleArrayValue();
      tiffField0.getByteOrder();
      assertEquals(903, tiffField0.getDirectoryType());
      assertEquals(695, tiffField0.getOffset());
      assertEquals(903, tiffField0.getSortHint());
      assertEquals(903L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[238];
      int int0 = Pattern.COMMENTS;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1097, 398, fieldTypeRational0, 348L, (-11684L), byteArray0, byteOrder0, 32898);
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(4030, 4030, fieldTypeFloat0, 1L, 4030, byteArray0, (ByteOrder) null, 4030);
      tiffField0.getDoubleArrayValue();
      tiffField0.getByteArrayValue();
      assertEquals(4030, tiffField0.getDirectoryType());
      assertEquals(4030, tiffField0.getTag());
      assertEquals(4030, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4030, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4072, 1, fieldTypeFloat0, 1, (-2318L), byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-2318), tiffField0.getOffset());
      assertEquals(4072, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[43];
      int int0 = Double.MIN_EXPONENT;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1022), (-1022), fieldTypeShort0, 2010L, (-1022), byteArray0, byteOrder0, (-1022));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1022), tiffField0.getOffset());
      assertEquals(0, int1);
      assertEquals((-1022), tiffField0.getTag());
      assertEquals((-1022), tiffField0.getSortHint());
      assertEquals((-1022), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[98];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, (-685));
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (65535 Short)", string0);
      
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-685), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeAscii0, (byte)115, (byte)115, byteArray0, byteOrder1, (byte)115);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      String string1 = tiffField0.getStringValue();
      assertEquals(115, tiffField0.getTag());
      assertNotNull(string1);
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4005, 4005, fieldTypeFloat0, 1L, 4005, byteArray0, byteOrder0, 4890);
      tiffField0.getIntArrayValue();
      assertEquals(4005, tiffField0.getTag());
      assertEquals(4890, tiffField0.getSortHint());
      assertEquals(4005, tiffField0.getDirectoryType());
      assertEquals(4005, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1331, 87, fieldTypeByte0, 1331, 87, byteArray0, byteOrder0, 1331);
      String string0 = tiffField0.getValueDescription();
      assertEquals(87, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1331, tiffField0.getTag());
      assertEquals(1331, tiffField0.getSortHint());
      assertEquals(87, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      int int0 = Double.SIZE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeAscii0, 64, 83, byteArray0, byteOrder0, 64);
      tiffField0.toString();
      assertEquals(83, tiffField0.getOffset());
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals(83, tiffField0.getTag());
      assertEquals(64, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[394];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(4031, 4031, fieldTypeShort0, 4031, 4031, byteArray0, byteOrder0, 4031);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4031, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4031, tiffField0.getTag());
      assertEquals(4031, tiffField0.getSortHint());
      assertEquals(4031, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[238];
      int int0 = Pattern.UNICODE_CASE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(64, 48, fieldTypeLong0, 64, 64, byteArray0, byteOrder0, (-2568));
      String string0 = tiffField0.toString();
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals("64 (0x40: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59) (64 Long)", string0);
      assertEquals(64, tiffField0.getOffset());
      assertEquals((-2568), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[373];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(4040, 4040, fieldTypeFloat0, 4040, 16084L, byteArray0, byteOrder0, 4040);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4040, tiffField0.getSortHint());
      assertEquals(4040, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4040, tiffField0.getTag());
      assertEquals(16084, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[427];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4028, 4028, fieldTypeDouble0, 4028, 4028, byteArray0, byteOrder0, 4028);
      tiffField0.dump();
      String string0 = tiffField0.toString();
      assertEquals("4028 (0xfbc: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (4028 Double)", string0);
      
      tiffField0.getValueDescription();
      assertEquals(4028, tiffField0.getOffset());
      assertEquals(4028, tiffField0.getDirectoryType());
      assertEquals(4028, tiffField0.getSortHint());
  }
}
