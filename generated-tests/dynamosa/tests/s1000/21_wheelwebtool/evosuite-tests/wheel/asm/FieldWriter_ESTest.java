/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 02 20:49:14 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65532);
      classWriter0.index = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "fFSpqVY`>", "fFSpqVY`>", "fFSpqVY`>", "fFSpqVY`>");
      ByteVector byteVector0 = new ByteVector(65532);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      classWriter0.index = (-4458);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "InnerClasses", "InnerClasses", "InnerClasses", "InnerClasses");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 724, "", "RfFSpqVY`>", "", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 724, "Lg", "RfFSpqVY`>", "Lg", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3762, "", "ConstantValue", "s2Ux*B-oe)2", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "1MjAT", "1MjAT", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("1MjAT");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(124);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "!tc%);1^|wi!k[", "!tc%);1^|wi!k[", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 124;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1340));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 724, "Lg", "RfFSpqVY`>", "Lg", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[8];
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-708), "RfFSpqVY`>", "org.apache.commons.io.filefilter.PrefixFileFilter", "RfFSpqVY`>", "RfFSpqVY`>");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "1MjAT", "1MjAT", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("1MjAT");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "1MjAT", "1MjAT", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("1MjAT", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1016, "wheel.asm ClasRea#er", "MwO.2", (String) null, "MwO.2");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("^R4LN5G!&Q\"QFm", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "";
      stringArray0[4] = ";LG";
      stringArray0[5] = "Deprecated";
      stringArray0[6] = "";
      stringArray0[7] = "+8]@t\"";
      classWriter0.visit((-11), 7, "+8]@t\"", ";LG", "Deprecated", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "Deprecated", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "Deprecated", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 170, "yw**1hOOM>;Cnw}88)o", "yw**1hOOM>;Cnw}88)o", "yw**1hOOM>;Cnw}88)o", "yw**1hOOM>;Cnw}88)o");
      Attribute attribute0 = new Attribute("1J6Q#x");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "1MjAT", "1MjAT", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("1MjAT", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "";
      stringArray0[4] = ";LG";
      stringArray0[5] = "Deprecated";
      stringArray0[6] = "";
      stringArray0[7] = "+8]@t\"";
      classWriter0.visit((-11), 7, "+8]@t\"", ";LG", "Deprecated", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "Deprecated", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1016, "wheel.asm ClasRea#er", "MwO.2", (String) null, "MwO.2");
      fieldWriter0.visitAnnotation("^R4LN5G!&Q\"QFm", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1304), " S%'{]{&_%#", "", "RfFSpqVY`>", (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 119, "", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1016);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1304), " S%'{]{&_%#", "", "RfFSpqVY`>", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "Deprecated", "", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
