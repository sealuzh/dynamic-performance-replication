/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:15:34 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)6;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((short)51, 806, fieldTypeShort0, 2253L, (-2955L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2955), tiffField0.getOffset());
      assertEquals(1536, int0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getTag());
      assertEquals(806, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)37;
      byteArray0[4] = (byte)37;
      TiffField tiffField0 = new TiffField((byte)37, 50, fieldTypeRational0, 50, 1975L, byteArray0, byteOrder0, (-2146760101));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(37, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2146760101), tiffField0.getSortHint());
      assertEquals(1975, tiffField0.getOffset());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)37;
      TiffField tiffField0 = new TiffField((byte)37, 50, fieldTypeRational0, 50, 1975L, byteArray0, byteOrder0, (-2146760101));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-2146760101), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getTag());
      assertEquals(1975, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-98), (byte)1, fieldTypeLong0, (byte)1, 1135L, byteArray0, byteOrder0, 164);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1135, tiffField0.getOffset());
      assertEquals(164, tiffField0.getSortHint());
      assertEquals((-98), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-3320), fieldTypeDouble0, (-3320), 28, byteArray0, byteOrder0, 28);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3320), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getOffset());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(448, 320, fieldTypeByte0, 448, 320, byteArray0, byteOrder0, 963);
      String string0 = tiffField0.getValueDescription();
      assertEquals(320, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(448, tiffField0.getTag());
      assertEquals(963, tiffField0.getSortHint());
      assertEquals(320, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(324, 304, fieldTypeDouble0, 3014L, (-2147483648L), byteArray0, byteOrder0, 304);
      tiffField0.getValue();
      assertEquals(324, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(304, tiffField0.getDirectoryType());
      assertEquals(304, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(156, 0, fieldTypeLong0.FLOAT, 895L, (-1L), byteArray0, byteOrder0, (-1584));
      tiffField0.getTagInfo();
      assertEquals(156, tiffField0.getTag());
      assertEquals((-1584), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-98), fieldTypeShort0, 121, (byte)63, byteArray0, byteOrder0, (-2097));
      int int0 = tiffField0.getTag();
      assertEquals((-98), tiffField0.getDirectoryType());
      assertEquals((-2097), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(63, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((short)60, 11, fieldTypeShort0, (byte)63, 0L, byteArray0, byteOrder0, (-2097));
      int int0 = tiffField0.getTag();
      assertEquals((-2097), tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(60, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)63, 77, fieldTypeLong0.ASCII, (byte)1, (byte)63, byteArray0, byteOrder0, (-1020));
      String string0 = tiffField0.getStringValue();
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getTag());
      assertEquals((-1020), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(63, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 2142657842, fieldTypeLong0, (byte)1, 50, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2142657842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1545), (-1545), fieldTypeByte0, (-1545), (-1545), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1545), tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals((-1545), tiffField0.getTag());
      assertEquals((-1545), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-33), 1425, fieldTypeLong0, (-1426L), 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-33), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1425, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(448, 320, fieldTypeByte0, 448, 320, byteArray0, byteOrder0, 963);
      int int0 = tiffField0.getOffset();
      assertEquals(320, int0);
      assertEquals(448, tiffField0.getTag());
      assertEquals(963, tiffField0.getSortHint());
      assertEquals(320, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-1760), fieldTypeLong0, (byte)63, (byte)63, byteArray0, byteOrder0, 1932735283);
      tiffField0.getIntValueOrArraySum();
      assertEquals(63, tiffField0.getOffset());
      assertEquals((-1760), tiffField0.getDirectoryType());
      assertEquals(1932735283, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-7);
      TiffField tiffField0 = new TiffField((-2147483646), (-947), fieldTypeShort0, 1L, (-2147483646), byteArray0, byteOrder0, 3148);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-947), tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-2147483646), tiffField0.getOffset());
      assertEquals(3148, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 31, fieldTypeShort0, 1, 642, byteArray0, byteOrder0, 31);
      tiffField0.getIntValue();
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(642, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1443), (-3069), fieldTypeLong0, 1L, (byte)1, byteArray0, byteOrder0, 50);
      tiffField0.getIntValue();
      assertEquals((-1443), tiffField0.getTag());
      assertEquals((-3069), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-7);
      TiffField tiffField0 = new TiffField((-2147483646), (-947), fieldTypeShort0, 1L, (-2147483646), byteArray0, byteOrder0, 3148);
      tiffField0.getIntValue();
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-947), tiffField0.getDirectoryType());
      assertEquals(3148, tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2102, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(207, 207, fieldTypeLong0, 207, 1L, byteArray0, byteOrder0, (byte)72);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(72, tiffField0.getSortHint());
      assertEquals(207, tiffField0.getDirectoryType());
      assertEquals(207, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2994, 2994, fieldTypeAscii0, (-20328L), (-20328L), byteArray0, byteOrder0, 50971);
      tiffField0.getFieldTypeName();
      assertEquals(2994, tiffField0.getTag());
      assertEquals((-20328), tiffField0.getOffset());
      assertEquals(50971, tiffField0.getSortHint());
      assertEquals(2994, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147483646, 2147483646, (FieldType) null, 1L, 1L, byteArray0, byteOrder0, 8);
      tiffField0.getFieldType();
      assertEquals(2147483646, tiffField0.getDirectoryType());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Pk8rofileEmedPoliy");
      TiffField tiffField0 = new TiffField(156, 0, fieldTypeFloat0, 895L, (-1L), byteArray0, byteOrder0, (-1584));
      tiffField0.getFieldType();
      assertEquals((-1584), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(156, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4591), "");
      TiffField tiffField0 = new TiffField((-4591), 4098, fieldTypeFloat0, 39, (-4L), byteArray0, byteOrder0, 4098);
      tiffField0.getFieldType();
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(4098, tiffField0.getSortHint());
      assertEquals((-4591), tiffField0.getTag());
      assertEquals(4098, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(695, 807, fieldTypeRational0.DOUBLE, 1L, 807, byteArray0, byteOrder0, 695);
      tiffField0.getDoubleValue();
      assertEquals(807, tiffField0.getOffset());
      assertEquals(695, tiffField0.getTag());
      assertEquals(807, tiffField0.getDirectoryType());
      assertEquals(695, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-24);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, 1L, (-1), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-225), 50970, fieldTypeByte0, 1L, 1774L, byteArray0, byteOrder0, (byte) (-10));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1774, tiffField0.getOffset());
      assertEquals((-225), tiffField0.getTag());
      assertEquals(50970, tiffField0.getDirectoryType());
      assertEquals((-10), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-477), (byte)0, fieldTypeAscii0, (-1677L), (-2060L), byteArray0, byteOrder0, 675);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2060), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(675, tiffField0.getSortHint());
      assertEquals((-477), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, 0L, 1L, byteArray0, byteOrder0, (byte)38);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2142657842, (-2146206902), fieldTypeRational0, (byte)0, 2142657842, byteArray0, byteOrder0, 4922);
      tiffField0.getCount();
      assertEquals(2142657842, tiffField0.getOffset());
      assertEquals((-2146206902), tiffField0.getDirectoryType());
      assertEquals(2142657842, tiffField0.getTag());
      assertEquals(4922, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, 1L, (-1), byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1L, long0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4861, 4861, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 50968);
      tiffField0.getBytesLength();
      assertEquals(50968, tiffField0.getSortHint());
      assertEquals(4861, tiffField0.getDirectoryType());
      assertEquals(4861, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146224126, 2146224126, fieldTypeLong0, 2146224126, 1074L, byteArray0, byteOrder0, (byte)57);
      tiffField0.getBytesLength();
      assertEquals(2146224126, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(1074, tiffField0.getOffset());
      assertEquals(2146224126, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(34024, (-2146760101), fieldTypeShort0, 4L, 34024, byteArray0, (ByteOrder) null, 2147231566);
      tiffField0.getByteOrder();
      assertEquals((-2146760101), tiffField0.getDirectoryType());
      assertEquals(34024, tiffField0.getTag());
      assertEquals(2147231566, tiffField0.getSortHint());
      assertEquals(34024, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3619, 3619, fieldTypeLong0, 3619, 278L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(3619, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3619, tiffField0.getDirectoryType());
      assertEquals(278, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-695), (byte)50, fieldTypeRational0, (byte)37, (byte)40, byteArray0, byteOrder0, (byte)40);
      tiffField0.getByteArrayValue();
      assertEquals(40, tiffField0.getSortHint());
      assertEquals((-695), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3789), (short)75, fieldTypeShort0, 1507, 0L, byteArray0, byteOrder0, (-2329));
      MockFile mockFile0 = new MockFile("Unknown Tag (0xfffff133)", "Unknown Tag (0xfffff133)");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(47L, mockFile0.length());
      assertEquals((-2329), tiffField0.getSortHint());
      assertEquals((-3789), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3597, 3597, fieldTypeRational0, 3597, 3597, (byte[]) null, byteOrder0, 3597);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-114), (byte) (-114), fieldTypeAscii0, (byte) (-114), (byte) (-114), byteArray0, byteOrder0, (byte) (-114));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1720, 1720, fieldTypeRational0, 1720, 1720, (byte[]) null, byteOrder0, 1720);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-4531), (-4531), fieldTypeRational0, (-4531), (-4531), byteArray0, byteOrder0, (-4531));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 30);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-3030), fieldTypeShort0, (-1L), (-3030), byteArray0, byteOrder0, (-3030));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(277, 277, fieldTypeRational0, (-1883L), 277, byteArray0, byteOrder0, 277);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51, 1525, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(151, 151, fieldTypeShort0, 151, 151, (byte[]) null, byteOrder0, 151);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-287), (-287), fieldTypeShort0, (-287), (-287), byteArray0, byteOrder0, (-287));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-580), (-580), fieldTypeRational0, 1L, (-580), byteArray0, byteOrder0, (-580));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 2677L, 2677L, (byte[]) null, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3787), (-3787), fieldTypeRational0, (-3787), (-3787), (byte[]) null, byteOrder0, (-3787));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-772), (-772), fieldTypeRational0, (-772), (-772), byteArray0, byteOrder0, (-772));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1L, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1989), fieldTypeShort0, 28, (-1989), byteArray0, byteOrder0, (-1989));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, (byte[]) null, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3655), (-3655), fieldTypeShort0, (-3655), (-3655), byteArray0, byteOrder0, (-3655));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-3015), (-3015), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 68);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)57, (byte)57, fieldTypeRational0, (byte)57, (byte)57, (byte[]) null, byteOrder0, (byte)57);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147483626, 2147483626, fieldTypeShort0, 2147483626, 2147483626, byteArray0, byteOrder0, 2147483626);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, (-1349L), (-5017L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65, 65, fieldTypeShort0, 65, 65, (byte[]) null, byteOrder0, 65);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1933), (-1933), fieldTypeRational0, (-1933), (-1933), byteArray0, byteOrder0, (-1933));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-5966), 26, fieldTypeRational0, 1L, 26, byteArray0, byteOrder0, 26);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3597, 3597, fieldTypeLong0, 3597, 3597, (byte[]) null, byteOrder0, 3597);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-741), (-741), fieldTypeShort0, (-741), (-741), byteArray0, byteOrder0, (-741));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (-1L), 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147231566, 2147231566, fieldTypeRational0, (-25768L), (-4638L), byteArray0, byteOrder0, 2147231566);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, " ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(22, 183, fieldTypeRational0, 1L, 183, byteArray0, byteOrder0, 183);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(22);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(33405, 1347, fieldTypeRational0.SBYTE, (-610L), 33405, byteArray0, byteOrder0, 34675);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1084, 536, fieldTypeRational0, 1084, 1084, (byte[]) null, byteOrder0, 2066);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[264];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-2438), (-1171), fieldTypeByte0, (-1171), (-2147483648L), byteArray0, byteOrder0, (-1171));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2697, 0, fieldTypeAscii0, 2697, (-1016L), byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(269, "ColorimetricReference");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeAscii0, (-1677L), 269, byteArray0, byteOrder0, 269);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(269, tiffField0.getOffset());
      assertEquals(269, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(269, tiffField0.getDirectoryType());
      assertEquals(269, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2697, (byte)13, fieldTypeAscii0, (byte)13, (byte)69, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(69, tiffField0.getOffset());
      assertEquals(2697, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-98), (byte)1, fieldTypeLong0, (byte)1, 1135L, byteArray0, byteOrder0, 164);
      tiffField0.getByteOrder();
      assertEquals((-98), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(164, tiffField0.getSortHint());
      assertEquals(1135, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, (byte[]) null, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32844, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(32844, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2994, 2994, fieldTypeAscii0, (-20328L), (-20328L), byteArray0, byteOrder0, 50971);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2994, int0);
      assertEquals(50971, tiffField0.getSortHint());
      assertEquals((-20328), tiffField0.getOffset());
      assertEquals(2994, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3600, 3600, fieldTypeRational0, 3600, 3600, byteArray0, byteOrder0, 3600);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1358, 65535, (FieldType) null, 1358, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, 1562, fieldTypeLong0, 1425, (-1L), byteArray0, byteOrder0, 33421);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), int0);
      assertEquals(1562, tiffField0.getDirectoryType());
      assertEquals(33421, tiffField0.getTag());
      assertEquals(33421, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(324, 304, fieldTypeDouble0, 3014L, (-2147483648L), byteArray0, byteOrder0, 304);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tagInfo0.tag);
      assertEquals(324, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(304, tiffField0.getSortHint());
      assertEquals(304, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1431655764), (-2146760101), (FieldType) null, 4L, 2425, byteArray0, byteOrder0, 1527);
      int int0 = tiffField0.getTag();
      assertEquals(1527, tiffField0.getSortHint());
      assertEquals((-2146760101), tiffField0.getDirectoryType());
      assertEquals(2425, tiffField0.getOffset());
      assertEquals((-1431655764), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(515, 0, fieldTypeAscii0, (-1016L), (-122L), byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals(515, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-122), tiffField0.getOffset());
      assertEquals((-1016L), long0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-695), (byte)50, fieldTypeRational0, (byte)37, (byte)40, byteArray0, byteOrder0, (byte)40);
      tiffField0.getBytesLength();
      assertEquals((-695), tiffField0.getTag());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeShort0, 34, 34, byteArray0, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1351, 1351, fieldTypeShort0.DOUBLE, 1351, 1351, byteArray0, byteOrder0, 1351);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@751f10b4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(3588, 3588, fieldTypeRational0, 3588, 3588, byteArray0, byteOrder0, 3588);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[325];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(48406, 48406, fieldTypeByte0, 48406, 48406, byteArray0, byteOrder0, 48406);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6ac3180c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeFloat0, 43, 43, byteArray0, byteOrder0, 43);
      tiffField0.getDoubleArrayValue();
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getTag());
      assertEquals(43L, tiffField0.getCount());
      assertEquals(43, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0.FLOAT, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[201];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeLong0, 68, 68, byteArray0, byteOrder0, 68);
      tiffField0.getDoubleArrayValue();
      assertEquals(68L, tiffField0.getCount());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeShort0, 34, 34, byteArray0, byteOrder0, 34);
      tiffField0.getDoubleArrayValue();
      assertEquals(34L, tiffField0.getCount());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3618, 3618, fieldTypeRational0, 3618, 3618, byteArray0, byteOrder0, 3618);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(3618L, tiffField0.getCount());
      assertEquals(3618, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(3618, tiffField0.getSortHint());
      assertEquals(3618, tiffField0.getTag());
      assertEquals(3618, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[73];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1378, 1378, fieldTypeLong0, 1378, 1378, byteArray0, byteOrder0, 1378);
      tiffField0.getIntArrayValue();
      assertEquals(1378L, tiffField0.getCount());
      assertEquals(1378, tiffField0.getSortHint());
      assertEquals(1378, tiffField0.getDirectoryType());
      assertEquals(1378, tiffField0.getTag());
      assertEquals(1378, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483646), (-2147483646), fieldTypeShort0, (-2147483646), (-2147483646), byteArray0, byteOrder0, (-2147483646));
      assertEquals(4, tiffField0.getBytesLength());
      
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2147483646), tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-2147483646L), tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, 18, byteArray0, byteOrder0, 18);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3600, 3600, fieldTypeRational0, 3600, 3600, byteArray0, byteOrder0, 3600);
      tiffField0.getIntArrayValue();
      assertEquals(3600, tiffField0.getOffset());
      assertEquals(28800, tiffField0.getBytesLength());
      assertEquals(3600, tiffField0.getDirectoryType());
      assertEquals(3600, tiffField0.getSortHint());
      assertEquals(3600L, tiffField0.getCount());
      assertEquals(3600, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeDouble0, 39, 39, byteArray0, byteOrder0, 39);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@254e413c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeAscii0, 20, (-1666L), byteArray0, byteOrder0, 20);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1666), tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeDouble0, 39, 39, byteArray0, byteOrder0, 39);
      String string0 = tiffField0.getTagName();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x27)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[338];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(264, 264, fieldTypeDouble0, 264, 264, byteArray0, byteOrder0, 264);
      String string0 = tiffField0.getTagName();
      assertEquals("CellWidth", string0);
      assertEquals(264, tiffField0.getOffset());
      assertEquals(264, tiffField0.getDirectoryType());
      assertEquals(264, tiffField0.getSortHint());
      assertEquals(264, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1351, 1351, fieldTypeFloat0, 1351, 1351, byteArray0, byteOrder0, 1351);
      String string0 = tiffField0.toString();
      assertEquals("1351 (0x547: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1351 Float)", string0);
      assertEquals(1351, tiffField0.getOffset());
      assertEquals(1351, tiffField0.getSortHint());
      assertEquals(1351, tiffField0.getDirectoryType());
      assertEquals(5404, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1379, 1379, fieldTypeByte0, 63, 63, byteArray0, byteOrder0, 1379);
      String string0 = tiffField0.toString();
      assertEquals("1379 (0x563: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (63) (63 Byte)", string0);
      assertEquals(63, tiffField0.getOffset());
      assertEquals(1379, tiffField0.getSortHint());
      assertEquals(1379, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[248];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeFloat0, 68, 68, byteArray0, byteOrder0, 68);
      String string0 = tiffField0.toString();
      assertEquals(68, tiffField0.getOffset());
      assertEquals("68 (0x44: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (62) (68 Float)", string0);
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[426];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeDouble0, 56, 56, byteArray0, byteOrder0, (-305));
      String string0 = tiffField0.toString();
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getOffset());
      assertEquals((-305), tiffField0.getSortHint());
      assertEquals("56 (0x38: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (56 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1394, 1394, fieldTypeLong0, 255L, 1394, byteArray0, byteOrder0, 1394);
      tiffField0.dump();
      assertEquals(1394, tiffField0.getTag());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(1394, tiffField0.getDirectoryType());
      assertEquals(1394, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(1394, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[73];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3605, 3605, fieldTypeLong0, 3605, 3605, byteArray0, byteOrder0, 3605);
      String string0 = tiffField0.toString();
      assertEquals("3605 (0xe15: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (3605 SLong)", string0);
      assertEquals(3605, tiffField0.getDirectoryType());
      assertEquals(14420, tiffField0.getBytesLength());
      assertEquals(3605, tiffField0.getOffset());
      assertEquals(3605, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[156];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeShort0, 288, 288, byteArray0, byteOrder0, (-1049));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-1049), tiffField0.getSortHint());
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(288L, tiffField0.getCount());
      assertEquals(288, tiffField0.getTag());
      assertEquals(576, tiffField0.getBytesLength());
      assertEquals(288, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeAscii0, 1332, 35, byteArray0, byteOrder0, 35);
      tiffField0.toString();
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getOffset());
      assertEquals(35, tiffField0.getTag());
      assertEquals(1332, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(1332L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3597, 3597, fieldTypeRational0.ASCII, 3597, 3597, byteArray0, byteOrder0, 3597);
      tiffField0.toString();
      assertEquals(3597, tiffField0.getOffset());
      assertEquals(3597, tiffField0.getDirectoryType());
      assertEquals(3597, tiffField0.getBytesLength());
      assertEquals(3597, tiffField0.getTag());
      assertEquals(3597, tiffField0.getSortHint());
      assertEquals(3597L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5618, (byte)0, fieldTypeLong0, 1L, (byte)56, byteArray0, byteOrder0, (byte)56);
      tiffField0.toString();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(5618, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(56, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeDouble0, 39, 39, byteArray0, byteOrder0, 39);
      String string0 = tiffField0.toString();
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(312, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getOffset());
      assertEquals("39 (0x27: Unknown Tag): 0.0 (39 Double)", string0);
      assertEquals(39, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeRational0, 333, (-116L), byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 1329);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(333, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(333, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-116), tiffField0.getOffset());
      assertEquals(2664, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeRational0, 333, (-121L), byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 1329);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: InkNames, fieldType: SRational", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(333, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-121), tiffField0.getOffset());
      assertEquals(333, tiffField0.getTag());
      assertEquals(2664, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1361, 1361, fieldTypeShort0, 1361, 1361, byteArray0, byteOrder0, 1361);
      tiffField0.getFieldTypeName();
      assertEquals(1361, tiffField0.getDirectoryType());
      assertEquals(2722, tiffField0.getBytesLength());
      assertEquals(1361, tiffField0.getOffset());
      assertEquals(1361, tiffField0.getTag());
      assertEquals(1361, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146206923), (-2146206923), fieldTypeFloat0, (-19L), 2207L, byteArray0, byteOrder0, (-2146206923));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2146206923), tiffField0.getTag());
      assertEquals((-19L), tiffField0.getCount());
      assertEquals((-2146206923), int0);
      assertEquals((-2146206923), tiffField0.getDirectoryType());
      assertEquals(2207, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-85), fieldTypeShort0, 28, (-85), (byte[]) null, byteOrder0, 11);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1, 330, fieldTypeLong0, 1, 3579, byteArray0, byteOrder0, 330);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeDouble0, 39, 39, byteArray0, byteOrder0, 39);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@69a0341b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffElement0.offset);
  }
}
