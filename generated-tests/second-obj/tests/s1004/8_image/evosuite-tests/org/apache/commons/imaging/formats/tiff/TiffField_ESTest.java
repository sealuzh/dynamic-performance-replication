/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:26:21 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)91, (-547), fieldTypeDouble0, (byte)91, (-547), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2359), 45, fieldTypeFloat0, 45, (-2215L), byteArray0, byteOrder0, 45);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1018), (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1018), (-1018), fieldTypeLong0, (-1018), (-1L), byteArray0, byteOrder0, (-1018));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1018), tiffField0.getDirectoryType());
      assertEquals((-1018), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("-1018 (0xfffffc06: Unknown Tag): ", string0);
      assertEquals((-4072), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[93];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37378, 37378, fieldTypeFloat0, (-2670L), (-2670L), byteArray0, byteOrder0, 37378);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      
      int int0 = tiffField0.getTag();
      assertEquals(37378, int0);
      assertEquals((-2670), tiffField0.getOffset());
      assertEquals(37378, tiffField0.getSortHint());
      assertEquals(37378, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)73;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, (byte)73);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(73, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)0;
      TiffField tiffField0 = new TiffField(2766, 2766, fieldTypeByte0, 2766, 2766, byteArray0, (ByteOrder) null, 21);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1bb561c7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1567, 1567, fieldTypeRational0, (-225L), (-225L), (byte[]) null, byteOrder0, 1567);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50715, 50715, fieldTypeShort0, 50715, 50715, (byte[]) null, byteOrder0, 50715);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50715, 50715);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(50715, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: BlackLevelDeltaH, fieldType: SShort", string0);
      assertNotNull(string0);
      assertEquals(50715, tiffField0.getOffset());
      assertEquals(50715, tiffField0.getSortHint());
      assertEquals(50715, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[360];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(832, 849, fieldTypeDouble0, 1872L, 832, byteArray0, byteOrder0, 832);
      String string0 = tiffField0.getValueDescription();
      assertEquals(14976, tiffField0.getBytesLength());
      assertEquals(849, tiffField0.getDirectoryType());
      assertEquals(832, tiffField0.getSortHint());
      assertEquals(832, tiffField0.getTag());
      assertEquals(832, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1872L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeLong0, 35, (-88L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(35L, tiffField0.getCount());
      assertEquals(140, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-88), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[37];
      int int0 = Double.MAX_EXPONENT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1023, 1023, fieldTypeShort0, 1023, 1023, byteArray0, byteOrder0, 38);
      ByteOrder.nativeOrder();
      int int1 = Double.SIZE;
      tiffField0.getDoubleArrayValue();
      assertEquals(1023, tiffField0.getOffset());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(1023, tiffField0.getDirectoryType());
      assertEquals(1023, tiffField0.getTag());
      assertEquals(2046, tiffField0.getBytesLength());
      assertEquals(1023L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37387, 37387, fieldTypeByte0, 37387, 1L, byteArray0, byteOrder0, 849);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(849, tiffField0.getSortHint());
      assertEquals(37387L, tiffField0.getCount());
      assertEquals(37387, tiffField0.getDirectoryType());
      assertEquals(37387, tiffField0.getTag());
      assertEquals(37387, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-199), "... (");
      TiffField tiffField0 = new TiffField((-580), (-580), fieldTypeShort0, 1L, (-580), byteArray0, byteOrder0, (-199));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = Double.BYTES;
      int int1 = tiffField0.getOffset();
      assertEquals((-580), int1);
      
      int int2 = tiffField0.getSortHint();
      assertEquals((-580), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-580), tiffField0.getTag());
      assertEquals((-199), int2);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[165];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeFloat0.LONG, 844L, 21, byteArray0, byteOrder0, 419);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, ",qw+]~*^ZBI[{cV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-59);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, (byte) (-59), fieldTypeShort0, 1556, 4L, byteArray0, byteOrder0, (byte)7);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-249), int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals(1556L, tiffField0.getCount());
      assertEquals(3112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3930, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 3930, fieldTypeLong0, 16L, 16L, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(3930, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3259), 0, fieldTypeByte0, (byte)59, (byte)59, byteArray0, byteOrder0, (-158));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6ebf70bc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      TiffField tiffField0 = new TiffField((byte)45, (byte)45, fieldTypeRational0.ASCII, (byte)45, (byte)0, byteArray0, byteOrder0, (byte)0);
      ByteOrder.nativeOrder();
      tiffField0.getValueDescription();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("c|fRO|&'{=<v5Idx", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2132673415, 2132673415, fieldTypeByte0, 2132673415, 2132673415, byteArray0, byteOrder0, 1800);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@5395ba5
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-26);
      byteArray0[6] = (byte) (-67);
      byteArray0[7] = (byte) (-108);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2364, 0, fieldTypeShort0, 0, (-868L), byteArray0, byteOrder0, (-212));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-868), tiffField0.getOffset());
      assertEquals((-212), tiffField0.getSortHint());
      assertEquals(2364, tiffField0.getTag());
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1037), (byte) (-1), fieldTypeShort0, 741L, 255L, byteArray0, byteOrder0, (-1037));
      TiffField tiffField1 = new TiffField((-1737), (byte) (-1), fieldTypeShort0, 18L, (byte) (-1), byteArray0, byteOrder0, (-1737));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1482, tiffField0.getBytesLength());
      assertEquals((-1037), tiffField0.getSortHint());
      assertEquals(741L, tiffField0.getCount());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1037), tiffField0.getTag());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[11];
      byteArray0[1] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[4] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[6] = (byte)109;
      byteArray0[8] = (byte)109;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3086, "");
      TiffField tiffField0 = new TiffField(34859, 40094, fieldTypeLong0, (byte)109, (byte)0, byteArray0, byteOrder0, 2178);
      long long0 = tiffField0.getCount();
      assertEquals(109L, long0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(436, tiffField0.getBytesLength());
      assertEquals(40094, tiffField0.getDirectoryType());
      assertEquals(2178, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34859, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "tV");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)19, 0, fieldTypeRational0, (byte)19, (byte)19, byteArray0, byteOrder0, (byte)19);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.getByteOrder();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(31, "");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(468);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeLong0, 200L, 1403L, (byte[]) null, byteOrder0, 468);
      String string0 = tiffField0.getTagName();
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals("PageNumber", string0);
      assertEquals(297, tiffField0.getTag());
      assertEquals(1403, tiffField0.getOffset());
      assertEquals(468, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-240), "... (");
      TiffField tiffField0 = new TiffField((-580), 2132673415, fieldTypeShort0, 1L, (-580), byteArray0, byteOrder0, (-240));
      tiffField0.getIntValueOrArraySum();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-13), (-2307));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-240), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-580), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-580), tiffField0.getTag());
      assertNull(string0);
      assertEquals(2132673415, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-92);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte) (-3);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1451), (-1451), fieldTypeShort0, 1L, (-12L), byteArray0, byteOrder0, (-1219));
      tiffField0.getDoubleArrayValue();
      assertEquals((-12), tiffField0.getOffset());
      assertEquals((-1219), tiffField0.getSortHint());
      assertEquals((-1451), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1451), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "tV";
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "tV");
      byte[] byteArray0 = new byte[14];
      byte byte0 = (byte)19;
      byte byte1 = (byte)9;
      byte byte2 = (byte)30;
      byteArray0[2] = (byte)30;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1271L, 2882L, byteArray0, byteOrder0, (byte)30);
      tiffField0.getDoubleArrayValue();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(12, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(320, 7, fieldTypeAscii0, 34, (-1238L), byteArray0, byteOrder0, 1738);
      String string0 = tiffField0.getStringValue();
      assertEquals(320, tiffField0.getTag());
      assertEquals((-1238), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(1738, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte) (-118);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2124, 2124, fieldTypeRational0, 2124, 2124, byteArray0, byteOrder0, (byte) (-118));
      tiffField0.getIntArrayValue();
      assertEquals((-118), tiffField0.getSortHint());
      assertEquals(2124, tiffField0.getTag());
      assertEquals(2124L, tiffField0.getCount());
      assertEquals(2124, tiffField0.getDirectoryType());
      assertEquals(16992, tiffField0.getBytesLength());
      assertEquals(2124, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "V");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 50, fieldTypeRational0, 148L, (byte) (-62), byteArray0, byteOrder1, 283);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(38, "-+&Q=O3Z|");
      byte[] byteArray1 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(14);
      ByteBuffer byteBuffer1 = byteBuffer0.putShort((short)48);
      ByteOrder byteOrder0 = byteBuffer1.order();
      TiffField tiffField0 = new TiffField(14, 38, fieldTypeAscii0, 853L, 853L, byteArray1, byteOrder0, (-1));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(853, tiffField0.getOffset());
      assertEquals(14, tiffField0.getTag());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(853, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2132673415, "): ");
      TiffField tiffField0 = new TiffField((-580), 2132673415, fieldTypeShort0, 4L, (-580), byteArray0, byteOrder0, (-580));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = Double.BYTES;
      tiffField0.getFieldType();
      int int1 = Long.BYTES;
      int int2 = tiffField0.getSortHint();
      assertEquals(2132673415, tiffField0.getDirectoryType());
      assertEquals((-580), tiffField0.getTag());
      assertEquals((-580), tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-580), int2);
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)48;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2124, 2124, fieldTypeRational0, 2124, (-18L), byteArray0, byteOrder0, (byte) (-118));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~3");
      byte[] byteArray0 = new byte[199];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cao(2{COc");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-14), (-14), fieldTypeFloat0, 1, 1, byteArray0, (ByteOrder) null, (-4473));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-14), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-4473), tiffField0.getSortHint());
      assertEquals((-14), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[199];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeFloat0, 46, (-88L), byteArray0, byteOrder0, 46);
      String string0 = tiffField0.getValueDescription();
      assertEquals(46, tiffField0.getTag());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals((-88), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(46, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      System.setCurrentTimeMillis(79);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeFloat0, 136L, 336L, byteArray0, byteOrder0, 79);
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getTag();
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(544, tiffField0.getBytesLength());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(336, tiffField0.getOffset());
      assertEquals(79, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[77];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-572), "MK40l`O\u0001ROIvM6vX%");
      TiffField tiffField0 = new TiffField(32908, 2697, fieldTypeAscii0, 52L, 15392L, byteArray0, byteOrder0, 50834);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType(27);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 27 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[199];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-46), 12, fieldTypeByte0, 455, (-46), byteArray0, byteOrder0, 15);
      tiffField0.getValueDescription();
      Double double0 = new Double(15);
      try { 
        fieldTypeByte0.writeData(double0, byteOrder1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 15.0 (java.lang.Double)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[161];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, (String) null);
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 74, fieldTypeShort0, 74, 74, byteArray0, byteOrder1, (-5604));
      tiffField0.getValueDescription();
      ByteOrder.nativeOrder();
      try { 
        FieldType.getFieldType(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 0 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(418, 418, fieldTypeFloat0, 418, 3561L, byteArray0, byteOrder0, 281);
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType(281);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 281 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[416];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      int int0 = Pattern.LITERAL;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-2675), 38, fieldTypeLong0, 9304L, (-154304L), byteArray0, byteOrder0, 8);
      String string0 = tiffField0.toString();
      assertEquals(37216, tiffField0.getBytesLength());
      assertEquals("-2675 (0xfffff58d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (104) (9304 Long)", string0);
      assertEquals(8, tiffField0.getSortHint());
      assertEquals((-154304), tiffField0.getOffset());
      assertEquals(38, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      byte[] byteArray0 = new byte[423];
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      tiffField0.getOversizeValueElement();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder4 = ByteOrder.LITTLE_ENDIAN;
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(961, 423);
      tiffField0.getTagName();
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(961, 423, fieldTypeDouble0, 961L, 2147483647L, byteArray0, byteOrder0, 423);
      tiffField1.getFieldTypeName();
      ByteOrder.nativeOrder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Unknown Tag (0x1)");
      tiffField1.toString();
      try { 
        tiffField1.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1f055a45 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
