/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 10:13:36 GMT 2018
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.attributeSelection.PrincipalComponents;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.meta.FilteredClassifier;
import weka.classifiers.meta.Vote;
import weka.classifiers.misc.InputMappedClassifier;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.filters.Filter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon(2.0);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = null;
      regSMO0.setOptions((String[]) null);
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.setSMOReg(sMOreg0);
      double double0 = (-52.0);
      regSMO0.setEpsilon((-52.0));
      regSMO0.setEpsilon(1);
      InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      sMOreg0.getOptions();
      intArray0[4] = 2;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 1);
      binarySparseInstance0.deleteAttributeAt(0);
      try { 
        inputMappedClassifier0.constructMappedInstance(binarySparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.misc.InputMappedClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setOptions((String[]) null);
      Random.setNextRandom((-1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1451.06016;
      doubleArray0[1] = 0.0;
      regSMO0.m_alpha1 = 0.0;
      regSMO0.m_C = 0.0;
      doubleArray0[2] = 4386.76051405801;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1443.26);
      doubleArray0[5] = 0.3;
      regSMO0.m_alphaStar = doubleArray0;
      int int0 = 0;
      regSMO0.secondChoiceHeuristic(0);
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1451.06016;
      doubleArray0[2] = 1451.06016;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1443.26);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.secondChoiceHeuristic(0);
      Random.setNextRandom((-1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[14];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.secondChoiceHeuristic(0);
      PrincipalComponents principalComponents0 = new PrincipalComponents();
      assertFalse(principalComponents0.getCenterData());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-346.0);
      doubleArray0[1] = 0.0;
      regSMO0.getScore();
      doubleArray0[2] = 1051.29301256;
      regSMO0.findOptimalPointOnLine(0, 1.7976931348623157E308, (-346.0), 0.0, 0, 1051.29301256, 1051.29301256, 1051.29301256, 100.0, 0.0, 1051.29301256);
      regSMO0.getRevision();
      doubleArray0[3] = 0.0;
      regSMO0.m_target = doubleArray0;
      regSMO0.getOptions();
      int int0 = 4371;
      try { 
        regSMO0.examineExample(4371);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4371
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int[] intArray0 = new int[7];
      intArray0[0] = (-291);
      intArray0[1] = 2;
      regSMO0.getTechnicalInformation();
      intArray0[2] = (-1583);
      intArray0[3] = 0;
      intArray0[4] = 10000;
      intArray0[5] = 0;
      intArray0[6] = 74;
      regSMO0.m_classIndex = 0;
      regSMO0.m_sparseIndices = intArray0;
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.takeStep(0, 29, 29, (-906.34457), 1.0E-4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 3646;
      RegSMO regSMO1 = new RegSMO();
      regSMO1.getTechnicalInformation();
      SMOreg sMOreg0 = regSMO1.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.listOptions();
      MockRandom mockRandom0 = new MockRandom(186L);
      regSMO1.m_random = (java.util.Random) mockRandom0;
      regSMO0.takeStep(3646, 3646, (-2102.72102315), 5.3, 5.3);
      regSMO0.m_error = null;
      regSMO0.getEpsilon();
      regSMO0.epsilonTipText();
      regSMO0.getTechnicalInformation();
      regSMO0.getTechnicalInformation();
      regSMO0.setEpsilon(5.3);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String string0 = regSMO0.globalInfo();
      assertEquals("Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.", string0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[1] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[2] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[3] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[4] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[5] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[6] = "1Yt";
      stringArray0[7] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[8] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      regSMO0.setOptions(stringArray0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = Vote.MEDIAN_RULE;
      double double0 = 1451.06016;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(6, 6, 6, 44, 6, 1451.06016, 6, 44, (-45.0), 44, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.toString();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-3975), (-3975), (-3975), 1.0E-10, (-3975), 1.0E-10, 1.0E-10, 1.0000056338554941E-12, 1.0000056338554941E-12, 1.0000056338554941E-12, (-88.275264));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = SMOreg.FILTER_NONE;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1194), (-1194), 1451.06016, 2, (-1194), 1451.06016, 2, 2, (-45.0), 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.2;
      doubleArray0[0] = 0.0;
      regSMO0.m_alpha1 = 0.0;
      regSMO0.m_C = 0.0;
      doubleArray0[2] = 4386.76051405801;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1443.26);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2288), 0.0, 762.0, (-816.55), (-2288), (-2288), (-396.1481407), (-445.3), 1.2, 1.0, 1654.6243319);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-605), (-605), (-605), (-605), (-1710), (-2880.919697245448), (-605), (-2880.919697245448), 1.0, 1.0, 1515.276028877603);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, (-396.1481407), 1.0E-4, 0.0, 1607, 1607, 689.06016, (-3308.3041545), 2500, 1607, 2500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = Vote.MEDIAN_RULE;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(6, 6, 6, 44, 6, 44, 6, 44, 44, 44, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1.0;
      regSMO0.m_sparseWeights = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1710), 2.0, 2.0, 2.0, (-1710), 1.0E-12, 1.0, 104.0, 1.0, 1.0E-12, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1299, 1299, 1299, 1299, 1299, (-450.967), 1299, 21.973851607292403, 21.973851607292403, 21.973851607292403, (-450.967));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 2920.3, 1.7976931348623157E308, 0, 1.7976931348623157E308, 0, 2920.3, (-956.6), 1.7976931348623157E308, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 44;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(44, 44, 343.6511, 1570.927404828, 44, (-861.79510021698), 1441.0, 1451.06016, 1441.0, 44, 1451.06016);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2099616737, (-1099), 2099616737, 1.0E75, 2099616737, 2099616737, 3.4, 1.0E75, 2099616737, 3.4, 3.4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      regSMO0.m_C = (double) 116;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(116, 1.0E-10, 1.0, 1.0, 116, (-6.78214234), 116, (-189.515489882622), 1.0, 2.000000000001, 762.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = SMOreg.FILTER_NONE;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1194), (-1194), 1.7976931348623157E308, 104, (-1194), 1451.06016, 2, 104, (-45.0), 44, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = SMOreg.FILTER_NONE;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1164), (-1164), 96, 96, (-1164), 96, 2, 96, (-45.0), 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1515.276028877603, (-396.1481407), 1.0E-12, (-2288), (-1703.2449541), (-396.1481407), (-1137.960137), 621.4864032827, 668.9, 103.9999999896);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1065, 0, (-2288), 1.0E-12, (-551), 3005.2275819081815, 1.0, (-2387.3315079), 0.1, 3005.2275819081815, 1065);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, (-4.57826535), 1.7976931348623157E308, 0, 1.7976931348623157E308, 0, (-4.57826535), (-956.6), 1.7976931348623157E308, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 2920.3, 1.7976931348623157E308, 0, 0, 0, 2920.3, (-364.34033103585926), 1.7976931348623157E308, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_sparseWeights = null;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1710), 2.503192417615441, 1.9116644503251317, 1.9116644503251317, (-1710), 1.0E-12, 1.0, 120.04817414618512, 1.0, 1.0E-12, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-653), 1.0, 64.0, 120.04817414618512, 27, 2.503192417615441, 1.0E-12, 27, 1.0E-12, 744.0, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-1049);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1049), (-1049), 0.0, (-1049), (-1049), Double.POSITIVE_INFINITY, 0.0, (-974.2585529521), (-1049), Double.POSITIVE_INFINITY, (-1049));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[12];
      regSMO0.m_alpha = null;
      int int0 = 8;
      double double0 = (-1270.56644);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(8, 8, 1057.485, 8, 0, (-1270.56644), 0, 1057.485, 0, 1057.485, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alpha2 = (-1.073741824E9);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2.7E-9, (-2273.8986213455), (-1137.960137), 0, (-1703.2449541), 0, (-1924.8071967924134), (-1312.64), 103.9999999896, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-265), 1451.06016, 1.0E-10, 2.0, 3735, 780.005, 1.0E-10, 3735, 3735, 300.0, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      BayesNet bayesNet0 = new BayesNet();
      Instances instances0 = bayesNet0.m_Instances;
      RegSMO regSMO1 = new RegSMO();
      int int0 = 389;
      // Undeclared exception!
      try { 
        regSMO1.findOptimalPointOnLine(339, 64.0, 339, 744.0, 389, 64.0, 27, 64.0, 64.0, 27, 64.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 0.0;
      regSMO0.m_C = 0.0;
      doubleArray0[3] = 0.0;
      regSMO0.m_nCacheHits = 15;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(15, 0.0, 0.0, 0.0, 15, (-3193.66777482), 595.7003093202472, 2.0, (-1659.14392007), 1.073740242E9, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 0;
      double double0 = 2.7E-9;
      double double1 = 19.0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 2920.3, 1.7976931348623157E308, 657, 1.7976931348623157E308, 2.7E-9, 2920.3, (-956.6), 19.0, 657);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[21];
      doubleArray0[2] = (double) 63;
      regSMO0.m_target = doubleArray0;
      regSMO0.takeStep(63, 63, 63, 63, 63);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-653), 1.0, 120.04817414618512, 120.04817414618512, 23, 2.503192417615441, 1.0E-12, 23, 1.0E-12, 744.0, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-653), 1.0, 64.0, 120.04817414618512, 27, 2.503192417615441, 0.0, 27, 1.0E-12, 744.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 1.7976931348623157E308, 89.35782, 3, 3, (-1270.5664), 50.0, 89.35782, 3, 99.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1443.26);
      doubleArray0[5] = (-1443.26);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.secondChoiceHeuristic(0);
      Random.setNextRandom((-1));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 5.439706555517052;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-1887));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[21];
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_target = regSMO0.m_alpha;
      regSMO0.m_bModelBuilt = false;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = SMOreg.FILTER_NONE;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(96, 41.0, 1545.497887512, 505.28619239, (-1362), 1.0E-75, 0.1, 1545.497887512, 45.0, 1.7976931348623157E308, (-2315.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = SMOreg.FILTER_NONE;
      regSMO0.setEpsilon(190.0);
      regSMO0.m_nSeed = (-1068);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1164), (-1164), 96, 96, (-1164), 96, 2, 96, (-45.0), 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(5, 5, 5, 5, 5, (-1269.6182217242415), 5, (-1269.6182217242415), (-1269.6182217242415), 5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[12];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2, 2, (-0.5), 2, 0.01, 0.01, 0.01, 2, 1.9999999998, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[13];
      regSMO0.takeStep((-1049), (-1049), (-1049), (-1049), (-1049));
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 0, 0, 0, (-1049), 0, (-1049), 0, 1104.397507529, (-1049));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[12];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.m_alpha = doubleArray0;
      int int0 = 2;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2, 2, 9.798843548810002, 2, (-3.826754462256724), (-3.826754462256724), (-3.826754462256724), 2, 1.9999999998, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[12];
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2, 2, 2, 2, (-3.826754462256724), (-3.826754462256724), (-3.826754462256724), 2, 1.9999999998, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[12];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 9.798843548810002, 1893.261307651, 2, 2, 1893.261307651, 2.0E-10, 1.9999999998, (-3735.6855), 1403.79698, (-1749.479132965297));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[12];
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 907.67495, 907.67495, 2302.32270929493, 2, 2, 6375.4884902855, 384.98097, 6375.4884902855, 2080.52775, 384.98097);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = doubleArray0;
      regSMO0.optimize();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 1.7976931348623157E308, 3, 3, (-1270.5664), (-215.09912038198), 2656.32186415, (-1.7976931348623157E308), 6.0, 1.7976931348623157E308);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(5, 5, (-1291.631533903098), 5, 5, (-1291.631533903098), 5, (-1291.631533903098), (-1291.631533903098), 5, (-1291.631533903098));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[13];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(8, 8, 1063.2721263809237, 8, 2495, (-1270.5664), 2495, 1063.2721263809237, (-1), 1063.2721263809237, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2495
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 8.0E-10, (-3794.0), 10.0, 3, 3, (-1269.6182217242415), (-1790.39817039531), 3, 4411.96271, 1104.397507529);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[13];
      regSMO0.takeStep((-1049), (-1049), 4571.56972011, 4571.56972011, 4571.56972011);
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 0, 3450.28311, 0, 10.0, 0, 10.0, 0, 1104.397507529, 4571.56972011);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 9.6E-9;
      doubleArray0[1] = 579.813521597365;
      doubleArray0[2] = 0.1;
      doubleArray0[3] = (-3.0);
      doubleArray0[4] = 3324.8940133807037;
      doubleArray0[5] = (-2124.61575);
      doubleArray0[6] = 809.3471;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.secondChoiceHeuristic((-88));
      try { 
        regSMO0.examineExample(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[13];
      regSMO0.takeStep((-1049), (-1049), (-1049), (-1049), (-1049));
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      regSMO0.findOptimalPointOnLine(0, 0, 0, 0, 0, 0, 0, 0, 0, 1095.509893364866, (-1049));
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }
}
