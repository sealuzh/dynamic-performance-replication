/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 04:40:20 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeShort0, 50, (-79), byteArray0, byteOrder0, (byte) (-85));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-79), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(5, int0);
      assertEquals((-79), tiffField0.getOffset());
      assertEquals((-85), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, (byte)18);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2076), 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2076), tiffField0.getTag());
      assertEquals(126, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-113);
      byteArray0[4] = (byte) (-72);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-295), 50716, fieldTypeRational0, 3356L, (-1517L), byteArray0, byteOrder0, 21);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(50716, tiffField0.getDirectoryType());
      assertEquals((-1517), tiffField0.getOffset());
      assertEquals((-295), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-125);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147369595), 3320, fieldTypeLong0, (-2147369595), (-2147369595), byteArray0, byteOrder0, (-133));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-133), tiffField0.getSortHint());
      assertEquals((-2147369595), tiffField0.getTag());
      assertEquals(3320, tiffField0.getDirectoryType());
      assertEquals((-2147369595), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147314353), (-2147314353), fieldTypeRational0, (-2147314353), (-12680L), byteArray0, byteOrder0, (byte)65);
      tiffField0.getIntArrayValue();
      assertEquals((-12680), tiffField0.getOffset());
      assertEquals((-2147314353), tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals((-2147314353), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37521, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(109, 1, fieldTypeFloat0, 1L, 638L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(109, tiffField0.getTag());
      assertEquals(638, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(7, "]P!QNx#T");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1342), 2453, fieldTypeByte0, (-1042L), 801L, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-1342), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(801, tiffField0.getOffset());
      assertEquals(2453, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-484), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-1L), byteArray0, byteOrder0, (-3866));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3866), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2147374466, " (0x");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-9);
      TiffField tiffField0 = new TiffField(1954, 1954, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-9));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1954, tiffField0.getTag());
      assertEquals((-9), tiffField0.getSortHint());
      assertEquals(1954, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-484), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-1L), byteArray0, byteOrder0, (-3866));
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3866), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147314353), (-701), fieldTypeShort0, (-2147314353), (-2147483648L), byteArray0, byteOrder0, (byte)61);
      tiffField0.getCount();
      assertEquals((-2147314353), tiffField0.getTag());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-701), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(642, (-520), fieldTypeRational0, 1752L, 2147119729L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals((-520), tiffField0.getDirectoryType());
      assertEquals(642, tiffField0.getTag());
      assertEquals(2147119729, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147369595), 3320, fieldTypeLong0, (-2147369595), (-2147369595), byteArray0, byteOrder0, (-133));
      tiffField0.getByteOrder();
      assertEquals((-133), tiffField0.getSortHint());
      assertEquals((-2147369595), tiffField0.getOffset());
      assertEquals((-2147369595), tiffField0.getTag());
      assertEquals(3320, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37521, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(109, 1, fieldTypeFloat0, 1L, 638L, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(638, tiffField0.getOffset());
      assertEquals(109, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1257, 1257, fieldTypeRational0, 0L, 1207L, byteArray0, byteOrder0, (-2147369595));
      tiffField0.getByteArrayValue();
      assertEquals(1257, tiffField0.getTag());
      assertEquals(1257, tiffField0.getDirectoryType());
      assertEquals((-2147369595), tiffField0.getSortHint());
      assertEquals(1207, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(302, 65535, fieldTypeDouble0, (-29L), 302, byteArray0, byteOrder0, (-2434));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1021), (FieldType) null, (-1021), 145L, byteArray0, byteOrder0, 50966);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37521, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(109, 1, fieldTypeFloat0, 1L, 638L, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(109, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(638, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(642, (-520), fieldTypeRational0, 1752L, 2147119729L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2147119729, tiffField0.getOffset());
      assertEquals(642, tiffField0.getTag());
      assertEquals((-520), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2076), 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (byte)126);
      tiffField0.getFieldType();
      assertEquals((-2076), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(126, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-484), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-1L), byteArray0, byteOrder0, (-3866));
      tiffField0.getValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3866), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1021), (FieldType) null, (-1021), 145L, byteArray0, byteOrder0, 50966);
      int int0 = tiffField0.getOffset();
      assertEquals((-1021), tiffField0.getDirectoryType());
      assertEquals(145, int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(50966, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1257, 1257, fieldTypeRational0, 0L, 1207L, byteArray0, byteOrder0, (-2147369595));
      tiffField0.getTagInfo();
      assertEquals(1207, tiffField0.getOffset());
      assertEquals((-2147369595), tiffField0.getSortHint());
      assertEquals(1257, tiffField0.getTag());
      assertEquals(1257, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147314353), 641, fieldTypeRational0, 641, 641, byteArray0, byteOrder0, (-2147314353));
      int int0 = tiffField0.getTag();
      assertEquals((-2147314353), int0);
      assertEquals(641, tiffField0.getDirectoryType());
      assertEquals((-2147314353), tiffField0.getSortHint());
      assertEquals(641, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1257, 1257, fieldTypeRational0, 0L, 1207L, byteArray0, byteOrder0, (-2147369595));
      tiffField0.getBytesLength();
      assertEquals(1257, tiffField0.getTag());
      assertEquals(1257, tiffField0.getDirectoryType());
      assertEquals(1207, tiffField0.getOffset());
      assertEquals((-2147369595), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(722, 722, fieldTypeByte0, 722, 4L, byteArray0, byteOrder0, (byte) (-127));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "8<2RFMp<JtaiES");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, (-2147483648L), 4L, byteArray0, (ByteOrder) null, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147369595), 3320, fieldTypeLong0, (-2147369595), (-2147369595), byteArray0, byteOrder0, (-133));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2147369595), tiffField0.getTag());
      assertEquals(3320, tiffField0.getDirectoryType());
      assertEquals((-133), tiffField0.getSortHint());
      assertEquals((-2147369595), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1891, 1891, fieldTypeLong0, 1L, (-710L), byteArray0, byteOrder0, 3060);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3060, tiffField0.getSortHint());
      assertEquals(1891, tiffField0.getTag());
      assertEquals((-710), tiffField0.getOffset());
      assertEquals(1891, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, (byte)18);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4a6c3e29 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(15, "TIFF_DIRECTORY_IFD1");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(189, 189, fieldTypeDouble0, 0L, (-12680L), byteArray0, byteOrder0, (byte) (-53));
      tiffField0.getDoubleArrayValue();
      assertEquals((-12680), tiffField0.getOffset());
      assertEquals(189, tiffField0.getTag());
      assertEquals(189, tiffField0.getDirectoryType());
      assertEquals((-53), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36868, (-1212), fieldTypeByte0, 36868, (-5036L), byteArray0, byteOrder0, (-1888));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@24af4366 for: 36868 (0x9004: DateTimeDigitized): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 0, fieldTypeLong0, 6, (-1758L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 1824, fieldTypeShort0, 1824, 17179869176L, byteArray0, byteOrder0, (-2501));
      tiffField0.getDoubleArrayValue();
      assertEquals(1824, tiffField0.getDirectoryType());
      assertEquals((-2501), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals((-8), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147314353), 641, fieldTypeRational0, 641, 641, byteArray0, byteOrder0, (-2147314353));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2147314353), tiffField0.getTag());
      assertEquals((-2147314353), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(641, tiffField0.getDirectoryType());
      assertEquals(641, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-172), "^$-X2*T zO");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(318, 1842, fieldTypeLong0, 1L, (-172), byteArray0, byteOrder0, 896);
      tiffField0.getDoubleArrayValue();
      assertEquals(896, tiffField0.getSortHint());
      assertEquals(318, tiffField0.getTag());
      assertEquals((-172), tiffField0.getOffset());
      assertEquals(1842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2076), 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (byte)126);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147314353), (-701), fieldTypeShort0, (-2147314353), (-2147483648L), byteArray0, byteOrder0, (byte)61);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-2147314353), tiffField0.getTag());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals((-701), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-51);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(642, (-520), fieldTypeRational0, 1752L, 2147119729L, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals((-520), tiffField0.getDirectoryType());
      assertEquals(2147119729, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(642, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37521, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(109, 1, fieldTypeFloat0, 1L, 638L, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(638, tiffField0.getOffset());
      assertEquals(109, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 0, fieldTypeLong0, 6, (-1758L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6L, tiffField0.getCount());
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2079), 1, fieldTypeByte0, 1, (-2079), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2076), 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (byte)126);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2076), tiffField0.getTag());
      assertEquals(126, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(7, "]P!QNx#T");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1342), 2453, fieldTypeByte0, (-1042L), 801L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals(801, tiffField0.getOffset());
      assertEquals(2453, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffffac2)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-172), "^$-X2*T zO");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(318, 1842, fieldTypeLong0, 1L, (-172), byteArray0, byteOrder0, 896);
      String string0 = tiffField0.getTagName();
      assertEquals((-172), tiffField0.getOffset());
      assertEquals("WhitePoint", string0);
      assertEquals(896, tiffField0.getSortHint());
      assertEquals(318, tiffField0.getTag());
      assertEquals(1842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3553), "qHSlQ(k!5J0!jA8{Nh.");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-72), (-72), fieldTypeByte0, (-29L), (-341L), byteArray0, byteOrder0, (byte)13);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(4);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "OversizeValueElement, tag: Unknown Tag, fieldType: qHSlQ(k!5J0!jA8{Nh.");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-484), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-1L), byteArray0, byteOrder0, (-3866));
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-3866), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36868, (-1212), fieldTypeByte0, 36868, (-5036L), byteArray0, byteOrder0, (-1888));
      tiffField0.dump();
      assertEquals((-1888), tiffField0.getSortHint());
      assertEquals(36868L, tiffField0.getCount());
      assertEquals(36868, tiffField0.getTag());
      assertEquals((-1212), tiffField0.getDirectoryType());
      assertEquals((-5036), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-626), (-2145428638), fieldTypeDouble0, (-2145428638), (-2145428638), byteArray0, byteOrder0, (-2145428638));
      assertEquals(16440080, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2145428638), tiffField0.getSortHint());
      assertEquals((-2145428638L), tiffField0.getCount());
      assertEquals((-626), tiffField0.getTag());
      assertEquals((-2145428638), tiffField0.getDirectoryType());
      assertEquals((-2145428638), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34732, 3474, fieldTypeLong0, 3474, 255L, byteArray0, byteOrder0, (byte)26);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3474, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(3474L, tiffField0.getCount());
      assertEquals(13896, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(34732, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, (byte)18);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeShort0, 50, (-79), byteArray0, byteOrder0, (byte) (-85));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-79), tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals((-85), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-79), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2440, 2440, fieldTypeAscii0, 2440, 1289L, byteArray0, byteOrder0, 50);
      MockFile mockFile0 = new MockFile("=9");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(271L, mockFile0.length());
      assertEquals(2440, tiffField0.getTag());
      assertEquals(2440, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1289, tiffField0.getOffset());
      assertEquals(2440, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2076), 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (byte)126);
      tiffField0.toString();
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2076), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-172), "^$-X2*T zO");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(318, 1842, fieldTypeLong0, 1L, (-172), byteArray0, byteOrder0, 896);
      tiffField0.toString();
      assertEquals(318, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(896, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-172), tiffField0.getOffset());
      assertEquals(1842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1021), (FieldType) null, (-1021), 145L, byteArray0, byteOrder0, 50966);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 50966);
      tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(145, tiffField0.getOffset());
      assertEquals(50966, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1021), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 0, fieldTypeLong0, 6, (-1758L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1499), (-1499), fieldTypeFloat0, 3776L, (-1451L), byteArray0, (ByteOrder) null, (byte)54);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(54, tiffField0.getSortHint());
      assertEquals((-1499), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals((-1451L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2076), 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-2076), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147369595), 3320, fieldTypeLong0, (-2147369595), (-2147369595), byteArray0, byteOrder0, (-133));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2147369595), tiffField0.getTag());
      assertEquals(3320, tiffField0.getDirectoryType());
      assertEquals((-133), int0);
      assertEquals((-2147369595), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1499), (-1499), fieldTypeFloat0, 3776L, (-1451L), byteArray0, (ByteOrder) null, (byte)54);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getSortHint());
      assertEquals((-1451), tiffField0.getOffset());
      assertEquals("-1499 (0xfffffa25: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147314353), 641, fieldTypeRational0, 641, 641, byteArray0, byteOrder0, (-2147314353));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1499), (-1499), fieldTypeFloat0, 3776L, (-1451L), byteArray0, (ByteOrder) null, (byte)54);
      tiffField0.getDoubleArrayValue();
      assertEquals(54, tiffField0.getSortHint());
      assertEquals((-1499), tiffField0.getTag());
      assertEquals((-1451), tiffField0.getOffset());
      assertEquals(3776L, tiffField0.getCount());
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals(15104, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3553), "qHSlQ(k!5J0!jA8{Nh.");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-72), (-72), fieldTypeByte0, (-29L), (-341L), byteArray0, byteOrder0, (byte)13);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-72), (byte)80);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(13, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: qHSlQ(k!5J0!jA8{Nh.", string0);
      assertEquals((-72), tiffField0.getDirectoryType());
      assertEquals((-29L), tiffField0.getCount());
      assertEquals((-341), tiffField0.getOffset());
      assertEquals((-72), tiffField0.getTag());
  }
}
