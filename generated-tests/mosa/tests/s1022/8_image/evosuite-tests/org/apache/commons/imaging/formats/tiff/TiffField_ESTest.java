/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:18:56 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1379, 1379, fieldTypeShort0, 1379, 1379, byteArray0, byteOrder0, 1379);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1379 (0x563: Unknown Tag): ", string0);
      assertEquals(1379, tiffField0.getDirectoryType());
      assertEquals(1379L, tiffField0.getCount());
      assertEquals(1379, tiffField0.getSortHint());
      assertEquals(1379, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1356, 1356, fieldTypeShort0, 1356, 1356, byteArray0, byteOrder0, 1356);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1356, tiffField0.getSortHint());
      assertEquals(1356, tiffField0.getTag());
      assertEquals(1356, tiffField0.getOffset());
      assertEquals(1356, int0);
      assertEquals(1356L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1368, 1368, fieldTypeShort0, 1368, 1368, byteArray0, byteOrder0, 1368);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1368, 1368, fieldTypeShort0, 1368, 1368, byteArray0, byteOrder0, 1368);
      int int0 = tiffField0.getSortHint();
      assertEquals(1368, tiffField0.getDirectoryType());
      assertEquals(1368, tiffField0.getTag());
      assertEquals(1368, tiffField0.getOffset());
      assertEquals(1368, int0);
      assertEquals(1368L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)37, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34692, 34692, fieldTypeFloat0, 34692, 34692, byteArray0, byteOrder0, 34692);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(34692, 34692);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(34692L, tiffField0.getCount());
      assertEquals(34692, tiffField0.getTag());
      assertEquals(34692, tiffField0.getOffset());
      assertEquals(138768, tiffField0.getBytesLength());
      assertNull(string0);
      assertEquals(34692, tiffField0.getSortHint());
      assertEquals(34692, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1368, 1368, fieldTypeShort0, 1368, 1368, byteArray0, byteOrder0, 1368);
      String string0 = tiffField0.getTagName();
      assertEquals(1368, tiffField0.getDirectoryType());
      assertEquals(1368, tiffField0.getSortHint());
      assertEquals(1368, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x558)", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeFloat0, 3, 3, byteArray0, byteOrder0, 3);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3704f88b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1368, 1368, fieldTypeShort0, 1368, 1368, byteArray0, byteOrder0, 1368);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(1368, tiffField0.getOffset());
      assertEquals(1368, tiffField0.getTag());
      assertEquals(1368, tiffField0.getDirectoryType());
      assertEquals(1368, tiffField0.getSortHint());
      assertEquals(1368L, tiffField0.getCount());
      assertEquals(2736, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[223];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeDouble0, 27, 27, byteArray0, byteOrder0, 27);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1004), 27);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(27, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2664, 1604, fieldTypeByte0, 2664, 2664, byteArray0, byteOrder0, 2664);
      tiffField0.dump();
      assertEquals(2664, tiffField0.getBytesLength());
      assertEquals(2664, tiffField0.getOffset());
      assertEquals(2664, tiffField0.getTag());
      assertEquals(1604, tiffField0.getDirectoryType());
      assertEquals(2664, tiffField0.getSortHint());
      assertEquals(2664L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2664, 1621, fieldTypeByte0, 2664, 2664, byteArray0, byteOrder0, 2664);
      tiffField0.dump();
      assertEquals(2664, tiffField0.getTag());
      assertEquals(2664, tiffField0.getOffset());
      assertEquals(2664, tiffField0.getBytesLength());
      assertEquals(2664, tiffField0.getSortHint());
      assertEquals(1621, tiffField0.getDirectoryType());
      assertEquals(2664L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeFloat0, 1L, (-920L), byteArray0, byteOrder0, 3);
      tiffField0.getDoubleArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1379, 1379, fieldTypeShort0, 1379, 1379, byteArray0, byteOrder0, 1379);
      tiffField0.dump();
      assertEquals(2758, tiffField0.getBytesLength());
      assertEquals(1379, tiffField0.getSortHint());
      assertEquals(1379, tiffField0.getDirectoryType());
      assertEquals(1379, tiffField0.getTag());
      assertEquals(1379, tiffField0.getOffset());
      assertEquals(1379L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeLong0, 529, 529, byteArray0, byteOrder0, 529);
      tiffField0.getDoubleArrayValue();
      assertEquals(529L, tiffField0.getCount());
      assertEquals(2116, tiffField0.getBytesLength());
      assertEquals(529, tiffField0.getDirectoryType());
      assertEquals(529, tiffField0.getSortHint());
      assertEquals(529, tiffField0.getTag());
      assertEquals(529, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1376, 1376, fieldTypeShort0, 1376, 1376, byteArray0, byteOrder0, 1376);
      tiffField0.getDoubleArrayValue();
      assertEquals(1376L, tiffField0.getCount());
      assertEquals(1376, tiffField0.getSortHint());
      assertEquals(1376, tiffField0.getDirectoryType());
      assertEquals(1376, tiffField0.getTag());
      assertEquals(2752, tiffField0.getBytesLength());
      assertEquals(1376, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1553, 1553, fieldTypeShort0, 1553, 1553, byteArray0, byteOrder0, 1553);
      tiffField0.getFieldTypeName();
      assertEquals(1553, tiffField0.getSortHint());
      assertEquals(1553, tiffField0.getDirectoryType());
      assertEquals(1553, tiffField0.getOffset());
      assertEquals(1553, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)37, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(37, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeFloat0, 3, 3, byteArray0, byteOrder0, 3);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2b7e1d0d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(742, 742, fieldTypeLong0, 742, 742, byteArray0, byteOrder0, 742);
      tiffField0.getTagInfo();
      tiffField0.dump();
      assertEquals(742, tiffField0.getTag());
      assertEquals(742L, tiffField0.getCount());
      assertEquals(742, tiffField0.getDirectoryType());
      assertEquals(2968, tiffField0.getBytesLength());
      assertEquals(742, tiffField0.getSortHint());
      assertEquals(742, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)37, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[223];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeDouble0, 27, 27, byteArray0, byteOrder0, 27);
      tiffField0.dump();
      assertEquals(27L, tiffField0.getCount());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(216, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34669, 34669, fieldTypeFloat0, 34669, 34669, byteArray0, byteOrder0, 34669);
      tiffField0.getDoubleArrayValue();
      assertEquals(34669L, tiffField0.getCount());
      assertEquals(138676, tiffField0.getBytesLength());
      assertEquals(34669, tiffField0.getDirectoryType());
      assertEquals(34669, tiffField0.getSortHint());
      assertEquals(34669, tiffField0.getTag());
      assertEquals(34669, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1964, 1964, fieldTypeDouble0, 1964, 1964, byteArray0, byteOrder0, 1964);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-291), (-291), fieldTypeByte0, 213L, 36, byteArray0, byteOrder0, (-291));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2191750 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(4, tiffField0.getBytesLength());
      
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-127), (byte) (-127), fieldTypeLong0, 0L, (byte) (-127), byteArray0, byteOrder0, (byte) (-127));
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntValueOrArraySum();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-127), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals((-127), tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(515, 515, fieldTypeFloat0, 515, 515, byteArray0, byteOrder0, 515);
      String string0 = tiffField0.getTagName();
      assertEquals("JPEGRestartInterval", string0);
      
      String string1 = tiffField0.toString();
      assertEquals(515, tiffField0.getOffset());
      assertEquals("515 (0x203: JPEGRestartInterval): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (515 Float)", string1);
      assertEquals(515, tiffField0.getDirectoryType());
      assertEquals(515, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)123, (byte)123, fieldTypeLong0, 854L, 854L, byteArray0, byteOrder0, (byte)123);
      tiffField0.getIntValueOrArraySum();
      tiffField0.getIntArrayValue();
      assertEquals(123, tiffField0.getTag());
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals(854, tiffField0.getOffset());
      assertEquals(123, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[223];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeDouble0, 27, 27, byteArray0, byteOrder0, 27);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1770, 1770, fieldTypeAscii0, 1770, 1770, byteArray0, byteOrder0, 1770);
      tiffField0.toString();
      assertEquals(1770, tiffField0.getSortHint());
      assertEquals(1770, tiffField0.getTag());
      assertEquals(1770, tiffField0.getOffset());
      assertEquals(1770, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-4), 0, fieldTypeAscii0, 0, 0L, byteArray0, byteOrder0, 9);
      tiffField0.dump();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)37, (byte)37, fieldTypeRational0, (byte)37, (byte)37, byteArray0, byteOrder0, (byte)37);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)37, 13, fieldTypeRational0, (byte)37, (-2147483648L), byteArray0, byteOrder0, (byte)37);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(521, 521, fieldTypeFloat0.ASCII, 521, 521, byteArray0, byteOrder0, 521);
      tiffField0.dump();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(521, tiffField0.getTag());
      assertEquals(521, tiffField0.getSortHint());
      assertEquals(521L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(521, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1034, 1034, fieldTypeRational0, 1034, 1350L, byteArray0, byteOrder0, 1034);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1609), (byte)37, fieldTypeAscii0, 0L, (-1609), byteArray0, byteOrder0, (byte)37);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1609), tiffField0.getOffset());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals((-1609), tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[142];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50177, 50177, fieldTypeShort0, 50177, 50177, byteArray0, (ByteOrder) null, 2546);
      tiffField0.dump();
      assertEquals(50177, tiffField0.getOffset());
      assertEquals(2546, tiffField0.getSortHint());
      assertEquals(50177, tiffField0.getTag());
      assertEquals(50177, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[297];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1042, 52, fieldTypeLong0, 1042, 52, byteArray0, byteOrder0, 52);
      String string0 = tiffField0.toString();
      assertEquals(52, tiffField0.getOffset());
      assertEquals("1042 (0x412: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (74) (1042 IFD)", string0);
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[270];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34691, 34691, fieldTypeFloat0, 34691, 34691, byteArray0, byteOrder0, 34691);
      tiffField0.dump();
      assertEquals(34691, tiffField0.getSortHint());
      assertEquals(34691, tiffField0.getDirectoryType());
      assertEquals(34691, tiffField0.getOffset());
      assertEquals(34691, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 323;
      long long0 = 103L;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(323, 25, fieldTypeDouble0, 103L, 323, byteArray0, byteOrder0, 323);
      tiffField0.getValueDescription();
      tiffField0.dump();
      TiffField tiffField1 = new TiffField(25, 15, fieldTypeDouble0, 323, 174L, byteArray0, byteOrder0, 25);
      tiffField1.dump();
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        tiffField1.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
