/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 00:42:52 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, 93);
      charClass0.toString();
      int[][] intArray1 = new int[4][0];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 93;
      intArray2[1] = 93;
      intArray2[2] = 93;
      intArray2[3] = 93;
      intArray2[4] = 93;
      intArray2[5] = 93;
      intArray2[6] = 93;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      int[] intArray3 = new int[5];
      intArray3[0] = 93;
      intArray3[1] = 93;
      intArray3[2] = 93;
      intArray3[3] = 93;
      intArray3[4] = 93;
      intArray1[3] = intArray3;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 93);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toString();
      CharClass charClass2 = charClass1.appendFoldedRange((-3005), 0);
      assertSame(charClass0, charClass2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 9262);
      CharClass charClass2 = charClass1.negateClass();
      int[] intArray1 = new int[0];
      CharClass charClass3 = charClass2.appendNegatedClass(intArray1);
      assertSame(charClass3, charClass0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClass(intArray0);
      // Undeclared exception!
      try { 
        charClass2.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[5];
      int int0 = 67594;
      intArray0[0] = 67594;
      int int1 = (-101);
      intArray0[1] = (-101);
      int int2 = (-1429);
      intArray0[2] = (-1429);
      int int3 = 0;
      intArray0[3] = 0;
      int int4 = 0;
      intArray0[4] = 0;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-537), (-537));
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1277;
      intArray0[2] = (-2751);
      intArray0[3] = 1174;
      intArray0[4] = (-2360);
      intArray0[5] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 1694);
      CharClass charClass2 = charClass1.appendLiteral(1174, (-2751));
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      CharClass charClass4 = charClass3.negateClass();
      CharClass charClass5 = charClass4.appendRange((-2751), 0);
      charClass5.appendClass(intArray0);
      assertArrayEquals(new int[] {(-2751), 1114111, (-2751), 1174, (-2751), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(3427, 3427);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendClass(intArray0);
      assertArrayEquals(new int[] {1, 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 43561;
      intArray0[0] = 43561;
      intArray0[1] = (-663);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral((-663), 43561);
      int[][] intArray1 = new int[4][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 43561;
      intArray2[1] = (-663);
      int int1 = 428;
      intArray2[2] = 428;
      intArray2[3] = 43561;
      intArray2[4] = (-663);
      intArray2[5] = (-663);
      intArray2[6] = (-663);
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      int int2 = (-2243);
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, (-2243));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[1][2];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[3][9];
      int[] intArray2 = new int[7];
      intArray2[0] = 4;
      intArray2[2] = 4;
      intArray2[3] = 4;
      intArray2[4] = 4;
      intArray2[6] = 4;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[5][7];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = (-942);
      intArray1[2] = 0;
      intArray1[3] = 3161;
      intArray1[4] = (-962);
      intArray1[5] = 314;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 314;
      intArray2[1] = (-942);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 314;
      intArray3[1] = (-942);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 314;
      intArray5[1] = (-962);
      intArray5[2] = (-942);
      intArray5[3] = 314;
      intArray5[4] = (-942);
      intArray5[5] = (-942);
      intArray5[6] = (-942);
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1114111;
      intArray0[1] = (-4409);
      intArray0[2] = 4296;
      intArray0[3] = 369;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      assertArrayEquals(new int[] {4296, 369, 1114111, (-4409)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      charClass0.appendClassWithSign(intArray0, 128247);
      intArray0[0] = 128247;
      intArray0[1] = 2001;
      intArray0[2] = 0;
      charClass0.cleanClass();
      intArray0[3] = 505;
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      int[][] intArray1 = new int[3][7];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = (-2893);
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      charClass2.appendTable(intArray1);
      int[][] intArray3 = new int[4][3];
      intArray3[0] = intArray0;
      intArray3[1] = intArray0;
      intArray3[2] = intArray0;
      intArray3[3] = intArray0;
      charClass1.appendNegatedTable(intArray3);
      charClass1.negateClass();
      CharClass.charClassToString(intArray0, intArray0[2]);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      charClass1.cleanClass();
      int[] intArray1 = charClass0.toArray();
      assertArrayEquals(new int[] {0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-4070965);
      intArray0[1] = 1;
      intArray0[2] = (-368);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 6644);
      int[] intArray1 = new int[0];
      charClass1.appendClassWithSign(intArray1, 1);
      assertArrayEquals(new int[] {(-4070965), 1, (-368), 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 0;
      intArray0[0] = 0;
      int int1 = 2635;
      intArray0[1] = 2635;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 2635);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.appendLiteral(0, (-3005));
      int[][] intArray0 = new int[0][4];
      CharClass charClass4 = charClass3.appendNegatedTable(intArray0);
      CharClass charClass5 = charClass4.appendTableWithSign(intArray0, 0);
      charClass5.appendTableWithSign(intArray0, 0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-3005);
      intArray1[1] = (-3005);
      intArray1[2] = (-3005);
      String string0 = CharClass.charClassToString(intArray1, (-3005));
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[0];
      CharClass charClass1 = new CharClass();
      charClass1.toArray();
      int[][] intArray2 = new int[0][6];
      charClass0.appendNegatedTable(intArray2);
      assertArrayEquals(new int[] {0, 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendLiteral(0, (-3005));
      int[][] intArray0 = new int[1][4];
      charClass2.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedRange(4, (-3436));
      charClass2.appendLiteral((-2109), 2136);
      int[][] intArray1 = new int[8][0];
      int[] intArray2 = new int[4];
      intArray2[0] = 4;
      intArray2[1] = (-2109);
      intArray2[2] = (-2109);
      intArray2[3] = 4;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, (-2109));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, (-2220));
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[3][8];
      charClass1.appendNegatedClass(intArray0);
      charClass1.appendTableWithSign(intArray1, (-1608));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 8204;
      intArray1[1] = (-1171);
      intArray1[2] = 66639;
      intArray1[3] = (-3326);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray1);
      charClass0.toArray();
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[][] intArray0 = new int[4][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 407;
      intArray1[1] = (-1079);
      intArray1[2] = 1;
      intArray1[3] = 8525;
      intArray1[4] = 4;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 66640;
      intArray2[2] = 8525;
      int[][] intArray3 = new int[7][6];
      intArray3[0] = intArray2;
      intArray3[1] = intArray1;
      intArray3[2] = intArray2;
      intArray3[3] = intArray1;
      intArray3[4] = intArray1;
      intArray3[5] = intArray1;
      intArray3[6] = intArray1;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray3);
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 1204;
      intArray0[3] = 1517;
      intArray0[4] = 1764;
      intArray0[5] = 8031;
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 1517;
      intArray1[2] = 1517;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray1, 0);
      CharClass charClass2 = charClass1.appendRange(1517, 1114111);
      int[][] intArray2 = new int[8][4];
      intArray2[0] = intArray1;
      intArray2[1] = intArray0;
      intArray2[2] = intArray0;
      intArray2[3] = intArray1;
      intArray2[4] = intArray0;
      intArray2[5] = intArray0;
      int[] intArray3 = new int[6];
      intArray3[1] = 1114111;
      intArray3[2] = 1114111;
      intArray3[4] = 8031;
      intArray3[5] = 0;
      intArray2[6] = intArray3;
      intArray2[7] = intArray0;
      CharClass charClass3 = charClass2.appendNegatedTable(intArray2);
      // Undeclared exception!
      charClass3.appendFoldedClass(intArray0);
  }
}
