/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 08:20:22 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.selector.AndSelector;
import us.codecraft.webmagic.selector.Html;
import us.codecraft.webmagic.selector.Json;
import us.codecraft.webmagic.selector.JsonPathSelector;
import us.codecraft.webmagic.selector.OrSelector;
import us.codecraft.webmagic.selector.RegexSelector;
import us.codecraft.webmagic.selector.Selectable;
import us.codecraft.webmagic.selector.Selector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Page_ESTest extends Page_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Page page0 = Page.fail();
      Request request0 = new Request();
      Request request1 = request0.addHeader("text/xml", ", downloadSuccess=");
      Request request2 = request1.setBinaryContent(false);
      Request request3 = request0.addCookie("_cycle_tried_times", "");
      Request request4 = request2.putExtra("", request3);
      Map<String, Object> map0 = request1.getExtras();
      Request request5 = request4.setExtras(map0);
      page0.setRequest(request5);
      assertFalse(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setRawText((String) null);
      page1.getJson();
      // Undeclared exception!
      try { 
        page1.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setRawText("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-122);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)26;
      page1.setBytes(byteArray0);
      page1.setCharset((String) null);
      Json json0 = page1.getJson();
      assertTrue(page1.isDownloadSuccess());
      assertNotNull(json0);
      assertEquals(200, page1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Page page0 = new Page();
      page0.getCharset();
      page0.getTargetRequests();
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Page page0 = new Page();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte) (-60);
      page0.setBytes(byteArray0);
      page0.getRequest();
      page0.getUrl();
      page0.setUrl((Selectable) null);
      assertEquals(200, page0.getStatusCode());
      assertTrue(page0.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = Page.fail();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      page0.setHeaders(hashMap0);
      Page page2 = Page.fail();
      LinkedList<Selector> linkedList0 = new LinkedList<Selector>();
      OrSelector orSelector0 = new OrSelector(linkedList0);
      Page.fail();
      List<String> list0 = orSelector0.selectList("XPath can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).");
      page2.addTargetRequests(list0);
      page1.toString();
      page0.toString();
      page2.getRequest();
      // Undeclared exception!
      try { 
        page2.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList1);
      assertFalse(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Page page0 = new Page();
      page0.toString();
      page0.setStatusCode((-78));
      page0.getResultItems();
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Page page0 = new Page();
      boolean boolean0 = false;
      Page page1 = page0.setSkip(false);
      page0.isDownloadSuccess();
      String string0 = "";
      Page page2 = page0.setRawText("");
      page2.setSkip(true);
      Selector[] selectorArray0 = new Selector[9];
      Selector[] selectorArray1 = new Selector[4];
      Json json0 = page1.getJson();
      Class<Selector> class0 = Selector.class;
      // Undeclared exception!
      try { 
        json0.toList(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/JSON
         //
         verifyException("us.codecraft.webmagic.selector.Json", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setSkip(true);
      Request request0 = new Request("");
      Request request1 = request0.addHeader("", "@>");
      page1.putField("", request1);
      assertEquals(200, page1.getStatusCode());
      assertFalse(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0, 0L);
      boolean boolean0 = page0.isDownloadSuccess();
      assertFalse(boolean0);
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Page page0 = new Page();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      page0.setBytes(byteArray0);
      page0.setCharset(", downloadSuccess=");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0, 0L);
      Page page1 = Page.fail();
      page0.getRawText();
      assertTrue(page0.isDownloadSuccess());
      
      page1.setDownloadSuccess(false);
      page1.getTargetRequests();
      assertEquals(200, page1.getStatusCode());
      assertFalse(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Page page0 = Page.fail();
      String string0 = null;
      Page page1 = page0.setRawText((String) null);
      page1.getHeaders();
      page1.setHeaders((Map<String, List<String>>) null);
      Page page2 = new Page();
      Request request0 = new Request((String) null);
      Request request1 = request0.setMethod((String) null);
      Request request2 = request1.setUrl("");
      request2.getExtras();
      Request request3 = request2.setExtras((Map<String, Object>) null);
      Request request4 = request3.setCharset("_cycle_tried_times");
      page2.addTargetRequest(request4);
      page1.setDownloadSuccess(true);
      page2.getJson();
      page0.setUrl((Selectable) null);
      Page page3 = page1.setSkip(true);
      String string1 = "";
      // Undeclared exception!
      try { 
        page3.addTargetRequest("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getJson();
      String string0 = "invalid regex";
      Page page1 = page0.setRawText("invalid regex");
      page1.getJson();
      // Undeclared exception!
      try { 
        page1.addTargetRequest("invalid regex");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Page page0 = Page.fail();
      boolean boolean0 = page0.isDownloadSuccess();
      assertFalse(boolean0);
      
      page0.setCharset("5xxj2|q`C$ld");
      int int0 = page0.getStatusCode();
      assertEquals(200, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Page page0 = new Page();
      String string0 = "fBS [pK2";
      Page page1 = page0.setRawText("fBS [pK2");
      Page page2 = page1.setSkip(false);
      page2.getBytes();
      // Undeclared exception!
      try { 
        page1.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }
}
