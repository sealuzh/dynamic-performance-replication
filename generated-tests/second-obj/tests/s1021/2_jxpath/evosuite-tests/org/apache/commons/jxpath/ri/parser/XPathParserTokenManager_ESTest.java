/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:10:27 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.Locale;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1847, (byte)0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 1847, 1847);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = null;
      try {
        xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 22);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 22. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-9);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(dataInputStream0, (byte) (-9), 623);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)35;
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 108, (-575), (byte)98);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 99, 99);
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArrayReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset.defaultCharset();
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, (byte)0, (byte)0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(inputStreamReader0, (-1), (byte)0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)14;
      char[] charArray0 = new char[9];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 1129, (-3435));
      CharArrayReader charArrayReader3 = new CharArrayReader(charArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 122);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)121;
      pipedOutputStream0.write(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 1333, 1333, 1333);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(110);
      char[] charArray0 = new char[4];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[2] = 'b';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 110, '\u0000');
      simpleCharStream0.BeginToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-889), (-1634));
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      Charset charset1 = Charset.defaultCharset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InputStreamReader inputStreamReader1 = new InputStreamReader(dataInputStream0, charset1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, 1432, 86);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, (byte)115, (byte)115);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = '[';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 3829, 3829);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader3 = new CharArrayReader(charArray0);
      charArrayReader1.skip((-1575L));
      charArrayReader0.skip((-1));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)14, 2313);
      charArrayReader0.markSupported();
      simpleCharStream0.line = 2;
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)79, (byte)0);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
      charArrayReader0.mark(141);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(122);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-2574), 122);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, '.', 102);
      charArrayReader0.mark(80);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 118, 118);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)84;
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      charArray0[2] = 'j';
      charArray0[3] = 'i';
      charArray0[4] = '';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)28, 3132);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(122);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 'o', 'o');
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)84;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[10];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = '\u008E';
      charArray0[3] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 78, (byte)84);
      charArrayReader0.mark((-4453));
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      charArrayReader1.markSupported();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      charArrayReader0.markSupported();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-34);
      char[] charArray0 = new char[3];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = ';';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 101, 101);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-34);
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte) (-34), 13);
      charArrayReader0.mark((-1));
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)98;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = ' ';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)98, 62);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-34);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = 'n';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte) (-34), (byte) (-34));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(110);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = 'b';
      charArray0[2] = '\'';
      charArray0[3] = 'b';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 110, 75);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(110);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = 'b';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 110, 110);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = '\'';
      charArray0[3] = '3';
      charArray0[4] = '\'';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"\n\"");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 49, 49);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)71;
      char[] charArray0 = new char[6];
      charArray0[0] = 'Q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 3000, (byte)28);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset.defaultCharset();
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, (byte)116, 1096);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(inputStreamReader0, 725, 51);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      char[] charArray0 = new char[9];
      charArray0[0] = 'W';
      charArray0[5] = 'A';
      charArray0[2] = 'i';
      charArray0[3] = 'I';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 101, 101);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray1 = new char[4];
      charArray1[0] = 'c';
      charArray1[1] = 'A';
      charArray1[2] = '1';
      charArrayReader0.markSupported();
      charArray1[3] = 'W';
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G#W5RJlK=yBY@T_$hP");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Charset.defaultCharset();
      char[] charArray0 = new char[5];
      charArray0[0] = 'K';
      charArray0[1] = '.';
      charArray0[4] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.reset();
      charArrayReader1.markSupported();
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader2);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'x';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 38, 'x');
      charArrayReader0.markSupported();
      charArrayReader0.mark('x');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArrayInputStream0.read(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'J';
      charArray0[1] = '^';
      charArray0[3] = 'J';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 123, (byte)116);
      charArrayReader0.read();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(122);
      char[] charArray0 = new char[2];
      charArray0[0] = 'R';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 122, 122);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[12] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G:;@Mjfc}{Hf");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      char[] charArray0 = new char[1];
      charArray0[0] = '1';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)0, (-1980));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[2] = '\"';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader1, 2, (byte) (-34));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset.defaultCharset();
      Charset.defaultCharset();
      char[] charArray0 = new char[21];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.markSupported();
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader1, 76, 53);
      CharArrayReader charArrayReader3 = new CharArrayReader(charArray0);
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = ')';
      charArray0[1] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader1, (byte) (-124), (byte)14);
      charArrayReader0.markSupported();
      charArrayReader2.mark((byte)14);
      boolean boolean0 = simpleCharStream0.prevCharIsCR;
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)35;
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader1, (byte) (-88), (-585));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)14;
      char[] charArray0 = new char[9];
      charArray0[0] = 'f';
      charArray0[1] = 'f';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-3698), 3885);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte)79;
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '\'';
      charArray0[3] = '<';
      charArray0[4] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-2889), (byte)79);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)79;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, (byte)79, (byte)79);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[10];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = '\u008E';
      charArray0[3] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 78, (byte)0);
      charArrayReader0.mark((-4453));
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      charArrayReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 118, 2);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'u';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      charArray0[6] = 'I';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 101, 1074);
      charArrayReader0.mark((-3955));
      simpleCharStream0.prevCharIsLF = true;
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)98;
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[1] = 'A';
      charArray0[2] = '*';
      charArray0[3] = 'I';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)98, (byte)14);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)79;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset.defaultCharset();
      char[] charArray0 = new char[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      charArray0[0] = 'I';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)79, 3829);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      charArrayReader0.skip((-69L));
      charArrayReader2.skip(3829);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 1742, '&');
      simpleCharStream0.FillBuff();
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset.defaultCharset();
      Charset.defaultCharset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[2] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      char[] charArray1 = new char[3];
      charArray1[0] = 'X';
      charArray1[1] = 'X';
      charArray1[2] = 'X';
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray1);
      int int0 = 3;
      int int1 = (-1940);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-1940), 107);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)14;
      char[] charArray0 = new char[9];
      charArray0[0] = 'q';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 122, (byte)14);
      charArrayReader0.markSupported();
      charArrayReader0.mark(122);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.markSupported();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)73;
      char[] charArray0 = new char[5];
      charArray0[0] = 'B';
      Charset.defaultCharset();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)73, (byte)73);
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArrayReader0.mark(141);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '+';
      charArray0[1] = '.';
      charArray0[3] = '+';
      charArray0[4] = '%';
      charArray0[5] = '+';
      charArray0[6] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte) (-16), (byte) (-16));
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[5] = '\u008E';
      charArray0[0] = '\u008E';
      charArray0[2] = '\u008E';
      charArray0[3] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte) (-103), (-322));
      charArrayReader0.mark((byte) (-103));
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = 'V';
      charArray0[3] = 'J';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 123, (byte)116);
      charArrayReader0.read();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      charArrayReader1.markSupported();
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0);
      simpleCharStream0.GetImage();
      CharArrayReader charArrayReader3 = new CharArrayReader(charArray0);
      charArrayReader3.markSupported();
      CharArrayReader charArrayReader4 = new CharArrayReader(charArray0);
      charArrayReader3.mark((-1));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArrayReader2.mark(1853);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader2);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(122);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)0;
      byteArray0[0] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader1, (byte)0, 181);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleCharStream0.FillBuff();
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      boolean boolean0 = SimpleCharStream.staticFlag;
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, 3147, 3147, (byte)79);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[7];
      charArray0[0] = 'u';
      charArray0[2] = 'I';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("e3JBD'_5}");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1074, 697);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      boolean boolean0 = SimpleCharStream.staticFlag;
      simpleCharStream0.prevCharIsCR = false;
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(110);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 110, 'Y');
      simpleCharStream0.BeginToken();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = '_';
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 2282, 2282);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArrayReader0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-322), (-4032));
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.markSupported();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = '\u008D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)14, 2313);
      charArrayReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleCharStream0.line = 2;
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte) (-103);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[11];
      byteArray1[0] = (byte)56;
      byteArray1[1] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.mark((byte) (-103));
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = new byte[11];
      byteArray1[0] = (byte)56;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.mark((byte)0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = 'H';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '%';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)84, '%');
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Charset.defaultCharset();
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[2] = 'E';
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 467, 467);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)79;
      boolean boolean0 = SimpleCharStream.staticFlag;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, (byte)79, (byte)79);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G#W5RJlK=yBY@T_$hP");
      Charset.defaultCharset();
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = '2';
      charArray0[4] = '2';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.reset();
      charArrayReader1.markSupported();
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader2);
      CharArrayReader charArrayReader3 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader4 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader5 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader2, (-3537), (-2317));
      charArrayReader5.markSupported();
      charArrayReader4.mark(3);
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(lineNumberReader0, (byte)14, 0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)67, (byte)67);
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("v@.fDA[Lm#PIF(b:Oq8");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-2256), (byte)84, 2114);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G#W5RJlK=yBY@T_$hP");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      char[] charArray0 = new char[7];
      charArray0[0] = ';';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&%J");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 72, 72);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)84;
      byteArray0[3] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[14];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[3] = 'G';
      charArray0[5] = 'G';
      charArray0[6] = 'G';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      boolean boolean0 = simpleCharStream0.prevCharIsCR;
      simpleCharStream0.ReInit((Reader) charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[1];
      charArray0[0] = 'U';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (byte)35, 20);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte byte0 = (byte) (-88);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)33;
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)33;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      inputStreamReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)84;
      char[] charArray0 = new char[1];
      charArray0[0] = '=';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-56), (byte)84);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[14] = (byte)14;
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = '&';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-494), (byte)14);
      simpleCharStream0.FillBuff();
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray1 = new byte[0];
      byteArrayInputStream0.close();
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      charArray0[3] = '?';
      charArray0[4] = '?';
      charArray0[5] = '?';
      charArray0[6] = '?';
      charArray0[7] = '?';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
      byteArrayInputStream0.reset();
      simpleCharStream0.adjustBeginLineColumn(55, (-1837));
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = '.';
      charArray0[2] = '%';
      charArray0[3] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 29, 29);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[5] = ';';
      charArray0[1] = '4';
      char char0 = 'B';
      charArray0[2] = 'B';
      charArray0[3] = 'M';
      charArray0[5] = 'M';
      charArray0[6] = 'M';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 56, 0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)124;
      byteArray0[2] = (byte)124;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
      simpleCharStream0.prevCharIsCR = false;
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)115;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[1] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream2, charset0);
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '?';
      charArray0[2] = 'C';
      charArray0[3] = '1';
      charArray0[4] = 'I';
      charArray0[5] = 'Z';
      charArray0[6] = ';';
      charArray0[7] = 'x';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 2313, (byte)14);
      charArrayReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[19];
      charArray0[0] = 'h';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pipedInputStream0);
      simpleCharStream1.tokenBegin = (-2423);
      boolean boolean1 = simpleCharStream1.prevCharIsCR;
      simpleCharStream0.ReInit((Reader) charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G#W5RJlK=yBY@T_$hP");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Charset.defaultCharset();
      char[] charArray0 = new char[5];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 0, 0);
      charArrayReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)79;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";kn@W%");
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0, (byte)79, (byte)79);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'a';
      charArray0[1] = '`';
      charArray0[2] = '~';
      charArray0[3] = 'n';
      charArray0[4] = 'N';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }
}
