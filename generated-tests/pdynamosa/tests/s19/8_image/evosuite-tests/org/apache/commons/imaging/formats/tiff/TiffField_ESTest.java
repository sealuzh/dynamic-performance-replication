/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 04:46:25 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)127;
      byteArray0[5] = (byte)127;
      TiffField tiffField0 = new TiffField((byte)64, 1815, fieldTypeRational0, 328L, 2201L, byteArray0, byteOrder0, (-418));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(64, tiffField0.getTag());
      assertEquals((-418), tiffField0.getSortHint());
      assertEquals(1815, tiffField0.getDirectoryType());
      assertEquals(256, int0);
      assertEquals(2201, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (-731), fieldTypeByte0, 0, (byte) (-1), byteArray0, byteOrder0, 2);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-731), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3127), (-3127), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3127), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-3127), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(400, 1071, fieldTypeDouble0, 5, 29136L, byteArray0, byteOrder0, 1071);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getTag());
      assertEquals(1071, tiffField0.getSortHint());
      assertEquals(1071, tiffField0.getDirectoryType());
      assertEquals(400, tagInfo0.tag);
      assertEquals(29136, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2193), fieldTypeRational0.SHORT, (byte) (-95), (-570L), byteArray0, byteOrder0, 1276);
      int int0 = tiffField0.getTag();
      assertEquals(1276, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-2193), tiffField0.getDirectoryType());
      assertEquals((-570), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1118, 1118, (FieldType) null, 1L, 2772L, byteArray0, (ByteOrder) null, (byte)63);
      int int0 = tiffField0.getTag();
      assertEquals(1118, int0);
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(1118, tiffField0.getDirectoryType());
      assertEquals(2772, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeAscii0, 943, 1535L, byteArray0, byteOrder0, 943);
      String string0 = tiffField0.getStringValue();
      assertEquals(943, tiffField0.getTag());
      assertEquals(1535, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(943, tiffField0.getSortHint());
      assertEquals(943, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(5037, 1022, (FieldType) null, 0L, 5037, byteArray0, byteOrder0, (byte)85);
      int int0 = tiffField0.getSortHint();
      assertEquals(1022, tiffField0.getDirectoryType());
      assertEquals(85, int0);
      assertEquals(5037, tiffField0.getTag());
      assertEquals(5037, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2586, ".");
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-4336), (-4336), fieldTypeDouble0, 2586, 2586, byteArray0, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getSortHint();
      assertEquals((-110), int0);
      assertEquals((-4336), tiffField0.getDirectoryType());
      assertEquals((-4336), tiffField0.getTag());
      assertEquals(2586, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), 0, fieldTypeDouble0, (-3127), 0, (byte[]) null, byteOrder0, (byte) (-4));
      int int0 = tiffField0.getOffset();
      assertEquals((-4), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2120, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2120, 2120, fieldTypeRational0, 2120, 2120, byteArray0, byteOrder0, 42112);
      int int0 = tiffField0.getOffset();
      assertEquals(2120, tiffField0.getTag());
      assertEquals(2120, tiffField0.getDirectoryType());
      assertEquals(2120, int0);
      assertEquals(42112, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1599, (byte)55, fieldTypeShort0, (byte)55, (byte)55, byteArray0, byteOrder0, (-2099));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(55, int0);
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getOffset());
      assertEquals((-2099), tiffField0.getSortHint());
      assertEquals(1599, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-11);
      TiffField tiffField0 = new TiffField((-1758), 1143, fieldTypeLong0, 1143, (-1758), byteArray0, (ByteOrder) null, (byte) (-11));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(1143, tiffField0.getDirectoryType());
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals((-1758), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40960, "StripByteCounts");
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)79;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40960, 1, fieldTypeFloat0, 1, (-199L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(40960, tiffField0.getTag());
      assertEquals((-199), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-73);
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1008, 1763, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)19);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(1763, tiffField0.getDirectoryType());
      assertEquals(1008, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1522), (-3127), fieldTypeDouble0, (-3127), (-1522), byteArray0, byteOrder0, (-2877));
      tiffField0.getFieldTypeName();
      assertEquals((-2877), tiffField0.getSortHint());
      assertEquals((-1522), tiffField0.getTag());
      assertEquals((-3127), tiffField0.getDirectoryType());
      assertEquals((-1522), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-549), fieldTypeAscii0, 2147483647L, (-361L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals((-549), tiffField0.getDirectoryType());
      assertEquals((-361), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4642, (-1934), (FieldType) null, 1414L, (-1934), byteArray0, byteOrder0, (byte)8);
      tiffField0.getFieldType();
      assertEquals(4642, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals((-1934), tiffField0.getOffset());
      assertEquals((-1934), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "b5FkFe&R(vZz_:~w");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-648), 4114, fieldTypeFloat0, 4114, 255L, byteArray0, byteOrder0, 50974);
      tiffField0.getFieldType();
      assertEquals(50974, tiffField0.getSortHint());
      assertEquals((-648), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(4114, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2139192204), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147173092), 0, fieldTypeLong0, (-2139192204), (-2139192204), byteArray0, byteOrder0, (byte)114);
      tiffField0.getFieldType();
      assertEquals(114, tiffField0.getSortHint());
      assertEquals((-2139192204), tiffField0.getOffset());
      assertEquals((-2147173092), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-838), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-838), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40960, "StripByteCounts");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40960, 1, fieldTypeFloat0, 1, (-199L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(40960, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-199), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-127);
      TiffField tiffField0 = new TiffField(2146948782, (-3008), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, 33723);
      tiffField0.getDoubleValue();
      assertEquals((-3008), tiffField0.getDirectoryType());
      assertEquals(33723, tiffField0.getSortHint());
      assertEquals(2146948782, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, "j");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 0L, byteArray0, byteOrder0, 1261);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1261, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-838), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-838), int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-838), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals((-838), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-95), (byte) (-95), fieldTypeRational0, (-1975L), 1276, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(1276, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-95), tiffField0.getTag());
      assertEquals((-95), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2480), 0, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2480), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeDouble0.SSHORT, (-9824L), 0, (byte[]) null, byteOrder0, (-1238));
      tiffField0.getBytesLength();
      assertEquals((-1238), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (byte)119, fieldTypeByte0, (-2832), 2919, byteArray0, byteOrder0, 2);
      tiffField0.getByteOrder();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(2919, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1276, 41, fieldTypeRational0, 0L, 41, byteArray0, byteOrder0, 1276);
      tiffField0.getByteArrayValue();
      assertEquals(1276, tiffField0.getTag());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(1276, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147379829, (-353), fieldTypeFloat0, 4L, 1386L, byteArray0, (ByteOrder) null, (-353));
      MockFile mockFile0 = new MockFile("D}iQB;3C^4o2MgroTD");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(54L, mockFile0.length());
      assertEquals((-353), tiffField0.getSortHint());
      assertEquals((-353), tiffField0.getDirectoryType());
      assertEquals(1386, tiffField0.getOffset());
      assertEquals(2147379829, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), (byte) (-4), fieldTypeDouble0, 0, (byte) (-4), (byte[]) null, byteOrder0, (byte) (-4));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.constants.HylaFaxTagConstants");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2700, "<^hh!S^=[@O>dCO^");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2516), (-2516), fieldTypeAscii0, (-48L), (-250L), byteArray0, byteOrder0, 2700);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1192), (-1192), (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte) (-16));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-4), (byte)0, fieldTypeDouble0, (byte) (-95), 5517L, byteArray0, byteOrder0, (byte) (-95));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4642, (-1934), (FieldType) null, 1414L, (-1934), byteArray0, byteOrder0, (byte)8);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3127), (byte)0, fieldTypeDouble0, 2147483647L, 65535L, byteArray0, byteOrder0, 424);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2660, 41996, fieldTypeRational0, 2343L, (byte)0, byteArray0, byteOrder0, (byte)119);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, (byte) (-51));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2063, 2520, fieldTypeAscii0, (-3465L), (-3465L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-95), (byte) (-95), fieldTypeRational0, (-1975L), 1276, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1170, (FieldType) null, 631L, 631L, byteArray0, byteOrder0, (-1496));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      MockFile mockFile0 = new MockFile(",=^C&C8r\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1951, 1153, fieldTypeFloat0, 1L, (-288L), byteArray0, (ByteOrder) null, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Missing value: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(41728, (byte)0, fieldTypeByte0.FLOAT, 0, 41728, byteArray0, (ByteOrder) null, 41728);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2651), (-2651), fieldTypeShort0, 20688L, 4L, byteArray0, byteOrder0, (byte) (-40));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3512, "ExtraCameraProfiles");
      TiffField tiffField0 = new TiffField(2, (byte)0, fieldTypeFloat0, (-25016L), 2147379829, (byte[]) null, (ByteOrder) null, 3512);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3512, tiffField0.getSortHint());
      assertEquals(2147379829, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(33550, "{<1U/h!%S)3H'Qq");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(33550, 33550, fieldTypeRational0, 33550, (-1061L), byteArray0, (ByteOrder) null, 1);
      tiffField0.getByteOrder();
      assertEquals(33550, tiffField0.getTag());
      assertEquals(33550, tiffField0.getDirectoryType());
      assertEquals((-1061), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(153, 153, fieldTypeAscii0, 1188L, 153, byteArray0, byteOrder0, 153);
      tiffField0.getByteArrayValue();
      assertEquals(153, tiffField0.getOffset());
      assertEquals(153, tiffField0.getTag());
      assertEquals(153, tiffField0.getDirectoryType());
      assertEquals(153, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), 0, fieldTypeDouble0, (-3127), 0, (byte[]) null, byteOrder0, (byte) (-4));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, (byte)0, fieldTypeByte0.RATIONAL, 968L, (byte)0, byteArray0, byteOrder0, 8);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-549), fieldTypeShort0.ASCII, 2147483647L, (-361L), byteArray0, byteOrder0, 0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      tiffField0.getValue();
      assertEquals((-549), tiffField0.getDirectoryType());
      assertEquals((-361), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-2876), fieldTypeDouble0, (-2147483648L), 1256L, byteArray0, byteOrder0, (-1163));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1163), tiffField0.getSortHint());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-2876), tiffField0.getDirectoryType());
      assertEquals(1256, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2700, "<^hh!S^=[@O>dCO^");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2516), (-2516), fieldTypeAscii0, (-48L), (-250L), byteArray0, byteOrder0, 2700);
      int int0 = tiffField0.getTag();
      assertEquals((-2516), int0);
      assertEquals((-2516), tiffField0.getDirectoryType());
      assertEquals((-250), tiffField0.getOffset());
      assertEquals(2700, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3127), (-3127), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3127), tiffField0.getTag());
      assertEquals((-3127), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), 143, fieldTypeDouble0, 0, 143, (byte[]) null, byteOrder0, (byte) (-4));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-4), tiffField0.getTag());
      assertEquals(143, tiffField0.getOffset());
      assertEquals(143, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, (byte)0, fieldTypeByte0.SRATIONAL, 968L, (-2832L), byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-2832), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("8 (0x8: Unknown Tag): ", string0);
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(893, (byte)7, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)7);
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(893, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "b5FkFe&R(vZz_:~w");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-648), 4114, fieldTypeFloat0, 4114, 255L, byteArray0, byteOrder0, 50974);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4ec38a34 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1758), 1143, fieldTypeLong0, 1143, (-1758), byteArray0, (ByteOrder) null, (byte) (-11));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1758), tiffField0.getTag());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals(1143, tiffField0.getDirectoryType());
      assertEquals(4572, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147214303, 740, fieldTypeDouble0, 1L, (-2679L), byteArray0, byteOrder0, 740);
      tiffField0.getIntValueOrArraySum();
      assertEquals(740, tiffField0.getSortHint());
      assertEquals(2147214303, tiffField0.getTag());
      assertEquals(740, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2679), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte) (-4));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "b5FkFe&R(vZz_:~w");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-648), 4114, fieldTypeFloat0, 4114, 255L, byteArray0, byteOrder0, 50974);
      tiffField0.getDoubleArrayValue();
      assertEquals(4114, tiffField0.getDirectoryType());
      assertEquals((-648), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(50974, tiffField0.getSortHint());
      assertEquals(16456, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(5, (-790), fieldTypeLong0, 39L, 39L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(5, tiffField0.getTag());
      assertEquals(39, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-790), tiffField0.getDirectoryType());
      assertEquals(156, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2795, fieldTypeByte0, 445L, 2795, byteArray0, byteOrder0, (-1291));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@17341254 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1599, (byte)55, fieldTypeShort0, (byte)55, (byte)55, byteArray0, byteOrder0, (-2099));
      tiffField0.getDoubleArrayValue();
      assertEquals(55, tiffField0.getOffset());
      assertEquals((-2099), tiffField0.getSortHint());
      assertEquals(1599, tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(110, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 41992, fieldTypeRational0, 4, 4L, byteArray0, byteOrder0, (byte) (-33));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(41992, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(893, (byte)7, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)7);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(893, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, (-523), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).FLOAT).LONG, (byte)32, 328L, byteArray0, byteOrder0, (-748));
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals(328, tiffField0.getOffset());
      assertEquals((-523), tiffField0.getDirectoryType());
      assertEquals((-748), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2651), (-2651), fieldTypeShort0, 20688L, 4L, byteArray0, byteOrder0, (byte) (-40));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals((-2651), tiffField0.getTag());
      assertEquals(41376, tiffField0.getBytesLength());
      assertEquals((-2651), tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(5, "#kZ");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1717986918, 5, fieldTypeShort0, (byte)0, (-288L), byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-288), tiffField0.getOffset());
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)20, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(8, 65110, fieldTypeRational0, 687L, 687L, byteArray0, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, (byte)0, fieldTypeByte0.RATIONAL, 968L, (byte)0, byteArray0, byteOrder0, 8);
      tiffField0.getIntArrayValue();
      assertEquals(7744, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147214303, 740, fieldTypeDouble0, 1L, (-2679L), byteArray0, byteOrder0, 740);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2679), tiffField0.getOffset());
      assertEquals(2147214303, tiffField0.getTag());
      assertEquals(740, tiffField0.getDirectoryType());
      assertEquals(740, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@e0e51f0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(153, 153, fieldTypeAscii0, 1188L, 153, byteArray0, byteOrder0, 153);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@77dc4a90
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeAscii0, 943, 1535L, byteArray0, byteOrder0, 943);
      String string0 = tiffField0.getStringValue();
      assertEquals(943, tiffField0.getBytesLength());
      assertEquals(1535, tiffField0.getOffset());
      assertEquals(943, tiffField0.getSortHint());
      assertEquals(943, tiffField0.getTag());
      assertEquals(943, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeLong0, 39L, 39L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x5)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34735, (-2671), fieldTypeDouble0, (-1444L), 1L, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getTagName();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-2671), tiffField0.getDirectoryType());
      assertEquals((-11552), tiffField0.getBytesLength());
      assertEquals("GeoKeyDirectoryTag", string0);
      assertEquals(34735, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[76];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeFloat0, 103, 103, byteArray0, byteOrder0, 103);
      String string0 = tiffField0.getValueDescription();
      assertEquals(103L, tiffField0.getCount());
      assertEquals(412, tiffField0.getBytesLength());
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getTag());
      assertEquals(103, tiffField0.getOffset());
      assertEquals(103, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 7, fieldTypeByte0, 7, 7, byteArray0, byteOrder0, 50);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "?*kTieP_");
      assertEquals(46, charArrayWriter0.size());
      assertEquals(7, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-1520), (-1520), fieldTypeByte0, 50932, 50932, byteArray0, byteOrder0, 1075);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1520), tiffField0.getTag());
      assertEquals(50932L, tiffField0.getCount());
      assertEquals((-1520), tiffField0.getDirectoryType());
      assertEquals(1075, tiffField0.getSortHint());
      assertEquals(50932, tiffField0.getBytesLength());
      assertEquals(50932, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65, 0, fieldTypeDouble0, 1093L, 65, byteArray0, byteOrder0, 33922);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8744, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1093L, tiffField0.getCount());
      assertEquals(33922, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getTag());
      assertEquals(65, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(38, 1, fieldTypeLong0, 68L, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals("38 (0x26: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (68 SLong)", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65534, 1192, fieldTypeShort0.LONG, 12, 12, byteArray0, byteOrder0, 3301);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1192, tiffField0.getDirectoryType());
      assertEquals(12L, tiffField0.getCount());
      assertEquals(3301, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(48, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(65534, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(517, 103, fieldTypeShort0, 103, 517L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(103L, tiffField0.getCount());
      assertEquals(517, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(206, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(517, tiffField0.getOffset());
      assertEquals(103, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(5, (-1), fieldTypeRational0.ASCII, 2962L, 29136L, byteArray0, byteOrder0, (-418));
      String string0 = tiffField0.getValueDescription();
      assertEquals(29136, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals(2962, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-418), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(153, 153, fieldTypeAscii0, 1188L, 153, byteArray0, byteOrder0, 153);
      String string0 = tiffField0.getValueDescription();
      assertEquals(153, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(153, tiffField0.getSortHint());
      assertEquals(153, tiffField0.getTag());
      assertEquals(153, tiffField0.getOffset());
      assertEquals(1188, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "J2 MX@G6~E&L!");
      TiffField tiffField0 = new TiffField(1534, 2073432487, fieldTypeAscii0, 1873L, 0L, byteArray0, byteOrder0, 2947);
      tiffField0.toString();
      assertEquals(2947, tiffField0.getSortHint());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1873, tiffField0.getBytesLength());
      assertEquals(1534, tiffField0.getTag());
      assertEquals(1873L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-838), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-838), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 7, fieldTypeByte0, 7, 7, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (byte)119, fieldTypeByte0, (-2832), 2919, byteArray0, byteOrder0, 2);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2147462186), 2919);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2919, tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), 143, fieldTypeDouble0, 0, 143, (byte[]) null, byteOrder0, (byte) (-4));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-4), 2128);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(143, tiffField0.getOffset());
      assertEquals((-4), tiffField0.getTag());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(143, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-819), (byte)0, fieldTypeByte0, 4L, 2321L, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-819), tiffField0.getTag());
      assertEquals(2321, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "J2 MX@G6~E&L!");
      TiffField tiffField0 = new TiffField(1534, 2073432487, fieldTypeAscii0, 1873L, 0L, byteArray0, byteOrder0, 2947);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2947, tiffField0.getSortHint());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(1534, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(69, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 2362L, (-1485L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2362L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1485), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3127), (byte) (-4), fieldTypeDouble0, 4L, (-3127), (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-3127), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals((-3127), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1102), (-1102), fieldTypeByte0, (-1102), 3986L, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-838), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals((-838), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-2876), fieldTypeDouble0, (-2147483648L), 1256L, byteArray0, byteOrder0, (-1114));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1256, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1114), tiffField0.getSortHint());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-2876), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3512, "ExtraCameraProfiles");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41728, (byte)0, fieldTypeFloat0.LONG, (byte) (-53), (-3082L), byteArray0, (ByteOrder) null, (byte) (-53));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65548, 41484, fieldTypeFloat0, 65548, 65548, byteArray0, byteOrder0, (-3240));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(262192, tiffField0.getBytesLength());
      assertEquals(65548L, tiffField0.getCount());
      assertEquals((-3240), tiffField0.getSortHint());
      assertEquals(65548, tiffField0.getTag());
      assertEquals(65548, tiffField0.getOffset());
      assertEquals(41484, tiffField0.getDirectoryType());
  }
}
