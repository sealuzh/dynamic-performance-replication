/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:18:03 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(527, 980, fieldTypeRational0, 527, 2957L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(980, tiffField0.getDirectoryType());
      assertEquals(2957, tiffField0.getOffset());
      assertEquals(527, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-6), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(527, 980, fieldTypeRational0, 527, 2957L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(980, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(527, tiffField0.getTag());
      assertEquals(2957, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "The strings must not be null");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1372, fieldTypeRational0, 0, 1372, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1372, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1372, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3050, 3050, fieldTypeRational0, 3050, 3050, byteArray0, byteOrder0, 3262);
      int int0 = tiffField0.getSortHint();
      assertEquals(3050, tiffField0.getOffset());
      assertEquals(3262, int0);
      assertEquals(3050, tiffField0.getTag());
      assertEquals(3050, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1717986917), "He^l65L");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 4910L, byteArray0, byteOrder0, (-218));
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getTag());
      assertEquals(4910, int0);
      assertEquals((-218), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1908874352), (-1908874352), fieldTypeShort0, (-1908874352), (-1908874352), byteArray0, byteOrder0, (-3203));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1908874352), tiffField0.getOffset());
      assertEquals((-3203), tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals((-1908874352), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)122;
      byteArray0[7] = (byte)82;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeLong0, 2317L, 2317L, byteArray0, byteOrder0, 150);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2317, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(150, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(8, "[IBizq(9qMVQ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(865, 8, fieldTypeRational0, 8, 4294967294L, byteArray0, byteOrder0, (-2559));
      tiffField0.getFieldType();
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(865, tiffField0.getTag());
      assertEquals((-2559), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32933, 0, fieldTypeLong0, 32933, 32933, byteArray0, byteOrder0, (-1089));
      tiffField0.getCount();
      assertEquals(32933, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1089), tiffField0.getSortHint());
      assertEquals(32933, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1908874352), (-1908874352), fieldTypeShort0, (-1908874352), (-1908874352), byteArray0, byteOrder0, (-3203));
      tiffField0.getByteArrayValue();
      assertEquals((-3203), tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2511, "entry.directoryType: ");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 2147376257, fieldTypeFloat0, 2511, 4L, byteArray0, byteOrder0, 50);
      File file0 = MockFile.createTempFile("entry.directoryType: ", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(55L, file0.length());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, Integer.MAX_VALUE, fieldTypeLong0, (-351L), Integer.MAX_VALUE, byteArray0, byteOrder0, (-2147364322));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-623), 41491, (FieldType) null, (-623), (-2474L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147424890), 1672, fieldTypeDouble0, (-1L), 1672, byteArray0, byteOrder0, (-3182));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(263, "`8n=CKr");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3406), 0, fieldTypeFloat0, (-1360L), 0, byteArray0, byteOrder0, 0);
      MockFile mockFile0 = new MockFile("`8n=CKr");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "`8n=CKr");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(527, 980, fieldTypeRational0, 527, 2957L, byteArray0, byteOrder0, (byte) (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(527, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(980, tiffField0.getDirectoryType());
      assertEquals(2957, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(8, "[IBizq(9qMVQ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(865, 8, fieldTypeRational0, 8, 4294967294L, byteArray0, byteOrder0, (-2559));
      fieldTypeRational0.getValue(tiffField0);
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(865, tiffField0.getTag());
      assertEquals((-2559), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1717986917), "He^l65L");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 4910L, byteArray0, byteOrder0, (-218));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(4910, tiffField0.getOffset());
      assertEquals((-218), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145, 2145, fieldTypeRational0, 0L, 2145, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getValue();
      assertEquals(2145, tiffField0.getOffset());
      assertEquals(2145, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2145, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1529), "Unknown: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 8960L, (-1706L), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1706), int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(9, (byte)23, fieldTypeShort0.ASCII, (byte)34, (-1226L), byteArray0, (ByteOrder) null, (byte)5);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1226), tiffField0.getOffset());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-524), (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1742), (-1742), fieldTypeLong0, (-524), 0L, byteArray0, (ByteOrder) null, 427);
      int int0 = tiffField0.getTag();
      assertEquals((-1742), int0);
      assertEquals(427, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1742), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-78), 65533, fieldTypeLong0, 0, (byte) (-1), byteArray0, byteOrder0, (byte)1);
      tiffField0.getCount();
      assertEquals(65533, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-78), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1068, (-2145916140), fieldTypeRational0, (-2145916140), (-2145916140), byteArray0, byteOrder0, (-2145916140));
      tiffField0.getBytesLength();
      assertEquals((-2145916140), tiffField0.getOffset());
      assertEquals((-2145916140), tiffField0.getDirectoryType());
      assertEquals((-2145916140), tiffField0.getSortHint());
      assertEquals(1068, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1068, (-2145916140), fieldTypeRational0, (-2145916140), (-2145916140), byteArray0, byteOrder0, (-2145916140));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1155, "6W\"CR!32&@\"XLsV9");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-167), (-1082), fieldTypeDouble0, 1155, (-5792L), byteArray0, byteOrder0, (-3345));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1205, 258, fieldTypeFloat0, 258, 385L, byteArray0, byteOrder0, (byte)2);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@79a4842f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "!;&^(<YxhP{");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2144569830, (-1546), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 3286);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-2301L), byteArray0, byteOrder0, (-1162));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@89f408f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-215), "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(587, 587, fieldTypeDouble0, 237L, 255L, byteArray0, byteOrder0, (byte)10);
      tiffField0.getDoubleArrayValue();
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(587, tiffField0.getDirectoryType());
      assertEquals(587, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32933, 0, fieldTypeLong0, 32933, 32933, byteArray0, byteOrder0, (-1089));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1089), tiffField0.getSortHint());
      assertEquals(32933, tiffField0.getTag());
      assertEquals(32933, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2511, "entry.directoryType: ");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 2147376257, fieldTypeFloat0, 2511, 4L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2147376257, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34022, (-504), fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, (byte) (-110));
      tiffField0.getDoubleArrayValue();
      assertEquals((-504), tiffField0.getDirectoryType());
      assertEquals(34022, tiffField0.getTag());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeRational0, 664L, 664L, byteArray0, byteOrder0, (byte)57);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals(700, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(664, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "!;&^(<YxhP{");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2144569830, (-1546), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 3286);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1546), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3286, tiffField0.getSortHint());
      assertEquals(2144569830, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeDouble0, 37391, 0L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1573243 for: 37391 (0x920f: FocalPlaneYResolution): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1320), (-2145838065), fieldTypeShort0, (-2145838065), 4038L, byteArray0, byteOrder0, (byte)12);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(12, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-2145838065), tiffField0.getDirectoryType());
      assertEquals((-1320), tiffField0.getTag());
      assertEquals(4038, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 81, fieldTypeRational0, 600L, (-1577L), byteArray0, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1068, (-2145916140), fieldTypeRational0, (-2145916140), (-2145916140), byteArray0, byteOrder0, (-2145916140));
      assertEquals(12540064, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(1068, tiffField0.getTag());
      assertEquals((-2145916140), tiffField0.getDirectoryType());
      assertEquals((-2145916140), tiffField0.getSortHint());
      assertEquals((-2145916140), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1106, 1, fieldTypeByte0, 1, 1106, byteArray0, byteOrder0, (byte)2);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1106, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1106, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1673, 66, fieldTypeLong0, 0L, 520L, byteArray0, byteOrder0, 66);
      tiffField0.getIntArrayValue();
      assertEquals(520, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(1673, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-75);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-280), 1952257861, fieldTypeAscii0, 1952257861, 1326L, byteArray0, byteOrder0, (-806));
      String string0 = tiffField0.getStringValue();
      assertEquals((-280), tiffField0.getTag());
      assertEquals(1952257861, tiffField0.getDirectoryType());
      assertEquals(1952257861, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1326, tiffField0.getOffset());
      assertEquals((-806), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3050, 3050, fieldTypeRational0, 3050, 3050, byteArray0, byteOrder0, 3262);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@5af1bf9b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1673, 66, fieldTypeLong0, 0L, 520L, byteArray0, byteOrder0, 66);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x689)", string0);
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeDouble0, 37391, 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals(37391, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("FocalPlaneYResolution", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 3316L, (-2147483648L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(3316, tiffField0.getBytesLength());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("50 (0x32: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (3316 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3438), "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3756), (-3756), fieldTypeDouble0, 4L, (-3756), byteArray0, byteOrder0, 3837);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3837, tiffField0.getSortHint());
      assertEquals((-3756), tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-3756), tiffField0.getOffset());
      assertEquals((-3756), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2021, 1, fieldTypeLong0, 34L, 1L, byteArray0, (ByteOrder) null, (byte) (-54));
      String string0 = tiffField0.toString();
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals(136, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("2021 (0x7e5: Unknown Tag): 0, 0 (34 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1205, 258, fieldTypeFloat0, 258, 385L, byteArray0, byteOrder0, (byte)2);
      tiffField0.dump();
      assertEquals(258L, tiffField0.getCount());
      assertEquals(258, tiffField0.getDirectoryType());
      assertEquals(1205, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(385, tiffField0.getOffset());
      assertEquals(1032, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34022, (-504), fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, (byte) (-110));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-110), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0", string0);
      assertEquals(4L, tiffField0.getCount());
      assertEquals(34022, tiffField0.getTag());
      assertEquals((-504), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1529), "Unknown: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 8960L, (-1706L), byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1706), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(8960, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "zuyyV|s(");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte) (-127);
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 746, fieldTypeAscii0, 60L, 746, byteArray0, byteOrder0, 3911);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 3283L, byteArray0, byteOrder0, 110);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)13);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(59, byteArrayOutputStream0.size());
      assertEquals(110, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, 3788, fieldTypeByte0, (-2301L), (-1L), byteArray0, byteOrder0, 4020);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)50, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(3788, tiffField0.getDirectoryType());
      assertEquals(33421, tiffField0.getTag());
      assertEquals((-2301L), tiffField0.getCount());
      assertEquals(4020, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1673, 66, fieldTypeLong0, 0L, 520L, byteArray0, byteOrder0, 66);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 2254);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(520, tiffField0.getOffset());
      assertEquals(1673, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1673, 66, fieldTypeLong0, 0L, 520L, byteArray0, byteOrder0, 66);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(520, tiffField0.getOffset());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(1673, tiffField0.getTag());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-78), 65533, fieldTypeLong0, 0, (byte) (-1), byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-78), tiffField0.getTag());
      assertEquals(65533, tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145, 2145, fieldTypeRational0, 0L, 2145, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2145, int0);
      assertTrue(tiffField0.isLocalValue());
      assertEquals(2145, tiffField0.getTag());
      assertEquals(2145, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145, 2145, fieldTypeRational0, 0L, 2145, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(2145, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals(2145, tiffField0.getOffset());
      assertEquals(2145, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(8, "[IBizq(9qMVQ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(865, 8, fieldTypeRational0, 8, 4294967294L, byteArray0, byteOrder0, (-2559));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("865 (0x361: Unknown Tag): ", string0);
      assertEquals(8L, tiffField0.getCount());
      assertEquals((-2559), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1529), "Unknown: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 8960L, (-1706L), byteArray0, byteOrder0, 3);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1706), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1529), "Unknown: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 8960L, (-1706L), byteArray0, byteOrder0, 3);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1706L), tiffElement0.offset);
      assertEquals(3, tiffField0.getSortHint());
  }
}
