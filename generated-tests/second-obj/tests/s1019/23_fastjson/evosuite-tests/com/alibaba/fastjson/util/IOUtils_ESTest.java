/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:37:55 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedReader pipedReader0 = new PipedReader(58);
      IOUtils.close(pipedReader0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("{t?z");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("R");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.decodeBase64("m67p]?:$?=>14J;A");
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      EvoSuiteFile evoSuiteFile0 = null;
      IOUtils.isValidJsonpQueryParam("HQ.{");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("HQ.{", 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = charset0.encode("}x@%<_P");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('P');
      boolean boolean1 = IOUtils.isIdent('*');
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOUtils.firstIdentifier('`');
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((char[]) null, 11, 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils.decodeBase64("hnJ&xp", 1, 1);
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-38), 1, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.CA, 0, 4);
      assertArrayEquals(new byte[] {(byte)0, (byte)16, (byte) (-125)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((-241), (-241), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -242
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(4551, 65536, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65535
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("encodeUTF8 error");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.CA, 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[2] = '\u0084';
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = IOUtils.decodeBase64("m}p]?:$?]1J0", (-32), (int) (byte)0);
      assertArrayEquals(new byte[] {}, byteArray1);
      
      int int0 = IOUtils.stringSize((long) 999);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8,");
      IOUtils.readAll(stringReader0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fastjson.properties", 14, 2317);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOUtils.stringSize(1130L);
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-1598), 4, iOUtils0.specicalFlags_doubleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1598
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.getChars((-1L), 52, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars(0L, 52, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, (-2736), (-2736), iOUtils0.replaceChars);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)3, (-2736), iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2737
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOUtils.firstIdentifier('O');
      byte[] byteArray0 = IOUtils.decodeBase64("utf8 decode Derror, ");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("utf8 decode error, ");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOUtils.decodeBase64("");
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(2903);
      IOUtils.getChars((byte)29, 4, iOUtils0.DIGITS);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      assertEquals(0, charBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6Q=|");
      IOUtils.decodeBase64("*xD'{P=%l86HMet~bq[");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("6Q=|", 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils.decodeBase64("E");
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      // Undeclared exception!
      try { 
        IOUtils.getChars(160, 2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.isIdent('s');
      IOUtils.getChars(2, 16, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, (-2736), (-2736), iOUtils0.replaceChars);
      IOUtils.stringSize(1673L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.getChars((-789), 4, iOUtils0.DIGITS);
      // Undeclared exception!
      try { 
        IOUtils.readAll((Reader) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // read string from reader error
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = 't';
      charArray0[2] = '|';
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483646, 85, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 84
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      char[] charArray0 = new char[4];
      charArray0[1] = '\u001A';
      charArray0[2] = '\u001A';
      int int0 = IOUtils.decodeUTF8(byteArray0, 37, 37, charArray0);
      assertArrayEquals(new char[] {'\u001C', '\u001A', '\u001A', '\u0000'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 1;
      IOUtils.decodeBase64("hnJ&xp", 1, 1);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.isIdent('G');
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 'G', 1, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "- t!DA\"6L");
      IOUtils.loadPropertiesFromFile();
      IOUtils.close((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("");
      iOUtils0.UTF8.decode(byteBuffer0);
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.charset();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder2.charset();
      charset0.encode("");
      UTF8Decoder uTF8Decoder3 = new UTF8Decoder();
      uTF8Decoder3.decode(byteBuffer0);
      Charset.defaultCharset();
      IOUtils.getChars((byte) (-32), 66, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils.firstIdentifier('');
      char[] charArray0 = new char[3];
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-35);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, 2, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      MockPrintStream mockPrintStream0 = new MockPrintStream("fastjson.compatibleWithFieldName");
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.JSONException");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 9, 84, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize((long) (byte)8);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, (byte)8, 108, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 93
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      char[] charArray0 = new char[4];
      charArray0[3] = '\"';
      charArray0[1] = '!';
      charArray0[2] = '\"';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 42, 42, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 48
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 4211;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, 4211, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4210
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[1] = 'U';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-22);
      IOUtils.decodeUTF8(byteArray0, (byte)0, 'U', charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1), (int) (byte) (-22), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -23
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "m67p]?:$?=>14J;A";
      byte[] byteArray0 = IOUtils.decodeBase64("m67p]?:$?=>14J;A");
      Charset charset0 = Charset.defaultCharset();
      byte byte0 = (byte)8;
      char[] charArray0 = new char[2];
      IOUtils.decodeUTF8(byteArray0, (byte)8, '\u0019', charArray0);
      // Undeclared exception!
      try { 
        charset0.encode((CharBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("m67p]?:$?=>14J;A");
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      byte byte0 = (byte)8;
      Charset.defaultCharset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, (int) (byte)8, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Charset.defaultCharset();
      IOUtils.decodeBase64("com.alibaba.fastjson.JSONException", 13, 13);
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("com.alibaba.fastjson.JSONException");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("m}p]?:$?]1J0");
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)8, (byte)8, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte) (-60);
      byteArray0[3] = (byte) (-60);
      byteArray0[5] = (byte) (-60);
      byteArray0[6] = (byte) (-60);
      byteArray0[3] = (byte)0;
      byteArray0[8] = (byte) (-52);
      char[] charArray0 = new char[4];
      IOUtils.decodeUTF8(byteArray0, 1, 168, charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[3];
      charArray0[0] = '/';
      charArray0[2] = '\u008E';
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)45;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte)0;
      byteArray0[5] = (byte)45;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, 1000, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(9999);
      IOUtils.encodeUTF8(iOUtils0.replaceChars, 9999, (-32), iOUtils0.specicalFlags_doubleQuotes);
      // Undeclared exception!
      try { 
        IOUtils.getChars(10000000000L, (-2593), iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2594
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      IOUtils.decodeBase64("6Q=|");
      byte[] byteArray0 = IOUtils.decodeBase64("6Q=|");
      assertArrayEquals(new byte[] {(byte) (-23)}, byteArray0);
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("6Q=|");
      int int0 = IOUtils.stringSize(3948L);
      assertEquals(4, int0);
      
      byte[] byteArray1 = IOUtils.decodeBase64("b-OxuPJ!4[rRPD", 4, 4);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-14)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[3];
      int int0 = 1;
      char[] charArray1 = new char[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[1] = 'N';
      IOUtils.decodeUTF8(byteArray0, 39, 1, charArray1);
      Charset.defaultCharset();
      int int1 = 50;
      IOUtils.isValidJsonpQueryParam("J4n4!+ 1e)U");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("ABCDEFGHIJKLMNOPRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", (-1), 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      Charset charset0 = IOUtils.UTF8;
      Charset.defaultCharset();
      charset0.encode("m67p]?:$?=>14J;A");
      byte[] byteArray0 = IOUtils.decodeBase64("m67p]?:$?=>14J;A");
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      char[] charArray0 = new char[9];
      Charset.defaultCharset();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.decodeUTF8(byteArray0, (byte)8, 1, charArray0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Charset.defaultCharset();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      String string0 = "6VG=";
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      int int1 = 544;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("7^-*moT#=WIoK(GgH", 2, 544);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      IOUtils.stringSize(2147483627L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.isIdent('g');
      IOUtils.stringSize((-896));
      char[] charArray0 = new char[5];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IOUtils.decodeUTF8(byteArray0, 10, 256, charArray0);
      IOUtils.stringSize((-896));
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getStringProperty("fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-1), 17, iOUtils0.specicalFlags_doubleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuwxyz0123456789+/");
      char[] charArray0 = new char[1];
      IOUtils.decodeUTF8(byteArray0, 42, 42, charArray0);
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-126);
      int int0 = ObjectStreamConstants.baseWireHandle;
      Charset charset0 = IOUtils.UTF8;
      charset0.encode("com.alibaba.fastjson.util.UTF8Decoder");
      ByteBuffer.wrap(byteArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = charset0.encode("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuwxyz0123456789+/");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      CharBuffer charBuffer1 = charset0.decode(byteBuffer1);
      charBuffer1.codePoints();
      charBuffer0.flip();
      IOUtils.decodeUTF8(byteArray0, (byte) (-126), (byte) (-126), charArray0);
      byte[] byteArray2 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuwxyz0123456789+/");
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      char[] charArray0 = new char[4];
      IOUtils.decodeUTF8(byteArray0, 91, (-1820), charArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      IOUtils.decodeUTF8(byteArray0, 42, 2, charArray0);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.getStringProperty("g");
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 73);
      PipedReader pipedReader1 = null;
      try {
        pipedReader1 = new PipedReader(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }
}
