/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 08:09:11 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)86;
      byteArray0[4] = (byte)86;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-12), 2725, fieldTypeRational0, (byte)86, 50, byteArray0, byteOrder0, (byte)86);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40095, 0, fieldTypeShort0, 3365L, 3365L, byteArray0, (ByteOrder) null, 2119594249);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3365, tiffField0.getOffset());
      assertEquals(40095, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2119594249, tiffField0.getSortHint());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, byteArray0, byteOrder0, 65521);
      tiffField0.dump();
      assertEquals(65521, tiffField0.getTag());
      assertEquals(65521, tiffField0.getOffset());
      assertEquals(65521, tiffField0.getSortHint());
      assertEquals(65521, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, (String) null);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 50, 210L, byteArray0, byteOrder0, 342);
      tiffField0.getValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(342, tiffField0.getSortHint());
      assertEquals(210, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147462524, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-121), (byte)0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 50);
      tiffField0.getTagInfo();
      assertEquals((-121), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(6);
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldType0, 0L, (-904L), byteArray0, (ByteOrder) null, (byte) (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-904), tiffField0.getOffset());
      assertEquals(6, int0);
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-35), 335, fieldTypeLong0, 335, (-1605L), byteArray0, byteOrder0, 335);
      int int0 = tiffField0.getTag();
      assertEquals(335, tiffField0.getSortHint());
      assertEquals(335, tiffField0.getDirectoryType());
      assertEquals((-35), int0);
      assertEquals((-1605), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3496), "Unknown Tag");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-72);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(102, (-3496), fieldTypeAscii0, 4L, 4L, byteArray0, byteOrder0, 0);
      assertEquals(4, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(102, tiffField0.getTag());
      assertEquals((-3496), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfo");
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeByte0, 420L, 0, byteArray0, byteOrder0, (byte) (-50));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-50), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3435, 3435, fieldTypeShort0, 4L, 1, byteArray0, byteOrder0, 912);
      int int0 = tiffField0.getOffset();
      assertEquals(3435, tiffField0.getDirectoryType());
      assertEquals(912, tiffField0.getSortHint());
      assertEquals(3435, tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-1L), byteArray0, (ByteOrder) null, (byte)55);
      int int0 = tiffField0.getOffset();
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-72);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2450, 335, fieldTypeLong0, 335, (-1605L), byteArray0, byteOrder0, 335);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1340, tiffField0.getBytesLength());
      assertEquals(2450, tiffField0.getTag());
      assertEquals((-1605), tiffField0.getOffset());
      assertEquals(335, tiffField0.getSortHint());
      assertEquals(335, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-72);
      TiffField tiffField0 = new TiffField(50, (byte) (-15), fieldTypeShort0, 4L, (-1605L), byteArray0, byteOrder0, (byte) (-72));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1605), tiffField0.getOffset());
      assertEquals((-18432), int0);
      assertEquals((-72), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2147145833, 2109, fieldTypeShort0.DOUBLE, (byte)1, (-764L), byteArray0, byteOrder0, (byte) (-70));
      tiffField0.getIntValue();
      assertEquals(2109, tiffField0.getDirectoryType());
      assertEquals((-764), tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2147145833, tiffField0.getTag());
      assertEquals((-70), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2021161080, 0, fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2021161080, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-12);
      TiffField tiffField0 = new TiffField(34, (-1), fieldTypeShort0, 1L, (-1), byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals(34, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, (String) null);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 50, 210L, byteArray0, byteOrder0, 342);
      tiffField0.getFieldTypeName();
      assertEquals(342, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(210, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)125, (byte)84, fieldTypeByte0, 1L, (byte)20, byteArray0, (ByteOrder) null, 1753);
      tiffField0.getFieldTypeName();
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(125, tiffField0.getTag());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(1753, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3365, 3365, fieldTypeByte0, 3365, 3365, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(3365, tiffField0.getOffset());
      assertEquals(3365, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3365, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "'!N;<V*VS05RV{'BK");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3583), 34665, fieldTypeAscii0, 2136L, (-2147483648L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-3583), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-828L), byteArray0, (ByteOrder) null, 40095);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(40095, tiffField0.getSortHint());
      assertEquals((-828), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(6);
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-1), 1451, fieldType0, 1L, (byte)0, byteArray0, byteOrder0, 330);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(1451, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)84;
      TiffField tiffField0 = new TiffField((byte)125, (byte)84, fieldTypeByte0, 1L, (byte)20, byteArray0, (ByteOrder) null, 1753);
      tiffField0.getDoubleValue();
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1753, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(125, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-105);
      TiffField tiffField0 = new TiffField(0, (byte) (-105), fieldTypeShort0, 1L, (byte) (-15), byteArray0, byteOrder0, (byte) (-15));
      tiffField0.getDoubleValue();
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-105), tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 33, fieldTypeDouble0, 263L, (-1244L), byteArray0, byteOrder0, (-2546));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2546), tiffField0.getSortHint());
      assertEquals((-1244), tiffField0.getOffset());
      assertEquals(33, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3, (byte) (-72), fieldTypeShort0, 506L, 506L, byteArray0, byteOrder0, (-343));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-343), tiffField0.getSortHint());
      assertEquals((-72), int0);
      assertEquals(3, tiffField0.getTag());
      assertEquals(506, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-828L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-828), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2021161080, 0, fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2021161080, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)86, (byte)1, fieldTypeShort0.IFD, (byte)0, (-948L), byteArray0, (ByteOrder) null, (byte)86);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getTag());
      assertEquals((-948), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-21), (-2294), fieldTypeRational0, 48130, (-2351L), byteArray0, byteOrder0, (byte) (-70));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-70), tiffField0.getSortHint());
      assertEquals((-2294), tiffField0.getDirectoryType());
      assertEquals((-2351), tiffField0.getOffset());
      assertEquals((-21), tiffField0.getTag());
      assertEquals(385040, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 2021161080, fieldTypeRational0, (byte) (-20), (-84L), byteArray0, byteOrder0, 3138);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2021161080, tiffField0.getDirectoryType());
      assertEquals((-160), int0);
      assertEquals((-84), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(3138, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-828L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-828), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (byte) (-15), fieldTypeShort0, 4L, (-1605L), byteArray0, byteOrder0, (byte) (-72));
      tiffField0.getByteOrder();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals((-72), tiffField0.getSortHint());
      assertEquals((-1605), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)125, (byte)84, fieldTypeByte0, 1L, (byte)20, byteArray0, (ByteOrder) null, 1753);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1, byteArray1.length);
      assertEquals(1753, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(125, tiffField0.getTag());
      assertEquals(84, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-828L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-828), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65485, 65485, fieldTypeLong0, (-5360L), 65485, byteArray0, byteOrder0, (-528));
      MockFile mockFile0 = new MockFile("4M?:$f#x", "4M?:$f#x");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "4M?:$f#x");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeFloat0, 5, 5, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeShort0.RATIONAL, (-4), (-4), byteArray0, byteOrder0, (-4));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50968, 50968, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50968);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, (byte[]) null, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeShort0.RATIONAL, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[272];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeDouble0, (-3443L), 40092, byteArray0, byteOrder0, 40092);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0.RATIONAL, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 1L, (-3192L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeShort0, 29, 29, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1897), (-1897), fieldTypeShort0, (-1897), (-1897), byteArray0, byteOrder0, (-1897));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeShort0, 1L, 297, byteArray0, byteOrder0, 297);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2024, 2024, (FieldType) null, 0L, 2024, byteArray0, byteOrder0, 2024);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-12), (-12), fieldTypeShort0, (-12), (-12), byteArray0, byteOrder0, (-12));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[272];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeDouble0, (-3443L), (-1912L), byteArray0, byteOrder0, 40092);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, (FieldType) null, 25, 3419L, byteArray0, byteOrder0, 25);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1833), (-1833), fieldTypeShort0, (-1833), (-1833), byteArray0, byteOrder0, (-1833));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 5, 5, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeShort0.RATIONAL, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-312), (-2128), (FieldType) null, (-1762L), (-1762L), byteArray0, byteOrder0, (-312));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 50707, fieldTypeShort0, 40095, (-2205L), byteArray0, byteOrder0, (-1722));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(257, 257, fieldTypeShort0, 257, 257, (byte[]) null, byteOrder0, 257);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-16), (-16), fieldTypeShort0.RATIONAL, (-16), (-16), byteArray0, byteOrder0, (-16));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(350, 350, fieldTypeShort0, 350, 350, (byte[]) null, byteOrder0, 350);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeShort0.RATIONAL, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeShort0, 1L, (-15), byteArray0, byteOrder0, (-15));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-10), (-10), fieldTypeShort0, (-10), (-10), byteArray0, byteOrder0, (-10));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-13), (-13), fieldTypeShort0.RATIONAL, (-13), (-13), byteArray0, byteOrder0, (-13));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("@f38X49HE5b");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50968, 50968, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50968);
      MockPrintStream mockPrintStream0 = new MockPrintStream("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-770), (-649), fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeShort0, 1L, 297, byteArray0, byteOrder0, 297);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1706), (-810), fieldTypeByte0, (-3630L), (byte) (-20), byteArray0, (ByteOrder) null, 1590);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1706), (-810), fieldTypeByte0, (-3630L), (byte) (-20), byteArray0, (ByteOrder) null, 1590);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-810), tiffField0.getDirectoryType());
      assertEquals((-20), tiffField0.getOffset());
      assertEquals((-1706), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(1590, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1590, ":y");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)94, 0, fieldTypeByte0, 1590, (byte)64, byteArray0, (ByteOrder) null, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(94, tiffField0.getTag());
      assertEquals(64, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(274, 29, fieldTypeLong0, 274, 274, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2834, (FieldType) null, 2834, 1L, (byte[]) null, byteOrder0, 2834);
      tiffField0.getFieldType();
      assertEquals(2834, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2834, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 73L, (-592L), byteArray0, byteOrder0, 225);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-592), tiffField0.getOffset());
      assertEquals(225, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65543, 65543, fieldTypeShort0, 65543, 65543, byteArray0, byteOrder0, 65543);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeDouble0, 958, 26, (byte[]) null, byteOrder0, 26);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-121), 65535, (FieldType) null, (byte)0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(324, 324, fieldTypeShort0.RATIONAL, 324, 324, byteArray0, byteOrder0, 324);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tiffField0.getOffset());
      assertEquals(324, tagInfo0.tag);
      assertEquals(324, tiffField0.getSortHint());
      assertEquals(324, tiffField0.getTag());
      assertEquals(324, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2134776644, fieldTypeShort0.LONG, 40L, 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(2134776644, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1009), "?8C+V#C7??F s'");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-976), 857, fieldTypeLong0, (-1L), (-1L), byteArray0, byteOrder0, 857);
      tiffField0.getCount();
      assertEquals(857, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(857, tiffField0.getSortHint());
      assertEquals((-976), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, (-351L), byteArray0, byteOrder0, (byte) (-66));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65513, 65513, fieldTypeShort0, 65513, 65513, byteArray0, byteOrder0, 65513);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65548, 65548, fieldTypeShort0, 65548, 65548, byteArray0, byteOrder0, 65548);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[98];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeLong0, 29, 29, byteArray0, byteOrder0, 29);
      tiffField0.getIntValueOrArraySum();
      assertEquals(29, tiffField0.getOffset());
      assertEquals(116, tiffField0.getBytesLength());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeByte0, 16, 16, byteArray0, byteOrder0, 16);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@680f10b6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.RATIONAL, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[157];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[237];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeDouble0, 64, 64, byteArray0, byteOrder0, 64);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(64, tiffField0.getTag());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getOffset());
      assertEquals(29, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65470, 65470, fieldTypeFloat0, 65470, 65470, byteArray0, byteOrder0, 65470);
      tiffField0.getDoubleArrayValue();
      assertEquals(65470, tiffField0.getDirectoryType());
      assertEquals(65470, tiffField0.getOffset());
      assertEquals(65470, tiffField0.getTag());
      assertEquals(65470, tiffField0.getSortHint());
      assertEquals(261880, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65548, 65548, fieldTypeShort0, 65548, 65548, byteArray0, byteOrder0, 65548);
      tiffField0.getDoubleArrayValue();
      assertEquals(65548, tiffField0.getDirectoryType());
      assertEquals(65548, tiffField0.getSortHint());
      assertEquals(131096, tiffField0.getBytesLength());
      assertEquals(65548, tiffField0.getTag());
      assertEquals(65548, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65584, 65584, fieldTypeLong0, 65584, 65584, byteArray0, byteOrder0, 12);
      tiffField0.getDoubleArrayValue();
      assertEquals(262336, tiffField0.getBytesLength());
      assertEquals(65584, tiffField0.getTag());
      assertEquals(65584, tiffField0.getDirectoryType());
      assertEquals(65584, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0.RATIONAL, 8, 8, byteArray0, byteOrder0, 8);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[111];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 250L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(250, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-828L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-828), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeLong0, 29, 29, byteArray0, byteOrder0, 134);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(20, intArray0.length);
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getOffset());
      assertEquals(134, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65548, 65548, fieldTypeShort0, 65548, 65548, byteArray0, byteOrder0, 65548);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(65548, tiffField0.getDirectoryType());
      assertEquals(65548, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(131096, tiffField0.getBytesLength());
      assertEquals(65548, tiffField0.getTag());
      assertEquals(65548, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65470, 65470, fieldTypeFloat0, 65470, 65470, byteArray0, byteOrder0, 65470);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@38f35d92 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(292, 292, fieldTypeShort0.RATIONAL, 292, 292, byteArray0, byteOrder0, 292);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, byteArray0, byteOrder0, 65521);
      tiffField0.getIntArrayValue();
      assertEquals(65521, tiffField0.getOffset());
      assertEquals(131042, tiffField0.getBytesLength());
      assertEquals(65521, tiffField0.getDirectoryType());
      assertEquals(65521, tiffField0.getTag());
      assertEquals(65521, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[163];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 768L, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(768, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeShort0.RATIONAL, 16, 16, byteArray0, byteOrder0, 16);
      tiffField0.getIntArrayValue();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals(16, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0.ASCII, 4, 4, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getStringValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeShort0, 7, 7, byteArray0, byteOrder0, 7);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@34b8949f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeShort0, 7, 7, byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getTagName();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x7)", string0);
      assertEquals(7, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(257, 257, fieldTypeShort0.RATIONAL, 257, 257, byteArray0, byteOrder0, 257);
      String string0 = tiffField0.getTagName();
      assertEquals("ImageLength", string0);
      assertEquals(257, tiffField0.getOffset());
      assertEquals(257, tiffField0.getSortHint());
      assertEquals(257, tiffField0.getDirectoryType());
      assertEquals(257, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeShort0.RATIONAL, 16, 16, byteArray0, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[237];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65472, 65472, fieldTypeFloat0, 65472, 65472, byteArray0, byteOrder0, 65472);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65472, tiffField0.getOffset());
      assertEquals(261888, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(65472, tiffField0.getTag());
      assertEquals(65472, tiffField0.getSortHint());
      assertEquals(65472, tiffField0.getDirectoryType());
      assertEquals(65472L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1881, 1881, fieldTypeLong0.UNDEFINED, 1881, 1881, byteArray0, byteOrder0, 1881);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1881, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1881L, tiffField0.getCount());
      assertEquals(1881, tiffField0.getSortHint());
      assertEquals(1881, tiffField0.getDirectoryType());
      assertEquals(1881, tiffField0.getBytesLength());
      assertEquals(1881, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeByte0, 16, 16, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.getValueDescription();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(16L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[184];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeDouble0, 20, 20, byteArray0, byteOrder0, 20);
      String string0 = tiffField0.toString();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals("20 (0x14: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (20 Double)", string0);
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0.LONG, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeLong0, 29, 29, byteArray0, byteOrder0, 29);
      String string0 = tiffField0.getValueDescription();
      assertEquals(29, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(29L, tiffField0.getCount());
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1205, 65485, fieldTypeShort0, 65485, 65485, byteArray0, byteOrder0, 1205);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65485, tiffField0.getDirectoryType());
      assertEquals(130970, tiffField0.getBytesLength());
      assertEquals(65485, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65485L, tiffField0.getCount());
      assertEquals(1205, tiffField0.getSortHint());
      assertEquals(1205, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65485, 65485, fieldTypeFloat0, 65485, 65485, byteArray0, byteOrder0, 65485);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65485L, tiffField0.getCount());
      assertEquals(261940, tiffField0.getBytesLength());
      assertEquals(65485, tiffField0.getSortHint());
      assertEquals(65485, tiffField0.getDirectoryType());
      assertEquals(65485, tiffField0.getTag());
      assertEquals(65485, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65474, 65474, fieldTypeAscii0, 65474, 65474, byteArray0, byteOrder0, 65474);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65474, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65474, tiffField0.getTag());
      assertEquals(65474, tiffField0.getBytesLength());
      assertEquals(65474, tiffField0.getDirectoryType());
      assertEquals(65474, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, byteArray0, byteOrder0, 65521);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65521, tiffField0.getSortHint());
      assertEquals(65521, tiffField0.getDirectoryType());
      assertEquals(131042, tiffField0.getBytesLength());
      assertEquals(65521, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65521, tiffField0.getOffset());
      assertEquals(65521L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-3670), fieldTypeByte0, 518, 27, byteArray0, byteOrder0, 3458);
      String string0 = tiffField0.getValueDescription();
      assertEquals(27, tiffField0.getOffset());
      assertEquals(3458, tiffField0.getSortHint());
      assertEquals((-3670), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(518, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[204];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeShort0.RATIONAL, 16, 16, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.getValueDescription();
      assertEquals(16, tiffField0.getTag());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(128, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2134776644, 2, fieldTypeShort0.IFD, 2134776644, 19L, byteArray0, byteOrder0, (-2431));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(364, (-2431));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-2431), tiffField0.getSortHint());
      assertEquals(2134776644L, tiffField0.getCount());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(2134776644, tiffField0.getTag());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1807, 1889, fieldTypeLong0.ASCII, (-2866), 1807, byteArray0, byteOrder0, 1889);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2866), 1807);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(1807, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1807, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals(1889, tiffField0.getSortHint());
      assertEquals(1889, tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147462524, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 2147462524, fieldTypeFloat0, 1, (-42L), (byte[]) null, byteOrder0, (byte) (-121));
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals(2147462524, tiffField0.getDirectoryType());
      assertEquals((-42), tiffField0.getOffset());
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.RATIONAL, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-761), fieldTypeShort0, (-761), 27, byteArray0, byteOrder0, (-761));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(7, (-624), fieldTypeByte0, (byte)55, 7, byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, int0);
      assertEquals(7, tiffField0.getTag());
      assertEquals((-624), tiffField0.getDirectoryType());
      assertEquals(55L, tiffField0.getCount());
      assertEquals(7, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 37, byteArray0, byteOrder0, 37);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37L, tiffField0.getCount());
      assertEquals("37 (0x25: Unknown Tag): ", string0);
      assertEquals(37, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-64), 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, (-64));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(48269, 5249, fieldTypeShort0, 1, 5249, byteArray0, (ByteOrder) null, 48269);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " #vqL]Z'p;xVIv93%0");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1717986917), fieldTypeShort0, 1068L, 256L, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(256L, tiffElement0.offset);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(1068L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }
}
