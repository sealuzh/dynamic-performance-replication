/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 07:44:19 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50715, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)86;
      TiffField tiffField0 = new TiffField((-638), 50715, fieldTypeShort0, 861, 2136904910, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(86, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-638), tiffField0.getTag());
      assertEquals(50715, tiffField0.getDirectoryType());
      assertEquals(2136904910, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-29);
      byteArray0[5] = (byte) (-29);
      TiffField tiffField0 = new TiffField(3, (-57), fieldTypeRational0, 864L, (-94L), byteArray0, byteOrder0, 718);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(718, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-57), tiffField0.getDirectoryType());
      assertEquals((-94), tiffField0.getOffset());
      assertEquals((-32), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-13), fieldTypeLong0, 36704L, (-1422L), byteArray0, byteOrder0, (byte)27);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1422), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50834, (-1148), fieldTypeDouble0, 64L, 64L, byteArray0, byteOrder0, (byte)111);
      String string0 = tiffField0.getValueDescription();
      assertEquals(64, tiffField0.getOffset());
      assertEquals(50834, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(111, tiffField0.getSortHint());
      assertEquals((-1148), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (-1769), fieldTypeLong0, (-6065L), (byte)27, byteArray0, byteOrder0, (-1500));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1769), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
      assertEquals((-1500), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeLong0, (-1L), 1L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(285, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2118), (-1620), fieldTypeRational0, (byte)0, (-2293L), byteArray0, byteOrder0, (byte) (-55));
      int int0 = tiffField0.getTag();
      assertEquals((-2118), int0);
      assertEquals((-1620), tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals((-2293), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(201, "MKn");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)117;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "MKn");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3795), (-3795), fieldTypeAscii0, 255L, 1L, byteArray0, byteOrder0, 131);
      String string0 = tiffField0.getStringValue();
      assertEquals((-3795), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(131, tiffField0.getSortHint());
      assertEquals((-3795), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(512);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (byte)4, fieldTypeRational0, (byte) (-29), 1L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(42240);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-40), 2146888941, (FieldType) null, 2146888941, (-2329L), byteArray0, byteOrder0, (-197));
      int int0 = tiffField0.getSortHint();
      assertEquals(2146888941, tiffField0.getDirectoryType());
      assertEquals((-40), tiffField0.getTag());
      assertEquals((-2329), tiffField0.getOffset());
      assertEquals((-197), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2203, "7o7@Qqh1.WK,F");
      byte[] byteArray0 = new byte[0];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(42240);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2203, 1, fieldTypeFloat0, 0L, 2203, byteArray0, byteOrder0, 2203);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2203, int0);
      assertEquals(2203, tiffField0.getSortHint());
      assertEquals(2203, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(42240);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-40), 2146888941, (FieldType) null, 2146888941, (-2329L), byteArray0, byteOrder0, (-197));
      int int0 = tiffField0.getOffset();
      assertEquals((-197), tiffField0.getSortHint());
      assertEquals(2146888941, tiffField0.getDirectoryType());
      assertEquals((-40), tiffField0.getTag());
      assertEquals((-2329), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(24, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeLong0, 24, 1126L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getTag());
      assertEquals(1126, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-1), fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(62, "7K;<h} ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(2141167519, 2123, fieldTypeShort0, 1L, 385L, byteArray0, byteOrder0, (-2745));
      tiffField0.getIntValue();
      assertEquals(2141167519, tiffField0.getTag());
      assertEquals((-2745), tiffField0.getSortHint());
      assertEquals(2123, tiffField0.getDirectoryType());
      assertEquals(385, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(24, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, (byte) (-1), fieldTypeLong0, 1L, 24, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-1), fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(595, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(595, 71, fieldTypeRational0, 9176L, 3760L, byteArray0, (ByteOrder) null, (-87));
      tiffField0.getIntArrayValue();
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(595, tiffField0.getTag());
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(3760, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5873, "): ");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(222, 4563, fieldTypeFloat0, 65535, 1671L, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getFieldTypeName();
      assertEquals(4563, tiffField0.getDirectoryType());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(1671, tiffField0.getOffset());
      assertEquals(222, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(24, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeLong0, 24, 1126L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1126, tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2745), 0, (FieldType) null, (-3099L), (-3662L), (byte[]) null, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2745), tiffField0.getTag());
      assertEquals((-3662), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2092), fieldTypeFloat0, 2008L, 0, byteArray0, byteOrder0, (byte)45);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals((-2092), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1705), (-1705), fieldTypeLong0, (-1705), (-1705), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals((-1705), tiffField0.getDirectoryType());
      assertEquals((-1705), tiffField0.getTag());
      assertEquals((-1705), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)79;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(285, 1, fieldTypeLong0, 1L, (-3055L), byteArray0, byteOrder0, (-2399));
      tiffField0.getDoubleValue();
      assertEquals(285, tiffField0.getTag());
      assertEquals((-3055), tiffField0.getOffset());
      assertEquals((-2399), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-40);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(518);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2276, (-2247), fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(2276, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-2247), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(512);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3, 512, fieldTypeRational0.LONG, 4L, 3641L, byteArray0, byteOrder0, (-1355));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(512, int0);
      assertEquals(3, tiffField0.getTag());
      assertEquals((-1355), tiffField0.getSortHint());
      assertEquals(3641, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2197, "%?oZ5I{:");
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeRational0, 2197, 0L, (byte[]) null, byteOrder0, (-1770));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1770), tiffField0.getSortHint());
      assertEquals((-1431655764), int0);
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1733), (-1733), fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, (-577));
      tiffField0.getCount();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1733), tiffField0.getTag());
      assertEquals((-1733), tiffField0.getDirectoryType());
      assertEquals((-577), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1440, "JRLJ)]X.cZo{O!Q$>=}");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-883), (-883), fieldTypeShort0.SBYTE, (-1L), 0L, byteArray0, byteOrder0, 5836);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-883), tiffField0.getDirectoryType());
      assertEquals((-883), tiffField0.getTag());
      assertEquals(5836, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 1717986918);
      tiffField0.getBytesLength();
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50706, 50706, fieldTypeLong0, (-3132), 0L, (byte[]) null, byteOrder0, 1);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50706, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50706, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(595, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(595, 71, fieldTypeRational0, 9176L, 3760L, byteArray0, (ByteOrder) null, (-87));
      tiffField0.getByteOrder();
      assertEquals(595, tiffField0.getTag());
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(3760, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 32947, fieldTypeAscii0, (-926L), 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(32947, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(2147395365, 2607, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SBYTE).DOUBLE, 381L, (-1L), byteArray0, byteOrder0, 2438);
      tiffField0.getByteArrayValue();
      assertEquals(2147395365, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2438, tiffField0.getSortHint());
      assertEquals(2607, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48321, 2143127697, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (-25));
      tiffField0.getByteArrayValue();
      assertEquals(48321, tiffField0.getTag());
      assertEquals(2143127697, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(512);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (byte)4, fieldTypeRational0, (byte) (-29), 1L, byteArray0, byteOrder0, (byte)0);
      MockFile mockFile0 = new MockFile("u");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2203, "7o7@Qqh1.WK,F");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42240, 42240, fieldTypeFloat0, 3469, (byte)70, byteArray0, byteOrder0, 2421);
      MockPrintStream mockPrintStream0 = new MockPrintStream("7o7@Qqh1.WK,F");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(42240, tiffField0.getTag());
      assertEquals(42240, tiffField0.getDirectoryType());
      assertEquals(2421, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 33422, (FieldType) null, 394L, 1705L, byteArray0, byteOrder0, (-671));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[151];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(16, (String) null);
      TiffField tiffField0 = new TiffField((-1671), (-2019), fieldTypeDouble0, (-1L), (-1), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50834, 0, (FieldType) null, (-1L), 50834, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2892, 0, (FieldType) null, 2892, 0L, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1786), "7K;<h} ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[93];
      TiffField tiffField0 = new TiffField(32898, (-1), fieldTypeShort0, (-1308L), 4L, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1790), "7K;<} ");
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1326), 100, fieldTypeShort0, (-1326), (-1L), byteArray0, byteOrder0, (-1326));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(512);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (-2295), fieldTypeRational0, 1, (-2295), byteArray0, byteOrder0, (-2295));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 2287);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(15, 41, fieldTypeLong0, (-611L), (byte) (-51), byteArray0, byteOrder0, (-1180));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeLong0, (-1L), 1L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, 2146995916, fieldTypeByte0.ASCII, 1717986918, 1L, byteArray0, byteOrder0, 1551);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(42240);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-40), 2146888941, (FieldType) null, 2146888941, (-2329L), byteArray0, byteOrder0, (-197));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeLong0, (-1L), 1L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 1L, 1L, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-22), 50, fieldTypeFloat0, (-22), (-2759L), byteArray0, byteOrder0, 1276);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50730, 50938, fieldTypeShort0, 2811L, 4L, byteArray0, byteOrder0, 2203);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "XPosition");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50715, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)70, (byte) (-1), fieldTypeShort0, (byte) (-1), (-1693L), byteArray0, byteOrder0, 50715);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2893, 2124392425, fieldTypeRational0.FLOAT, 1120L, 2893, byteArray0, byteOrder0, 595);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(2893, tiffField0.getTag());
      assertEquals(595, tiffField0.getSortHint());
      assertEquals(2893, tiffField0.getOffset());
      assertEquals(2124392425, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(62, "System");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1054), 2146962034, fieldTypeShort0, 1L, (-2L), byteArray0, byteOrder0, (-1054));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(2146962034, tiffField0.getDirectoryType());
      assertEquals((-1054), tiffField0.getTag());
      assertEquals((-1054), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)21, 65535, fieldTypeByte0.SRATIONAL, (byte)62, 589L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(589, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(21, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1302), (String) null);
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1302), (-1302), fieldTypeFloat0, (-1302), (-1302), byteArray0, byteOrder0, (byte)48);
      tiffField0.getFieldType();
      assertEquals((-1302), tiffField0.getDirectoryType());
      assertEquals((-1302), tiffField0.getTag());
      assertEquals((-1302), tiffField0.getOffset());
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, (byte)103, fieldTypeByte0, 16, 0, byteArray0, byteOrder0, (byte)103);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2832), 1, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)122);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2832), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[151];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(16, (String) null);
      TiffField tiffField0 = new TiffField(5, (short)283, fieldTypeDouble0, 16, 1683, byteArray0, byteOrder0, (short)283);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(5, tiffField0.getTag());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(1683, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.length);
      assertEquals(283, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-2607L), byteArray0, byteOrder0, 296);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(296, tiffField0.getSortHint());
      assertEquals((-2607), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, (byte)103, fieldTypeByte0, 16, 0, byteArray0, byteOrder0, (byte)103);
      tiffField0.getBytesLength();
      assertEquals(16, tiffField0.getTag());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(518);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2276, (-2247), fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-2247), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2276, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[57];
      TiffField tiffField0 = new TiffField((-305), (byte)23, fieldTypeFloat0, 1948L, (-807L), byteArray0, byteOrder0, (byte)23);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1815, "'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1815, 1815, fieldTypeLong0, 1815, 1815, byteArray0, byteOrder0, (byte)33);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1815, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(1815, tiffField0.getTag());
      assertEquals(1815, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-2607L), byteArray0, byteOrder0, 296);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4fd17cb8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[39];
      TiffField tiffField0 = new TiffField(59, (-305), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SBYTE).DOUBLE, 674L, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(59, tiffField0.getTag());
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[209];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(7, (short)283, fieldTypeDouble0.FLOAT, (short)283, (-2445L), byteArray0, byteOrder0, 1683);
      tiffField0.getDoubleArrayValue();
      assertEquals(7, tiffField0.getTag());
      assertEquals((-2445), tiffField0.getOffset());
      assertEquals(1683, tiffField0.getSortHint());
      assertEquals(283, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(0, 3309, fieldTypeLong0, 37397, (-912L), byteArray0, byteOrder0, 15);
      tiffField0.getDoubleArrayValue();
      assertEquals((-912), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(3309, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2812, 2146962034, fieldTypeShort0, 196L, 2558L, byteArray0, byteOrder0, 4);
      tiffField0.getDoubleArrayValue();
      assertEquals(2146962034, tiffField0.getDirectoryType());
      assertEquals(2812, tiffField0.getTag());
      assertEquals(2558, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50724, 50724, fieldTypeRational0, 50724, 1L, byteArray0, byteOrder0, (byte) (-41));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-41), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50724, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(50724, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)21, 65535, fieldTypeByte0.RATIONAL, (byte)62, 589L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(21, tiffField0.getTag());
      assertEquals(589, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[25];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(62, "g,F@R<!ZGhw&t");
      TiffField tiffField0 = new TiffField(42033, 15, fieldTypeRational0, 1L, 11, byteArray0, byteOrder0, (-870));
      tiffField0.getDoubleArrayValue();
      assertEquals((-870), tiffField0.getSortHint());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(42033, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[53];
      TiffField tiffField0 = new TiffField((-2587), (-2587), fieldTypeFloat0.ASCII, 2635L, 2635L, byteArray0, byteOrder0, 33);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@69d4dbaf for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(24, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeLong0, 24, 1126L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntArrayValue();
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1126, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2812, 2146962034, fieldTypeShort0, 196L, 2558L, byteArray0, byteOrder0, 4);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2146962034, tiffField0.getDirectoryType());
      assertEquals(2812, tiffField0.getTag());
      assertEquals(2558, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-29);
      TiffField tiffField0 = new TiffField(2203, 874, fieldTypeRational0, 1086L, 2180L, byteArray0, byteOrder0, (byte) (-29));
      tiffField0.getIntArrayValue();
      assertEquals(2180, tiffField0.getOffset());
      assertEquals(2203, tiffField0.getTag());
      assertEquals(874, tiffField0.getDirectoryType());
      assertEquals((-29), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2203, 874, fieldTypeRational0, 1086L, 2180L, byteArray0, byteOrder0, (byte) (-29));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-1), fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, (byte)1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[39];
      TiffField tiffField0 = new TiffField(59, (-305), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).BYTE).DOUBLE, 674L, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2b756a6a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(201, "MKn");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "MKn");
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1061, fieldTypeAscii0, 2147483647L, (-484L), byteArray0, byteOrder0, 1061);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(1061, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-484), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1061, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2203, 874, fieldTypeRational0, 1086L, 2180L, byteArray0, byteOrder0, (byte) (-29));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@2a2d0f43
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[39];
      TiffField tiffField0 = new TiffField(59, (-305), fieldTypeFloat0.DOUBLE, 674L, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x3b)", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(512);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (-2295), fieldTypeRational0, 1, (-2295), byteArray0, byteOrder0, (-2295));
      String string0 = tiffField0.getTagName();
      assertEquals((-2295), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-2295), tiffField0.getDirectoryType());
      assertEquals((-2295), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[209];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(7, (short)283, fieldTypeDouble0.FLOAT, (short)283, (-2445L), byteArray0, byteOrder0, 1683);
      String string0 = tiffField0.toString();
      assertEquals("7 (0x7: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (283 Float)", string0);
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(1683, tiffField0.getSortHint());
      assertEquals((-2445), tiffField0.getOffset());
      assertEquals(1132, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[57];
      TiffField tiffField0 = new TiffField(2129735849, (byte)23, fieldTypeFloat0.BYTE, 1948L, 1948L, byteArray0, byteOrder0, (-1610612708));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1948, tiffField0.getOffset());
      assertEquals((-1610612708), tiffField0.getSortHint());
      assertEquals(1948, tiffField0.getBytesLength());
      assertEquals(1948L, tiffField0.getCount());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(2129735849, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[39];
      TiffField tiffField0 = new TiffField(59, (-305), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).BYTE).DOUBLE, 674L, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("59 (0x3b: Unknown Tag): 0.0, 0.0, 0.0, 0.0 (674 Double)", string0);
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(5392, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[216];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((short)319, (-4), fieldTypeDouble0.LONG, (short)319, (-4), byteArray0, byteOrder0, (short)319);
      String string0 = tiffField0.getValueDescription();
      assertEquals(319, tiffField0.getTag());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(319L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1276, tiffField0.getBytesLength());
      assertEquals(319, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(0, 3309, fieldTypeLong0, 37397, (-912L), byteArray0, byteOrder0, 15);
      String string0 = tiffField0.toString();
      assertEquals((-912), tiffField0.getOffset());
      assertEquals(149588, tiffField0.getBytesLength());
      assertEquals("0 (0x0: Unknown Tag): 0 (37397 SLong)", string0);
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(3309, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1790), "7K;<} ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[112];
      TiffField tiffField0 = new TiffField(2146888963, 1, fieldTypeShort0, 2486, (-1602L), byteArray0, byteOrder0, 332);
      tiffField0.dump();
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(4972, tiffField0.getBytesLength());
      assertEquals(2146888963, tiffField0.getTag());
      assertEquals((-1602), tiffField0.getOffset());
      assertEquals(2486L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1786), "7K;<h} ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[93];
      TiffField tiffField0 = new TiffField(362, 10, fieldTypeShort0, 362, 2307, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(724, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals("362 (0x16a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (362 7K;<h} )", string0);
      assertEquals(2307, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[17];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(62, "g,F@2<!ZGhK&t");
      TiffField tiffField0 = new TiffField(11, 255, fieldTypeRational0, 62, 13352L, byteArray0, byteOrder0, 1910);
      tiffField0.toString();
      assertEquals(62L, tiffField0.getCount());
      assertEquals(11, tiffField0.getTag());
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals(1910, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(13352, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[53];
      TiffField tiffField0 = new TiffField((-2587), (-2587), fieldTypeFloat0.ASCII, 2635L, 2635L, byteArray0, byteOrder0, 33);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-2587), tiffField0.getTag());
      assertEquals((-2587), tiffField0.getDirectoryType());
      assertEquals(2635, tiffField0.getOffset());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(2635, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)73;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, 2146995916, fieldTypeByte0.ASCII, 1717986918, 1L, byteArray0, byteOrder0, 1551);
      MockFile mockFile0 = new MockFile("qu-+om\u0001:I3_:oIg/s", "qu-+om\u0001:I3_:oIg/s");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, ",^G^kT.r0");
      assertEquals(84L, mockFile0.length());
      assertEquals(1551, tiffField0.getSortHint());
      assertEquals(2146995916, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[25];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(62, "g,F@R<!ZGhw&t");
      TiffField tiffField0 = new TiffField(42033, 15, fieldTypeRational0, 1L, 11, byteArray0, byteOrder0, (-870));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-870), tiffField0.getSortHint());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(42033, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, (byte)103, fieldTypeByte0, 16, 0, byteArray0, byteOrder0, (byte)103);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(323, (byte) (-40));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(16, tiffField0.getTag());
      assertNull(string0);
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(103, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1815, "'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1815, 1815, fieldTypeLong0, 1815, 1815, byteArray0, byteOrder0, (byte)33);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1476), (byte) (-63));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(1815, tiffField0.getTag());
      assertEquals(1815, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: '", string0);
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(1815, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(874, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      TiffField tiffField0 = new TiffField((byte) (-29), (-1544), fieldTypeLong0, 1L, 4L, byteArray0, (ByteOrder) null, 264);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-29), tiffField0.getTag());
      assertEquals(264, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-1544), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(222, 4563, fieldTypeFloat0, 65535, 1671L, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getFieldTypeName();
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(4563, tiffField0.getDirectoryType());
      assertEquals(222, tiffField0.getTag());
      assertEquals(1671, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-2607L), byteArray0, byteOrder0, 296);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2607), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(296, tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2832), 1, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)122);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2832), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(122, int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[53];
      TiffField tiffField0 = new TiffField((-2587), (-2587), fieldTypeFloat0.ASCII, 2635L, 2635L, byteArray0, byteOrder0, 33);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-2587 (0xfffff5e5: Unknown Tag): ", string0);
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(2635, tiffField0.getOffset());
      assertEquals((-2587), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-305), "n");
      byte[] byteArray0 = new byte[39];
      TiffField tiffField0 = new TiffField(59, (-305), fieldTypeFloat0.DOUBLE, 674L, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getValue();
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals(674L, tiffField0.getCount());
      assertEquals(59, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(5392, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[209];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(7, (short)283, fieldTypeDouble0.FLOAT, (short)283, (-2445L), byteArray0, byteOrder0, 1683);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-2445L), tiffElement0.offset);
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(1683, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
  }
}
