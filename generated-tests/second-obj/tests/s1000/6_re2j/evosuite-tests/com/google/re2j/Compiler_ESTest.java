/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:21:54 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Compiler;
import com.google.re2j.Prog;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Compiler_ESTest extends Compiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Prog prog0 = Compiler.compileRegexp(regexp1);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Prog prog0 = Compiler.compileRegexp(regexp0);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Prog prog0 = Compiler.compileRegexp(regexp0);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Prog prog0 = Compiler.compileRegexp(regexp1);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Prog prog0 = Compiler.compileRegexp(regexp0);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Prog prog0 = Compiler.compileRegexp(regexp0);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.reinit();
      regexp1.reinit();
      Compiler.compileRegexp(regexp1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      Regexp[] regexpArray0 = new Regexp[6];
      regexp1.op.isPseudo();
      regexp1.op.isPseudo();
      regexp1.toString();
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp1.op.isPseudo();
      regexp1.op = regexp_Op1;
      regexpArray0[1] = regexp0;
      Compiler.compileRegexp(regexp1);
      Regexp regexp2 = null;
      try {
        regexp2 = new Regexp(regexpArray0[3]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = 312;
      intArray0[1] = 2543;
      intArray0[2] = 69;
      regexp0.runes = intArray0;
      Compiler.compileRegexp(regexp0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Compiler.compileRegexp(regexp0);
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // regexp: unhandled case in compile
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[15];
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexp0.name = "_:lj5WwZNAZC/'rB";
      regexp0.subs = regexpArray0;
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 356;
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.op = regexp_Op0;
      Regexp[] regexpArray0 = new Regexp[6];
      regexp1.op.isPseudo();
      regexp1.op.isPseudo();
      regexp1.toString();
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      regexp1.op.isPseudo();
      regexp1.op = regexp_Op1;
      regexpArray0[1] = regexp0;
      Compiler.compileRegexp(regexp1);
      Regexp regexp2 = null;
      try {
        regexp2 = new Regexp(regexpArray0[3]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      Regexp[] regexpArray0 = new Regexp[4];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      regexp1.op = regexp_Op1;
      regexpArray0[3] = regexp1;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp1.op);
      Regexp regexp4 = new Regexp(regexp1);
      Prog prog0 = Compiler.compileRegexp(regexp4);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      Regexp[] regexpArray0 = new Regexp[6];
      int[] intArray0 = new int[3];
      regexp1.reinit();
      intArray0[0] = (-1485);
      regexp1.flags = (-1485);
      intArray0[1] = 0;
      intArray0[2] = (-1485);
      regexp0.runes = intArray0;
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp1.name = "-h.|Ka\"hd";
      regexpArray0[2] = regexp1;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp1.op = regexp_Op1;
      regexpArray0[3] = regexp1;
      regexp0.cap = (-1485);
      regexpArray0[4] = regexp1;
      regexp1.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp_Op1);
      Prog prog0 = Compiler.compileRegexp(regexp1);
      assertNotNull(prog0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op2 = Regexp.Op.LITERAL;
      regexp1.reinit();
      regexp1.op = regexp_Op2;
      int[] intArray0 = new int[2];
      intArray0[0] = 405;
      regexp1.runes = intArray0;
      Compiler.compileRegexp(regexp1);
      Compiler.compileRegexp(regexp1);
      Compiler.compileRegexp(regexp1);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.max = 894;
      Compiler.compileRegexp(regexp2);
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0.op);
      int[] intArray0 = new int[4];
      regexp0.runes = intArray0;
      regexp1.name = "no)7EP@|[X!qNf5j";
      intArray0[0] = (-944);
      Compiler.compileRegexp(regexp0);
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      int[] intArray0 = new int[2];
      regexp0.runes = intArray0;
      Prog prog0 = Compiler.compileRegexp(regexp0);
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp4 = new Regexp(regexp0.op);
      Regexp regexp5 = new Regexp(regexp_Op0);
      Regexp regexp6 = new Regexp(regexp3);
      regexp_Op1.isPseudo();
      boolean boolean1 = regexp3.equals(prog0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      regexp0.runes = intArray0;
      Compiler.compileRegexp(regexp0);
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Compiler.compileRegexp(regexp0);
      Object object0 = new Object();
      Regexp[] regexpArray0 = new Regexp[6];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      Regexp regexp3 = new Regexp(regexp_Op0);
      Regexp regexp4 = new Regexp(regexp0);
      Regexp regexp5 = new Regexp(regexp2);
      Regexp regexp6 = new Regexp(regexp_Op1);
      Regexp regexp7 = new Regexp(regexp2);
      regexp4.name = ",I/f1A$i%U^";
      Regexp regexp8 = new Regexp(regexp_Op0);
      Compiler.compileRegexp(regexp4);
      Regexp.Op regexp_Op2 = Regexp.Op.ALTERNATE;
      Regexp regexp9 = new Regexp(regexp_Op2);
      regexp2.equals(regexp1);
      regexp9.cap = 6681;
      regexp9.subs = regexp0.subs;
      Prog prog0 = Compiler.compileRegexp(regexp9);
      Regexp regexp10 = new Regexp(regexp2);
      Regexp regexp11 = new Regexp(regexp10);
      Regexp regexp12 = new Regexp(regexp1);
      Prog prog1 = Compiler.compileRegexp(regexp1);
      assertNotSame(prog1, prog0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Compiler.compileRegexp(regexp0);
      Object object0 = new Object();
      Regexp[] regexpArray0 = new Regexp[10];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[5] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.END_TEXT;
      Regexp regexp3 = new Regexp(regexp_Op2);
      Regexp.Op regexp_Op3 = Regexp.Op.BEGIN_LINE;
      regexp3.op = regexp_Op3;
      Regexp regexp4 = new Regexp(regexp0);
      Regexp regexp5 = new Regexp(regexp2);
      Regexp.Op regexp_Op4 = Regexp.Op.PLUS;
      Regexp regexp6 = new Regexp(regexp_Op4);
      Regexp regexp7 = new Regexp(regexp2);
      Regexp regexp8 = new Regexp(regexp3);
      Object object1 = new Object();
      regexp0.equals(object1);
      Regexp regexp9 = new Regexp(regexp4);
      int[] intArray0 = new int[8];
      regexp9.runes = intArray0;
      intArray0[1] = 0;
      intArray0[3] = 9267;
      regexp9.runes = intArray0;
      regexp4.toString();
      Regexp regexp10 = new Regexp(regexp9);
      Regexp.Op regexp_Op5 = Regexp.Op.ALTERNATE;
      Regexp regexp11 = new Regexp(regexp_Op5);
      regexp11.subs = regexp0.subs;
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      regexp1.op = regexp_Op0;
      Regexp[] regexpArray0 = new Regexp[35];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp1.op = regexp_Op1;
      Compiler.compileRegexp(regexp1);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp_Op1);
      Regexp regexp4 = new Regexp(regexp0);
      Regexp regexp5 = new Regexp(regexp4);
      Regexp regexp6 = new Regexp(regexp4);
      Regexp regexp7 = new Regexp(regexp0);
      Regexp regexp8 = new Regexp(regexp4);
      Object object0 = new Object();
      regexp8.equals(object0);
      int[] intArray0 = new int[2];
      intArray0[0] = 68405;
      intArray0[1] = 68405;
      regexp7.runes = intArray0;
      Regexp.Op regexp_Op2 = Regexp.Op.BEGIN_TEXT;
      regexp_Op2.isPseudo();
      Regexp.Op regexp_Op3 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp9 = new Regexp(regexp_Op3);
      Compiler.compileRegexp(regexp6);
      Object object1 = new Object();
      Compiler.compileRegexp(regexp2);
      Prog prog0 = Compiler.compileRegexp(regexp7);
      Regexp.Op regexp_Op4 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp10 = new Regexp(regexp_Op4);
      Regexp regexp11 = new Regexp(regexp_Op3);
      Regexp regexp12 = new Regexp(regexp3);
      Compiler.compileRegexp(regexp11);
      Compiler.compileRegexp(regexp4);
      Prog prog1 = Compiler.compileRegexp(regexp1);
      assertNotSame(prog1, prog0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Compiler.compileRegexp(regexp0);
      Object object0 = new Object();
      Regexp[] regexpArray0 = new Regexp[6];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[5] = regexp1;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      Regexp regexp3 = new Regexp(regexp0);
      Regexp regexp4 = new Regexp(regexp2);
      Regexp regexp5 = new Regexp(regexp_Op1);
      Regexp regexp6 = new Regexp(regexp2);
      regexp3.name = "com.google.re2j.Compiler$1";
      int[] intArray0 = new int[2];
      int[] intArray1 = new int[3];
      intArray1[0] = (-829);
      intArray1[1] = (-3416);
      intArray1[2] = 12;
      regexp1.runes = intArray1;
      intArray0[0] = 65279;
      regexp1.cap = 65279;
      regexp5.runes = intArray0;
      regexp4.name = null;
      regexp5.reinit();
      Regexp regexp7 = new Regexp(regexp_Op0);
      Compiler.compileRegexp(regexp3);
      Regexp.Op regexp_Op2 = Regexp.Op.CONCAT;
      Regexp regexp8 = new Regexp(regexp_Op2);
      regexp8.max = 153;
      Object object1 = new Object();
      regexp8.equals(object1);
      regexp8.subs = regexp0.subs;
      // Undeclared exception!
      try { 
        Compiler.compileRegexp(regexp8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Compiler", e);
      }
  }
}
