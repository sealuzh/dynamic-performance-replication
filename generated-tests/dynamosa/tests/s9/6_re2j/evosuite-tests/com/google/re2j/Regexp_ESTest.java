/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 19:26:58 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = 2914;
      boolean boolean0 = regexp1.equals((Object) null);
      assertFalse(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(2914, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("(?-s:.)", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.toString();
      regexp0.cap = (-3703);
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[3] = regexp2;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp1;
      regexp1.subs = regexpArray0;
      regexp0.toString();
      int[] intArray0 = new int[9];
      intArray0[0] = (-3703);
      intArray0[1] = (-3703);
      intArray0[2] = (-3703);
      intArray0[3] = (-3703);
      intArray0[4] = 0;
      intArray0[5] = (-3703);
      intArray0[6] = 11;
      intArray0[7] = (-3703);
      regexp1.equals(regexp0);
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?P<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?P<
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Object object0 = new Object();
      boolean boolean0 = regexp1.equals(object0);
      String string0 = regexp1.name;
      Regexp.Op regexp_Op2 = Regexp.Op.END_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op2);
      Regexp regexp3 = new Regexp(regexp_Op0);
      Regexp regexp4 = new Regexp(regexp_Op1);
      regexp4.toString();
      Object object1 = new Object();
      regexp0.equals(object1);
      regexp0.min = (-1275);
      Object object2 = new Object();
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("^", string0);
      
      regexp1.reinit();
      regexp0.toString();
      regexp1.toString();
      boolean boolean0 = regexp0.equals("^");
      Regexp regexp2 = new Regexp(regexp_Op0);
      boolean boolean1 = regexp0.equals(regexp2);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      int[] intArray0 = new int[6];
      intArray0[0] = (-401);
      intArray0[1] = 4;
      intArray0[2] = 3751;
      intArray0[3] = 15;
      intArray0[4] = 226;
      intArray0[5] = 13;
      regexp1.runes = intArray0;
      Object object0 = new Object();
      regexp1.equals(object0);
      String string0 = regexp1.name;
      Regexp.Op regexp_Op2 = Regexp.Op.END_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op2);
      Regexp regexp3 = new Regexp(regexp_Op0);
      Regexp regexp4 = new Regexp(regexp_Op1);
      regexp4.toString();
      Object object1 = new Object();
      regexp1.maxCap();
      Regexp regexp5 = new Regexp(regexp1);
      boolean boolean0 = regexp3.equals(regexp1);
      assertFalse(regexp1.equals((Object)regexp0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 1783;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp_Op1.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2817;
      intArray0[1] = 2143;
      intArray0[2] = 1805;
      intArray0[3] = (-2457);
      intArray0[4] = 3613;
      intArray0[5] = (-1278);
      intArray0[6] = (-1910);
      intArray0[7] = 12;
      regexp0.runes = intArray0;
      Regexp regexp2 = new Regexp(regexp0);
      regexp1.toString();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("GKb1+y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.GKb1+y
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.END_TEXT;
      Regexp regexp1 = new Regexp(regexp_Op2);
      regexp1.flags = 4365;
      regexp1.toString();
      regexp1.equals("(?-m:$)");
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      regexp0.cap = 19;
      intArray0[1] = (-2138);
      intArray0[2] = (-2138);
      intArray0[3] = (-2138);
      regexp0.runes = intArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = 1097;
      intArray1[2] = (-1259);
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexpArray0[0] = regexp1;
      regexp0.subs = regexpArray0;
      String string0 = regexp1.name;
      regexp0.runes = intArray1;
      regexp0.maxCap();
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp0);
      regexp1.equals(regexp2);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      Object object0 = new Object();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      boolean boolean1 = regexp_Op1.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      int[] intArray0 = new int[4];
      intArray0[0] = 7;
      intArray0[1] = 120258;
      intArray0[2] = 2312;
      intArray0[3] = 20;
      regexp1.runes = intArray0;
      regexp0.toString();
      regexp2.min = 120258;
      Object object1 = new Object();
      regexp0.flags = 10;
      Regexp.Op regexp_Op2 = Regexp.Op.WORD_BOUNDARY;
      boolean boolean2 = regexp0.equals(regexp2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op2);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.toString();
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexp3.toString();
      boolean boolean0 = regexp1.equals(regexp_Op0);
      assertFalse(boolean0);
      
      boolean boolean1 = regexp1.equals(regexp3);
      assertFalse(regexp3.equals((Object)regexp2));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "L7M$";
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp1;
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp2;
      regexp1.subs = regexpArray0;
      regexp1.reinit();
      regexp1.toString();
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[1] = (-2138);
      intArray0[2] = (-2138);
      intArray0[3] = (-2138);
      regexp0.runes = intArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = 1097;
      intArray0[1] = (-1259);
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp1;
      regexp0.subs = regexpArray0;
      String string0 = regexp1.name;
      regexp0.runes = intArray1;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp1.toString();
      boolean boolean0 = regexp1.equals(regexp_Op0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp2);
      Object object1 = new Object();
      Regexp.Op regexp_Op2 = Regexp.Op.BEGIN_LINE;
      Regexp regexp4 = new Regexp(regexp_Op2);
      Regexp regexp5 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp3.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp0.min = (-553);
      boolean boolean0 = regexp_Op1.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.toString();
      Object object1 = new Object();
      Regexp.Op regexp_Op2 = Regexp.Op.WORD_BOUNDARY;
      boolean boolean1 = regexp0.equals(regexp2);
      assertTrue(boolean1 == boolean0);
      
      regexp2.equals((Object) null);
      boolean boolean2 = regexp0.equals(regexp_Op2);
      assertFalse(boolean2);
      
      regexp2.toString();
      assertTrue(regexp0.equals((Object)regexp2));
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.reinit();
      int[] intArray0 = new int[4];
      intArray0[0] = 2148;
      regexp0.runes = intArray0;
      boolean boolean1 = regexp0.equals(regexp0);
      assertTrue(boolean1);
      
      regexp0.equals((Object) null);
      Regexp.Op.values();
      boolean boolean2 = regexp0.equals(regexp_Op0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.reinit();
      int[] intArray0 = new int[4];
      intArray0[0] = 166;
      intArray0[1] = 5;
      intArray0[2] = 18;
      intArray0[3] = 2148;
      regexp0.runes = intArray0;
      boolean boolean1 = regexp0.equals(regexp0);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = regexp0.equals((Object) null);
      assertFalse(boolean2);
      
      Regexp.Op.values();
      regexp0.toString();
      String string0 = regexp0.toString();
      assertEquals("\u00A6\\x05\\x12\\x{864}", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.name;
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.toString();
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexp1.toString();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.max = 8;
      regexp2.equals(regexp0);
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 3;
      regexp0.max = 3;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 3;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = 7221;
      intArray0[1] = (-2123);
      intArray0[2] = (-2352);
      intArray0[3] = 12;
      regexp0.runes = intArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = 1097;
      regexp0.min = 2119;
      intArray1[1] = (-1259);
      intArray1[2] = 138;
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp1;
      regexp0.subs = regexpArray0;
      regexp0.toString();
      regexp0.runes = intArray1;
      regexp0.maxCap();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("5x)}h-{f9tW=|t,l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.5x)}h-{f9tW=|t,l
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 4;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[8];
      intArray0[0] = 3776;
      intArray0[1] = (-77);
      regexp1.cap = (-55);
      intArray0[2] = 6;
      regexp0.cap = (-55);
      intArray0[3] = 2923;
      intArray0[4] = (-243);
      intArray0[5] = 2;
      intArray0[6] = 6;
      intArray0[7] = 12;
      regexp1.runes = intArray0;
      regexp1.toString();
      regexp1.equals("[\u0EC0-xffffffb3x06-\u0B6Bxffffff0d-x02x06-\f]");
      regexp1.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp1 = new Regexp(regexp_Op2);
      Regexp regexp2 = new Regexp(regexp_Op1);
      int int0 = regexp2.min;
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp2.toString();
      Regexp regexp3 = new Regexp(regexp0);
      regexp3.toString();
      Object object0 = new Object();
      Regexp regexp4 = new Regexp(regexp1);
      Regexp regexp5 = new Regexp(regexp3);
      Object object1 = new Object();
      Regexp.Op regexp_Op3 = Regexp.Op.BEGIN_LINE;
      Regexp regexp6 = new Regexp(regexp_Op3);
      Regexp regexp7 = new Regexp(regexp1);
      boolean boolean1 = regexp5.equals(regexp7);
      assertTrue(boolean1 == boolean0);
      
      int int1 = regexp5.maxCap();
      assertEquals(0, int1);
      
      Regexp.Op.values();
      Regexp regexp8 = new Regexp(regexp_Op0);
      boolean boolean2 = regexp7.equals(regexp1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = 7221;
      intArray0[1] = (-2123);
      intArray0[2] = (-2352);
      intArray0[1] = 12;
      regexp0.runes = intArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = (-2123);
      regexp0.min = 2119;
      intArray1[1] = (-1268);
      intArray1[2] = 138;
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.subs = regexpArray0;
      regexp0.toString();
      regexp0.runes = intArray1;
      // Undeclared exception!
      try { 
        regexp0.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      regexp0.flags = 1059;
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.toString();
      regexp0.reinit();
      Regexp.Op.values();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.name = null;
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      Regexp regexp3 = new Regexp(regexp_Op1);
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2527;
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op0);
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2527;
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
      
      regexp0.toString();
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.END_LINE;
      Regexp regexp1 = new Regexp(regexp_Op2);
      regexp0.equals(regexp1);
      Regexp regexp2 = new Regexp(regexp0);
      Regexp regexp3 = new Regexp(regexp2);
      Object object0 = new Object();
      regexp2.equals(object0);
      Regexp regexp4 = new Regexp(regexp1);
      Regexp regexp5 = new Regexp(regexp4);
      regexp2.toString();
      Object object1 = new Object();
      Regexp regexp6 = new Regexp(regexp1);
      Object object2 = new Object();
      regexp0.equals("^");
      regexp1.maxCap();
      Regexp.Op.values();
      Regexp regexp7 = new Regexp(regexp_Op2);
      Regexp regexp8 = new Regexp(regexp6);
      regexp5.equals(regexp8);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("$|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.$|
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.VERTICAL_BAR;
      regexp_Op2.isPseudo();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      Regexp.Op regexp_Op2 = Regexp.Op.VERTICAL_BAR;
      boolean boolean0 = regexp_Op2.isPseudo();
      Regexp.Op regexp_Op3 = Regexp.Op.LEFT_PAREN;
      Regexp.Op regexp_Op4 = Regexp.Op.BEGIN_TEXT;
      boolean boolean1 = regexp_Op4.isPseudo();
      boolean boolean2 = regexp0.equals(regexp_Op1);
      assertFalse(boolean2 == boolean0);
      
      String string0 = regexp0.name;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp_Op3);
      regexp0.toString();
      Regexp.Op regexp_Op5 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp3 = new Regexp(regexp_Op5);
      boolean boolean3 = regexp0.equals(regexp3);
      assertTrue(boolean3 == boolean1);
      
      Object object0 = new Object();
      boolean boolean4 = regexp1.equals(regexp0);
      assertTrue(boolean4);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.LEFT_PAREN;
      regexp_Op2.isPseudo();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      regexp_Op1.isPseudo();
      regexp1.toString();
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.equals(regexp2);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Old_South_Arabian");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Old_South_Arabian
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-1163);
      int[] intArray0 = new int[1];
      regexp0.runes = intArray0;
      String string0 = regexp0.toString();
      assertEquals("(?i:\\x00)", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      regexp0.op = regexp_Op1;
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      assertTrue(regexp0.equals((Object)regexp1));
      
      regexp1.flags = (-555);
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(regexp0.equals((Object)regexp1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.flags = 2914;
      String string0 = regexp1.toString();
      assertEquals("(?-m:$)", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      String string0 = regexp0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      boolean boolean0 = regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.VERTICAL_BAR;
      boolean boolean1 = regexp_Op2.isPseudo();
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = regexp0.equals(regexp0);
      regexp0.toString();
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
      
      Object object0 = new Object();
      boolean boolean3 = regexp0.equals(object0);
      assertFalse(boolean3 == boolean2);
      
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals((Object) null);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp0.op);
      boolean boolean0 = regexp3.equals(regexp_Op0);
      assertFalse(boolean0);
      
      regexp1.flags = 0;
      Regexp.Op regexp_Op2 = Regexp.Op.CAPTURE;
      boolean boolean1 = regexp_Op2.isPseudo();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp regexp4 = new Regexp(regexp1);
      Regexp regexp5 = new Regexp(regexp1);
      boolean boolean2 = regexp4.equals(regexp5);
      assertFalse(boolean2 == boolean1);
      
      Regexp.Op regexp_Op3 = Regexp.Op.NO_MATCH;
      regexp_Op3.isPseudo();
      Regexp.Op regexp_Op4 = Regexp.Op.QUEST;
      Regexp regexp6 = new Regexp(regexp_Op4);
      Object object0 = new Object();
      boolean boolean3 = regexp0.op.isPseudo();
      assertFalse(regexp0.equals((Object)regexp6));
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      Regexp regexp2 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp2.equals(object0);
      assertFalse(boolean0);
      
      regexp2.reinit();
      Regexp regexp3 = new Regexp(regexp2);
      regexp1.toString();
      Regexp regexp4 = new Regexp(regexp_Op1);
      Regexp regexp5 = new Regexp(regexp2);
      boolean boolean1 = regexp3.equals(regexp1);
      assertFalse(regexp3.equals((Object)regexp0));
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "h]F?I";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      regexp0.equals("^");
      regexp0.reinit();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp0.subs = null;
      regexp0.toString();
      String string0 = null;
      regexp0.name = null;
      regexp0.reinit();
      regexp0.equals("^");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
      
      regexp0.reinit();
      int[] intArray0 = new int[9];
      regexp0.runes = intArray0;
      String string0 = regexp0.toString();
      assertEquals("\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\A", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.toString();
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexp3.toString();
      assertFalse(regexp3.equals((Object)regexp1));
      
      regexp1.equals(regexp_Op0);
      boolean boolean1 = regexp2.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp0.reinit();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.toString();
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp1.toString();
      Object object1 = new Object();
      boolean boolean0 = regexp2.equals(object1);
      assertFalse(boolean0);
      
      regexp0.equals(regexp2);
      regexp3.toString();
      assertFalse(regexp3.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp((Regexp.Op) null);
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1102;
      intArray0[1] = 3776;
      intArray0[2] = 4419;
      regexp0.runes = intArray0;
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = 7221;
      intArray0[2] = (-2352);
      intArray0[3] = 12;
      regexp0.runes = intArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = (-2352);
      regexp0.toString();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.toString();
      Regexp.Op.values();
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals("A");
      regexp1.equals(regexp0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.A
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 1783;
      regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 1811;
      regexp0.max = 1811;
      regexp0.equals(regexp_Op0);
      regexp0.max = 753;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.max = 753;
      regexp1.equals((Object) null);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.name = "Pi";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.name = null;
      regexp1.op = regexp_Op1;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      String string0 = null;
      int int0 = (-696);
      regexp1.max = (-696);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray1 = new Regexp[2];
      regexpArray1[1] = regexp0;
      regexp0.subs = regexpArray1;
      regexp1.name = "";
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 2169;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.toString();
      int int0 = (-3703);
      regexp0.cap = (-3703);
      regexp0.toString();
      int[] intArray0 = new int[9];
      intArray0[0] = (-3703);
      intArray0[1] = (-3703);
      intArray0[2] = (-3703);
      intArray0[3] = (-3703);
      intArray0[4] = 0;
      intArray0[5] = (-3703);
      intArray0[6] = 11;
      intArray0[7] = (-3703);
      intArray0[8] = (-3703);
      regexp0.runes = intArray0;
      regexp0.equals((Object) null);
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.name = "";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2527;
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      Regexp regexp1 = new Regexp(regexp_Op1);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("So");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.So
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.maxCap();
      regexp_Op1.isPseudo();
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexp0.toString();
      Regexp regexp4 = new Regexp(regexp1);
      String string0 = regexp3.name;
      Object object1 = new Object();
      Regexp regexp5 = new Regexp(regexp3);
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        regexp4.equals(regexp5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.toString();
      regexp0.cap = (-3703);
      regexp0.equals("z");
      regexp1.reinit();
      regexp1.toString();
      regexp0.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      regexp_Op1.isPseudo();
      regexp1.toString();
      regexp1.toString();
      Object object0 = new Object();
      regexp1.equals(regexp_Op0);
      regexp1.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      regexp0.equals(regexp0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      regexp0.flags = 3;
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp_Op1.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp2 = new Regexp(regexp_Op2);
      regexp1.toString();
      Regexp regexp3 = new Regexp(regexp0);
      Regexp regexp4 = new Regexp(regexp_Op0);
      regexp4.equals("");
      Regexp regexp5 = new Regexp(regexp1);
      regexp4.equals(regexp_Op2);
      Regexp regexp6 = new Regexp(regexp4);
      // Undeclared exception!
      try { 
        regexp5.equals(regexp6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.name;
      regexp0.reinit();
      regexp0.equals((Object) null);
      String string1 = regexp0.name;
      regexp0.name = "[ztr7pB-eV',aP#o";
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.equals(regexp2);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 965;
      regexp0.equals(regexp_Op0);
      regexp0.name = "PLUS";
      regexp0.flags = 1749;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.reinit();
      regexp0.reinit();
      regexp0.op = regexp_Op1;
      regexp0.max = 869;
      regexp0.toString();
      Regexp.Op.valueOf("PLUS");
      regexp0.toString();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.op.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("~16:)Q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.~16:)Q
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      boolean boolean0 = regexp_Op0.isPseudo();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.LEFT_PAREN;
      regexp_Op2.isPseudo();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.END_LINE;
      Regexp.Op regexp_Op3 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp1 = new Regexp(regexp_Op3);
      int int0 = regexp1.min;
      boolean boolean0 = regexp_Op1.isPseudo();
      regexp0.toString();
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.toString();
      Object object0 = new Object();
      Regexp.Op regexp_Op4 = Regexp.Op.LITERAL;
      Regexp regexp3 = new Regexp(regexp0);
      Regexp regexp4 = new Regexp(regexp3);
      Object object1 = new Object();
      Regexp regexp5 = new Regexp(regexp_Op3);
      regexp3.equals(regexp5);
      int int1 = regexp1.maxCap();
      assertEquals(0, int1);
      
      Regexp.Op.values();
      Regexp regexp6 = new Regexp(regexp_Op2);
      boolean boolean1 = regexp0.equals(regexp_Op4);
      assertTrue(boolean1 == boolean0);
      assertFalse(regexp0.equals((Object)regexp6));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      String string0 = regexp0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 128542;
      regexp0.max = 128542;
      regexp1.max = 128542;
      String string0 = regexp0.name;
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.valueOf("VERTICAL_BAR");
      assertSame(regexp_Op1, regexp_Op0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp0);
      regexp1.maxCap();
      boolean boolean0 = regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp4 = new Regexp(regexp_Op2);
      Regexp regexp5 = new Regexp(regexp_Op2);
      regexp5.toString();
      Regexp regexp6 = new Regexp(regexp0);
      String string0 = regexp3.name;
      Object object0 = new Object();
      Regexp regexp7 = new Regexp(regexp0);
      Regexp regexp8 = new Regexp(regexp7);
      Object object1 = new Object();
      regexp4.equals((Object) null);
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op.values();
      Regexp regexp9 = new Regexp(regexp7);
      Regexp.Op regexp_Op3 = Regexp.Op.STAR;
      Regexp regexp10 = new Regexp(regexp_Op3);
      Regexp regexp11 = new Regexp(regexp10);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp10.subs = regexpArray0;
      Object object2 = new Object();
      boolean boolean1 = regexp11.equals(object2);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      String string0 = "CHAR_CLASS";
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp0;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp.Op.valueOf("CHAR_CLASS");
      regexp0.min = 2049;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(";2b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.;2b
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("(?s:.)", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.cap = 2354;
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      regexp0.runes = intArray0;
      regexp0.min = 0;
      regexp0.toString();
      Regexp.Op.values();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(@KUIrZF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(@KUIrZF
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp0);
      Regexp.Op.values();
      String string0 = regexp0.toString();
      assertEquals("$", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = "";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Regexp[] regexpArray0 = new Regexp[9];
      Regexp regexp0 = null;
      try {
        regexp0 = new Regexp(regexpArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      int[] intArray0 = new int[8];
      regexp1.cap = (-55);
      intArray0[2] = (-24);
      regexp0.cap = (-55);
      intArray0[3] = (-55);
      intArray0[4] = (-243);
      intArray0[5] = 2;
      intArray0[0] = 6;
      intArray0[7] = 12;
      regexp1.runes = intArray0;
      regexp1.toString();
      boolean boolean0 = regexp0.equals("[x06-x00xffffffe8-xffffffc9xffffff0d-x02x00-\f]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.END_LINE;
      Regexp regexp1 = new Regexp(regexp_Op2);
      regexp0.equals(regexp1);
      Regexp regexp2 = new Regexp(regexp0);
      Regexp regexp3 = new Regexp(regexp2);
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp3.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.flags = (-1025);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      regexp0.flags = 329;
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.max = 94;
      regexp1.toString();
      regexp0.equals(regexp1);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.max = (-1986);
      regexp2.flags = 2913;
      regexp0.flags = 0;
      regexp0.maxCap();
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
  }
}
