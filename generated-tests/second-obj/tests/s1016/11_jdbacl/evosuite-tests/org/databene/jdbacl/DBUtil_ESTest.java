/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:13:51 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.store.raw.ContainerHandle;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBCallableStatement;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.engine.ConnectionInfo;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = Long.MIN_VALUE;
      DBUtil.getOpenConnectionCount();
      DBUtil.getOpenStatementCount();
      boolean boolean0 = DBUtil.existsEnvironment((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "gni";
      DBUtil.escape("gni");
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      // Undeclared exception!
      try { 
        hsqlProperties0.setProperty("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      Connection connection0 = null;
      String string0 = null;
      Level level0 = Level.fatal;
      ErrorHandler errorHandler0 = null;
      try {
        errorHandler0 = new ErrorHandler((String) null, level0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name argument cannot be null
         //
         verifyException("ch.qos.logback.classic.LoggerContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.available("V4Srz/>!Rj6", "V4Srz/>!Rj6", "D014", "V4Srz/>!Rj6");
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("V4Srz/>!Rj6", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          DBUtil.getOpenConnectionCount();
          String string0 = "Z}sfGm8=#da";
          DBUtil.resetMonitors();
          ConnectionInfo connectionInfo0 = new ConnectionInfo("^{Io~NPO");
          JdbcConnection jdbcConnection0 = null;
          try {
            jdbcConnection0 = new JdbcConnection(connectionInfo0, false);
            fail("Expecting exception: JdbcSQLException");
          
          } catch(Throwable e) {
             //
             // General error: \"java.lang.NullPointerException\" [50000-136]
             //
             verifyException("org.h2.message.DbException", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Using driver ");
      DBUtil.checkReadOnly("Using driver ", false);
      boolean boolean0 = DBUtil.existsEnvironment("Using driver ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.existsEnvironment("executeUpdate(");
      DBUtil.close((Connection) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.getOpenStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("executeUpdate(", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("N}sfGm8=#Ea", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("N}sfGm8=#Ea", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect("f\"T2m", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'f\"T2m.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getReferrers();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "N}sfGm8=#Ea";
      stringArray0[1] = "--";
      stringArray0[2] = "vBn";
      stringArray0[3] = "N}sfGm8=#Ea";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "No JDBC driver class name specified", true, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "--", true, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "N}sfGm8=#Ea", true, stringArray0);
      boolean boolean0 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V4Srz/>!Rj6");
      DBUtil.assertAllDbResourcesClosed(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.available("V4Srz/>!Rj6", "V4Srz/>!Rj6", "lessThanStringFromParameter", (String) null);
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("org.databene.JDBC", level0);
      Proxy proxy0 = (Proxy)DBUtil.createLoggingStatementHandler((Statement) null, false);
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet(0L, (-1890));
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = null;
      long long0 = ContainerHandle.INVALID_PAGE_NUMBER;
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("-z9MP", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("Connected to ", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: Connected to 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, (String) null, "--N}sfGm8=#Ea", "setLength");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = ".env.properties";
      String string1 = "";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData(".env.properties", ".env.properties", ".env.properties", "", "", "D=");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting .env.properties failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "-z9MP";
      // Undeclared exception!
      try { 
        DBUtil.queryLong("-z9MP", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      GDSHelper gDSHelper0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Database query did not return a result: ");
      String string0 = " failed: ";
      int int0 = (-112);
      int int1 = 2;
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.nextLine(simpleResultSet0);
      Connection connection0 = null;
      String string0 = "--3ECxI37s*1 G0;f1fk";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "--3ECxI37s*1 G0;f1fk", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      ErrorHandler errorHandler0 = new ErrorHandler("N}sfGm8=#Ea");
      ErrorHandler errorHandler1 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("No JDBC driver class name specified", '', (Connection) null, false, errorHandler1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.currentLine(simpleResultSet0);
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("N}sfGm8=#Ea", level0);
      ErrorHandler.setDefaultLevel(level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("N}sfGm8=#Ea", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      String string0 = "";
      String string1 = "D=";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "A'M7|trR.-KL<\"O@%", "", "A'M7|trR.-KL<\"O@%", (String) null, "A'M7|trR.-KL<\"O@%");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " Jcw!:JM#J/%<");
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.available("D014", (String) null, "D014", "5-");
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "V4Srz/>!Rj6";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V4Srz/>!Rj6");
      DBUtil.assertAllDbResourcesClosed(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Connection connection0 = null;
      String string1 = "or";
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Csv.getInstance();
      Level level0 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("Pt?<v", level1);
      DBUtil.runScript("--org.apache.derby.impl.sql.compile.DistinctNode", (Connection) null, true, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.query("--org.apache.derby.impl.sql.compile.DistinctNode", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.close((ResultSet) simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("--~$3", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.currentLine(simpleResultSet0);
      Level level0 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      String string0 = "Pt?<v";
      Level level1 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("Pt?<v", level1);
      // Undeclared exception!
      try { 
        DBUtil.runScript("--org.apache.derby.impl.sql.compile.DistinctNode", "--org.apache.derby.impl.sql.compile.DistinctNode", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --org.apache.derby.impl.sql.compile.DistinctNode
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.nextLine(simpleResultSet0);
      Connection connection0 = null;
      String string0 = "--3ECxI37s*1 G0;f1fk";
      FileUtil.canonicalFile("--3ECxI37s*1 G0;f1fk");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y,eZi`h9dH:`W^_9");
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.currentLine(simpleResultSet0);
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("Pt?<v", level0);
      DBSchema dBSchema0 = new DBSchema("Pt?<v");
      Object object0 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.getOpenStatementCount();
      Random.setNextRandom(1);
      try { 
        DBUtil.parseResultRow(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }
}
