/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 06:31:41 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-18);
      TiffField tiffField0 = new TiffField(791, 95, fieldTypeShort0, 791, 95, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1582, tiffField0.getBytesLength());
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(238, int0);
      assertEquals(791, tiffField0.getTag());
      assertEquals(95, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2117657486, "");
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 1L, 2147461392, (byte[]) null, byteOrder0, 658);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(658, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(2147461392, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[24];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2457, 0, fieldTypeDouble0, 20, 4375L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2457, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4375, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)28, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)28, (-2663), fieldTypeByte0, 3961L, (-3239L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-3239), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2663), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1794), fieldTypeLong0, 0, 1261L, byteArray0, byteOrder0, (byte) (-39));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1794), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(1261, tiffField0.getOffset());
      assertEquals("", string0);
      assertEquals((-39), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1162), fieldTypeFloat0.RATIONAL, 212L, (-1722L), byteArray0, byteOrder0, (-1162));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1162), tiffField0.getDirectoryType());
      assertEquals((-1722), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-1162), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3297), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 1146, fieldTypeDouble0, 1146, 1146, byteArray0, byteOrder0, 50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1146, tiffField0.getDirectoryType());
      assertTrue(tagInfo0.isOffset());
      assertEquals(1146, tiffField0.getOffset());
      assertEquals(513, tagInfo0.tag);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2147461392, fieldTypeFloat0, (byte)0, (byte)0, byteArray0, byteOrder0, 2117657486);
      int int0 = tiffField0.getTag();
      assertEquals(2147461392, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2117657486, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, (-858L), 65535, byteArray0, byteOrder0, (byte) (-87));
      int int0 = tiffField0.getTag();
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(929, "Invalid value: ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)28;
      TiffField tiffField0 = new TiffField(1732, (byte)28, fieldTypeFloat0.ASCII, 277, (-3928), byteArray0, byteOrder0, (byte)28);
      String string0 = tiffField0.getStringValue();
      assertEquals(1732, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals((-3928), tiffField0.getOffset());
      assertEquals(277, tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 725);
      int int0 = tiffField0.getSortHint();
      assertEquals(725, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147362218, 624, fieldTypeByte0, 2147362218, 624, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(624, tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals(624, tiffField0.getDirectoryType());
      assertEquals(2147362218, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1805, (-974), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 32773);
      tiffField0.getOffset();
      assertEquals((-974), tiffField0.getDirectoryType());
      assertEquals(32773, tiffField0.getSortHint());
      assertEquals(1805, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeDouble0, (-2082L), (-1371L), byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals((-1371), int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-102);
      byteArray0[4] = (byte)28;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146962033), (byte)0, fieldTypeAscii0.RATIONAL, 2864L, 32L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(360448, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2146962033), tiffField0.getTag());
      assertEquals(22912, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-85);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, (byte)0, fieldTypeLong0, (byte)107, 0, byteArray0, byteOrder0, 1423);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1423, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(428, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1), (-5510), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 4535);
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(4535, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-5510), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)68;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1139), (byte)0, fieldTypeShort0, 1L, 3, byteArray0, byteOrder0, 634);
      tiffField0.getIntValue();
      assertEquals((-1139), tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(634, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(187, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-49);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(187, 65535, fieldTypeByte0, 1L, 1765L, byteArray0, byteOrder0, 278);
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(278, tiffField0.getSortHint());
      assertEquals(187, tiffField0.getTag());
      assertEquals(1765, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1805, 1805, fieldTypeDouble0.SHORT, 4L, 32773, byteArray0, byteOrder0, 2147475457);
      tiffField0.getIntArrayValue();
      assertEquals(1805, tiffField0.getDirectoryType());
      assertEquals(32773, tiffField0.getOffset());
      assertEquals(1805, tiffField0.getTag());
      assertEquals(2147475457, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2556, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(499, (-1032), fieldTypeShort0, (-1650L), (-2147483648L), byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1032), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(499, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(18, "");
      TiffField tiffField0 = new TiffField((-2376), (byte)123, fieldTypeAscii0, (-2376), 24L, byteArray0, byteOrder0, 7);
      tiffField0.getFieldTypeName();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals((-2376), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-440L), 2818L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2818, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      TiffField tiffField0 = new TiffField(0, 2147104969, fieldTypeShort0, 4L, 32773, byteArray0, byteOrder0, 32773);
      tiffField0.getFieldType();
      assertEquals(2147104969, tiffField0.getDirectoryType());
      assertEquals(32773, tiffField0.getSortHint());
      assertEquals(32773, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(66, (byte) (-1), fieldTypeByte0, 61L, 19936L, byteArray0, byteOrder0, 2146502613);
      tiffField0.getFieldType();
      assertEquals(2146502613, tiffField0.getSortHint());
      assertEquals(19936, tiffField0.getOffset());
      assertEquals(66, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(5519, 2147475457, fieldTypeFloat0, 1L, (-3362L), byteArray0, byteOrder0, (-65));
      tiffField0.getDoubleValue();
      assertEquals((-3362), tiffField0.getOffset());
      assertEquals((-65), tiffField0.getSortHint());
      assertEquals(5519, tiffField0.getTag());
      assertEquals(2147475457, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeDouble0, (byte)1, (-1371L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1371), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long((byte) (-23));
      byte[] byteArray0 = fieldTypeRational0.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField(4654, (-3709), fieldTypeRational0, 1, 37391, byteArray0, byteOrder0, (-4057));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(37391, tiffField0.getOffset());
      assertEquals((-4057), tiffField0.getSortHint());
      assertEquals((-3709), tiffField0.getDirectoryType());
      assertEquals(4654, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-39), 1423, fieldTypeLong0, (-612L), 4134L, byteArray0, byteOrder0, (byte)59);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1423, int0);
      assertEquals(4134, tiffField0.getOffset());
      assertEquals((-39), tiffField0.getTag());
      assertEquals(59, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1413), (-1413), fieldTypeShort0, (-1413), 621L, byteArray0, (ByteOrder) null, (-331));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1413), tiffField0.getTag());
      assertEquals((-1413), int0);
      assertEquals((-331), tiffField0.getSortHint());
      assertEquals(621, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1522), fieldTypeLong0, 0L, (-1522), byteArray0, byteOrder0, (byte) (-27));
      tiffField0.getCount();
      assertEquals((-1522), tiffField0.getDirectoryType());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals((-1522), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1334), "'");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2107), (-2891), fieldTypeShort0, 50, (-921L), byteArray0, byteOrder0, (byte) (-28));
      long long0 = tiffField0.getCount();
      assertEquals((-921), tiffField0.getOffset());
      assertEquals((-28), tiffField0.getSortHint());
      assertEquals((-2107), tiffField0.getTag());
      assertEquals(50L, long0);
      assertEquals((-2891), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33550, "3Kq]");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2683), (-474), fieldTypeShort0, (-1559L), (-474), byteArray0, byteOrder0, (-2683));
      long long0 = tiffField0.getCount();
      assertEquals((-2683), tiffField0.getTag());
      assertEquals((-2683), tiffField0.getSortHint());
      assertEquals((-474), tiffField0.getOffset());
      assertEquals((-1559L), long0);
      assertEquals((-474), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51009, (byte) (-19), fieldTypeRational0, 0L, 51009, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-19), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(51009, tiffField0.getTag());
      assertEquals(51009, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3408, "mCWe!WoYk5-uq<}^`");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41492, (-1908874352), fieldTypeDouble0, (-3816L), 937, byteArray0, byteOrder0, 2146898343);
      int int0 = tiffField0.getBytesLength();
      assertEquals(41492, tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals((-30528), int0);
      assertEquals(937, tiffField0.getOffset());
      assertEquals(2146898343, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 1934L, byteArray0, (ByteOrder) null, 1173);
      tiffField0.getByteOrder();
      assertEquals(1173, tiffField0.getSortHint());
      assertEquals(1934, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      TiffField tiffField0 = new TiffField(0, 2147104969, fieldTypeShort0, 4L, 32773, byteArray0, byteOrder0, 32773);
      tiffField0.getByteOrder();
      assertEquals(2147104969, tiffField0.getDirectoryType());
      assertEquals(32773, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(32773, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(929, "%940ku8&");
      TiffField tiffField0 = new TiffField(989, 50, fieldTypeFloat0, 50, 989, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(989, tiffField0.getOffset());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(989, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1805, 1805, fieldTypeDouble0.SSHORT, 4L, 32773, byteArray0, byteOrder0, 2147475457);
      tiffField0.getByteArrayValue();
      assertEquals(1805, tiffField0.getTag());
      assertEquals(32773, tiffField0.getOffset());
      assertEquals(1805, tiffField0.getDirectoryType());
      assertEquals(2147475457, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, 1418L, 1418L, byteArray0, byteOrder0, (-1));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("'R*_XK$", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1418L, tiffField0.getCount());
      assertEquals(5672, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1418, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1413), (-1413), fieldTypeShort0, (-1413), 621L, byteArray0, (ByteOrder) null, (-331));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2117657486, "");
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 1L, 2147461392, (byte[]) null, byteOrder0, 658);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeDouble0, (-2082L), (-1371L), byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, (-440));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 50713);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, (-453), fieldTypeShort0, (byte) (-18), (byte)0, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1571), (-566), fieldTypeLong0, (-566), 2697L, byteArray0, byteOrder0, (-137));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[24];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2611), "");
      TiffField tiffField0 = new TiffField(37385, (-2611), fieldTypeShort0, (-2611), (-2611), byteArray0, byteOrder0, (-2611));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33550, "3Kq]");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2683), (-474), fieldTypeShort0, (-1559L), (-474), byteArray0, byteOrder0, (-2683));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1665L, (-1208L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[104];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1280), (-582), fieldTypeDouble0, (-1280), 65568, byteArray0, byteOrder0, (-582));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(18, "");
      TiffField tiffField0 = new TiffField((-2376), (byte)123, fieldTypeAscii0, (-2376), 24L, byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(991, (-1), fieldTypeDouble0, (byte) (-119), 889L, byteArray0, byteOrder0, (byte) (-119));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      MockFile mockFile0 = new MockFile("Invalid value: ", ">>");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      TiffField tiffField0 = new TiffField(3236, 3236, fieldTypeAscii0, (byte) (-39), (byte)38, byteArray0, byteOrder0, (byte) (-85));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-2930), 453, fieldTypeShort0, 2727L, (-437L), byteArray0, byteOrder0, (-5510));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5249), (-5249), (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (-5249));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2, 1, (FieldType) null, (byte) (-85), 2, byteArray0, byteOrder0, (-3775));
      MockFile mockFile0 = new MockFile("Invalid value: ", ">>");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[54];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(3454, 492, fieldTypeAscii0, 3454, 231L, byteArray0, byteOrder0, (-976));
      tiffField0.getFieldType();
      assertEquals(492, tiffField0.getDirectoryType());
      assertEquals(3454, tiffField0.getTag());
      assertEquals((-976), tiffField0.getSortHint());
      assertEquals(231, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 2124L, 231L, byteArray0, byteOrder0, 332);
      tiffField0.getValue();
      assertEquals(2124, tiffField0.getBytesLength());
      assertEquals(231, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(332, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeFloat0, 967L, 453, byteArray0, byteOrder0, 32784);
      int int0 = tiffField0.getOffset();
      assertEquals(32784, tiffField0.getSortHint());
      assertEquals(453, int0);
      assertEquals((-2), tiffField0.getTag());
      assertEquals((-2), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-2930), 453, fieldTypeShort0, 2727L, (-437L), byteArray0, byteOrder0, (-5510));
      int int0 = tiffField0.getTag();
      assertEquals(453, tiffField0.getDirectoryType());
      assertEquals((-2930), int0);
      assertEquals((-437), tiffField0.getOffset());
      assertEquals((-5510), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(929, "%940ku8&");
      TiffField tiffField0 = new TiffField(989, 50, fieldTypeFloat0, 50, 989, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getBytesLength();
      assertEquals(989, tiffField0.getOffset());
      assertEquals(200, int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(989, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeFloat0, 967L, 453, byteArray0, byteOrder0, 32784);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 2124L, 231L, byteArray0, byteOrder0, 332);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-758), (-758), fieldTypeLong0, 255L, 1L, byteArray0, byteOrder0, 2146884628);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-758), tiffField0.getTag());
      assertEquals((-758), tiffField0.getDirectoryType());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(2146884628, tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146962033), (byte)0, fieldTypeAscii0.RATIONAL, 2864L, 32L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1879), 29, fieldTypeAscii0.SRATIONAL, 1L, 1456L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1428), fieldTypeAscii0, 0L, (-1428), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1805, (-1), fieldTypeDouble0, 32773, 32773, byteArray0, byteOrder0, (-2539));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2539), tiffField0.getSortHint());
      assertEquals(1805, tiffField0.getTag());
      assertEquals(32773L, tiffField0.getCount());
      assertEquals(262184, tiffField0.getBytesLength());
      assertEquals(32773, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1386), 1, fieldTypeFloat0, 538, 538, byteArray0, byteOrder0, (-1386));
      tiffField0.getDoubleArrayValue();
      assertEquals(538L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1386), tiffField0.getSortHint());
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals((-1386), tiffField0.getTag());
      assertEquals(538, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(122, "%940ku8&");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-242), 989, fieldTypeFloat0, 122, 2147483647L, byteArray0, byteOrder0, (-1604));
      tiffField0.getDoubleArrayValue();
      assertEquals(488, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(122L, tiffField0.getCount());
      assertEquals(989, tiffField0.getDirectoryType());
      assertEquals((-242), tiffField0.getTag());
      assertEquals((-1604), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2128136948, 2868, fieldTypeAscii0.LONG, 2868, 214L, byteArray0, byteOrder0, 332);
      tiffField0.getDoubleArrayValue();
      assertEquals(2868, tiffField0.getDirectoryType());
      assertEquals(11472, tiffField0.getBytesLength());
      assertEquals(2128136948, tiffField0.getTag());
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(214, tiffField0.getOffset());
      assertEquals(2868L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 2124L, 231L, byteArray0, byteOrder0, 332);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@10cc9d83 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146962033), 50740, fieldTypeAscii0.SRATIONAL, 2864L, 32L, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2864L, tiffField0.getCount());
      assertEquals(50740, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(32, tiffField0.getOffset());
      assertEquals((-2146962033), tiffField0.getTag());
      assertEquals(22912, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2837, (-1470), fieldTypeDouble0, 1L, (-974), byteArray0, byteOrder0, (byte)102);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1470), tiffField0.getDirectoryType());
      assertEquals(2837, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-974), tiffField0.getOffset());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[104];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2930), (-2930), fieldTypeDouble0.SHORT, 5922L, 65568, byteArray0, byteOrder0, (-1280));
      tiffField0.getDoubleArrayValue();
      assertEquals(5922L, tiffField0.getCount());
      assertEquals(65568, tiffField0.getOffset());
      assertEquals((-1280), tiffField0.getSortHint());
      assertEquals(11844, tiffField0.getBytesLength());
      assertEquals((-2930), tiffField0.getDirectoryType());
      assertEquals((-2930), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 40094, fieldTypeLong0, 255L, (-2826L), byteArray0, byteOrder0, 329);
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(255L, tiffField0.getCount());
      assertEquals((-2826), tiffField0.getOffset());
      assertEquals(329, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(40094, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(132, 2983, fieldTypeDouble0, 2983, 48321, byteArray0, byteOrder0, 132);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@6ad0e2f5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)28;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146962033), 50740, fieldTypeAscii0.RATIONAL, 2864L, 32L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals((-2146962033), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2864L, tiffField0.getCount());
      assertEquals(50740, tiffField0.getDirectoryType());
      assertEquals(22912, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2463), "");
      TiffField tiffField0 = new TiffField((byte)0, 1191, fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, 646);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(646, tiffField0.getSortHint());
      assertEquals(1191, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[104];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2930), (-2930), fieldTypeDouble0.SHORT, 5922L, 65568, byteArray0, byteOrder0, (-1280));
      tiffField0.getIntArrayValue();
      assertEquals(5922L, tiffField0.getCount());
      assertEquals((-1280), tiffField0.getSortHint());
      assertEquals((-2930), tiffField0.getDirectoryType());
      assertEquals((-2930), tiffField0.getTag());
      assertEquals(11844, tiffField0.getBytesLength());
      assertEquals(65568, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1334), "'");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2107), (-2891), fieldTypeShort0, 50, (-921L), byteArray0, byteOrder0, (byte) (-28));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@7b3829ad
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(3424, 492, fieldTypeAscii0, 847L, 231L, byteArray0, byteOrder0, 65129);
      String string0 = tiffField0.getStringValue();
      assertEquals(492, tiffField0.getDirectoryType());
      assertEquals(65129, tiffField0.getSortHint());
      assertEquals(847, tiffField0.getBytesLength());
      assertEquals(3424, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(231, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[104];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2930), (-2930), fieldTypeDouble0.SHORT, 5922L, 65568, byteArray0, byteOrder0, (-1280));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffff48e)", string0);
      assertEquals((-2930), tiffField0.getDirectoryType());
      assertEquals(65568, tiffField0.getOffset());
      assertEquals((-1280), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, (-988), (FieldType) null, (-988), 3001L, byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(3001, tiffField0.getOffset());
      assertEquals((-988), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1975), (-1975), fieldTypeByte0, 9072L, (-1975), byteArray0, byteOrder0, 50733);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "Ep8*]k,|{C=KHB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1386), 1, fieldTypeFloat0, 538, 538, byteArray0, byteOrder0, (-1386));
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(538, tiffField0.getOffset());
      assertEquals("-1386 (0xfffffa96: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (538 Float)", string0);
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals((-1386), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147362218, 624, fieldTypeByte0, 2147362218, 624, byteArray0, byteOrder0, (byte) (-1));
      MockFile mockFile0 = new MockFile("#3wo-uPPdr*Q,", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(624, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2147362218, tiffField0.getTag());
      assertEquals(2147362218, tiffField0.getBytesLength());
      assertEquals(64L, mockFile0.length());
      assertEquals(624, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(48321, 662, fieldTypeDouble0.SBYTE, 662, 4383L, byteArray0, byteOrder0, 133);
      String string0 = tiffField0.getValueDescription();
      assertEquals(133, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(662, tiffField0.getBytesLength());
      assertEquals(662, tiffField0.getDirectoryType());
      assertEquals(48321, tiffField0.getTag());
      assertEquals(4383, tiffField0.getOffset());
      assertEquals(662L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[24];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2457, 0, fieldTypeDouble0, 20, 4375L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2457, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4375, tiffField0.getOffset());
      assertEquals(160, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(20L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[235];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-5510), 525, fieldTypeShort0.IFD, 2727L, 525, byteArray0, byteOrder0, (-5510));
      String string0 = tiffField0.getValueDescription();
      assertEquals(10908, tiffField0.getBytesLength());
      assertEquals(525, tiffField0.getDirectoryType());
      assertEquals(2727L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-5510), tiffField0.getSortHint());
      assertEquals((-5510), tiffField0.getTag());
      assertEquals(525, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[54];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(3454, 492, fieldTypeAscii0, 3454, 231L, byteArray0, byteOrder0, (-976));
      String string0 = tiffField0.getValueDescription();
      assertEquals(492, tiffField0.getDirectoryType());
      assertEquals(3454, tiffField0.getTag());
      assertEquals(231, tiffField0.getOffset());
      assertEquals((-976), tiffField0.getSortHint());
      assertEquals(3454, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 2124L, 231L, byteArray0, byteOrder0, 332);
      String string0 = tiffField0.getValueDescription();
      assertEquals(231, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(2124, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(929, "Invalid value: ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)28;
      TiffField tiffField0 = new TiffField(1732, (byte)28, fieldTypeFloat0.ASCII, 277, (-3928), byteArray0, byteOrder0, (byte)28);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1732, tiffField0.getTag());
      assertEquals(277, tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals((-3928), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-978), 2147186088, fieldTypeByte0, 1L, (-2164L), byteArray0, byteOrder0, (-1789569705));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-1789569705), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2147186088, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2164), tiffField0.getOffset());
      assertEquals((-978), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1805, (-974), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 32773);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1805, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(32773, tiffField0.getSortHint());
      assertEquals((-974), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 40094, fieldTypeLong0, 255L, (-2826L), byteArray0, byteOrder0, 329);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(329, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(329, tiffField0.getSortHint());
      assertEquals(40094, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-2826), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 40094, fieldTypeLong0, 255L, (-2826L), byteArray0, byteOrder0, 329);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(329, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: IFD", string0);
      assertEquals(329, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(40094, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-2826), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(132, 2983, fieldTypeDouble0, 2983, 48321, byteArray0, byteOrder0, 132);
      tiffField0.getFieldTypeName();
      assertEquals(2983, tiffField0.getDirectoryType());
      assertEquals(48321, tiffField0.getOffset());
      assertEquals(132, tiffField0.getSortHint());
      assertEquals(132, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldType0, 100L, 1, byteArray0, byteOrder0, (-1982292597));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1982292597), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146962033), 50740, fieldTypeAscii0.RATIONAL, 2864L, 32L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2146962033), tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(50740, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[104];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2930), (-2930), fieldTypeDouble0.SHORT, 5922L, 65568, byteArray0, byteOrder0, (-1280));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(65568, tiffField0.getOffset());
      assertEquals("-2930 (0xfffff48e: Unknown Tag): ", string0);
      assertEquals((-1280), tiffField0.getSortHint());
      assertEquals((-2930), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1659), "%940ku8&");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-1344L), byteArray0, byteOrder0, 2146665558);
      tiffField0.dump();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals((-1344), tiffField0.getOffset());
      assertEquals(2146665558, tiffField0.getSortHint());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[104];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2930), (-2930), fieldTypeDouble0.SHORT, 5922L, 65568, byteArray0, byteOrder0, (-1280));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2930), tiffField0.getTag());
      assertEquals(11844, tiffField0.getBytesLength());
      assertEquals((-2930), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(5922L, tiffField0.getCount());
      assertEquals((-1280), tiffField0.getSortHint());
      assertEquals(65568, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 2124L, 231L, byteArray0, byteOrder0, 332);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(231L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2124L, tiffField0.getCount());
  }
}
