/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 14:28:32 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1638.46278);
      doubleArray0[1] = (-1638.46278);
      doubleArray0[2] = (-1638.46278);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-1638.46278);
      doubleArray0[6] = (-1638.46278);
      doubleArray0[7] = 4.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1638.46278), doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-1638.46278);
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = (-799.374069);
      doubleArray1[5] = 2.8330789837569332E-8;
      doubleArray1[6] = (-1638.46278);
      doubleArray1[7] = (-1638.46278);
      doubleArray1[8] = (-1638.46278);
      graggBulirschStoerIntegrator0.setStepSizeControl((-1638.46278), 0.0, doubleArray1, doubleArray1);
      graggBulirschStoerIntegrator0.setOrderControl(259, 0.0, (-1779.37215));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 259, 0, (-1189.3));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(919.99502205074, 1.0001, 1720.4482189249, 1.0001);
      graggBulirschStoerIntegrator0.setOrderControl(1221, 1.0001, 1720.4482189249);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.3282890219894906E230), 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(56).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(56);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.3282890219894906E230));
      assertEquals(11, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.3282890219894906E230), 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-460.583005));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0);
      assertEquals(21, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = (-570.37148897);
      double double1 = 1585.1;
      double double2 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-570.37148897), (-570.37148897), 1585.1, 0.0);
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setStepSizeControl(1585.1, 8.201043988912348E-9, 0.0, 0.0);
      int int0 = (-973);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-973), (-973), 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double double3 = 0.0;
      BrentSolver brentSolver0 = new BrentSolver(1585.1);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1585.1, 0.0, (-973), (UnivariateSolver) brentSolver0);
      ExpandableStatefulODE expandableStatefulODE0 = null;
      try {
        expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.ExpandableStatefulODE", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(18.0, 18.0, 2.212106704711914, 18.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 20, 20, 1.3273746967315674);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 2056.70446711;
      doubleArray0[1] = 1.0973020465397083E-7;
      doubleArray0[2] = 2056.70446711;
      doubleArray0[3] = 1.0973020465397083E-7;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0973020465397083E-7, 2056.70446711, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(2.1211390495300293, 1.0001, 2.1211390495300293, 2.1211390495300293);
      assertEquals(0.015022736171840212, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 803.66969492, 0.0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-175.0150827276);
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 803.66969492;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 803.66969492, 0.0, 2.487138271331787);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-2162));
      graggBulirschStoerIntegrator0.setMaxEvaluations((-409));
      graggBulirschStoerIntegrator0.setOrderControl(104, 862.9, 0.0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 0.7937005259840998, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.7976931348623157E308, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      stepNormalizer0.init(1.7976931348623157E308, doubleArray0, 0.7937005259840998);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors(0.7937005259840998, 0.7937005259840998, 1.7976931348623157E308, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0.7937005259840998, 0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.3282890219894906E230), 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(56).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(56);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.005175158114018278);
      assertEquals(20, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 1.7976931348623157E308, (-1.3282890219894906E230), (-1.3282890219894906E230));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.3282890219894906E230));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 1.7976931348623157E308, (-1.3282890219894906E230), (-1.3282890219894906E230));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(7.321238022013781E-8);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0E-4);
      assertEquals(1.7976931348623157E308, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-2632.483483692495), 1349.5, (-1038.9800107867));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1349.5;
      doubleArray0[1] = (-1038.9800107867);
      doubleArray0[2] = 76.888792613;
      doubleArray0[3] = 1349.5;
      doubleArray0[4] = (-1038.9800107867);
      doubleArray0[6] = (-1038.9800107867);
      doubleArray0[7] = 1349.5;
      doubleArray0[8] = 0.0;
      double[] doubleArray1 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 76.888792613, doubleArray0, doubleArray1);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer((-884.0), fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      stepNormalizer0.init((-884.0), doubleArray0, (-884.0));
      graggBulirschStoerIntegrator1.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator1.setControlFactors(0.0, 76.888792613, 1349.5, 9.081571104550255E191);
      graggBulirschStoerIntegrator1.setOrderControl(0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, (-2990.747850716849), doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.7976931348623157E308, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      stepNormalizer0.init(1.7976931348623157E308, doubleArray0, (-2990.747850716849));
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors((-2990.747850716849), (-2990.747850716849), 1.7976931348623157E308, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2990.747850716849), 0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 771, 0, 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2990.747850716849));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) 0, (double) 0, 771, (UnivariateSolver) illinoisSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-775.02900287), 2653.5, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3194, 3194, 3194);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, (double) (-1034));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, 0.9999, 2572.80221595, 0.9999);
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.filterStep(0.5, true, true);
      int int0 = (-2258);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-2258));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      boolean boolean1 = false;
      graggBulirschStoerIntegrator0.filterStep(2572.80221595, false, true);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1231.648255081));
      double double0 = 1892.0;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
      StepHandler stepHandler0 = null;
      graggBulirschStoerIntegrator0.addStepHandler(stepHandler0);
      int int1 = 2146535656;
      double double1 = 3.282424571107068E-189;
      double double2 = (-2433.291065297);
      graggBulirschStoerIntegrator0.setOrderControl(int1, double1, double2);
      double double3 = (-432.35769483664);
      double double4 = (-1487.4253037522);
      double double5 = 1481.360127521;
      double double6 = 924.7665439;
      graggBulirschStoerIntegrator0.setControlFactors(double3, double4, double5, double6);
      int int2 = 3434;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int2);
      int int3 = 2143547358;
      double double7 = 936.618674236;
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean1, int0, int3, double7);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0E-15, 4.0E-15, 108.3176, 4.0E-15);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 6, (-759), 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(6, (-3573.0), 0.0);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      eventFilter0.eventOccurred(0.0, doubleArray0, false);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 3486, (-3573.0));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.9, 0.0, 3599.067357, (-214727));
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator1.setOrderControl(1146, (-214727), 0.020300358533859253);
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setMaxEvaluations(0);
      graggBulirschStoerIntegrator0.setOrderControl(430, 0.0, 1.333871841430664);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 7, (-1773), 0.020300358533859253);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 430);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-2632.483483692495), 1349.5, (-1038.9800107867));
      graggBulirschStoerIntegrator0.setControlFactors(1974.601038, 0.0, 1.122932337832262E-7, 1349.5);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 50, 50, 415.3832076932);
      graggBulirschStoerIntegrator0.setControlFactors((-1034), 1.333871841430664, 0.6048921346664429, 9);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-2632.483483692495), 1349.5, (-1038.9800107867));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 9, 676, (-3.0118152047565877E-9));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1014.0), (-7.187723217018267E150), 329.23221193);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(13).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double0 = 2.0810681643102672E-8;
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-21));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer((-4292.25883), fixedStepHandler0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0E-15);
      boolean boolean0 = false;
      int int0 = 440;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int0);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter(eventFilter0, filterType1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, (-2894.449867698615), (-5116.468683862337), 1.7976931348623157E308);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(130).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(10.0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.7937005259840998);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (1.80E308) reached, integration needs 6.11E03
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 1.7976931348623157E308, (-1.3282890219894906E230), (-1.3282890219894906E230));
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3.846720258072078E-173;
      doubleArray0[1] = (-1.3282890219894906E230);
      doubleArray0[2] = 3.846720258072078E-173;
      doubleArray0[3] = (-1.3282890219894906E230);
      doubleArray0[4] = 3.846720258072078E-173;
      doubleArray0[5] = (-1.3282890219894906E230);
      doubleArray0[6] = (-1.3282890219894906E230);
      doubleArray0[7] = 1.7976931348623157E308;
      doubleArray0[8] = 3.846720258072078E-173;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-1.3282890219894906E230);
      doubleArray1[1] = 1.7976931348623157E308;
      doubleArray1[2] = 3.846720258072078E-173;
      doubleArray1[3] = 1.7976931348623157E308;
      doubleArray1[4] = 3.846720258072078E-173;
      graggBulirschStoerIntegrator0.setStepSizeControl((-1.3282890219894906E230), 3.846720258072078E-173, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(48).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1739.0773));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1.0), (-1739.0773), 10.0, 1471.68941502);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 1471.68941502);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1457.0, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator1.addStepHandler(stepNormalizer0);
      assertEquals(56, graggBulirschStoerIntegrator1.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.3282890219894906E230), (-1.3282890219894906E230), (-1.3282890219894906E230), (-1.3282890219894906E230));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(18).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1.3282890219894906E230));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-383.16313268782477));
      assertEquals(0.0, expandableStatefulODE0.getTime(), 0.01);
      assertEquals(11, graggBulirschStoerIntegrator0.getEvaluations());
  }
}
