/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 05:00:37 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-119);
      byteArray0[4] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0.RATIONAL, 4298L, 7, byteArray0, byteOrder0, 1868);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1868, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(34384, tiffField0.getBytesLength());
      assertEquals(8, int0);
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "&4(ck5&TFY#)");
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-5);
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 7, 594L, byteArray0, (ByteOrder) null, (byte)35);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(594, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-29), 1, fieldTypeLong0, 1, (-29), byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-29), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-29), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeLong0, (-1), 255L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.dump();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeLong0, 0L, (byte)0, byteArray0, (ByteOrder) null, 273);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(273, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1418, "Unknown value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1418, 1418, fieldTypeDouble0, 539L, 539L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(4312, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(539, tiffField0.getOffset());
      assertEquals(1418, tiffField0.getDirectoryType());
      assertEquals(1418, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1788), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1788), fieldTypeFloat0, 27, 1L, byteArray0, byteOrder0, (byte) (-77));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-77), tiffField0.getSortHint());
      assertEquals((-1788), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2443, 46, fieldTypeLong0, 2443, 2443, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(2443, tiffField0.getOffset());
      assertEquals(2443, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 4L, 2L, byteArray0, (ByteOrder) null, (byte)1);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-5582), (byte)0, fieldTypeLong0.SSHORT, 16L, (-1917L), byteArray0, (ByteOrder) null, (byte)3);
      int int0 = tiffField0.getTag();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1917), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-5582), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)1;
      TiffField tiffField0 = new TiffField((-1183), (-150), fieldTypeAscii0, 572L, 1306, byteArray0, (ByteOrder) null, (-186));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals((-186), tiffField0.getSortHint());
      assertEquals(1306, tiffField0.getOffset());
      assertEquals((-150), tiffField0.getDirectoryType());
      assertEquals(572, tiffField0.getBytesLength());
      assertEquals((-1183), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2443, 46, fieldTypeLong0, 2443, 2443, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2443, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2443, tiffField0.getTag());
      assertEquals(46, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2443, 46, fieldTypeLong0, 2443, 2443, byteArray0, (ByteOrder) null, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(2443, tiffField0.getTag());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals(2443, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(65535, (byte) (-1), fieldTypeDouble0, 0L, (byte)0, byteArray0, (ByteOrder) null, 41485);
      tiffField0.getOffset();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(41485, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50931, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).SRATIONAL).ASCII, 848L, 32L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50931, tiffField0.getDirectoryType());
      assertEquals(32, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-2);
      TiffField tiffField0 = new TiffField((-1), 1037, fieldTypeLong0, 1037, (-1), byteArray0, (ByteOrder) null, (byte)85);
      tiffField0.getIntValueOrArraySum();
      assertEquals(85, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4148, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1037, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-42);
      TiffField tiffField0 = new TiffField(30, 321, fieldTypeShort0, 321, 0L, byteArray0, byteOrder0, (byte) (-116));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(642, tiffField0.getBytesLength());
      assertEquals(321, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(30, tiffField0.getTag());
      assertEquals((-10752), int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1559, 1, fieldTypeLong0.FLOAT, 1L, 3825L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3825, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1559, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)17;
      CharBuffer charBuffer0 = CharBuffer.allocate(32844);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(11, 1, fieldTypeByte0, 1, (-805L), byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-805), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-48);
      TiffField tiffField0 = new TiffField(17, 514, fieldTypeShort0, 1L, 192516L, byteArray0, byteOrder0, (byte)34);
      tiffField0.getIntValue();
      assertEquals(17, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(514, tiffField0.getDirectoryType());
      assertEquals(192516, tiffField0.getOffset());
      assertEquals(34, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(297, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(52, 2146983651, fieldTypeFloat0, 321, (-500L), byteArray0, byteOrder0, 321);
      tiffField0.getFieldTypeName();
      assertEquals((-500), tiffField0.getOffset());
      assertEquals(52, tiffField0.getTag());
      assertEquals(2146983651, tiffField0.getDirectoryType());
      assertEquals(321, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(14, "");
      TiffField tiffField0 = new TiffField(559, (-2550), fieldTypeDouble0, 1962L, (-999L), byteArray0, byteOrder0, 495);
      tiffField0.getFieldTypeName();
      assertEquals((-999), tiffField0.getOffset());
      assertEquals(559, tiffField0.getTag());
      assertEquals((-2550), tiffField0.getDirectoryType());
      assertEquals(495, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 37, (FieldType) null, 37, 4294967294L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 109, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(109, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "&4(Vck5}&TFY#)");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-782), (-992), fieldTypeRational0, 4L, 4L, byteArray0, (ByteOrder) null, (-992));
      tiffField0.getFieldType();
      assertEquals((-782), tiffField0.getTag());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-992), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 109, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(109, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)55;
      TiffField tiffField0 = new TiffField(50, (byte)0, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-75));
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-75), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-88);
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1014, (-2147483648L), byteArray0, byteOrder0, 1014);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(1014, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5066, 5066, fieldTypeLong0, 5066, 5066, byteArray0, byteOrder0, (-893));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(5066, int0);
      assertEquals(5066, tiffField0.getOffset());
      assertEquals((-893), tiffField0.getSortHint());
      assertEquals(5066, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-89), 0, fieldTypeRational0, 597L, (-1697L), byteArray0, byteOrder0, (byte) (-89));
      long long0 = tiffField0.getCount();
      assertEquals((-1697), tiffField0.getOffset());
      assertEquals(597L, long0);
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals((-89), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1427, 262, fieldTypeRational0, (-1697L), (-1697L), byteArray0, (ByteOrder) null, 1410);
      long long0 = tiffField0.getCount();
      assertEquals((-1697L), long0);
      assertEquals((-1697), tiffField0.getOffset());
      assertEquals(1427, tiffField0.getTag());
      assertEquals(1410, tiffField0.getSortHint());
      assertEquals(262, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1313), (-1313), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1313), tiffField0.getDirectoryType());
      assertEquals((-1313), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-89), 0, fieldTypeRational0, 597L, (-1697L), byteArray0, byteOrder0, (byte) (-89));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals((-89), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4776, int0);
      assertEquals((-1697), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3008, (byte) (-52), fieldTypeShort0, (-127L), (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3008, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-52), tiffField0.getDirectoryType());
      assertEquals((-254), int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 7, 4L, byteArray0, (ByteOrder) null, 7);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, 0, fieldTypeByte0, 233L, 2, byteArray0, byteOrder0, (byte)61);
      tiffField0.getByteOrder();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1303, "CustomRendered");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeByte0, 1303, 280L, byteArray0, (ByteOrder) null, 4223);
      tiffField0.getByteArrayValue();
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(4223, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getTag());
      assertEquals(1303, tiffField0.getBytesLength());
      assertEquals(280, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1), 1037, fieldTypeLong0, 1037, (-1), byteArray0, (ByteOrder) null, (byte)85);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeDouble0, 320, 320, (byte[]) null, byteOrder0, 320);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeShort0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(647, 647, fieldTypeFloat0, 647, 647, (byte[]) null, byteOrder0, 647);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-23), (-23), fieldTypeRational0, (-23), (-23), byteArray0, byteOrder0, (-23));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1953, 386, fieldTypeShort0, 1L, (-1260L), byteArray0, byteOrder0, 386);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeShort0, 40092, 40092, byteArray0, byteOrder0, 1183);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-42), (-42), fieldTypeRational0, (-42), (-42), byteArray0, byteOrder0, (-42));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 401, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeDouble0, 320, 320, (byte[]) null, byteOrder0, 320);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1429), (-1429), fieldTypeRational0, (-1429), (-1429), byteArray0, byteOrder0, (-1429));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeRational0, 1160L, (-3577L), (byte[]) null, (ByteOrder) null, 7);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1004, 1004, fieldTypeFloat0, 1004, 1004, (byte[]) null, byteOrder0, 1004);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeRational0, 40091, 40091, byteArray0, byteOrder0, 40091);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeShort0, 36, 36, (byte[]) null, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-666), (-666), fieldTypeFloat0, (-666), (-666), byteArray0, byteOrder0, (-666));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[186];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3876), (-3876), fieldTypeShort0, (-3876), (-3876), byteArray0, byteOrder0, (-3876));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-180), (-180), (FieldType) null, (-180), (-180), byteArray0, byteOrder0, (-180));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2535), fieldTypeShort0, 448L, 448L, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6365, 6365, fieldTypeRational0, 6365, 6365, (byte[]) null, byteOrder0, 6365);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((-2285), (-2285), fieldTypeRational0, (-2285), (-2285), byteArray0, (ByteOrder) null, (-2285));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-23), (-23), fieldTypeShort0, (-23), (-23), byteArray0, byteOrder0, (-23));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3876), (-3876), fieldTypeShort0, (-3876), (-3876), byteArray0, byteOrder0, (-3876));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1518, 50, fieldTypeDouble0, (-561L), 1518, byteArray0, byteOrder0, 50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("aJm3>jw");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "aJm3>jw");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeShort0, (-410L), (-410L), byteArray0, byteOrder0, (-1717986917));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Sensitive");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, (ByteOrder) null, 122);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((-947), (-947), fieldTypeRational0, (-947), (-947), byteArray0, (ByteOrder) null, (-947));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 6390);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 1559, fieldTypeShort0, 286, 1559, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeLong0, 0L, (byte)0, byteArray0, (ByteOrder) null, 273);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2443, 46, fieldTypeLong0, 2443, 2443, byteArray0, (ByteOrder) null, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2443, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(2443, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0L, byteArray0, (ByteOrder) null, 50715);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50715, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeDouble0, 31, 2318L, (byte[]) null, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(64);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(41495, 41495, fieldTypeLong0, (-309L), (-309L), byteArray0, byteOrder0, 64);
      int int0 = tiffField0.getOffset();
      assertEquals(64, tiffField0.getSortHint());
      assertEquals((-309), int0);
      assertEquals(41495, tiffField0.getDirectoryType());
      assertEquals(41495, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeShort0, 400, 400, byteArray0, byteOrder0, 400);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getOffset());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeLong0, 0L, (byte)0, byteArray0, (ByteOrder) null, 273);
      int int0 = tiffField0.getTag();
      assertEquals(1, int0);
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1386, 1386, (FieldType) null, 1386, 1386, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[94];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeRational0, 341, 341, byteArray0, byteOrder0, 341);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0.DOUBLE, 46, 46, byteArray0, byteOrder0, 46);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5f2e2775 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[397];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(406, 406, fieldTypeByte0, 406, 406, byteArray0, byteOrder0, 406);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@57ba8f35 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[138];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeFloat0, 81, 81, byteArray0, byteOrder0, 81);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(81, tiffField0.getOffset());
      assertEquals(81L, tiffField0.getCount());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getTag());
      assertEquals(34, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3207, 3207, fieldTypeLong0, 3207, 3207, byteArray0, byteOrder0, 3207);
      tiffField0.getDoubleArrayValue();
      assertEquals(3207, tiffField0.getTag());
      assertEquals(3207L, tiffField0.getCount());
      assertEquals(3207, tiffField0.getDirectoryType());
      assertEquals(12828, tiffField0.getBytesLength());
      assertEquals(3207, tiffField0.getSortHint());
      assertEquals(3207, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      tiffField0.getDoubleArrayValue();
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
      assertEquals(62, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeRational0, 341, 341, byteArray0, byteOrder0, 341);
      tiffField0.getDoubleArrayValue();
      assertEquals(341, tiffField0.getTag());
      assertEquals(341, tiffField0.getOffset());
      assertEquals(341, tiffField0.getSortHint());
      assertEquals(2728, tiffField0.getBytesLength());
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(341L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0.DOUBLE, 46, 46, byteArray0, byteOrder0, 46);
      tiffField0.getDoubleArrayValue();
      assertEquals(46, tiffField0.getTag());
      assertEquals(46L, tiffField0.getCount());
      assertEquals(46, tiffField0.getOffset());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(368, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeDouble0, 7, 7, byteArray0, byteOrder0, 7);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5dad05c9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 37, byteArray0, byteOrder0, 37);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(37, tiffField0.getTag());
      assertEquals(37, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37L, tiffField0.getCount());
      assertEquals(74, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeRational0, 341, 341, byteArray0, byteOrder0, 341);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeLong0, 21, 21, byteArray0, byteOrder0, 21);
      tiffField0.getIntArrayValue();
      assertEquals(21, tiffField0.getOffset());
      assertEquals(21L, tiffField0.getCount());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[186];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1), 41966, fieldTypeAscii0, 41966, 41966, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(41966, tiffField0.getOffset());
      assertEquals(41966, tiffField0.getDirectoryType());
      assertEquals(41966, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 37, byteArray0, byteOrder0, 37);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@554da7f2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeShort0, 43, 43, byteArray0, byteOrder0, 43);
      String string0 = tiffField0.getTagName();
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x2b)", string0);
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeRational0, 341, 341, byteArray0, byteOrder0, 341);
      String string0 = tiffField0.getTagName();
      assertEquals(341, tiffField0.getTag());
      assertEquals(341, tiffField0.getOffset());
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(341, tiffField0.getSortHint());
      assertEquals("SMaxSampleValue", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[302];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(882, 882, fieldTypeFloat0, 882, 882, byteArray0, byteOrder0, 882);
      tiffField0.dump();
      assertEquals(882L, tiffField0.getCount());
      assertEquals(882, tiffField0.getTag());
      assertEquals(882, tiffField0.getDirectoryType());
      assertEquals(3528, tiffField0.getBytesLength());
      assertEquals(882, tiffField0.getSortHint());
      assertEquals(882, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[397];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-770), (-770), fieldTypeByte0, 413, (-770), byteArray0, byteOrder0, (-770));
      String string0 = tiffField0.toString();
      assertEquals((-770), tiffField0.getDirectoryType());
      assertEquals("-770 (0xfffffcfe: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (397) (413 Byte)", string0);
      assertEquals((-770), tiffField0.getOffset());
      assertEquals(413, tiffField0.getBytesLength());
      assertEquals((-770), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(152, 152, fieldTypeByte0, 152, 152, byteArray0, byteOrder0, 152);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(152, tiffField0.getOffset());
      assertEquals(152, tiffField0.getDirectoryType());
      assertEquals(152, tiffField0.getSortHint());
      assertEquals(152, tiffField0.getTag());
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals(152L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[423];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1556, 1556, fieldTypeDouble0, 1556, 1556, byteArray0, byteOrder0, 1556);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1556, tiffField0.getSortHint());
      assertEquals(1556, tiffField0.getOffset());
      assertEquals(1556L, tiffField0.getCount());
      assertEquals(12448, tiffField0.getBytesLength());
      assertEquals(1556, tiffField0.getTag());
      assertEquals(1556, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[138];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeFloat0, 81, 81, byteArray0, byteOrder0, 81);
      tiffField0.dump();
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getBytesLength());
      assertEquals(81L, tiffField0.getCount());
      assertEquals(81, tiffField0.getTag());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(81, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(41940, 41940, fieldTypeLong0, 41940, 4032L, byteArray0, byteOrder0, 2026);
      tiffField0.dump();
      assertEquals(167760, tiffField0.getBytesLength());
      assertEquals(2026, tiffField0.getSortHint());
      assertEquals(41940, tiffField0.getDirectoryType());
      assertEquals(41940L, tiffField0.getCount());
      assertEquals(41940, tiffField0.getTag());
      assertEquals(4032, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[193];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(313, (-1), fieldTypeShort0, 749L, 313, byteArray0, byteOrder0, 313);
      tiffField0.dump();
      assertEquals(313, tiffField0.getOffset());
      assertEquals(749L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1498, tiffField0.getBytesLength());
      assertEquals(313, tiffField0.getTag());
      assertEquals(313, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0.DOUBLE, 46, 46, byteArray0, byteOrder0, 46);
      tiffField0.dump();
      assertEquals(46, tiffField0.getTag());
      assertEquals(368, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(46L, tiffField0.getCount());
      assertEquals(46, tiffField0.getOffset());
      assertEquals(46, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeAscii0, 954, 922L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(922, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(954, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6365, 577, fieldTypeRational0.ASCII, 577, (-131L), byteArray0, byteOrder0, 6365);
      tiffField0.dump();
      assertEquals(6365, tiffField0.getTag());
      assertEquals((-131), tiffField0.getOffset());
      assertEquals(577L, tiffField0.getCount());
      assertEquals(6365, tiffField0.getSortHint());
      assertEquals(577, tiffField0.getBytesLength());
      assertEquals(577, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6334, 24, fieldTypeRational0.SSHORT, (-3051L), 24, byteArray0, (ByteOrder) null, 24);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(6334, 24);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(6334, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(6334, 24, fieldTypeShort0, (-3051L), 24, byteArray0, (ByteOrder) null, 24);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(6334, 6334);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(6334, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertNotNull(string0);
      assertEquals((-6102), tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(350, 350, fieldTypeRational0, 350, 350, byteArray0, byteOrder0, 350);
      tiffField0.getFieldTypeName();
      assertEquals(350, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(350, tiffField0.getTag());
      assertEquals(350, tiffField0.getOffset());
      assertEquals(350, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeLong0, 0L, (byte)0, byteArray0, (ByteOrder) null, 273);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(273, int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeShort0, 39, 39, byteArray0, byteOrder0, 39);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals("39 (0x27: Unknown Tag): ", string0);
      assertEquals(78, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getOffset());
      assertEquals(39, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, (byte[]) null, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeShort0, 24, 24, byteArray0, byteOrder0, 24);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24L, tiffElement0.offset);
  }
}
