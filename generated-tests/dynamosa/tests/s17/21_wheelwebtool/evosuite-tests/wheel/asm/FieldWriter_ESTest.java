/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 05:04:36 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1898));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "MZKe_Y8}IGCA;6xYrC(";
      stringArray0[1] = "MZKe_Y8}IGCA;6xYrC(";
      stringArray0[2] = "a]%b";
      stringArray0[3] = "MZKe_Y8}IGCA;6xYrC(";
      stringArray0[4] = "a]%b";
      stringArray0[5] = "Synthetic";
      classWriter0.visit(49, 47, "a]%b", "MZKe_Y8}IGCA;6xYrC(", "Synthetic", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65493, "MZKe_Y8}IGCA;6xYrC(", "", "]W&vJ8Gyk7", "MZKe_Y8}IGCA;6xYrC(");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1005);
      classWriter0.index = (-586);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1005, "jMZKe_Y8}-GC6xYrC(", "tI", "jMZKe_Y8}-GC6xYrC(", "tI");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1005);
      classWriter0.index = (-586);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1005, "jMZKe_Y8}-GC6xYrC(", "tI", "jMZKe_Y8}-GC6xYrC(", "tI");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Deprecated", "", "Deprecated", "Deprecated");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-611));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-611), "jMZK=_Y8b-GG6xYrC(", "jMZK=_Y8b-GG6xYrC(", "jMZK=_Y8b-GG6xYrC(", "jMZK=_Y8b-GG6xYrC(");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-669));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-669), "MZ!e_Y8}-GC6xYrO(", "MZ!e_Y8}-GC6xYrO(", "MZ!e_Y8}-GC6xYrO(", "MZ!e_Y8}-GC6xYrO(");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "jMZKe_Y8}-GCGxYrC(", "jMZKe_Y8}-GCGxYrC(", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("6,UVWj77=QJrmz{");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3111));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "j+ZKN8Y8}-GC6x0YrC(", "j+ZKN8Y8}-GC6x0YrC(", "j+ZKN8Y8}-GC6x0YrC(", "j+ZKN8Y8}-GC6x0YrC(");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-3111);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "jMZKe_Y8}-GC6xYrC(", "", "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[4];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-414), "w|5{D4],iu4S", "w|5{D4],iu4S", "w|5{D4],iu4S", "w|5{D4],iu4S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-611));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "jMZK=_Y8b-GG6xYrC(", "jMZK=_Y8b-GG6xYrC(", "jMZK=_Y8b-GG6xYrC(", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(326);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "", "Synthetic", "", "");
      ByteVector byteVector0 = new ByteVector(1);
      Attribute attribute0 = new Attribute("[]");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Deprecated", "", "Deprecated", "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("iSW_", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-669));
      classWriter0.version = (-584);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-669), "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-669));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-669), "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "jMZKe_Y8}-GCGxYrC(", "jMZKe_Y8}-GCGxYrC(", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-673));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(");
      fieldWriter0.visitAnnotation("MZKe_Y8}-GC6xYrC(", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-669));
      classWriter0.version = (-584);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-669), "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-669));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-669), "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-669));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-669), "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(", "MZKe_Y8}-GC6xYrC(");
      fieldWriter0.visitAnnotation("*b Ic2", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.HiddenFileFilter", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "jMZKe_Y8}-GCGxYrC(", "jMZKe_Y8}-GCGxYrC(", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Deprecated", "", "Deprecated", "Deprecated");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "", "Deprecated", "", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1005);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1005, "jMZKe_Y8}-GC6xYrC(", "tI", "jMZKe_Y8}-GC6xYrC(", "tI");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(", "jMZKe_Y8}-GC6xYrC(");
      Attribute attribute0 = new Attribute("jMZKe_Y8}-GC6xYrC(");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
