/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 07:15:55 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.PrintStream;
import org.apache.bcel.classfile.ConstantMethodHandle;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFEQ;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESPECIAL;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.LocalVariableInstruction;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEW;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.StoreInstruction;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.GenericArray;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LCONST lCONST0 = new LCONST(0L);
      instConstraintVisitor0.visitLCONST(lCONST0);
      GETSTATIC gETSTATIC0 = null;
      try {
        gETSTATIC0 = new GETSTATIC((-700));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -700
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      L2D l2D0 = new L2D();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      l2D0.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      L2I l2I0 = null;
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DNEG dNEG0 = new DNEG();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackConsumer(dRETURN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      PUTFIELD pUTFIELD0 = new PUTFIELD(2383);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(pUTFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(1, 1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LDC2_W lDC2_W0 = new LDC2_W(46);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      assertEquals(1, nOP0.getLength());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CALOAD cALOAD0 = new CALOAD();
      FMUL fMUL0 = new FMUL();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LLOAD lLOAD0 = new LLOAD(71);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP((DUP) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(180);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DLOAD dLOAD0 = new DLOAD(0);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      assertEquals(0, dLOAD0.getIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*,ZfGp6k`");
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(2201);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals(4, dSTORE0.getLength());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3198));
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, false);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      // Undeclared exception!
      try { 
        instructionList0.insert((Instruction) sIPUSH0, (Instruction) sIPUSH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction sipush[17](3) -3198 is not contained in this list.
         //
         verifyException("org.apache.bcel.generic.InstructionList", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      EvoSuiteFile evoSuiteFile0 = null;
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(249);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      DALOAD dALOAD0 = new DALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDALOAD(dALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(180);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      InstructionList instructionList0 = new InstructionList();
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) iNSTANCEOF0);
      GOTO_W gOTO_W0 = new GOTO_W(instructionHandle0);
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      assertEquals(5, gOTO_W0.getLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 249;
      LocalVariables localVariables0 = new LocalVariables(249);
      OperandStack operandStack0 = new OperandStack(249);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = new ASTORE(249);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(aSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ASTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCONST fCONST0 = new FCONST(0.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      BIPUSH bIPUSH0 = new BIPUSH((byte)86);
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      LLOAD lLOAD0 = new LLOAD((byte)86);
      // Undeclared exception!
      try { 
        lLOAD0.setIndex((-1687));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal value: -1687
         //
         verifyException("org.apache.bcel.generic.LocalVariableInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(409);
      iLOAD0.copy();
      instConstraintVisitor0.visitILOAD(iLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackProducer(iLOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(0);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKESPECIAL0);
      assertEquals(3, iNVOKESPECIAL0.getLength());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LUSHR lUSHR0 = new LUSHR();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      assertEquals(1, aCONST_NULL0.getLength());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2D i2D0 = new I2D();
      instConstraintVisitor0.visitISTORE((ISTORE) null);
      i2D0.toString(true);
      // Undeclared exception!
      try { 
        i2D0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCONST fCONST0 = new FCONST(0.0F);
      fCONST0.toString();
      instConstraintVisitor0.visitFCONST(fCONST0);
      instConstraintVisitor0.visitJSR((JSR) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP dUP0 = new DUP();
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(3);
      FLOAD fLOAD0 = new FLOAD(3);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      iNVOKESTATIC0.getExceptions();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKESTATIC(iNVOKESTATIC0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      D2F d2F0 = new D2F();
      InstructionList instructionList0 = new InstructionList();
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) d2F0);
      GOTO gOTO0 = new GOTO(instructionHandle0);
      instConstraintVisitor0.visitGOTO(gOTO0);
      assertEquals((short)167, gOTO0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(249);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      NEW nEW0 = null;
      try {
        nEW0 = new NEW((-722));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -722
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GETSTATIC gETSTATIC0 = new GETSTATIC(587);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      assertEquals("getstatic", gETSTATIC0.getName());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(93);
      instConstraintVisitor1.visitLSTORE(lSTORE0);
      JSR_W jSR_W0 = new JSR_W((InstructionHandle) null);
      instConstraintVisitor0.visitJSR_W(jSR_W0);
      assertEquals((short)201, jSR_W0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LDC2_W lDC2_W0 = new LDC2_W(3088);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(3088, 3);
      GenericArray genericArray0 = new GenericArray();
      frame0.equals(genericArray0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      ASTORE aSTORE0 = new ASTORE(2602);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(aSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ASTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(3);
      DDIV dDIV0 = new DDIV();
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackProducer(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(1610, 1610);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      RET rET0 = new RET(1610);
      RET rET1 = new RET(249);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 249.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(3);
      FRETURN fRETURN0 = new FRETURN();
      FADD fADD0 = new FADD();
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ARETURN aRETURN0 = new ARETURN();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ICONST iCONST0 = new ICONST(0);
      instConstraintVisitor0.visitICONST(iCONST0);
      assertEquals(1, iCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("P()WeVOk[C%");
      OperandStack operandStack0 = new OperandStack(2246, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2246);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FSUB fSUB0 = new FSUB();
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type 'P()WeVOk[C%'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(3);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("ZA");
      OperandStack operandStack0 = new OperandStack(159, objectType0);
      LocalVariables localVariables0 = new LocalVariables(159);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      IINC iINC0 = new IINC(232, 232);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LALOAD lALOAD0 = new LALOAD();
      ObjectType objectType0 = new ObjectType("instanceof");
      OperandStack operandStack0 = new OperandStack(240, objectType0);
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DNEG constraint violated: The value at the stack top is not of type 'double', but of type 'instanceof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NEW nEW0 = new NEW(106);
      DCONST dCONST0 = new DCONST(0.0);
      instConstraintVisitor0.visitDCONST(dCONST0);
      assertEquals(1, dCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(3069, 3);
      GenericArray genericArray0 = new GenericArray();
      frame0.getClone();
      frame0.equals(genericArray0);
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL((LMUL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type 'stof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(3);
      FRETURN fRETURN0 = new FRETURN();
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      D2L d2L0 = new D2L();
      D2L d2L1 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLALOAD(lALOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("wVSU71\"8x?}FL\"^tR");
      OperandStack operandStack0 = new OperandStack(159, objectType0);
      OperandStack operandStack1 = new OperandStack(59);
      operandStack0.getClone();
      int int0 = 232;
      LocalVariables localVariables0 = new LocalVariables(232);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      IINC iINC0 = new IINC(3, (-3128));
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG((LNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      F2D f2D0 = new F2D();
      LocalVariables localVariables0 = new LocalVariables(847);
      ObjectType objectType0 = new ObjectType("<kY(4ZF3oqP");
      OperandStack operandStack0 = new OperandStack(847, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DREM dREM0 = new DREM();
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L<kY(4ZF3oqP;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(3069, 3);
      GenericArray genericArray0 = new GenericArray();
      frame0.getClone();
      frame0.equals(genericArray0);
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Class<PUTSTATIC> class0 = PUTSTATIC.class;
      Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      DDIV dDIV0 = new DDIV();
      LNEG lNEG0 = new LNEG();
      POP pOP0 = (POP)InstructionConstants.POP;
      instConstraintVisitor0.visitStackInstruction(pOP0);
      assertEquals(1, pOP0.getLength());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("P()WeVOk[C%");
      OperandStack operandStack0 = new OperandStack(2246, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2246);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT((IFLT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(3069, 3);
      GenericArray genericArray0 = new GenericArray();
      frame0.getClone();
      frame0.equals(genericArray0);
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      instConstraintVisitor0.visitDUP((DUP) null);
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      F2D f2D0 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(171, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(171);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      DDIV dDIV0 = new DDIV();
      LAND lAND0 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      F2D f2D0 = new F2D();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("z?p");
      OperandStack operandStack0 = new OperandStack(1202, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type 'z?p'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("wVSU71\"8x?}FL\"^tR");
      OperandStack operandStack0 = new OperandStack(159, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(232);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitSWAP(sWAP0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fsvvf");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSWAP((SWAP) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(10, objectType0);
      ObjectType.getInstance("fstore");
      LocalVariables localVariables0 = new LocalVariables(10);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(10);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG((INEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type 'stof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("v$D");
      LocalVariables localVariables0 = new LocalVariables(208);
      OperandStack operandStack0 = new OperandStack(106, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'v$D'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstof");
      OperandStack operandStack0 = new OperandStack(791, objectType0);
      LocalVariables localVariables0 = new LocalVariables(791);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(101, 791);
      DASTORE dASTORE0 = new DASTORE();
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<POP> class0 = POP.class;
      Type type0 = Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, type0.OBJECT);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type 'java.lang.Object'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fs&Jof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C((I2C) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      DSUB dSUB0 = new DSUB();
      DSUB dSUB1 = new DSUB();
      localVariables0.clone();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables1 = new LocalVariables(78);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type 'org.apache.bcel.generic.FLOAD'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Q_5<");
      OperandStack operandStack0 = new OperandStack(1260, objectType0);
      LocalVariables localVariables0 = new LocalVariables(64);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LQ_5<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB((LSUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(122);
      OperandStack operandStack2 = new OperandStack(794, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack2);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2((DUP2_X2) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      OperandStack operandStack1 = new OperandStack(794, objectType0);
      LocalVariables localVariables1 = new LocalVariables(102);
      Frame frame0 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2((DUP2_X2) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(794, (short)3069);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '3069' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(486);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(486, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1715);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(101, 794);
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2246, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(2246);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL((IMUL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I((L2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(4423, objectType0);
      LocalVariables localVariables0 = new LocalVariables(4423);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fstore");
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DNEG dNEG0 = new DNEG();
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DNEG dNEG0 = new DNEG();
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2D constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(171, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(171);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      DDIV dDIV0 = new DDIV();
      ASTORE aSTORE0 = new ASTORE(171);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      LDC2_W lDC2_W0 = new LDC2_W(2674);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC2_W(lDC2_W0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor0.visitASTORE((ASTORE) null);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(523, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      ISHR iSHR0 = new ISHR();
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type 'stof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("pxN'?$FNZ");
      OperandStack operandStack0 = new OperandStack(3518, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type 'pxN'?$FNZ'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("'uu'rfEN<0z&+#");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L'uu'rfEN<0z&+#;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<POP> class0 = POP.class;
      Type type0 = Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, type0.OBJECT);
      LocalVariables localVariables1 = new LocalVariables(363);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLE((IF_ICMPLE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      I2C i2C0 = new I2C();
      ISUB iSUB0 = new ISUB();
      IFNE iFNE0 = new IFNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFNE(iFNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFNE constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("W46^nine..");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      ObjectType.getInstance("W46^nine..");
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(1710);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction((StoreInstruction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DRETURN dRETURN0 = new DRETURN();
      F2D f2D0 = new F2D();
      LocalVariables localVariables0 = new LocalVariables(847);
      ObjectType objectType0 = new ObjectType("<kY(4ZF3oqP");
      OperandStack operandStack0 = new OperandStack(847, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      LNEG lNEG0 = new LNEG();
      ASTORE aSTORE0 = new ASTORE(847);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      DCONST dCONST0 = null;
      try {
        dCONST0 = new DCONST((-498.426637));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DCONST can be used only for 0.0 and 1.0: -498.426637
         //
         verifyException("org.apache.bcel.generic.DCONST", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("s1>");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SASTORE sASTORE0 = new SASTORE();
      SASTORE sASTORE1 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 's1>'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1((DUP2_X1) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = new FRETURN();
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB((ISUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Class<DUP_X1> class0 = DUP_X1.class;
      Type.getType(class0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(3);
      InstructionList instructionList0 = new InstructionList(gETFIELD0);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) gETFIELD0, (Instruction) gETFIELD0);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT(iF_ICMPLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLT constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables1 = new LocalVariables(78);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type 'org.apache.bcel.generic.FLOAD'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = ObjectType.getInstance("Epecting a ReturnaddressType in local variable ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(26);
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type 'Epecting a ReturnaddressType in local variable '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, objectType0);
      LocalVariables localVariables1 = new LocalVariables(78);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type 'org.apache.bcel.generic.FLOAD'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType(" ('");
      OperandStack operandStack0 = new OperandStack(240, objectType0);
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type ' (''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type 'stof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("s1>");
      OperandStack operandStack0 = new OperandStack(808, objectType0);
      LocalVariables localVariables0 = new LocalVariables(808);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      CHECKCAST cHECKCAST0 = new CHECKCAST(808);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      int int0 = 794;
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = new FRETURN();
      CHECKCAST cHECKCAST0 = new CHECKCAST(794);
      cHECKCAST0.getExceptions();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      CHECKCAST cHECKCAST1 = new CHECKCAST(794);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = new FRETURN();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, objectType0);
      OperandStack operandStack1 = new OperandStack(78);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("[2eNB2#Yh#cE6LTVv");
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(217);
      OperandStack operandStack0 = new OperandStack(217, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[2eNB2#Yh#cE6LTVv");
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      NEW nEW0 = new NEW(217);
      MockPrintStream mockPrintStream0 = new MockPrintStream("SK");
      PrintStream printStream0 = mockPrintStream0.printf("S+I#==8", (Object[]) objectType0.NO_ARGS);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      dataOutputStream0.writeShort((-2331));
      nEW0.dump(dataOutputStream0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEW(nEW0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("[2eNB2#Yh#cE6LTVv");
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(209);
      OperandStack operandStack0 = new OperandStack(209, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      NEW nEW0 = new NEW(209);
      MockPrintStream mockPrintStream0 = new MockPrintStream("SK");
      PrintStream printStream0 = mockPrintStream0.printf("S+I==8", (Object[]) objectType0.NO_ARGS);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      dataOutputStream0.writeShort((-2331));
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEW(nEW0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(78);
      OperandStack operandStack0 = new OperandStack(78, objectType0);
      LocalVariables localVariables1 = new LocalVariables(78);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DDIV dDIV0 = new DDIV();
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'stof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(92);
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      OperandStack operandStack1 = new OperandStack(92, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      L2I l2I0 = null;
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'org.apache.bcel.generic.FLOAD'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fsvvf");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type 'fsvvf'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("fstof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DNEG dNEG0 = new DNEG();
      FCMPL fCMPL0 = new FCMPL();
      fCMPL0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type 'fstof'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("@");
      OperandStack operandStack0 = new OperandStack(451, objectType0);
      LocalVariables localVariables0 = new LocalVariables(451);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type '@'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("fstore");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      DUP dUP0 = new DUP();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, (float) 679);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionList instructionList1 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList1);
      IFEQ iFEQ0 = new IFEQ(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFEQ(iFEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFEQ constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setMethodGen((MethodGen) null);
      IADD iADD0 = new IADD();
      D2F d2F0 = new D2F();
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("Null");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(785);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      I2C i2C0 = new I2C();
      IFNE iFNE0 = new IFNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I((D2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DREM dREM0 = new DREM();
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      instConstraintVisitor0.visitFSTORE((FSTORE) null);
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type 'fstore'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("Null");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(785);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'Null'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(3);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ((IF_ACMPEQ) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("i");
      OperandStack operandStack0 = new OperandStack(2246, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2246);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = (ASTORE)InstructionConstants.ASTORE_2;
      instConstraintVisitor0.visitLocalVariableInstruction(aSTORE0);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'i'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("fstore");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.equals((Object) null);
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DDIV dDIV0 = new DDIV();
      ConstantMethodHandle constantMethodHandle0 = new ConstantMethodHandle(1, 1);
      ConstantMethodHandle constantMethodHandle1 = new ConstantMethodHandle(constantMethodHandle0);
      ConstantMethodHandle constantMethodHandle2 = new ConstantMethodHandle(constantMethodHandle1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.getConstant(1);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(1257);
      INSTANCEOF iNSTANCEOF1 = new INSTANCEOF(1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("stof");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(794);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "stof");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(794);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Class<FLOAD> class0 = FLOAD.class;
      ObjectType objectType0 = (ObjectType)Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(77);
      ObjectType objectType1 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(77, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables1 = new LocalVariables(77);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      DNEG dNEG0 = new DNEG();
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ATHROW constraint violated: The 'objectref' is not of class Throwable or of a subclass of Throwable, but of 'org.apache.bcel.generic.FLOAD'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ObjectType objectType0 = ObjectType.getInstance("Null");
      OperandStack operandStack0 = new OperandStack(794, objectType0);
      LocalVariables localVariables0 = new LocalVariables(785);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DASTORE dASTORE0 = new DASTORE();
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE(iFLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLE constraint violated: The value at the stack top is not of type 'int', but of type 'Null'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GenericArray genericArray0 = new GenericArray();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[2eNB2#Yh#cE6LTVv");
      ObjectType objectType0 = new ObjectType("[2eNB2#Yh#cE6LTVv");
      int int0 = 217;
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(217);
      OperandStack operandStack0 = new OperandStack(217, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[2eNB2#Yh#cE6LTVv");
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      NEW nEW0 = new NEW(217);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(217);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type '[2eNB2#Yh#cE6LTVv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
