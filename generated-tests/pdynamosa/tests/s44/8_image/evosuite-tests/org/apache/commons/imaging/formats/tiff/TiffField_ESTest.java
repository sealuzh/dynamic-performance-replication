/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:05:10 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)99;
      byteArray0[4] = (byte)55;
      TiffField tiffField0 = new TiffField(37382, 37382, fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, 143);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(37382, tiffField0.getTag());
      assertEquals(143, tiffField0.getSortHint());
      assertEquals(460, int0);
      assertEquals(37382, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)55;
      TiffField tiffField0 = new TiffField(37382, 37382, fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, 143);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(143, tiffField0.getSortHint());
      assertEquals(37382, tiffField0.getTag());
      assertEquals(37382, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeLong0, 1L, 1629L, byteArray0, byteOrder0, (byte)95);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(95, tiffField0.getTag());
      assertEquals(1629, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-405), fieldTypeRational0, 2147483647L, 28, byteArray0, byteOrder0, 28);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(28, tiffField0.getSortHint());
      assertEquals((-405), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-296), 44, fieldTypeByte0, 528L, 2365L, byteArray0, byteOrder0, (-296));
      tiffField0.getValue();
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals((-296), tiffField0.getTag());
      assertEquals((-296), tiffField0.getSortHint());
      assertEquals(2365, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-572), ",%vv");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, (-572), 50, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getTag();
      assertEquals(50, int0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-399), 281, fieldTypeRational0, 0L, (-112L), byteArray0, byteOrder0, 281);
      int int0 = tiffField0.getTag();
      assertEquals(281, tiffField0.getSortHint());
      assertEquals(281, tiffField0.getDirectoryType());
      assertEquals((-399), int0);
      assertEquals((-112), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)85;
      TiffField tiffField0 = new TiffField((-4470), (-348), fieldTypeRational0.ASCII, 2L, (-4470), byteArray0, byteOrder0, (-348));
      assertEquals(2, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals((-348), tiffField0.getSortHint());
      assertEquals((-348), tiffField0.getDirectoryType());
      assertEquals((-4470), tiffField0.getTag());
      assertEquals((-4470), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(1239);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 657, fieldTypeRational0, 657, 1239, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getSortHint();
      assertEquals(1239, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(3, int0);
      assertEquals(657, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "i99CNf!L i@1h(^h'.");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 48132, fieldTypeDouble0, 395L, (-1L), byteArray0, (ByteOrder) null, (byte) (-24));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-24), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(48132, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(584, 50, fieldTypeLong0, 1L, 50, byteArray0, byteOrder0, (byte)123);
      int int0 = tiffField0.getOffset();
      assertEquals(50, int0);
      assertEquals(584, tiffField0.getTag());
      assertEquals(123, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, (-1L), byteArray0, byteOrder0, (byte)32);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), int0);
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)115;
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeShort0, 2308L, 3088L, byteArray0, byteOrder0, (byte)115);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3088, tiffField0.getOffset());
      assertEquals(4616, tiffField0.getBytesLength());
      assertEquals(115, tiffField0.getTag());
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(115, int0);
      assertEquals(115, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-64);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2000, 2000, fieldTypeLong0, 2000, (-1353L), byteArray0, byteOrder0, (byte) (-55));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1353), tiffField0.getOffset());
      assertEquals(2000, tiffField0.getDirectoryType());
      assertEquals(8000, tiffField0.getBytesLength());
      assertEquals(2000, tiffField0.getTag());
      assertEquals((-55), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)115;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 1L, 6753L, byteArray0, byteOrder0, 1320);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getTag());
      assertEquals(1320, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(6753, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-86);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34910, 34910, fieldTypeByte0, 1L, 34910, byteArray0, byteOrder0, (byte) (-86));
      tiffField0.getIntValue();
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals(34910, tiffField0.getOffset());
      assertEquals(34910, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(1239);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 657, fieldTypeRational0, 657, 1239, byteArray0, byteOrder0, 3);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1239, tiffField0.getOffset());
      assertEquals(5256, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(657, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1031), (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1L, (-1031), byteArray0, (ByteOrder) null, 0);
      tiffField0.getFieldTypeName();
      assertEquals((-1031), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2146635845, (byte)83, fieldTypeRational0, (byte) (-2), (byte)83, byteArray0, byteOrder0, (byte) (-72));
      tiffField0.getFieldTypeName();
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals((-72), tiffField0.getSortHint());
      assertEquals(83, tiffField0.getOffset());
      assertEquals(2146635845, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1781), (-1781), (FieldType) null, (-1781), (-1781), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-1781), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1781), tiffField0.getDirectoryType());
      assertEquals((-1781), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)0, "org.apache.commons.imaging.formats.tiff.TiffField");
      TiffField tiffField0 = new TiffField(933, 661, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 1374);
      tiffField0.getFieldType();
      assertEquals(933, tiffField0.getTag());
      assertEquals(661, tiffField0.getDirectoryType());
      assertEquals(1374, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-151), "'");
      TiffField tiffField0 = new TiffField((byte) (-86), (-151), fieldTypeAscii0, (byte)100, 2143127697, byteArray0, byteOrder0, (byte) (-86));
      tiffField0.getFieldType();
      assertEquals((-151), tiffField0.getDirectoryType());
      assertEquals(2143127697, tiffField0.getOffset());
      assertEquals((-86), tiffField0.getTag());
      assertEquals((-86), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)112;
      TiffField tiffField0 = new TiffField(2147231032, 2147231032, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, (byte)63);
      tiffField0.getDoubleValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(2147231032, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2147231032, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-70);
      byteArray0[7] = (byte) (-98);
      TiffField tiffField0 = new TiffField((-2813), 0, fieldTypeRational0, 1L, (-391L), byteArray0, byteOrder0, (byte)62);
      tiffField0.getDoubleValue();
      assertEquals((-2813), tiffField0.getTag());
      assertEquals((-391), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, 143);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(143, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, (FieldType) null, 2136582715, 2136582715, byteArray0, byteOrder0, (byte) (-91));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2136582715, int0);
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(2136582715, tiffField0.getOffset());
      assertEquals((-91), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1179, (-1063), fieldTypeRational0, 0L, 50, byteArray0, byteOrder0, 1179);
      tiffField0.getCount();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-1063), tiffField0.getDirectoryType());
      assertEquals(1179, tiffField0.getTag());
      assertEquals(1179, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, (-1L), byteArray0, byteOrder0, (byte)32);
      tiffField0.getCount();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-867), (-867), fieldTypeAscii0, 2066L, (-867), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2066, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-867), tiffField0.getDirectoryType());
      assertEquals((-867), tiffField0.getOffset());
      assertEquals((-867), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2623, 2623, fieldTypeShort0, (-3298L), 203748L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-6596), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2623, tiffField0.getTag());
      assertEquals(2623, tiffField0.getDirectoryType());
      assertEquals(203748, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 230);
      tiffField0.getByteOrder();
      assertEquals(230, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 2147074837, fieldTypeRational0, 5256L, (-607L), byteArray0, byteOrder0, 3);
      tiffField0.getByteArrayValue();
      assertEquals((-607), tiffField0.getOffset());
      assertEquals(2147074837, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(42048, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(96, (-366), fieldTypeFloat0, 200L, 3596L, byteArray0, byteOrder0, 15);
      File file0 = MockFile.createTempFile("SubSecTime", "SubSecTime");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(40L, file0.length());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-815), fieldTypeRational0, (-815), (-815), (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1442), "4;Y");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1442), (-1442), fieldTypeLong0, (-1442), (-1442), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1009, "A)");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2366, 1009, fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, (byte) (-89));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1690, 1065, (FieldType) null, 1690, (-1L), byteArray0, (ByteOrder) null, 2809);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeShort0, 1396L, (-1L), byteArray0, byteOrder0, (-1155));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-27), (byte) (-1), fieldTypeByte0, 1L, 2L, (byte[]) null, byteOrder0, 37377);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37379, "UserComment");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(37379, 37379, fieldTypeLong0, (-1705L), (-1705L), byteArray0, (ByteOrder) null, (-4863));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 1005, fieldTypeLong0, 0L, 1005, byteArray0, byteOrder0, 827);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-219), 4988, fieldTypeRational0, (-219), 4988, (byte[]) null, byteOrder0, 3807);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-287), 5878, fieldTypeAscii0, (-1237L), (-112L), byteArray0, byteOrder0, (byte) (-1));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown Tag (0xfffffee1)");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1412, (-1063), fieldTypeLong0, 476L, 1412, byteArray0, byteOrder0, (-815));
      MockFile mockFile0 = new MockFile("Unknown Tag", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1412, tiffField0.getOffset());
      assertEquals(40L, mockFile0.length());
      assertEquals((-1063), tiffField0.getDirectoryType());
      assertEquals(1904, tiffField0.getBytesLength());
      assertEquals((-815), tiffField0.getSortHint());
      assertEquals(1412, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1342), fieldTypeByte0, (-1342), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-86), (-151), fieldTypeShort0.ASCII, (byte)100, 2143127697, byteArray0, byteOrder0, (byte) (-86));
      tiffField0.getFieldType();
      assertEquals((-86), tiffField0.getTag());
      assertEquals((-151), tiffField0.getDirectoryType());
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals(2143127697, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-405), fieldTypeRational0, 2147483647L, 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1896), "h~oYPt");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3040), 788, fieldTypeRational0, (-1896), 3053L, byteArray0, byteOrder0, 0);
      tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(788, tiffField0.getDirectoryType());
      assertEquals((-3040), tiffField0.getTag());
      assertEquals(3053, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-219), 4988, fieldTypeRational0, (-219), 4988, (byte[]) null, byteOrder0, 3807);
      tiffField0.getCount();
      assertEquals(3807, tiffField0.getSortHint());
      assertEquals((-219), tiffField0.getTag());
      assertEquals(4988, tiffField0.getDirectoryType());
      assertEquals(4988, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)115, fieldTypeShort0, 1, 230L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(230, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(115, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeLong0, 1L, 1629L, byteArray0, byteOrder0, (byte)95);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(1629, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getTag());
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(96, (-366), fieldTypeFloat0, 200L, (-366), byteArray0, byteOrder0, 15);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5bd81cfe for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(933, 661, fieldTypeFloat0.LONG, 1L, 1L, byteArray0, byteOrder0, 1374);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1374, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(661, tiffField0.getDirectoryType());
      assertEquals(933, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3139), (-747), fieldTypeDouble0, 496, (-3139), byteArray0, byteOrder0, (byte)92);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3139), tiffField0.getTag());
      assertEquals(3968, tiffField0.getBytesLength());
      assertEquals((-3139), tiffField0.getOffset());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals((-747), tiffField0.getDirectoryType());
      assertEquals(496L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(96, (-366), fieldTypeFloat0, 200L, (-366), byteArray0, byteOrder0, 15);
      tiffField0.getDoubleArrayValue();
      assertEquals(200L, tiffField0.getCount());
      assertEquals((-366), tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(96, tiffField0.getTag());
      assertEquals((-366), tiffField0.getOffset());
      assertEquals(800, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50737, 1715, fieldTypeRational0.SLONG, 50737, 524280L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1715, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getOffset());
      assertEquals(50737L, tiffField0.getCount());
      assertEquals(50737, tiffField0.getTag());
      assertEquals(202948, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeShort0, 2308L, 3088L, byteArray0, byteOrder0, (byte)115);
      tiffField0.getDoubleArrayValue();
      assertEquals(115, tiffField0.getTag());
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(3088, tiffField0.getOffset());
      assertEquals(4616, tiffField0.getBytesLength());
      assertEquals(2308L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeRational0, 1064L, (-4924L), byteArray0, byteOrder0, (byte) (-121));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-4924), tiffField0.getOffset());
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1064L, tiffField0.getCount());
      assertEquals(8512, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(933, 661, fieldTypeFloat0.SLONG, 1L, 1L, byteArray0, byteOrder0, 1374);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1374, tiffField0.getSortHint());
      assertEquals(661, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(933, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@51d01640 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, (-1L), byteArray0, byteOrder0, (byte)32);
      tiffField0.getIntArrayValue();
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1517, (byte)23, fieldTypeShort0, 100L, 0L, byteArray0, byteOrder0, (-2136));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals((-2136), tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1517, tiffField0.getTag());
      assertEquals(100L, tiffField0.getCount());
      assertEquals(200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)126;
      TiffField tiffField0 = new TiffField(2, 34853, fieldTypeRational0, 294L, 0, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2352, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getTag());
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(294L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2147231032, 2147231032, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, (byte)63);
      tiffField0.getIntArrayValue();
      assertEquals(2147231032, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(2147231032, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeFloat0, 11L, 3088L, byteArray0, byteOrder0, 455);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7ce13e37 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeLong0, 2037, (-1353L), byteArray0, byteOrder0, (byte) (-55));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@4feda4e8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65100, 65100, fieldTypeRational0.ASCII, 0L, 0L, byteArray0, byteOrder0, (-364));
      String string0 = tiffField0.getStringValue();
      assertEquals((-364), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(65100, tiffField0.getDirectoryType());
      assertEquals(65100, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 230);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(230, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34910, 34910, fieldTypeByte0, 1L, 34910, byteArray0, byteOrder0, (byte) (-86));
      String string0 = tiffField0.getTagName();
      assertEquals(34910, tiffField0.getOffset());
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals(34910, tiffField0.getTag());
      assertEquals("FaxRecvTime", string0);
      assertEquals((-86), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(1237);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1621, 2, fieldTypeRational0, 4434L, 657, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "NZU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-296), 44, fieldTypeByte0, 528L, 2365L, byteArray0, byteOrder0, (-296));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-296), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-296), tiffField0.getSortHint());
      assertEquals(2365, tiffField0.getOffset());
      assertEquals(528, tiffField0.getBytesLength());
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(528L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeFloat0, 11L, 3088L, byteArray0, byteOrder0, 455);
      String string0 = tiffField0.toString();
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(455, tiffField0.getSortHint());
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals("115 (0x73: Unknown Tag): 0.0, 0.0 (11 Float)", string0);
      assertEquals(3088, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1572), 49, fieldTypeShort0.DOUBLE, 133L, 66, byteArray0, byteOrder0, 1320);
      String string0 = tiffField0.toString();
      assertEquals(66, tiffField0.getOffset());
      assertEquals("-1572 (0xfffff9dc: Unknown Tag): 0.0, 0.0, 0.0 (133 Double)", string0);
      assertEquals(1064, tiffField0.getBytesLength());
      assertEquals(1320, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(48256, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3728), 1, fieldTypeDouble0, 4113L, 1L, byteArray0, byteOrder0, (-1717986917));
      String string0 = tiffField0.getValueDescription();
      assertEquals(32904, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-3728), tiffField0.getTag());
      assertEquals(4113L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1399), (-1399), fieldTypeLong0, 674L, (-1399), byteArray0, byteOrder0, (-1399));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1399), tiffField0.getOffset());
      assertEquals(674L, tiffField0.getCount());
      assertEquals((-1399), tiffField0.getTag());
      assertEquals(2696, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-1399), tiffField0.getSortHint());
      assertEquals((-1399), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeShort0, (byte)115, 3088L, byteArray0, byteOrder0, (-4471));
      String string0 = tiffField0.toString();
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals("115 (0x73: Unknown Tag): 0, 0, 0, 0 (115 Short)", string0);
      assertEquals(3088, tiffField0.getOffset());
      assertEquals(230, tiffField0.getBytesLength());
      assertEquals((-4471), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(34, (-1), fieldTypeShort0, 5537, 34, byteArray0, byteOrder0, (-2978));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(5537L, tiffField0.getCount());
      assertEquals((-2978), tiffField0.getSortHint());
      assertEquals(11074, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(16, 0, fieldTypeShort0.ASCII, 319, 4L, byteArray0, byteOrder0, (-934));
      tiffField0.toString();
      assertEquals((-934), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(319L, tiffField0.getCount());
      assertEquals(16, tiffField0.getTag());
      assertEquals(319, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(2389, 2090, fieldTypeRational0, 2389, 672L, byteArray0, byteOrder0, 35);
      tiffField0.toString();
      assertEquals(2090, tiffField0.getDirectoryType());
      assertEquals(2389L, tiffField0.getCount());
      assertEquals(2389, tiffField0.getTag());
      assertEquals(672, tiffField0.getOffset());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(19112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag):  (0 SByte)", string0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(30, (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)88;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeAscii0, 30, (-1402L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(30, tiffField0.getTag());
      assertEquals(30, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals((-1402), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeLong0, 1L, 1629L, byteArray0, byteOrder0, (byte)95);
      tiffField0.toString();
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1629, tiffField0.getOffset());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(95, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1442), "4;Y");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1442), (-1442), fieldTypeLong0, (-1442), (-1442), byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1442), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1442), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-1442), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, (-1L), byteArray0, byteOrder0, (byte)32);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-1L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1517, (byte)23, fieldTypeShort0, 100L, 0L, byteArray0, byteOrder0, (-2136));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3495), 3771);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1517, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertNotNull(string0);
      assertEquals((-2136), tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50937, 50937, fieldTypeFloat0, 50937, 1L, byteArray0, byteOrder0, 34675);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50937, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(34675, tiffField0.getSortHint());
      assertEquals(50937, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 4811, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (byte) (-29));
      tiffField0.getOffset();
      assertEquals((-29), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4811, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-815), fieldTypeRational0, (-815), (-815), (byte[]) null, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-815), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-815), int0);
      assertEquals((-6520), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(657);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 1714L, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1714, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(30, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeAscii0, 30, (-1402L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
      assertEquals((-1402), tiffField0.getOffset());
      assertEquals(0, int0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-815), fieldTypeRational0, (-815), (-815), (byte[]) null, byteOrder0, 50);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-815), tiffField0.getDirectoryType());
      assertEquals("50 (0x32: Unknown Tag): ", string0);
      assertEquals((-815), tiffField0.getOffset());
      assertEquals((-815L), tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146635845, "l(oN3A>zF8");
      TiffField tiffField0 = new TiffField(2146635845, 2146635845, fieldTypeShort0, 2146635845, (-9432L), (byte[]) null, (ByteOrder) null, 2146635845);
      tiffField0.getByteOrder();
      assertEquals(2146635845, tiffField0.getTag());
      assertEquals(2146635845, tiffField0.getDirectoryType());
      assertEquals((-9432), tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(2146635845, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-27), (byte) (-1), fieldTypeByte0, 1L, 2L, (byte[]) null, byteOrder0, 37377);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(846, 34675);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(37377, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals((-27), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertNull(string0);
      assertEquals((-1), tiffField0.getDirectoryType());
  }
}
