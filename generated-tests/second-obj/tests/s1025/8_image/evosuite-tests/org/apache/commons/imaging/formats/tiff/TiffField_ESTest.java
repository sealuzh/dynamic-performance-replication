/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:19:34 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.time.Instant;
import java.util.Date;
import java.util.Locale;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1762, (-1), fieldTypeRational0, 0L, 1762, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      int int0 = tiffField0.getTag();
      assertEquals(1762, tiffField0.getOffset());
      assertEquals(1762, int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte) (-123);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1124), (-1124), fieldTypeLong0, 2017L, 2017L, byteArray0, byteOrder0, (-1654));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "y/EvSq;'<I.YK[&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeDouble0, 978L, (byte)19, byteArray0, byteOrder0, 50732);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7824, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(50732, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(19, tiffField0.getOffset());
      assertEquals(978L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 34824, fieldTypeLong0.SRATIONAL, 0L, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getValueDescription();
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(34824, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2142074369, 2142074369, fieldTypeLong0, 2142074369, 2142074369, byteArray0, byteOrder0, 2142074369);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2142074369, 230);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(2142074369, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2142074369, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: IFD", string0);
      assertEquals(2142074369, tiffField0.getOffset());
      assertEquals(2142074369, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2142074369, 2142074369, fieldTypeLong0, 2142074369, 2142074369, byteArray0, byteOrder0, 2142074369);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)1, 230);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(2142074369, tiffField0.getDirectoryType());
      assertEquals(2142074369, tiffField0.getSortHint());
      assertEquals(2142074369, tiffField0.getTag());
      assertEquals(2142074369, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1762, (-1), fieldTypeRational0, 1762, 1762, byteArray0, byteOrder0, (-1));
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-124), fieldTypeLong0, (-124), (-124), (byte[]) null, byteOrder0, (-124));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-124), tiffField0.getDirectoryType());
      assertEquals((-124), tiffField0.getSortHint());
      assertEquals((-124), tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)7;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)46;
      byteArray0[6] = (byte) (-16);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeShort0, 17, 17, byteArray0, byteOrder0, (byte) (-16));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals(17, tiffField0.getTag());
      assertEquals(17L, tiffField0.getCount());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getBytesLength());
      assertEquals(17, tiffField0.getOffset());
      assertEquals(11790, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2028179000, (byte)44, fieldTypeShort0, 126L, (byte)90, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x78e38e38)", string0);
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(126L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 2;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeLong0, 2, 2, byteArray0, byteOrder0, 2);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@12b086ca
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18249, 18249, fieldTypeByte0, 951L, 60L, (byte[]) null, byteOrder0, 18249);
      tiffField0.getFieldTypeName();
      assertEquals(60, tiffField0.getOffset());
      assertEquals(18249, tiffField0.getTag());
      assertEquals(18249, tiffField0.getDirectoryType());
      assertEquals(951L, tiffField0.getCount());
      assertEquals(18249, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37122, 1210, fieldTypeLong0, 1210, 37122, byteArray0, byteOrder0, 1210);
      tiffField0.getByteOrder();
      int int0 = tiffField0.getSortHint();
      assertEquals(1210, int0);
      assertEquals(37122, tiffField0.getTag());
      assertEquals(37122, tiffField0.getOffset());
      assertEquals(1210, tiffField0.getDirectoryType());
      assertEquals(4840, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(650, 65535, fieldTypeShort0, 650, 65535, byteArray0, byteOrder0, 13);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(650, tiffField0.getTag());
      assertEquals(650L, tiffField0.getCount());
      assertEquals(1300, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3237, 3237, fieldTypeDouble0, 3237, 3237, byteArray0, byteOrder0, 1486);
      tiffField0.getDoubleArrayValue();
      assertEquals(3237, tiffField0.getDirectoryType());
      assertEquals(3237L, tiffField0.getCount());
      assertEquals(25896, tiffField0.getBytesLength());
      assertEquals(3237, tiffField0.getTag());
      assertEquals(1486, tiffField0.getSortHint());
      assertEquals(3237, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)90;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34377, (byte) (-1), fieldTypeLong0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)124);
      String string0 = tiffField0.getTagName();
      assertEquals("PhotoshopSettings", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getOffset());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(34377, tiffField0.getTag());
      assertEquals(360, tiffField0.getBytesLength());
      assertEquals(90L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[182];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      int int0 = Short.SIZE;
      ByteOrder byteOrder4 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeByte0, 3096L, (byte)19, byteArray0, byteOrder2, 16);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3096L, tiffField0.getCount());
      assertEquals(3096, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(16, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte) (-50);
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146876499, 2146876499, fieldTypeByte0, 2146876499, 2146876499, byteArray0, byteOrder0, (byte)103);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals(2146876499, int0);
      assertEquals(2146876499, tiffField0.getDirectoryType());
      assertEquals(2146876499, tiffField0.getTag());
      assertEquals(2146876499L, tiffField0.getCount());
      assertEquals(2146876499, tiffField0.getBytesLength());
      assertEquals(103, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)90;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34377, (-1930), fieldTypeLong0, 34377, 4L, byteArray0, byteOrder0, 44);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34377, tiffField0.getTag());
      assertEquals((-1930), tiffField0.getDirectoryType());
      assertEquals(34377L, tiffField0.getCount());
      assertEquals(137508, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      Long long0 = new Long(21L);
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3407, ": '");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)20;
      TiffField tiffField0 = new TiffField(134, 3407, fieldTypeShort0, 134, (-2399L), byteArray0, byteOrder0, (byte) (-115));
      String string0 = tiffField0.getValueDescription();
      assertEquals(268, tiffField0.getBytesLength());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals((-2399), tiffField0.getOffset());
      assertEquals(3407, tiffField0.getDirectoryType());
      assertEquals(134, tiffField0.getTag());
      assertEquals(134L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-55);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1762L, 1762L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1762, tiffField0.getOffset());
      assertEquals(14096, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1762L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)1, "[");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)1, (byte) (-85), fieldTypeAscii0, 4L, (-228L), byteArray0, byteOrder0, 2073432487);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2561, 2561, fieldTypeLong0, 2561, 2561, byteArray0, byteOrder0, 2561);
      tiffField0.getByteArrayValue();
      tiffField0.getIntValueOrArraySum();
      assertEquals(2561L, tiffField0.getCount());
      assertEquals(10244, tiffField0.getBytesLength());
      assertEquals(2561, tiffField0.getOffset());
      assertEquals(2561, tiffField0.getSortHint());
      assertEquals(2561, tiffField0.getDirectoryType());
      assertEquals(2561, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeFloat0, 145L, 145L, byteArray0, byteOrder0, 2172);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@53928098 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      Locale locale0 = Locale.FRANCE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int1 = Short.SIZE;
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(903, 903, fieldTypeByte0.SHORT, 16, 16, byteArray0, byteOrder2, 2);
      tiffField0.getIntArrayValue();
      assertEquals(16L, tiffField0.getCount());
      assertEquals(903, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(903, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeDouble0, 978L, (byte)19, byteArray0, byteOrder0, 50732);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@60551ec2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-46);
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)79;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, 4L, (-1L), byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Locale locale0 = Locale.GERMAN;
      int int0 = Long.SIZE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-594), (-594), fieldTypeRational0, 64, 64, byteArray0, byteOrder0, 64);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      int int0 = Float.MIN_EXPONENT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      Locale locale0 = Locale.ITALY;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "R4ZYFv");
      TiffField tiffField0 = new TiffField((-1630), (-2294), fieldTypeRational0, 1573L, 23, byteArray0, (ByteOrder) null, 34850);
      int int1 = tiffField0.getOffset();
      assertEquals(23, int1);
      
      tiffField0.getIntArrayValue();
      assertEquals(34850, tiffField0.getSortHint());
      assertEquals(1573L, tiffField0.getCount());
      assertEquals(12584, tiffField0.getBytesLength());
      assertEquals((-1630), tiffField0.getTag());
      assertEquals((-2294), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)118;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField((-2143722729), 344, fieldTypeRational0, 344, 344, byteArray0, byteOrder0, (byte)118);
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[246];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeLong fieldTypeLong1 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(795, (byte)19, fieldTypeLong1, 795, 1482L, byteArray0, byteOrder0, 65106);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65106, tiffField0.getSortHint());
      assertEquals(1482, tiffField0.getOffset());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(795, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(795L, tiffField0.getCount());
      assertEquals(3180, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[307];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeDouble fieldTypeDouble1 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, (-1038), fieldTypeDouble0, 1L, (-463L), byteArray0, byteOrder2, (-349));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1038), tiffField0.getDirectoryType());
      assertEquals((-349), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-463), tiffField0.getOffset());
      assertEquals(42, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)1;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)110;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(")Di,ef<$h|c@g2");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeFloat0, 40965, (-1579L), byteArray0, byteOrder0, (-974));
      tiffField0.getDoubleArrayValue();
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(40965, tiffField0.getTag());
      assertEquals((-1579), tiffField0.getOffset());
      assertEquals(163860, tiffField0.getBytesLength());
      assertEquals((-974), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(8, 1, fieldTypeFloat0, 5536L, (-365L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(22144, tiffField0.getBytesLength());
      assertEquals((-365), tiffField0.getOffset());
      assertEquals(8, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "R4ZYFv");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 12836L, 0, byteArray0, byteOrder0, (-341));
      tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-341), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(12836, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte) (-87);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)76);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField(33919, 1, fieldTypeLong0, 1, 33919, byteArray0, byteOrder0, (-2307));
      byteBuffer0.asFloatBuffer();
      tiffField0.getIntArrayValue();
      Instant instant0 = MockInstant.ofEpochMilli((byte)50);
      Date date0 = Date.from(instant0);
      try { 
        fieldTypeLong0.writeData(date0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: Thu Jan 01 00:00:00 GMT 1970 (java.util.Date)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[304];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder.nativeOrder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "X`B(ft>[L");
      String string0 = File.pathSeparator;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string1 = File.pathSeparator;
      FileSystemHandling.shouldAllThrowIOExceptions();
      TiffField tiffField0 = new TiffField((-6607), 16, fieldTypeDouble0.FLOAT, 1L, 8, byteArray0, byteOrder0, (-6607));
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getOffset();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(8, int0);
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals((-6607), tiffField0.getTag());
      assertEquals((-6607), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1176), "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)20;
      byteArray0[6] = (byte)115;
      byteArray0[7] = (byte) (-77);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-367), 2146876499, fieldTypeRational0, 13236L, (-1176), byteArray0, byteOrder0, 2146876499);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2146876499, tiffField0.getDirectoryType());
      assertEquals(2146876499, tiffField0.getSortHint());
      assertEquals((-1176), tiffField0.getOffset());
      assertEquals((-367), tiffField0.getTag());
      assertArrayEquals(new double[] {(-0.006096080593292001)}, doubleArray0, 0.01);
      assertEquals(105888, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2750, "4&ZYF");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      String string0 = File.separator;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 1076L, 1076L, byteArray0, byteOrder0, (-3));
      String string1 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-3), tiffField0.getSortHint());
      assertNotNull(string1);
      assertEquals(1076, tiffField0.getOffset());
      assertEquals(1076, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)90;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1930), fieldTypeLong0, 1, 4L, byteArray0, byteOrder0, 44);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1930), tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)16;
      TiffField tiffField0 = new TiffField((byte)70, 46, fieldTypeAscii0, 1L, 12836L, byteArray0, byteOrder0, (byte)0);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      
      FieldTypeAscii fieldTypeAscii1 = FieldType.ASCII;
      int int0 = tiffField0.getDirectoryType();
      assertEquals(46, int0);
      assertEquals(12836, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2750, "4&ZYF");
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2244), (-2244), fieldTypeAscii0, 2750, 2750, byteArray0, byteOrder0, 2750);
      tiffField0.getTagInfo();
      tiffField0.dump();
      String string0 = File.separator;
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      int int0 = 2767;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      int int1 = (-1717986917);
      ByteOrder.nativeOrder();
      String string0 = "(0x";
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2767, 116, fieldTypeShort0, 116, 116, byteArray0, byteOrder0, 252);
      tiffField0.getValueDescription();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (74)", "The filters must not be null");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // The filters must not be null
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[265];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(450, 37380, fieldTypeFloat0, 434L, 4716L, byteArray0, byteOrder0, 37380);
      tiffField0.getValueDescription();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        FieldType.getFieldType(50);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 50 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[427];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder4 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1663, 1663, fieldTypeDouble0, 1663, 2305, byteArray0, byteOrder4, 2305);
      ByteOrder.nativeOrder();
      tiffField0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int int0 = Byte.SIZE;
      tiffField0.getByteArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
