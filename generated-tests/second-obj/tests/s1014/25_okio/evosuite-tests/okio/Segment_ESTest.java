/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:12:24 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.sharedCopy();
      // Undeclared exception!
      try { 
        segment1.push(segment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte) (-102);
      // Undeclared exception!
      try { 
        segment0.split((-1633));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.pos = 388;
      // Undeclared exception!
      try { 
        segment0.split(388);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8193);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.writeTo(segment0, 8184);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)2;
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-54);
      byteArray0[3] = (byte) (-54);
      Segment segment0 = new Segment(byteArray0, 0, (byte)2, true, true);
      // Undeclared exception!
      try { 
        segment0.split((byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-82);
      byteArray0[0] = (byte)124;
      Segment segment1 = new Segment(byteArray0, (byte) (-82), (byte)124, false, false);
      segment0.prev = segment1;
      SegmentPool.next = segment1;
      SegmentPool.next.pos = (-2689);
      SegmentPool.next.owner = false;
      segment0.compact();
      assertNotSame(segment0, segment1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.sharedCopy();
      int int0 = 8198;
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0, 8198);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[5];
      Segment segment1 = segment0.unsharedCopy();
      segment0.prev = segment1;
      SegmentPool.next = segment0;
      SegmentPool.next.pos = (int) (byte)0;
      SegmentPool.next.owner = true;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-70);
      segment0.unsharedCopy();
      byteArray0[3] = (byte) (-79);
      byteArray0[0] = (byte)124;
      Segment segment1 = new Segment(byteArray0, (byte) (-70), (byte)124, true, true);
      segment0.prev = segment1;
      SegmentPool.next = segment1;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      segment1.next = segment0;
      segment0.prev = segment0;
      SegmentPool.next = segment0;
      segment0.prev.prev = SegmentPool.next;
      SegmentPool.next.owner = true;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.limit = 4211;
      // Undeclared exception!
      try { 
        segment0.split(4211);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.pos = 16384;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8193);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-82);
      Segment segment1 = new Segment();
      byteArray0[0] = (byte)124;
      Segment segment2 = new Segment();
      segment0.prev = segment2;
      SegmentPool.next = segment2;
      int int0 = 0;
      segment1.pos = 0;
      SegmentPool.next.limit = 2845;
      SegmentPool.next.writeTo(segment0.prev, (byte)124);
      SegmentPool.next.writeTo(segment0.prev, (byte)124);
      segment2.writeTo(SegmentPool.next, 2192);
      SegmentPool.next.pos = (-2689);
      byteArray0[3] = (byte)124;
      segment1.writeTo(SegmentPool.next, 103);
      segment1.writeTo(SegmentPool.next, 622);
      segment0.compact();
      boolean boolean0 = false;
      Segment segment3 = new Segment(byteArray0, (-2689), 2845, false, false);
      // Undeclared exception!
      try { 
        SegmentPool.next.writeTo(segment3, 103);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-82);
      Segment segment1 = new Segment();
      byteArray0[0] = (byte)124;
      Segment segment2 = new Segment();
      segment0.prev = segment2;
      SegmentPool.next = segment2;
      segment0.prev.next = segment2;
      segment1.pos = 0;
      SegmentPool.next.limit = 2845;
      SegmentPool.next.writeTo(segment0.prev, (byte)124);
      SegmentPool.next.pos = (-2689);
      byteArray0[0] = (byte)124;
      segment1.writeTo(SegmentPool.next, 103);
      segment1.writeTo(segment0.prev, 4628);
      segment2.sharedCopy();
      segment0.writeTo(segment2, (byte)124);
      // Undeclared exception!
      try { 
        segment0.prev.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
