/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 15:12:57 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 117;
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.available = 117;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-185), 1);
      javaCharStream0.GetSuffix(2048);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("[,'mp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(10);
      StringReader stringReader1 = new StringReader("s?iK[ZoiNWa5w");
      stringReader1.skip(0L);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)84;
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte) (-25);
      byteArray0[7] = (byte) (-80);
      byteArray0[8] = (byte) (-123);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(66, (byte) (-30));
      try { 
        JavaCharStream.hexval('p');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 117;
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 4224, 2054);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.backup(4224);
      StringReader stringReader0 = new StringReader("5N");
      StringReader stringReader1 = new StringReader(string0);
      stringReader1.skip((-947L));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-129), 15);
      javaCharStream2.Done();
      javaCharStream0.adjustBeginLineColumn(15, 7);
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d>p5&ikK&L");
      stringReader0.mark(706);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 706, (-1901), 706);
      StringReader stringReader1 = new StringReader("d>p5&ikK&L");
      stringReader0.skip((-1901));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.ReInit((Reader) stringReader1, 15, 706);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char char0 = 'A';
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("[,'mp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      stringReader0.skip(0L);
      StringReader stringReader2 = new StringReader("I44J5%'O@lWP-xKPw_N");
      stringReader2.reset();
      stringReader2.skip(0L);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 10, 10, 10);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) '[';
      intArray0[1] = (-1);
      intArray0[2] = 10;
      intArray0[3] = (int) '[';
      intArray0[4] = (-1);
      javaCharStream1.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn(74, 15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("[,'mp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.backup((-1386));
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(4075, 4070);
      javaCharStream0.adjustBeginLineColumn(3817, 4075);
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 4057, 1, (-935));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      StringReader stringReader0 = new StringReader("wh~`os5jE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1669), 117, 101);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader1 = new StringReader("2t`to?");
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals((-1669), javaCharStream0.getBeginLine());
      assertEquals((-1669), int0);
      
      int int1 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1669), int1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 2051);
      javaCharStream0.GetImage();
      javaCharStream0.backup(1);
      javaCharStream0.backup((-884));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.backup(4);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(4);
      stringReader0.read();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.backup(4);
      stringReader0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.backup((-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 522, 4080, 10);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p4TLZ5GX?yJ_Bi");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 228, 0);
      javaCharStream0.BeginToken();
      int int1 = 14;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 228, (-345), 14);
      javaCharStream0.adjustBeginLineColumn(4093, 228);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.GetImage();
      javaCharStream0.tokenBegin = 2048;
      javaCharStream0.nextCharInd = (-339);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      javaCharStream0.AdjustBuffSize();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 117, (-211));
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.bufsize = 2048;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = 'b';
      charArray0[2] = 'Q';
      charArray0[3] = 'd';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.tokenBegin = 1;
      javaCharStream0.adjustBeginLineColumn(1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("[,'mp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(0, (-1));
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.GetImage();
      javaCharStream0.backup(4);
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1L));
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(117, (-961));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.tokenBegin = 2048;
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("[,'mp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 61, 'A', 13);
      javaCharStream1.adjustBeginLineColumn((-262), 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(0, (-1));
      javaCharStream1.getBeginColumn();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(4);
      javaCharStream0.BeginToken();
      javaCharStream0.backup((-1));
      javaCharStream0.getLine();
      assertEquals(4093, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      StringReader stringReader0 = new StringReader("hHL\"R7Oy$k#4dw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-2080));
      char[] charArray0 = new char[4];
      charArray0[0] = '\u0000';
      charArray0[1] = '\u0000';
      charArray0[2] = '\u0000';
      charArray0[3] = '\u0000';
      javaCharStream0.buffer = charArray0;
      javaCharStream1.backup(79);
      javaCharStream1.getColumn();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2048);
      javaCharStream1.ReInit((InputStream) bufferedInputStream0, 0, 0, 146);
      assertEquals(2048, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.bufsize = 2048;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.backup((-1));
      javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(4);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte) (-10);
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)79;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1903, 4096);
      javaCharStream0.readChar();
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.GetImage();
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.backup((-1));
      int int0 = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("[,'mp");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte) (-10);
      byteArray0[7] = (byte)9;
      byteArray0[8] = (byte) (-10);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1903, (byte)9);
      javaCharStream1.readChar();
      javaCharStream1.BeginToken();
      javaCharStream1.getEndLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.GetImage();
      char char0 = javaCharStream1.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\t', char0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-898), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
      
      StringReader stringReader0 = new StringReader("<#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8&BBW_");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 72, 57);
      javaCharStream0.adjustBeginLineColumn(117, 57);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("d>pz5&ikK&L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-889), 72);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 72, 1069, (-225));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 53;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 53, 53, 53);
      javaCharStream0.nextCharInd = 4;
      int int1 = 1137;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.tokenBegin = 2048;
      javaCharStream0.nextCharInd = (-339);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-2049), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.ready();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1114, 55, 1102);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.inBuf = 55;
      javaCharStream0.tokenBegin = 1114;
      stringReader0.reset();
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetImage();
      CharBuffer charBuffer0 = CharBuffer.allocate(12);
      stringReader0.read(charBuffer0);
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 53;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 53, 53, 53);
      int int1 = 1137;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(4);
      javaCharStream0.BeginToken();
      javaCharStream0.backup((-1));
      javaCharStream0.getColumn();
      assertEquals(4093, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 72);
      JavaCharStream.hexval('4');
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 2048);
      javaCharStream0.bufsize = 96;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d>p5&ikK&L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 1, 1170);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d>p5&ikK&L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 69, (-1901), 503);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-71);
      javaCharStream0.prevCharIsCR = true;
      byteArray0[7] = (byte) (-59);
      byteArray0[8] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.Done();
      StringReader stringReader0 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-576), 89);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Si]g5$A0$7N/mvrA");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 61, 61);
      javaCharStream0.BeginToken();
      javaCharStream0.available = (-1761);
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader("^Si]g5$A0$7N/mvrA");
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(61, javaCharStream0.getBeginLine());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3\"Kx{Y\".)p2kb<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader1 = new StringReader(" column ");
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.ReadByte();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream.hexval('5');
      StringReader stringReader0 = new StringReader("");
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 5;
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.GetSuffix(1);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Si]g5$A0$7N/mvrA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(0);
      int int0 = (-1);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaCharStream.hexval('E');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 81, 83);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaCharStream.hexval('a');
      StringReader stringReader0 = new StringReader("XeAh#PZ&:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 2675, 10);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-4877), (-4877));
      javaCharStream1.BeginToken();
      JavaCharStream.hexval('a');
      int int0 = javaCharStream1.getBeginLine();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals((-4877), int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1550, 3006, 13);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader1 = new StringReader("L");
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 11, (-200), 2075);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 2075, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Kh&]S-\"~u>>F5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3280, 3280, 3280);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3280, 0);
      javaCharStream1.getBeginColumn();
      javaCharStream0.getLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1701, 1701);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      stringReader0.close();
      javaCharStream0.GetImage();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",_Y");
      stringReader0.skip(7);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 7, 0);
      stringReader0.close();
      javaCharStream0.GetImage();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 0, 2305);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 7, 0);
      stringReader0.close();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char char0 = 'Q';
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 574, 74, 74);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(74, 0);
      try { 
        JavaCharStream.hexval('|');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('f');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1, 1);
      int[] intArray0 = new int[8];
      intArray0[0] = 6;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = (-1);
      intArray0[4] = 1;
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = 1;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-2374), 92);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 6, 1, (-2443));
      assertEquals(6, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 117);
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('8');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fF.oIvK");
      PipedInputStream pipedInputStream0 = new PipedInputStream(2928);
      JavaCharStream.hexval('e');
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1773), 14, 92);
      javaCharStream0.nextCharInd = (-669);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2090));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4, (-1708), 0);
      javaCharStream0.GetSuffix(2);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = "<y5>F8;Ufty";
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = 'F';
      JavaCharStream.hexval('F');
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Si]g5$A0$7N/mvrA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, (-1463), 3280);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 891, 3280, 4);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DKh&]{S-\"~u>>F5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3280, 3280, 3280);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(3280, javaCharStream0.getBeginColumn());
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaCharStream.hexval('9');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DKh&]{S-\"~u>>F5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3280, 3280, 3280);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DKh&]{S-\"~u>>F5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3280, 3280, 3280);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.bufpos = 1454;
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('D');
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(3280, int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 57, 61, 61);
      javaCharStream0.ReInit((Reader) stringReader0, 61, 57);
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('T');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fF.oIvK");
      PipedInputStream pipedInputStream0 = new PipedInputStream(2928);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
      
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1773), 14, 92);
      int int1 = javaCharStream0.getBeginColumn();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaCharStream.hexval('8');
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte) (-83);
      byteArray0[4] = (byte) (-88);
      byteArray0[5] = (byte) (-46);
      byteArray0[6] = (byte) (-45);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 92);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 6, (byte) (-88));
      StringReader stringReader0 = new StringReader(".");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-83), 896);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DKh&]{S-\"~u>>F5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3280, 3280, 3280);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DKh&]{S-\"~u>>F5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3280, 3280, 3280);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaCharStream.hexval('C');
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Si]g5$A0$7N/mvrA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 61, 57);
      javaCharStream0.ReInit((Reader) stringReader0, 57, 94);
      javaCharStream0.maxNextCharInd = 61;
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('\u0000');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, (-1180));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(56);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 5607, 953, 0);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('P');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 7, 0);
      stringReader0.close();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1576, 0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      char char0 = '5';
      JavaCharStream.hexval('5');
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ow");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1728, 1728);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte) (-108);
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-36), (byte) (-36));
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)122, 0, (byte) (-48));
      javaCharStream0.prevCharIsLF = true;
      byteArrayInputStream0.read();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('(');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(70);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte)43;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 70, 66);
      StringReader stringReader0 = new StringReader("b(S]+!Bgj");
      StringReader stringReader1 = new StringReader("\"/j- ()GM~cx&P");
      javaCharStream0.ReInit((Reader) stringReader1, (-1), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.Done();
      StringReader stringReader0 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-576), 83);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(92);
      StringReader stringReader0 = new StringReader("lt,+7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2035, 2035, 898);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('C');
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      assertFalse(JavaCharStream.staticFlag);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 12, 12, 12);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Reader reader0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = (-1668);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1668), 78);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("4T");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("eq");
      StringReader stringReader1 = new StringReader("eJr$o^B(y8c@*E_Ye");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1744, 4479, 0);
      javaCharStream0.Done();
      javaCharStream0.backup((-1));
      javaCharStream0.backup(0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      char char0 = 'Y';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Z');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, (-1722), 64, 79);
      javaCharStream1.ReInit((Reader) null, 64, (-1722));
      javaCharStream1.Done();
      javaCharStream1.ReInit((Reader) null);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte) (-55);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-100), 1058);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('\"');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1090), 4096, 9);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(1712, (-143));
      javaCharStream0.backup(0);
      javaCharStream0.backup(1);
      int int0 = javaCharStream0.getColumn();
      assertEquals((-143), javaCharStream0.getBeginColumn());
      assertEquals((-143), int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4096);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 4096, 63);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('\"');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LaonBii#i{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      StringReader stringReader1 = new StringReader("LaonBii#i{");
      stringReader1.ready();
      stringReader0.read();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('s');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1), 'A');
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaCharStream.hexval('d');
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 97, (-1), 'd');
      javaCharStream1.backup(69);
      javaCharStream0.backup((-760));
      javaCharStream0.getColumn();
      assertEquals(759, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[1];
      charArray0[0] = '>';
      StringReader stringReader1 = new StringReader("x-}hi$[L0");
      int int0 = 1;
      int int1 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1), 1);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String string0 = "";
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      StringReader stringReader0 = new StringReader("<:~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|q=");
      stringReader0.reset();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)120;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)120, (byte)120);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)120);
      pushbackInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 76, 76);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2862), 2771);
      javaCharStream1.ReInit((InputStream) pushbackInputStream0, (-2862), (-1), 0);
      StringReader stringReader1 = new StringReader("|q=");
      javaCharStream1.ReInit((Reader) stringReader1, (-1), (int) (byte)120, 4096);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|q=");
      stringReader0.reset();
      int int0 = 102;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1371, 102, 102);
      JavaCharStream.hexval('2');
      JavaCharStream.hexval('2');
      stringReader0.skip(0L);
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-116);
      byteArray0[2] = (byte) (-4);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 11, (byte)0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-4), (byte) (-116));
      javaCharStream0.adjustBeginLineColumn((-822), (byte) (-116));
      assertEquals((-821), javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1722), (-1722));
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null, (-1722), 0, 8);
      javaCharStream0.column = 8;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((Reader) null, 8, 970, 970);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Y');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      charArray0[1] = 'f';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      charArray0[4] = 'k';
      stringReader0.read(charArray0);
      stringReader0.skip(1L);
      javaCharStream0.adjustBeginLineColumn(3723, 3723);
      javaCharStream0.adjustBeginLineColumn((-1), 3817);
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, (-2200), (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<j 'gfeKgU& R$");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = 'Z';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.prevCharIsCR = false;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1562, (-1));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 7);
      pushbackInputStream0.markSupported();
      pushbackInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 7, 76);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")[xy:");
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Reader reader0 = null;
      int int0 = (-1722);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1722), (-1722));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(0);
      javaCharStream0.backup(1);
      javaCharStream0.getColumn();
      assertEquals(4094, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "<y5>F8;Ufty";
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = '=';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      int int0 = 0;
      int int1 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      char char0 = 'x';
      try { 
        JavaCharStream.hexval('x');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-116);
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 11, (byte) (-116));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-4), 0);
      javaCharStream0.adjustBeginLineColumn((byte)0, 3452);
      assertEquals(3452, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<j 'gfeKgU& R$");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      javaCharStream0.prevCharIsCR = false;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1562, (-1));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 7);
      pushbackInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 7, 76);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-1), (-1), 0);
      assertEquals((-1562), byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      char char0 = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|q=");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1722), (-1722));
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null, (-1722), 0, 8);
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d>pz5&ikK&L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, 36, 36);
      javaCharStream0.BeginToken();
      javaCharStream0.maxNextCharInd = 36;
      JavaCharStream.hexval('d');
      MockFile mockFile0 = new MockFile((String) null, "d>pz5&ikK&L");
      javaCharStream0.GetSuffix(13);
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-1038L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 416, 416);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetImage();
      javaCharStream0.backup(0);
      javaCharStream0.backup(1);
      javaCharStream0.getColumn();
      assertEquals(4094, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 384, 384, 384);
      char char0 = 'Q';
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Q');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      boolean boolean0 = true;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7^CP?0Gw*H3");
      int int0 = (-3844);
      int int1 = 0;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-3844), 0, (-3844));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      File file0 = MockFile.createTempFile("i@pR)#&fCdY%:", "P:]9?mB:_9[6G0))");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 1, 1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      String string0 = javaCharStream0.GetImage();
      MockFile mockFile0 = new MockFile(string0, "2s");
      MockFile mockFile1 = new MockFile(mockFile0, string0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[8];
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (byte) (-39);
      intArray0[1] = (-1);
      intArray0[2] = 2581;
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = 0;
      intArray0[7] = 1897;
      javaCharStream0.bufcolumn = intArray0;
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte) (-70);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-32);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)81, 6);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6@!{u&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(4);
      javaCharStream0.readChar();
      javaCharStream0.backup((-1));
      javaCharStream0.getColumn();
      assertEquals(4093, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1722), (-1722));
      javaCharStream0.ReInit((Reader) null, (-1722), (-1722), 8);
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|q=");
      stringReader0.reset();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)120;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)120, (byte)120);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)120);
      pushbackInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 76, 76);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2862), 2771);
      javaCharStream1.ReInit((InputStream) pushbackInputStream0, (-2862), (-1), 0);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 98);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      StringReader stringReader0 = new StringReader(".");
      javaCharStream0.ReInit((Reader) stringReader0, 98, 87);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int int0 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = 'V';
      charArray0[2] = '';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 1, 0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-2241), (-2241));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<y5>F8;Ufty");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      stringReader0.ready();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-17), 2026);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte) (-115));
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
}
