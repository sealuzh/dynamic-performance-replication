/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:15:36 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-419));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "L*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-571), "L*", "L*", "L*", stringArray0, false, false);
      methodWriter0.visitMethodInsn((-419), "L*", "L*", "L*");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-448));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Label offset position has not been resolved yet";
      stringArray0[1] = "byte";
      stringArray0[2] = "Label offset position has not been resolved yet";
      stringArray0[3] = "Label offset position has not been resolved yet";
      stringArray0[4] = "Y' 2G|G)b";
      stringArray0[5] = "Label offset position has not been resolved yet";
      boolean boolean0 = true;
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1300, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Y' 2G|G)b", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2508));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "J[9`5vwufo%Xk";
      stringArray0[1] = "J[9`5vwufo%Xk";
      stringArray0[2] = "J[9`5vwufo%Xk";
      stringArray0[3] = "J[9`5vwufo%Xk";
      stringArray0[4] = "J[9`5vwufo%Xk";
      stringArray0[5] = "J[9`5vwufo%Xk";
      stringArray0[6] = "J[9`5vwufo%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1035, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      methodWriter0.visitMaxs((-802), 2);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2943);
      ClassWriter classWriter1 = new ClassWriter(11);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+YO8aho*\u0004kcP|B+#", "", "", (String[]) null, false, false);
      methodWriter0.visitIntInsn(1, 2);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-831), "", "", "", (String[]) null, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 65, "<init>", "+YO8ah[So*\u0004kcP|B+#", "Label offset position has not been resolved yet", (String[]) null, false, false);
      methodWriter0.visitIincInsn(2, 199);
      Attribute attribute0 = new Attribute("java/lang/String");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitAnnotation("+YO8ah[So*\u0004kcP|B+#", false);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      String[] stringArray0 = new String[0];
      ClassWriter classWriter1 = new ClassWriter(964);
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 65535, "9f&[7", "9f&[7", "9f&[7", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      Attribute attribute0 = new Attribute("+YO8aho*\u0004kcP|B+#");
      classWriter0.visitAttribute(attribute0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-831), "", "", "", (String[]) null, false, false);
      methodWriter0.visitFrame(2, (-2134), (Object[]) null, 1, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4182, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitLineNumber(4182, label0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      methodWriter0.visitLabel(label0);
      methodWriter1.visitFieldInsn(1, "EnclosingMethod", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      methodWriter0.visitJumpInsn(4182, label0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitInsn(11);
      MethodWriter methodWriter3 = methodWriter1.next;
      // Undeclared exception!
      try { 
        methodWriter2.visitParameterAnnotation(11, "java/lang/String", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2943);
      ClassWriter classWriter1 = new ClassWriter(11);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+YO8aho*\u0004kcP|B+#", "", "", (String[]) null, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitIntInsn(2, (-570));
      methodWriter0.visitFrame(90, 90, stringArray0, (-1), stringArray0);
      methodWriter1.visitVarInsn(67, (-570));
      int int0 = Frame.FLOAT;
      assertEquals(16777218, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "hMP':7}";
      stringArray0[2] = "hMP':7}";
      stringArray0[3] = "J[9`5vwufo%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2576), "hMP':7}", "[{E\"6)-0uTO*", "hMP':7}", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIntInsn(3, 166);
      methodWriter1.visitMaxs((-2576), (-1840700267));
      methodWriter1.visitAnnotation("hMP':7}", false);
      Label label0 = new Label();
      methodWriter1.visitLineNumber((-1840700267), label0);
      methodWriter0.visitLineNumber((-2576), label0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 4;
      intArray0[1] = (-32768);
      intArray0[2] = 355;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 355, (-32768));
      assertEquals((-33482), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1443);
      intArray0[1] = 31;
      intArray0[2] = 5;
      intArray0[3] = 1589;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {(-1443), 31, 5, 1589}, intArray0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|G", "java/lang/tring", stringArray0, true, false);
      methodWriter0.visitInsn(2);
      methodWriter0.getSize();
      classWriter0.newUTF8("XIgzT!K");
      int int0 = Type.CHAR;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitMethodInsn(177, "java/lang/tring", "z)~:!+|G", "z)~:!+|G");
      // Undeclared exception!
      try { 
        methodWriter1.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4159, "7j", "NND)7Dwaz=jEa!g8rl", "NND)7Dwaz=jEa!g8rl", (String[]) null, true, true);
      Label label0 = new Label();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitMultiANewArrayInsn("NND)7Dwaz=jEa!g8rl", 1);
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      MethodWriter methodWriter4 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter2.visitParameterAnnotation(1, "NND)7Dwaz=jEa!g8rl", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4171);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[0] = "[{EA6)\"-0ugO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      methodWriter0.visitMultiANewArrayInsn("[{EA6)\"-0ugO*", (byte)50);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      boolean boolean0 = ClassReader.WRITER;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFrame(68, 4087, stringArray0, (-84), stringArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "char");
      ClassWriter classWriter0 = new ClassWriter((-3277));
      classWriter0.index = 49;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "char";
      stringArray0[1] = "byte";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2981), "char", "*HFW/Pi3I6a74", "byte", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.successor;
      label0.successor = null;
      methodWriter0.visitIntInsn(434, 1268);
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      methodWriter0.visitLocalVariable("char", ".s.IFJDCS", "char", label0, label0, 2943);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".JAR";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "5m&BQURE>", "[{E\"6)-0uTO*", "/", stringArray0, true, true);
      methodWriter0.visitFieldInsn(2, ".JAR", "/", ".JAR");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIntInsn(1, 4182);
      methodWriter1.visitMethodInsn(805, "5m&BQURE>", "YT>@m$J{t", "5m&BQURE>");
      methodWriter1.visitLdcInsn(".JAR");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java/lang/|tring");
      ClassWriter classWriter0 = new ClassWriter((-570));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitLdcInsn("z)~:!|G");
      methodWriter0.getSize();
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1346, "", "", "+YO8ah[So*\u0004kcP|B+#", (String[]) null, false, false);
      methodWriter0.visitIincInsn(24117248, 24117248);
      Attribute attribute0 = new Attribute("java/lang/|t&ing");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4171);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{EA6)\"-0ugO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter2 = new MethodWriter(classWriter0, 1, "[{EA6)\"-0ugO*", "O8<uuB/sD]O5", "[{EA6)\"-0ugO*", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.next;
      // Undeclared exception!
      try { 
        label0.getOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Label offset position has not been resolved yet
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-585));
      byte[] byteArray0 = classWriter0.toByteArray();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|", "java/lang/tring", stringArray0, true, false);
      int int0 = Type.CHAR;
      int int1 = Frame.UNINITIALIZED_THIS;
      classWriter0.lastMethod = methodWriter0;
      classWriter0.lastMethod.classReaderLength = (-585);
      classWriter0.newField("java/lang/tring", "java/lang/tring", "java/lang/tring");
      int[] intArray0 = new int[0];
      classWriter0.lastMethod.exceptions = intArray0;
      methodWriter0.visitVarInsn(2, 634);
      ClassReader classReader0 = new ClassReader(byteArray0, 9, 64);
      assertEquals(19, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4182, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      methodWriter1.visitFieldInsn(1, "EnclosingMethod", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      methodWriter0.visitFrame(2, 5, stringArray0, 4182, stringArray0);
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitAnnotationDefault();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Throwable";
      stringArray0[1] = "java/lang/Throwable";
      stringArray0[2] = "java/lang/Throwable";
      stringArray0[3] = "java/lang/Throwable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 90, "java/lang/Throwable", "java/lang/Throwable", (String) null, stringArray0, false, false);
      methodWriter0.visitFieldInsn(2, "java/lang/Throwable", "l~(%", "RuntimeVisibleParameterAnnotations");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[0];
      int[] intArray0 = new int[9];
      Label label0 = new Label();
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-4623), 1779);
      assertEquals(6402, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-512));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|", "java/lang/tring", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      int int0 = Type.CHAR;
      int int1 = Frame.UNINITIALIZED_THIS;
      classWriter0.lastMethod.classReaderLength = (-512);
      classWriter0.newField("java/lang/tring", "java/lang/tring", "java/lang/tring");
      int[] intArray0 = new int[0];
      classWriter0.lastMethod.exceptions = intArray0;
      methodWriter0.visitVarInsn(20, 20);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      methodWriter0.visitAnnotationDefault();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4115);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Jy[9`5v/wuno%XF'";
      stringArray0[1] = "Jy[9`5v/wuno%XF'";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5v/wuno%XF'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5v/wuno%XF'", "[{E\"6)0u<O*", "Jy[9`5v/wuno%XF'", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      label0.info = (Object) false;
      Boolean boolean0 = (Boolean)label0.info;
      methodWriter0.visitVarInsn(83, 2);
      classWriter0.newField("LV+70^Qk/L1s[|2I", "t&cOFC9^i;{qWmJ>6", "kz\"mn$i");
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String string0 = "org.objectweb.asm.jip.MethodWriter";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0uTO*";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O8<u]B;Y#$]O5");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{E\"6)-0uTO*", "[{E\"6)-0uTO*", "org.objectweb.asm.jip.MethodWriter", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIntInsn(1, 4182);
      methodWriter0.visitVarInsn(1, 4182);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "org.objectweb.asm.jip.MethodWriter", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      String[] stringArray0 = new String[0];
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "0", "e3m]", "0", stringArray0, false, false);
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(22, 83);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java/lang/|tring");
      ClassWriter classWriter0 = new ClassWriter((-570));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      methodWriter0.visitLdcInsn("z)~:!|G");
      classWriter0.newInteger((-1547));
      methodWriter0.getSize();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(167, "<T,4r/3Ig/:i3t", "org.objectweb.asm.jip.MethodWriter", "<T,4r/3Ig/:i3t");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4182, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      methodWriter1.visitFieldInsn(1, "EnclosingMethod", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitInsn(11);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter2.visitLocalVariable("z)~:!|G", "J[9`5vwufo%Xk", "U{+1TxH*Q1w", (Label) null, (Label) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-512));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|", "java/lang/tring", stringArray0, true, false);
      int int0 = Frame.UNINITIALIZED_THIS;
      classWriter0.lastMethod.classReaderLength = (-512);
      classWriter0.newField("java/lang/tring", "java/lang/tring", "java/lang/tring");
      int[] intArray0 = new int[0];
      classWriter0.lastMethod.exceptions = intArray0;
      methodWriter0.visitVarInsn(20, 20);
      methodWriter0.visitMultiANewArrayInsn("uq9;2FVdcG5pL%fS96U", 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2345), (Label) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2345
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8/n@(>;]L}z@*");
      ClassWriter classWriter0 = new ClassWriter(4182);
      classWriter0.newDouble(0.0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{E\"6)-0O", "[{E\"6)-0O", "8/n@(>;]L}z@*", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Frame frame0 = new Frame();
      Label label0 = new Label();
      label0.frame = frame0;
      methodWriter0.visitLocalVariable("Code", "8/n@(>;]L}z@*", "[{E\"6)-0O", label0, label0, 4182);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lan/Sring";
      stringArray0[1] = "java/lan/Sring";
      stringArray0[2] = "java/lan/Sring";
      stringArray0[3] = "java/lan/Sring";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 18, "java/lan/Sring", "z)~:!|G", "java/lan/Sring", stringArray0, true, true);
      methodWriter0.visitAnnotation("java/lang/Throwable", true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitLocalVariable("java/lan/Sring", "a/", "java/lang/Throwable", label0, label0, (-2163));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      Attribute attribute0 = new Attribute("1KfdA.*f@?r`D4");
      classWriter0.visitAttribute(attribute0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "E2A+wZDrb4f!yO", "D", "1KfdA.*f@?r`D4", (String[]) null, false, false);
      classWriter0.visitOuterClass("E2A+wZDrb4f!yO", "<3|>n9T]HDX", "1KfdA.*f@?r`D4");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 173, (Object[]) null, 173, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "hMP':7}";
      stringArray0[2] = "hMP':7}";
      classWriter0.newFieldItem("hMP':7}", "[{E\"6)-0uTO*", "boolean");
      stringArray0[3] = "J[9`5vwufo%Xk";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "hMP':7}", "[{E\"6)-0uTO*", "hMP':7}", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("hMP':7}", "J[9`5vwufo%Xk", "MrY!DKT^42v(h;W,", label0, label0, 2);
      methodWriter0.visitCode();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MuLiovloXPc-{P|5Y");
      methodWriter0.visitIntInsn(4182, (-3437));
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      methodWriter0.visitTryCatchBlock(label0, (Label) null, (Label) null, "hMP':7}");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      classWriter0.newClassItem("Synthetic");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "N;8)#B.W!:.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4096, "N;8)#B.W!:.", "Synthetic", "N;8)#B.W!:.", stringArray0, false, false);
      methodWriter0.visitInsn(1022);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-831), "", "", "", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitLdcInsn("value ");
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(54, "><@V(P0#b5-crytLJO", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4171);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{EA6)\"-0ugO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame();
      classWriter0.newInteger(4171);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter1.visitMethodInsn(1, "O8<u]ByY#$]O5", "O8<u]B;Y#$]O5", "[{EA6)\"-0ugO*");
      methodWriter1.visitFrame(2, 2, stringArray0, 340, stringArray0);
      methodWriter1.visitVarInsn(120, 1);
      methodWriter0.visitAnnotationDefault();
      methodWriter1.visitAnnotation("[{EA6)\"-0ugO*", true);
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.getSize();
      methodWriter1.put(byteVector0);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4171, "[{EA6)\"-0ugO*", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4182, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      methodWriter0.visitMaxs(131071, 8);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitLineNumber(4182, label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "J[9`5vwufo%Xk");
      int int0 = Type.BOOLEAN;
      Label label1 = new Label();
      methodWriter0.visitFrame(169, 1, stringArray0, 1234, stringArray0);
      methodWriter0.visitVarInsn(2715, 1234);
      methodWriter1.visitAnnotationDefault();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitFrame(1, (-146), stringArray0, 1234, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      methodWriter2.visitCode();
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 63, "s{p|aWD|@>u3nhpP5B>", "J[9`5vwufo%Xk", "=", stringArray0, false, false);
      methodWriter0.visitIntInsn(57, 57);
      methodWriter0.visitMaxs(131072, (-857));
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitLineNumber((-794), label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "=");
      methodWriter1.getSize();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      methodWriter1.signature = "[{EA6)\"-0ugO*";
      methodWriter1.visitMethodInsn(76, "[{EA6)\"-0ugO*", "smMWM", "J[9`5vwufo%Xk");
      methodWriter0.visitMultiANewArrayInsn("=", 4096);
      int int0 = Type.ARRAY;
      int[] intArray0 = new int[4];
      intArray0[2] = (-794);
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {0, 0, (-794), 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[3] = (byte)70;
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter((-570));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/|tring");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/|tring", "java/lang/|tring", "java/lang/|tring", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("java/lang/Throwable", 3506);
      classWriter0.visitSource("java/lang/|tring", "java/lang/|tring");
      methodWriter0.visitLdcInsn("java/lang/|tring");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitFrame((byte)70, (byte)70, stringArray0, 2653, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame((byte)0, (byte)70, stringArray0, 2653, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)0u<O*";
      stringArray0[1] = "Jy[9`5wfoXFk";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5wfoXFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5wfoXFk", "[{E\"6)0u<O*", "Jy[9`5wfoXFk", stringArray0, true, false);
      methodWriter0.visitCode();
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      classWriter0.visit((-1790315956), 2067, "[{E\"6)0u<O*", "[{E\"6)0u<O*", "void", stringArray0);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(3734, 4159, label0, labelArray0);
      methodWriter0.visitVarInsn(2, 125);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 4182;
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "hMP':7}";
      stringArray0[2] = "hMP':7}";
      stringArray0[3] = "J[9`5vwufo%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "hMP':7}", "[{E\"6)-0uTO*", "hMP':7}", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Label[] labelArray0 = new Label[3];
      labelArray0[2] = label0;
      label1.next = label0;
      // Undeclared exception!
      try { 
        methodWriter1.visitTableSwitchInsn((-2211), (-2211), label1, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      classWriter0.visitField((-570), "<ingit>", "hMP':7}", "<ingit>", "java/lang/String");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      methodWriter0.visitLdcInsn("z)~:!|G");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int[] intArray0 = new int[9];
      methodWriter1.visitAnnotationDefault();
      methodWriter1.visitIntInsn(2, 0);
      Attribute attribute0 = new Attribute("t");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitFrame(1544, 1544, stringArray0, 2697, stringArray0);
      methodWriter1.visitTypeInsn(1544, "8=3:A}D;!S8y");
      methodWriter1.visitCode();
      methodWriter0.visitAnnotation("_", true);
      methodWriter0.visitTypeInsn(1544, "#D$C");
      Label label0 = new Label();
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Jy[9`5vwufo%XFk";
      stringArray0[1] = "Jy[9`5vwufo%XFk";
      stringArray0[2] = "[{E\"6)0uTO*";
      stringArray0[3] = "Jy[9`5vwufo%XFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5vwufo%XFk", "[{E\"6)0uTO*", "Jy[9`5vwufo%XFk", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitCode();
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      Label label1 = new Label();
      methodWriter0.visitJumpInsn((short)5, label0);
      int int0 = Frame.FLOAT;
      Attribute attribute0 = new Attribute("Exceptions");
      methodWriter0.visitAttribute(attribute0);
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0uTO*";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O8<u]B;Y#$]O5");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{E\"6)-0uTO*", "[{E\"6)-0uTO*", "/", stringArray0, true, true);
      methodWriter0.visitFieldInsn(2, "[{E\"6)-0uTO*", "/", "[{E\"6)-0uTO*");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIntInsn(1, 4182);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      methodWriter0.visitInsn(1);
      classWriter0.visitAnnotation("[{E\"6)-0uTO*", true);
      MethodWriter methodWriter4 = classWriter0.firstMethod;
      methodWriter4.visitTypeInsn(1, "O8<u]B;Y#$]O5");
      assertSame(methodWriter4, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)0u<O*";
      stringArray0[1] = "Jy[9`5vwufo%XFk";
      classWriter0.newLong(305L);
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5vwufo%XFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5vwufo%XFk", "[{E\"6)0u<O*", "Jy[9`5vwufo%XFk", stringArray0, true, false);
      methodWriter0.visitCode();
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      Label label0 = new Label();
      methodWriter0.visitTypeInsn(167, "'B");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(417, "[{E\"6)0u<O*", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|G", "java/lang/tring", stringArray0, true, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.getSize();
      int int0 = Type.CHAR;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMethodInsn(108, "java/lang/tring", "z)~:!+|G", "z)~:!+|G");
      methodWriter0.visitFieldInsn((-574), "z)~:!+|G", "z)~:!+|G", "z)~:!+|G");
      Label label0 = new Label();
      Edge edge0 = label0.successors;
      classWriter0.newInteger(108);
      classWriter0.newFieldItem("Jfu96xd#9!", "]hC)G9=xg.#f", "Jfu96xd#9!");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Jfu96xd#9!");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, " 3k7\"{ZmzqwdzhDc");
      methodWriter0.visitLocalVariable("Jfu96xd#9!", "java/lang/tring", "z)~:!+|G", label0, label0, 1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "voxYE", "java/lang/tring", stringArray0, false, false);
      boolean boolean0 = ClassReader.WRITER;
      int int0 = Type.CHAR;
      methodWriter0.visitMethodInsn(177, "java/lang/tring", "voxYE", "voxYE");
      classWriter0.newMethod("voxYE", "java/lang/tring", "voxYE", true);
      methodWriter0.visitMultiANewArrayInsn("voxYE", 66);
      classWriter0.visitOuterClass("StackMapTable", "voxYE", "Ljava/lang/Synthetic;");
      classWriter0.newMethodItem("java/lang/tring", "Label offset position has not been resolved yet", "java/lang/tring", true);
      methodWriter0.visitFrame(2, 1048575, stringArray0, 177, stringArray0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      boolean boolean1 = ClassReader.RESIZE;
      methodWriter0.visitInsn(1);
      methodWriter0.visitAnnotation("voxYE", true);
      ByteVector byteVector1 = new ByteVector(350);
      methodWriter0.put(byteVector0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitParameterAnnotation(66, "Ljava/lang/Synthetic;", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0uTO*";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O8<u]B;Y#$]O5");
      classWriter0.newFloat((-1.0F));
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 285212674, "[{E\"6)-0uTO*", "eDI", "O8<u]B;Y#$]O5", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitVarInsn(1, 1);
      classWriter0.visitOuterClass("[{E\"6)-0uTO*", "/", "[{E\"6)-0uTO*");
      methodWriter0.visitFrame(1, 1, stringArray0, 54, stringArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4171);
      String[] stringArray0 = new String[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[0] = "[{EA6)\"-0ugO*";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "[{EA6)\"-0ugO*";
      methodWriter1.visitInsn(1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":Fj=4Q^9ep';ORC+RYD");
      methodWriter1.visitFrame(86, 86, stringArray0, 340, stringArray0);
      methodWriter1.visitVarInsn(120, 1);
      methodWriter0.visitAnnotationDefault();
      methodWriter1.getSize();
      Label label0 = new Label();
      int[] intArray0 = new int[7];
      intArray0[0] = 91;
      intArray0[1] = (-380);
      intArray0[2] = 120;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = (-1709);
      intArray0[6] = 52;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter1.visitJumpInsn(120, label0);
      methodWriter0.visitVarInsn(17, 120);
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(label0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value L19
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4189);
      boolean boolean0 = ClassReader.SIGNATURES;
      classWriter0.visitOuterClass("Pf`A.*C", "VwJMGf_ZrlA;!IE", "Pf`A.*C");
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.firstField = null;
      classWriter0.typeTable = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%X?";
      stringArray0[1] = "hMP':7.";
      stringArray0[2] = "J[9`5vwufo%X?";
      stringArray0[3] = "J[9`5vwufo%X?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2575), "hMP':7.", "v)\"s|-VaV}J&2}CA", "hMP':7.", stringArray0, true, true);
      methodWriter0.visitMaxs((-2575), 2);
      int int0 = Frame.BASE_KIND;
      methodWriter0.visitMaxs(267386880, (-3429));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int int1 = Frame.BASE_KIND;
      Attribute attribute0 = new Attribute("J[9`5vwufo%X?");
      int int2 = Type.VOID;
      Attribute attribute1 = new Attribute("");
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(4189, 4096, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4182, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(4182, 4182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(131072, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(4182, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "J[9`5vwufo%Xk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      methodWriter0.visitMethodInsn(76, "J[9`5vwufo%Xk", "smMWM", "J[9`5vwufo%Xk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(0);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("smMWM");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.classReaderOffset = 131072;
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|G", "java/lang/tring", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      int int1 = Frame.UNINITIALIZED;
      assertFalse(int1 == int0);
      assertEquals(25165824, int1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitMethodInsn(2, "java/lang/tring", "z)~:!+|G", "z)~:!+|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFieldInsn((-574), "z)~:!+|G", "z)~:!+|G", "z)~:!+|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Item item0 = new Item(25165824);
      assertNotNull(item0);
      
      int int2 = Frame.FLOAT;
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(16777218, int2);
      
      methodWriter1.visitFrame((-1955269783), (-574), stringArray0, 65535, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int3 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(49, int3);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter1.visitTryCatchBlock(label1, label0, (Label) null, "java/lang/tring");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      methodWriter0.visitMaxs(2, (-135));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("z)~:!|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIntInsn(2, (-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("t");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitFrame(1544, 1544, stringArray0, 2697, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(67, (-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
      
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "/";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0uTO*";
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[{E\"6)-0uTO*");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{E\"6)-0uTO*", "[{E\"6)-0uTO*", "/", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "[{E\"6)-0uTO*", "/", "[{E\"6)-0uTO*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      assertNotNull(methodWriter3);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter3);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "/", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$_\"1PBp@";
      stringArray0[1] = "Gd";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "$_\"1PBp@", "java/lang/dyn/Dynamic", "Gd", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(1, (-3395));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Gd");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|G", "java/lang/tring", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      int int1 = Frame.UNINITIALIZED_THIS;
      assertFalse(int1 == int0);
      assertEquals(16777222, int1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitMethodInsn(177, "java/lang/tring", "z)~:!+|G", "z)~:!+|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitLdcInsn("java/lang/tring");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitIincInsn((-2375), 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-3230));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3230
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newConstItem("[{E\"6)-0uTO*");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0uTO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{E\"6)-0uTO*", "[{E\"6)-0uTO*", "/", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "[{E\"6)-0uTO*", "/", "[{E\"6)-0uTO*");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(1, 4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter1.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn(22, 512);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitTypeInsn(4182, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4185);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[{E\"6)-0uTOa");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{E\"6)-0uTOa";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "r?X|cn,R*IqOK", "[{E\"6)-0uTOa", "MEp3't]#G", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(200, "[{E\"6)-0uTOa", "[{E\"6)-0uTOa", "@pvHrDlGV");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(55, 1107297537);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitInsn((-32768));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -32768
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[aE\"6)0u<O*";
      stringArray0[1] = "Jy[9`5vwufo%XFk";
      stringArray0[2] = "[aE\"6)0u<O*";
      stringArray0[3] = "Jy[9`5vwufo%XFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "[aE\"6)0u<O*", "", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2, 4159);
      assertArrayEquals(new int[] {1}, intArray0);
      assertEquals(4157, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable((String) null, "z)~:!+|G", (String) null, (Label) null, (Label) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 4159;
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "Jy[9`5vwufo%XFk";
      stringArray0[2] = "[{E\"6)-0uTO*";
      stringArray0[3] = "Jy[9`5vwufo%XFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2585), "8", "[{E\"6)-0uTO*", "8", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn((-2585), 166);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = 1701;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(166, "_cYrJwgn>", "LocalVariableTypeTable", "hMP':7}", "[{E\"6)-0uTO*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(fieldVisitor0);
      
      methodWriter0.visitFieldInsn(1, "'B", "Jy[9`5vwufo%XFk", "Jy[9`5vwufo%XFk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1701, label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1701
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "J[9`5vwuf7%Xk";
      stringArray0[2] = "[{E\"6)-0uTO*";
      stringArray0[3] = "J[9`5vwuf7%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "J[9`5vwuf7%Xk", "[{E\"6)-0uTO*", "J[9`5vwuf7%Xk", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.invalidFrames = false;
      methodWriter0.visitMaxs(4182, 4182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int0 = classWriter0.newMethod("J[9`5vwuf7%Xk", "[{E\"6)-0uTO*", "J[9`5vwuf7%Xk", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(6, int0);
      
      methodWriter0.visitInsn(187);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("J[9`5vwuf7%Xk", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertNotNull(methodWriter2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(166, "[{E\"6)-0uTO*", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "void", "java/lang/tring", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = Type.CHAR;
      assertEquals(2, int0);
      
      methodWriter0.visitMethodInsn(177, "java/lang/tring", "void", "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitMultiANewArrayInsn("void", 66);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 1048575, stringArray0, 177, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = classWriter0.pool;
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector1.put11((-442), 1043);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3165);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J[9`5vwufo%Xk");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1970, "", "an", "7jiF+8CuF", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.MethodWriter");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      boolean boolean2 = ClassReader.FRAMES;
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      boolean boolean3 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      methodWriter0.visitFrame(21, 4148, objectArray0, 4, objectArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12((byte)125, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_]FPzTu8@";
      stringArray0[1] = "_]FPzTu8@";
      stringArray0[2] = "_]FPzTu8@";
      stringArray0[3] = "_]FPzTu8@";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "_]FPzTu8@", "[{E\"6)-0uTO*", "_]FPzTu8@", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(188, 4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(188, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(211, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 211
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{EA6)\"-0ugO*";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "[{EA6)\"-0ugO*";
      objectArray0[2] = (Object) "O8<u]B;Y#$]O5";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("bt25Oy<MMIh/m", "StackMapTable", "O8<u]B;Y#$]O5", label0, label0, 943);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitFrame((-493), 1, objectArray0, (-848), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java@lan%/tr}\"ing", "z)~:!+|G", "java@lan%/tr}\"ing", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(41, int0);
      
      methodWriter0.visitIntInsn(2, (-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.classReaderOffset = 1;
      methodWriter1.visitMethodInsn((-574), "java@lan%/tr}\"ing", "z)~:!+|G", "z)~:!+|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFieldInsn((-574), "z)~:!+|G", "z)~:!+|G", "z)~:!+|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitTypeInsn((-3994), "IRd");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(90, 2575);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      int int1 = Frame.BASE_KIND;
      assertFalse(int1 == int0);
      assertEquals(267386880, int1);
      
      methodWriter0.visitLdcInsn("z)~:!+|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|G", "java/lang/tring", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      int int1 = Frame.UNINITIALIZED_THIS;
      assertFalse(int1 == int0);
      assertEquals(16777222, int1);
      
      int int2 = classWriter0.newUTF8("Dhs}`");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(3, int2);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitMethodInsn(3, "java/lang/tring", "z)~:!+|G", "z)~:!+|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(2, 3083);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitFieldInsn(16777222, "z)~:!+|G", "Dhs}`", ".class");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFrame(3, 247, stringArray0, 3, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      int int3 = Frame.BASE_KIND;
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals(267386880, int3);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (-371));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -371
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("z)~:!|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(2, (-570));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFrame((-570), (-570), stringArray0, (-1), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn(55, "rqQ3R#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitIincInsn(1, (-895));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Attribute attribute0 = new Attribute("B$RrMe$t!~`%&+");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter1.visitInsn(55);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(54, "rqQ3R#", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 54
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      classWriter0.version = (-570);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitIntInsn(2, (-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = 90;
      methodWriter0.visitMaxs((-570), 249);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      methodWriter0.visitFrame(90, (-1346), stringArray0, 249, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(44, int1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-570), (-570), stringArray0, (-570), stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newConstItem("java/lang/tring");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Item[] itemArray0 = new Item[1];
      Item item1 = classWriter0.key2;
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      itemArray0[0] = item1;
      classWriter0.typeTable = itemArray0;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      classWriter0.invalidFrames = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "voxYE", "java/lang/tring", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      methodWriter0.visitMethodInsn(177, "java/lang/tring", "voxYE", "voxYE");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 4096, classWriter0.typeTable, 4096, classWriter0.typeTable);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.Item cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4171);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[0] = "[{EA6)\"-0ugO*";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "[{EA6)\"-0ugO*";
      objectArray0[2] = (Object) "O8<u]B;Y#$]O5";
      methodWriter1.visitMethodInsn(1, "O8<u]B;Y#$]O5", "O8<u]B;Y#$]O5", "i:(KZ&.Kw{W");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      methodWriter1.visitFrame(86, 86, stringArray0, 340, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(120, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MockFile mockFile0 = new MockFile("O8<u]B;Y#$]O5", "[{EA6)\"-0ugO*");
      assertEquals("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/18_jiprof/O8<u]B;Y#$]O5", mockFile0.getParent());
      assertFalse(mockFile0.isHidden());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertEquals(0L, mockFile0.length());
      assertTrue(mockFile0.isAbsolute());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertEquals(0L, mockFile0.lastModified());
      assertFalse(mockFile0.isDirectory());
      assertFalse(mockFile0.canRead());
      assertEquals("[{EA6)\"-0ugO*", mockFile0.getName());
      assertEquals("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/18_jiprof/O8<u]B;Y#$]O5/[{EA6)\"-0ugO*", mockFile0.toString());
      assertFalse(mockFile0.canWrite());
      assertFalse(mockFile0.canExecute());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertTrue(mockFile0.isFile());
      assertFalse(mockFile0.exists());
      assertNotNull(mockFile0);
      
      methodWriter0.visitIincInsn(120, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4140);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      stringArray0[0] = "[{EA6)\"-0ugO*";
      byte[] byteArray0 = new byte[0];
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int1 = classWriter0.newNameType("[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitJumpInsn(120, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      int int2 = Frame.BYTE;
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(16777226, int2);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      classWriter0.version = (-2633);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/String", "z)~:!|G", "java/lang/String", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("z)~:!|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      byte[] byteArray0 = new byte[0];
      Object object0 = new Object();
      assertNotNull(object0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitFieldInsn((-1082), "java/lang/String", "Y!-b+Z?UvwT6Sx", "Deprecated");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (-570));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -570
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2954);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter((-3277));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      classWriter1.index = 49;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "LocalVariableTypeTable";
      stringArray0[1] = "byte";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-2991), "char", "*HFW/Pi3I6a74", "byte", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertEquals(40, int0);
      
      methodWriter0.visitTypeInsn(1, "rqQ3esR#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitIntInsn(12, (-2991));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitLdcInsn("char");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitIincInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("*HFW/Pi3I6a74", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertNotNull(annotationVisitor0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertFalse(int1 == int0);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(80, int1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4176);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "[{E\"6)-0uTO*";
      stringArray0[2] = "J[9`5vwufo%Xk";
      stringArray0[3] = "J[9`5vwufo%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2565), "J[9`5vwufo%Xk", "[{E\"6)-0uTO*", "J[9`5vwufo%Xk", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newUTF8("J[9`5vwufo%Xk");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("*PbMFIfG.", "^:>T[6F^+qQ_", "[{E\"6)-0uTO*", label0, label0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = label0.toString();
      assertEquals("L12", string0);
      assertNotNull(string0);
      
      label0.info = (Object) (-2565);
      methodWriter0.visitLocalVariable("[{E\"6)-0uTO*", "[{E\"6)-0uTO*", "J[9`5vwufo%Xk", label0, label0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-594));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_java/lang/|tr");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[0];
      Item item0 = classWriter0.newFloat((-594));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "_java/lang/|tr", "_java/lang/|tr", "_java/lang/|tr", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.thisName = "_java/lang/|tr";
      methodWriter0.visitMultiANewArrayInsn("_java/lang/|tr", 3506);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      classWriter0.visitSource("_java/lang/|tr", "_java/lang/|tr");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("_java/lang/|tr");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame((byte)0, (byte)0, stringArray0, 2653, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-570));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 65, "<init>", "+YO8ah[So*\u0004kcP|B+#", "Label offset position has not been resolved yet", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(2, 199);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      Attribute attribute0 = new Attribute("java/lang/String");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("+YO8ah[So*\u0004kcP|B+#", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertNotNull(annotationVisitor0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("<init>", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 899, (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = (-3277);
      ClassWriter classWriter0 = new ClassWriter(168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int1 = (-2991);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*HFW/Pi3I6a74";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 61, "sjwmS6s6;Xc<#0TW:^", "ZyI<R.X%z+\"+?c%", (String) null, stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(18, int2);
      
      methodWriter0.visitTypeInsn(4510, "ZyI<R.X%z+\"+?c%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 70);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("ZyI<R.X%z+\"+?c%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("byte");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitLdcInsn("*HFW/Pi3I6a74");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("*HFW/Pi3I6a74");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "Jy[9`5vwufo%XFk";
      String string1 = "7j";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4159, "7j", "NND)7Dwaz=jEa!g8rl", "NND)7Dwaz=jEa!g8rl", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      methodWriter0.visitTryCatchBlock(label1, label1, label1, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      int int0 = 1553;
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-2610), 78);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "char");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-3277));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.index = 49;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "LocalVariableTypeTable";
      stringArray0[1] = "byte";
      classWriter0.version = (-3277);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2981), "char", "*HFW/Pi3I6a74", "byte", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      label0.successor = null;
      methodWriter0.visitIntInsn(434, 1268);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      assertEquals((short)5, short0);
      
      methodWriter0.visitLocalVariable("LocalVariableTypeTable", ".s.IFJDCS", "LocalVariableTypeTable", label0, label0, 2943);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(90, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4171);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[{EA6)\"-0ugO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter1.visitMethodInsn(1, "O8<u]ByY#$]O5", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFrame(2, 2, stringArray0, 340, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(100, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotation("[{EA6)\"-0ugO*", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertNotNull(annotationVisitor1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(66, int0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertNotNull(methodWriter2);
      
      Item item1 = classWriter0.newMethodItem("O8<u]ByY#$]O5", "[{EA6)\"-0ugO*", "O8<u]ByY#$]O5", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertNotNull(item1);
      
      methodWriter2.classReaderLength = 66;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4171, "[{EA6)\"-0ugO*", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)0u<O*";
      stringArray0[1] = "Jy[9`5vwufo%XFk";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5vwufo%XFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5vwufo%XFk", "[{E\"6)0u<O*", "Jy[9`5vwufo%XFk", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      label1.status = 4159;
      methodWriter0.visitTryCatchBlock(label1, label0, label0, ".cl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      classWriter0.lastField = null;
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Jy[9`5vwufo%XFk");
      assertFalse(boolean0);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      Attribute attribute0 = new Attribute("[{E\"6)0u<O*");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      byte[] byteArray0 = new byte[0];
      MethodWriter.getNewOffset((int[]) null, (int[]) null, label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "z)~:!+|G";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|G", "java/lang/tring", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(22, int0);
      
      int int1 = Type.CHAR;
      assertFalse(int1 == int0);
      assertEquals(2, int1);
      
      Integer integer0 = new Integer(1325);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(1325, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitMultiANewArrayInsn("KI<mq#^#]4=fAJX/tS", (-251));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(22, "KI<mq#^#]4=fAJX/tS", "java/lang/tring", "z)~:!+|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter((-1791));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      Item item0 = classWriter1.newNameTypeItem("z)~:!+|G", "z)~:!+|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertNotNull(item0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFrame((-48), 460, stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      String string1 = "f5%?M/^ughR`rNA";
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1241579778, "f5%?M/^ughR`rNA", "java/lang/tring", "y[95vwfo%Xk");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Jy[9`5wfoXFk";
      stringArray0[1] = "Jy[9`5wfoXFk";
      stringArray0[2] = "Jy[9`5wfoXFk";
      stringArray0[3] = "Jy[9`5wfoXFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5wfoXFk", "[{E\"6)0u<O*", "Jy[9`5wfoXFk", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      assertEquals((short)5, short0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(179, "[{E\"6)0u<O*", "Jy[9`5wfoXFk", "Jy[9`5wfoXFk");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream(enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4189);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      classWriter0.visitOuterClass("J[9`5vwufo%X?", "VwJMGf_ZrlA;!IE", "J[9`5vwufo%X?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.typeTable = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%X?";
      stringArray0[1] = "hMP':7.";
      stringArray0[2] = "J[9`5vwufo%X?";
      stringArray0[3] = "J[9`5vwufo%X?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4189, "hMP':7.", "v)\"s|-VaV}J&2}CA", "hMP':7.", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs(4189, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, (-3429));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(38, int0);
      
      int int1 = Type.BOOLEAN;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J[9`5vwufo%X?");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Item item0 = classWriter0.newClassItem("J[9`5vwufo%X?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "J[9`5vwufo%X?", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = 4189;
      ClassWriter classWriter0 = new ClassWriter(4189);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%X?";
      stringArray0[1] = "hMP':7.";
      stringArray0[2] = "hMP':7.";
      stringArray0[3] = "J[9`5vwufo%X?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2575), "hMP':7.", "v)\"s|-VaV}J&2}CA", "hMP':7.", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn((-549), "v)\"s|-VaV}J&2}CA");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(192, 1402);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Frame.BASE_KIND;
      assertFalse(int1 == int0);
      assertEquals(267386880, int1);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 1402;
      intArray0[2] = 67;
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-2163), 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4189);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      classWriter0.visitOuterClass("J[9`5vwufo%X?", "VwJMGf_ZrlA;!IE", "J[9`5vwufo%X?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.typeTable = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%X?";
      stringArray0[1] = "hMP':7.";
      stringArray0[2] = "J[9`5vwufo%X?";
      stringArray0[3] = "J[9`5vwufo%X?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2575), "hMP':7.", "v)\"s|-VaV}J&2}CA", "hMP':7.", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs((-2575), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, (-3429));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(44, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4189);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      classWriter0.visitOuterClass("Pf`A.*C", "VwJMGf_ZrlA;!IE", "Pf`A.*C");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.typeTable = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%X?";
      stringArray0[1] = "hMP':7.";
      stringArray0[2] = "J[9`5vwufo%X?";
      stringArray0[3] = "J[9`5vwufo%X?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2575), "hMP':7.", "v)\"s|-VaV}J&2}CA", "hMP':7.", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs((-2575), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, (-3429));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-4410), 2530);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BASE_KIND;
      assertEquals(267386880, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-4410));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4150);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%Xk";
      stringArray0[1] = "J[9`5vwufo%Xk";
      stringArray0[2] = "J[9`5vwufo%Xk";
      stringArray0[3] = "J[9`5vwufo%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2565), "J[9`5vwufo%Xk", "[{E\"6)-0uTO*", "J[9`5vwufo%Xk", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.firstMethod = methodWriter0;
      byte[] byteArray0 = new byte[7];
      label0.status = (-2565);
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      int int0 = label0.getOffset();
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertEquals(0, int0);
      
      methodWriter0.visitFrame((byte)0, (-932), stringArray0, (byte)0, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.visitInnerClass("O&n", (String) null, (String) null, 6);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "[{E\"6)-0uTO*";
      stringArray0[2] = "[{E\"6)-0uTO*";
      stringArray0[3] = "[{E\"6)-0uTO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "J[9`5vwuf7%Xk", "[{E\"6)-0uTO*", "J[9`5vwuf7%Xk", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.invalidFrames = false;
      methodWriter0.visitLdcInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("J[9`5vwuf7%Xk", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      Item item0 = classWriter0.newDouble(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(4159, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4159
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4157);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.invalidFrames = true;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%Xk";
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[{E\"6)-0uTO*");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      stringArray0[1] = "J[9`5vwufo%Xk";
      stringArray0[2] = "J[9`5vwufo%Xk";
      boolean boolean3 = ClassReader.RESIZE;
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3);
      
      Item item0 = classWriter0.newNameTypeItem("J[9`5vwufo%Xk", "J[9`5vwufo%Xk");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[3] = "J[9`5vwufo%Xk";
      boolean boolean4 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "J[9`5vwufo%Xk", "[{E\"6)-0uTO*", "J[9`5vwufo%Xk", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(172, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(114, 471);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(172);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      // Undeclared exception!
      try { 
        MethodWriter.writeShort((byte[]) null, (byte)60, 4157);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)-0uTO*";
      stringArray0[1] = "[{E\"6)-0uTO*";
      stringArray0[2] = "[{E\"6)-0uTO*";
      stringArray0[3] = "[{E\"6)-0uTO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2585), "", "[{E\"6)-0uTO*", "", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.exceptionCount = 2;
      ByteVector byteVector1 = byteVector0.put12((-4795), 1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.put11(1, (-2585));
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertNotNull(byteVector2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("[{E\"6)-0uTO*", "[{E\"6)-0uTO*", "", label0, label0, (-32768));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, (-4795));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("1^(5>4}s!`fi=", "Deprecated", "[{E\"6)-0uTO*", label0, label0, 292552704);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, (-2), stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "z)~:!+|", "java/lang/tring", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Type.CHAR;
      assertEquals(2, int0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z)~:!+|");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int1 = Frame.UNINITIALIZED_THIS;
      assertFalse(int1 == int0);
      assertEquals(16777222, int1);
      
      methodWriter0.visitMethodInsn(202, "java/lang/tring", "z)~:!+|", "z)~:!+|");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(169, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("z)~:!+|", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      label0.info = (Object) 371;
      methodWriter0.visitMaxs(169, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, (-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-1025), 169);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(45, int2);
      
      methodWriter0.visitMultiANewArrayInsn("java/lang/tring", 204);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4191);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Signatue";
      stringArray0[1] = "[{E\"E)-0uTO*";
      stringArray0[2] = "Signatue";
      stringArray0[3] = "[{E\"E)-0uTO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Signatue", "[{E\"E)-0uTO*", "Signatue", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(4191, 1, stringArray0, 188, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 4191);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("/vYwR_5g72.(,W94");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[11];
      stringArray0[1] = "[{E\"E)-0uTO*";
      methodWriter0.visitTypeInsn(188, "Signatue");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitFieldInsn(179, "Signatue", "Signatue", "Signatue");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Jy[9`5v/wuno%XF'");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Jy[9`5v/wuno%XF'";
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[{E\"6)0u<O*");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      stringArray0[1] = "Jy[9`5v/wuno%XF'";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5v/wuno%XF'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5v/wuno%XF'", "[{E\"6)0u<O*", "Jy[9`5v/wuno%XF'", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      methodWriter0.visitVarInsn(83, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitJumpInsn(22, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      
      methodWriter0.visitVarInsn(22, (-1776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertNotNull(label2);
      
      int[] intArray0 = new int[22];
      intArray0[0] = 83;
      intArray0[1] = 4159;
      intArray0[15] = 2;
      intArray0[5] = 2;
      intArray0[4] = 1;
      intArray0[7] = 2;
      intArray0[0] = 1;
      Label label3 = new Label();
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label2));
      assertFalse(label3.equals((Object)label1));
      assertNotNull(label3);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Label label4 = new Label();
      assertFalse(label4.equals((Object)label3));
      assertFalse(label4.equals((Object)label2));
      assertFalse(label4.equals((Object)label0));
      assertFalse(label4.equals((Object)label1));
      assertNotNull(label4);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn(label4, intArray0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      int int0 = classWriter0.addUninitializedType("<nno&7cV", 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 132, "<init>", "<init>", "Class not found", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = classWriter0.addUninitializedType("Jy[9`5v/wuno%XF'", 132);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Jy[9`5v/wuno%XF'";
      boolean boolean1 = ClassReader.WRITER;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      stringArray0[1] = "Jy[9`5v/wuno%XF'";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5v/wuno%XF'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5v/wuno%XF'", "[{E\"6)0u<O*", "Jy[9`5v/wuno%XF'", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertEquals("L15", string0);
      assertNotNull(string0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotNull(label2);
      
      methodWriter0.visitTryCatchBlock(label0, label2, label1, "Jy[9`5v/wuno%XF'");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      
      label0.addToSubroutine(132, 6213);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2914);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[{E\"6)0u<O*";
      stringArray0[1] = "";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5vwufo%XFk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "[{E\"6)0u<O*", "", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      assertEquals((short)5, short0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitVarInsn(57, (-3703));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(57, int0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label2.successors = edge0;
      methodWriter0.visitJumpInsn(22, label2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      
      methodWriter0.visitVarInsn(20, (-1791));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label3 = label1.next;
      assertNull(label3);
      
      int[] intArray0 = new int[22];
      intArray0[0] = 57;
      intArray0[1] = 57;
      intArray0[2] = 57;
      intArray0[5] = 2;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = (-3703);
      Label[] labelArray0 = new Label[5];
      Label label4 = new Label();
      assertFalse(label4.equals((Object)label2));
      assertFalse(label4.equals((Object)label0));
      assertFalse(label4.equals((Object)label1));
      assertNotNull(label4);
      
      labelArray0[0] = null;
      labelArray0[1] = label1;
      labelArray0[2] = null;
      labelArray0[3] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn((Label) null, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "void", "java/lang/tring", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(35, int0);
      
      int int1 = Type.CHAR;
      assertFalse(int1 == int0);
      assertEquals(2, int1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitFieldInsn((-574), "void", "void", "void");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int2 = Frame.FLOAT;
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(16777218, int2);
      
      Attribute attribute0 = new Attribute("void");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitJumpInsn(35, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      int int3 = Frame.FLOAT;
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertTrue(int3 == int2);
      assertEquals(16777218, int3);
      
      Attribute attribute1 = new Attribute("5Gq7Lp_'ebUtiw");
      assertFalse(attribute1.equals((Object)attribute0));
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      assertNotNull(attribute1);
      
      methodWriter1.visitAttribute(attribute1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(attribute1.equals((Object)attribute0));
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(attribute1, attribute0);
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-2190), stringArray0, 24, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4174);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufo%Xk";
      boolean boolean1 = ClassReader.WRITER;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[{E\"6)?0uTO*");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      stringArray0[1] = "[{E\"6)?0uTO*";
      stringArray0[2] = "J[9`5vwufo%Xk";
      boolean boolean3 = ClassReader.WRITER;
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      
      stringArray0[3] = "J[9`5vwufo%Xk";
      boolean boolean4 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "J[9`5vwufo%Xk", "[{E\"6)?0uTO*", "J[9`5vwufo%Xk", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitVarInsn(114, 459);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter1.visitInsn(184);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitJumpInsn(114, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = Type.INT;
      assertEquals(5, int0);
      
      Attribute attribute0 = new Attribute("R");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = label0.getFirst();
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertNotNull(label1);
      
      int[] intArray0 = new int[8];
      boolean boolean5 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "iUIN1L$I>qS6*QHVN~");
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean1);
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5);
      
      intArray0[4] = 1;
      methodWriter0.visitVarInsn(55, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4182, "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", "J[9`5vwufo%Xk", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitMultiANewArrayInsn("J[9`5vwufo%Xk", 4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      assertNotNull(methodWriter3);
      
      methodWriter1.visitMaxs(1, 4182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter3);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(1, 3926);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter3);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMethodInsn(186, "J[9`5vwufo%Xk", "3", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-574));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/tring", "void", "java/lang/tring", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(54, "LocalVariableTypeTable", "void", "tA|v|\"s4Z1");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = Type.CHAR;
      assertEquals(2, int0);
      
      methodWriter0.visitMethodInsn(177, "java/lang/tring", "void", "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-574), "void", "void", "void");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = classWriter0.newInteger(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      int int1 = Frame.FLOAT;
      assertFalse(int1 == int0);
      assertEquals(16777218, int1);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.classReaderOffset = 16777218;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      methodWriter0.visitVarInsn(214, 16777218);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      methodWriter0.visitTableSwitchInsn(16777218, (-574), label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = Frame.FLOAT;
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(16777218, int2);
      
      Attribute attribute0 = new Attribute("5Gq7VLp_'ebUtiw");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-2190), stringArray0, 24, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1409);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      stringArray0[0] = "[{EA6)\"-0ugO*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitMethodInsn(117, "X8g:>M#>p\u0005ev", "(k&?", "X8g:>M#>p\u0005ev");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int1 = classWriter0.newNameType("[{EA6)\"-0ugO*", "[{EA6)\"-0ugO*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(8, int1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      classWriter0.index = 262144;
      methodWriter0.visitJumpInsn(120, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("[{EA6)\"-0ugO*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4159);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = classWriter0.addUninitializedType("Jy[9`5v/wuno%XF'", 132);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Jy[9`5v/wuno%XF'";
      boolean boolean1 = ClassReader.WRITER;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      stringArray0[1] = "Jy[9`5v/wuno%XF'";
      stringArray0[2] = "[{E\"6)0u<O*";
      stringArray0[3] = "Jy[9`5v/wuno%XF'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Jy[9`5v/wuno%XF'", "[{E\"6)0u<O*", "Jy[9`5v/wuno%XF'", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertEquals("L14", string0);
      assertNotNull(string0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertSame(label2, label1);
      assertNotSame(label2, label0);
      assertNotNull(label2);
      
      methodWriter0.visitTryCatchBlock(label0, label2, label1, "Jy[9`5v/wuno%XF'");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertSame(label2, label1);
      assertNotSame(label2, label0);
      
      label2.addToSubroutine(0L, 6213);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertSame(label2, label1);
      assertNotSame(label2, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2914);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(93);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      classWriter0.invalidFrames = true;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "J[9`5vwufoO%Xk";
      stringArray0[1] = "J[9`5vwufoO%Xk";
      stringArray0[2] = "J[9`5vwufoO%Xk";
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      classWriter0.version = (-1995148237);
      stringArray0[3] = "J[9`5vwufoO%Xk";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "J[9`5vwufoO%Xk", "[{n\"6)-0uTO*", "J[9`5vwufoO%Xk", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(32, int0);
      
      boolean boolean2 = label0.resolve(methodWriter1, 25165824, (byte[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(boolean2);
      
      label0.position = (-1995148237);
      label0.visitSubroutine((Label) null, 2, 1);
      label0.info = (Object) "J[9`5vwufoO%Xk";
      methodWriter0.visitJumpInsn(165, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = null;
      methodWriter0.visitLdcInsn("J[9`5vwufoO%Xk");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1415);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "Cfs{";
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[1];
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      stringArray0[0] = "Cfs{";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[AE6)3-0kO*", "[AE6)3-0kO*", "[AE6)3-0kO*", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      stringArray0[0] = "[AE6)3-0kO*";
      boolean boolean2 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      int int0 = classWriter0.newNameType("[AE6)3-0kO*", "[AE6)3-0kO*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(4, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      label1.status = 247;
      methodWriter0.visitFieldInsn(74, "w'~t+gl0Z;+~o!A ", "[AE6)3-0kO*", "w'~t+gl0Z;+~o!A ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.next = label1;
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      
      int int1 = (-2658);
      methodWriter0.visitVarInsn(4, (-2658));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      
      methodWriter0.visitFrame(1, (-2658), stringArray0, 1415, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }
}
