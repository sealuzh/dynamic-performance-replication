/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 15:09:24 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3905), "lQ1 M}zb");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-59);
      byteArray0[5] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3905), 2147407574, fieldTypeRational0, 3917L, 2147407574, byteArray0, byteOrder0, 260);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2147407574, tiffField0.getOffset());
      assertEquals((-3905), tiffField0.getTag());
      assertEquals(260, tiffField0.getSortHint());
      assertEquals(3, int0);
      assertEquals(2147407574, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)91;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, (byte)91);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, (-1803), fieldTypeByte0, (-1803), 467L, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getSortHint();
      assertEquals(2, int0);
      assertEquals(467, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-1803), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2245, 2245, fieldTypeLong0, 76L, 76L, byteArray0, byteOrder0, (byte) (-98));
      tiffField0.getIntValueOrArraySum();
      assertEquals(76, tiffField0.getOffset());
      assertEquals((-98), tiffField0.getSortHint());
      assertEquals(2245, tiffField0.getDirectoryType());
      assertEquals(2245, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte) (-113);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 340L, 0L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-28928), int0);
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, (byte)91);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(91, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "i{&q.*3!>,R;EV&");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(222, 3, fieldTypeLong0, 3, (-1), byteArray0, byteOrder0, 2147482205);
      tiffField0.getByteOrder();
      assertEquals(2147482205, tiffField0.getSortHint());
      assertEquals(222, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2147469974, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147469974, 2147469974, fieldTypeRational0, 1974L, (-2147483648L), byteArray0, byteOrder0, (byte) (-40));
      tiffField0.getByteArrayValue();
      assertEquals(2147469974, tiffField0.getTag());
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(2147469974, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-303), (-2360), fieldTypeShort0, (-303), (-2360), byteArray0, byteOrder0, 405);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-1983), fieldTypeLong0, (-1273L), 1156L, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(536, 536, fieldTypeShort0, 536, 3527L, byteArray0, byteOrder0, (byte)2);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(3527, tiffField0.getOffset());
      assertEquals(536, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(536, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2147350073, (String) null);
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147350073, (-2053), fieldTypeLong0, 50, 2103L, byteArray0, byteOrder0, 2146388551);
      fieldTypeLong0.getValue(tiffField0);
      assertEquals(2146388551, tiffField0.getSortHint());
      assertEquals(2103, tiffField0.getOffset());
      assertEquals((-2053), tiffField0.getDirectoryType());
      assertEquals(2147350073, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 2287L, 2287L, byteArray0, byteOrder0, 731);
      tiffField0.getFieldType();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(2287, tiffField0.getOffset());
      assertEquals(731, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(48259, "Z");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48259, 48259, fieldTypeRational0, 255L, 947L, byteArray0, byteOrder0, (byte) (-73));
      MockFile mockFile0 = new MockFile("Z", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals(48259, tiffField0.getTag());
      assertEquals(48259, tiffField0.getDirectoryType());
      assertEquals(43L, mockFile0.length());
      assertEquals(947, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-55), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-55), (-55), fieldTypeShort0, 1L, (-55), byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getValue();
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals((-55), tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getTag());
      assertEquals((-55), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, (byte)91);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(91, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeRational0, 1790, 1790, byteArray0, byteOrder0, 103);
      int int0 = tiffField0.getTag();
      assertEquals(1790, tiffField0.getOffset());
      assertEquals(1790, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(1790, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, (byte)91);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getTag());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(536, 536, fieldTypeShort0, 536, 3527L, byteArray0, byteOrder0, (byte)2);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(46, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5637), 40092, fieldTypeFloat0, 1373L, 46, byteArray0, byteOrder0, 34018);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2245, 2245, fieldTypeLong0, 76L, 76L, byteArray0, byteOrder0, (byte) (-98));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2245, tiffField0.getTag());
      assertEquals(2245, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getOffset());
      assertEquals((-98), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(515, ")");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4889, 4889, fieldTypeAscii0, 515, 1113L, byteArray0, byteOrder0, (byte) (-18));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@108898dd for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147339064), (-2147339064), fieldTypeShort0, 1L, (-1280L), byteArray0, byteOrder0, 851);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2147339064), tiffField0.getTag());
      assertEquals((-2147339064), tiffField0.getDirectoryType());
      assertEquals(851, tiffField0.getSortHint());
      assertEquals((-1280), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146886461, 2146886461, fieldTypeDouble0, 3599L, 2146886461, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(2146886461, tiffField0.getTag());
      assertEquals(2146886461, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2146886461, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-552), "");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-552), (-552), fieldTypeFloat0, 1219L, 2033L, byteArray0, byteOrder0, (-753));
      tiffField0.getDoubleArrayValue();
      assertEquals((-552), tiffField0.getTag());
      assertEquals((-753), tiffField0.getSortHint());
      assertEquals((-552), tiffField0.getDirectoryType());
      assertEquals(2033, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(839, 839, fieldTypeLong0, 2806L, 384L, byteArray0, byteOrder0, 2146441686);
      tiffField0.getDoubleArrayValue();
      assertEquals(839, tiffField0.getDirectoryType());
      assertEquals(839, tiffField0.getTag());
      assertEquals(384, tiffField0.getOffset());
      assertEquals(2146441686, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, (byte)91);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147325615), "JPEGRestartInterval");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2587), 112, fieldTypeRational0, (-2147325615), 0L, byteArray0, byteOrder0, (byte)41);
      assertEquals(1264264, tiffField0.getBytesLength());
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals((-2587), tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4673, "");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4673, 4673, fieldTypeShort0, 1774L, (-623L), byteArray0, byteOrder0, 4673);
      tiffField0.getDoubleArrayValue();
      assertEquals(3548, tiffField0.getBytesLength());
      assertEquals(4673, tiffField0.getDirectoryType());
      assertEquals(4673, tiffField0.getSortHint());
      assertEquals(4673, tiffField0.getTag());
      assertEquals((-623), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-1L), byteArray0, byteOrder0, (byte)98);
      tiffField0.getDoubleArrayValue();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-4796), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-4796), 3659, fieldTypeByte0, 3659, 0L, byteArray0, (ByteOrder) null, (-1302));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@17a7e843 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4673, "");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4673, 4673, fieldTypeShort0, 1774L, (-623L), byteArray0, byteOrder0, 4673);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(4673, tiffField0.getSortHint());
      assertEquals(3548, tiffField0.getBytesLength());
      assertEquals(4673, tiffField0.getTag());
      assertEquals((-623), tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(4673, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "i{&q.*3!>,R;EV&");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(222, 3, fieldTypeLong0, 3, (-1), byteArray0, byteOrder0, 2147482205);
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(222, tiffField0.getTag());
      assertEquals(2147482205, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2147469974, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147469974, 2147469974, fieldTypeRational0, 1974L, (-2147483648L), byteArray0, byteOrder0, (byte) (-40));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "8\"Yswpx&k");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1999), (-1999), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1999), tiffField0.getTag());
      assertEquals((-1999), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2147469974, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147469974, 2147469974, fieldTypeRational0, 1974L, (-2147483648L), byteArray0, byteOrder0, (byte) (-40));
      tiffField0.getIntArrayValue();
      assertEquals(2147469974, tiffField0.getDirectoryType());
      assertEquals(15792, tiffField0.getBytesLength());
      assertEquals(2147469974, tiffField0.getTag());
      assertEquals(1974L, tiffField0.getCount());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-40), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, (-7484L), byteArray0, byteOrder0, 120);
      String string0 = tiffField0.getStringValue();
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getSortHint());
      assertEquals((-7484), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, " ");
      byte[] byteArray0 = new byte[27];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1470), (-1470), fieldTypeDouble0, 2159L, 2159L, byteArray0, byteOrder0, (byte)53);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@3ab76a25
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, (byte)91);
      String string0 = tiffField0.getTagName();
      assertEquals(91, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x1)", string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, (-876), fieldTypeAscii0, 0, (-1250L), byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getTagName();
      assertEquals((-876), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals("GPSVersionID", string0);
      assertEquals((-1250), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      CharBuffer charBuffer0 = CharBuffer.allocate(3388);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50827, 54, fieldTypeAscii0, 54, 5009L, (byte[]) null, byteOrder0, 1823);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("mZwg#_./Uvlvd\\,");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147048669), (-2147048669), fieldTypeByte0, 2659L, 3559L, byteArray0, byteOrder0, 1692);
      String string0 = tiffField0.toString();
      assertEquals(1692, tiffField0.getSortHint());
      assertEquals(3559, tiffField0.getOffset());
      assertEquals("-2147048669 (0x8006a323: Unknown Tag): 0, 0, 0, 0, 0, 0 (2659 Byte)", string0);
      assertEquals(2659, tiffField0.getBytesLength());
      assertEquals((-2147048669), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, " ");
      byte[] byteArray0 = new byte[27];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1470), (-1470), fieldTypeDouble0, 2159L, 2159L, byteArray0, byteOrder0, (byte)53);
      tiffField0.dump();
      assertEquals(2159, tiffField0.getOffset());
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(2159L, tiffField0.getCount());
      assertEquals((-1470), tiffField0.getDirectoryType());
      assertEquals((-1470), tiffField0.getTag());
      assertEquals(17272, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(46, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5637), 40092, fieldTypeFloat0, 1373L, 46, byteArray0, byteOrder0, 34018);
      tiffField0.dump();
      assertEquals(1373L, tiffField0.getCount());
      assertEquals(5492, tiffField0.getBytesLength());
      assertEquals(34018, tiffField0.getSortHint());
      assertEquals((-5637), tiffField0.getTag());
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2147350073, (String) null);
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147350073, (-2053), fieldTypeLong0, 50, 2103L, byteArray0, byteOrder0, 2146388551);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147350073, tiffField0.getTag());
      assertEquals(2146388551, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-2053), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2103, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 340L, 0L, byteArray0, byteOrder0, (byte) (-31));
      String string0 = tiffField0.getValueDescription();
      assertEquals(680, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(340L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(384, 384, fieldTypeAscii0, 384, (-2147483648L), byteArray0, byteOrder0, 2051);
      String string0 = tiffField0.getValueDescription();
      assertEquals(384, tiffField0.getDirectoryType());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(2051, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(384, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, (-7484L), byteArray0, byteOrder0, 120);
      tiffField0.toString();
      assertEquals((-7484), tiffField0.getOffset());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-55), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-55), (-55), fieldTypeShort0, 1L, (-55), byteArray0, byteOrder0, (byte) (-128));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-128), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-55), tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getTag());
      assertEquals((-55), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50217, "");
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50217, (-1233), fieldTypeFloat0, (-1233), 50217, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1233), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getTag());
      assertEquals(50217, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, (-7484L), byteArray0, byteOrder0, 120);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-70), (-70));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(120, tiffField0.getSortHint());
      assertEquals((-7484), tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3L, tiffField0.getCount());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, (-7484L), byteArray0, byteOrder0, 120);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-7484), tiffField0.getOffset());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(120, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4673, "");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4673, 4673, fieldTypeShort0, 1774L, (-623L), byteArray0, byteOrder0, 4673);
      tiffField0.getFieldTypeName();
      assertEquals(4673, tiffField0.getDirectoryType());
      assertEquals((-623), tiffField0.getOffset());
      assertEquals(4673, tiffField0.getSortHint());
      assertEquals(3548, tiffField0.getBytesLength());
      assertEquals(4673, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3905), "lQ1 M}zb");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3905), 2147407574, fieldTypeRational0, 3917L, 2147407574, byteArray0, byteOrder0, 260);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147407574, tiffField0.getDirectoryType());
      assertEquals(2147407574L, tiffElement0.offset);
      assertEquals((-3905), tiffField0.getTag());
      assertEquals(3917L, tiffField0.getCount());
      assertEquals(260, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 2287L, 2287L, byteArray0, byteOrder0, 731);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2287, tiffField0.getOffset());
      assertEquals(4, int0);
      assertEquals(4, tiffField0.getTag());
      assertEquals(731, tiffField0.getSortHint());
      assertEquals(4574, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2147469974, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147469974, 2147469974, fieldTypeRational0, 1974L, (-2147483648L), byteArray0, byteOrder0, (byte) (-40));
      int int0 = tiffField0.getSortHint();
      assertEquals(2147469974, tiffField0.getTag());
      assertEquals((-40), int0);
      assertEquals(1974L, tiffField0.getCount());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(2147469974, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeRational0, 1790, 1790, byteArray0, byteOrder0, 103);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(1790, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals("1790 (0x6fe: Unknown Tag): ", string0);
      assertEquals(1790, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, (-7484L), byteArray0, byteOrder0, 120);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-70), (-70));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(3, tiffField0.getTag());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-7484), tiffField0.getOffset());
      assertEquals(120, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertNotNull(string0);
  }
}
