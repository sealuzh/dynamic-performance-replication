/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:23:12 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-1191), 1479);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
      charClass0.cleanClass();
      assertArrayEquals(new int[] {0, 1114111, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 8303);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(2852, 2852);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-2262), (-2262));
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      String string0 = charClass0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][0];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, (-1246));
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[2][9];
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 2814;
      intArray0[2] = 2814;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][1];
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[][] intArray0 = new int[8][9];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendTable(intArray0);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 2814;
      intArray0[2] = 2814;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[5][3];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      charClass0.appendClassWithSign(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[10];
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 9104);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 795);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        charClass0.appendFoldedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = 1233;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      charClass0.cleanClass();
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendRange(203, 203);
      charClass0.negateClass();
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[9];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.cleanClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 386;
      intArray0[1] = 1019;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.appendClass(intArray0);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(11337, 11337);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1897;
      intArray0[1] = (-404);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(1897, (-404));
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      charClass0.appendClassWithSign(intArray0, (-1028));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[5][9];
      charClass0.appendLiteral((-1233), (-1233));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 2814;
      intArray0[2] = 2814;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.appendRange(2814, 2814);
      CharClass charClass2 = charClass0.appendTable(intArray1);
      charClass2.cleanClass();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-3766));
      charClass1.appendClassWithSign(intArray0, (-3766));
      charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass0.negateClass();
      charClass2.appendFoldedClass(intArray0);
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(66640, 66640);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-1397), 1114111);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toArray();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      charClass0.appendFoldedRange(3515, 120457);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendLiteral(93, 93);
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      charClass1.appendNegatedTable(intArray1);
      charClass0.cleanClass();
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendLiteral(93, 93);
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      charClass1.appendNegatedTable(intArray1);
      charClass1.appendTableWithSign(intArray1, 3280);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][5];
      int[] intArray1 = new int[9];
      intArray1[0] = 11375;
      intArray1[1] = (-1291);
      intArray1[2] = 1;
      intArray1[3] = 6016;
      intArray1[4] = 46;
      intArray1[5] = 64;
      intArray1[6] = 1676;
      intArray1[7] = (-1650);
      intArray1[8] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 64;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = (-1650);
      intArray2[4] = 64;
      intArray2[5] = (-1291);
      intArray2[6] = (-1650);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
