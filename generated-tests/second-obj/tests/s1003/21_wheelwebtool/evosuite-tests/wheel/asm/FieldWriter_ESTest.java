/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:25:29 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "d", "d", "d", "d");
      Attribute attribute0 = new Attribute("ugHQ`yuYu;H64JBd");
      fieldWriter0.visitAnnotation("ugHQ`yuYu;H64JBd", false);
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6), "d", "d", "d", "d");
      fieldWriter0.visitAnnotation("d", true);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "f)r^^", "The FileFilter must not be null", "f)r^^", "f)r^^");
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(38);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "E_T", "E_T", "E_T", "E_T");
      ByteVector byteVector0 = new ByteVector(38);
      ByteVector byteVector1 = byteVector0.put12(38, (-3390));
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"p2gy3x*(lVn.h+Qyw");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 28, "\"p2gy3x*(lVn.h+Qyw", "d", "?y36+2Jl3rV ", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, ",#gIN'aD#c=@[uCEA", "d", (String) null, "d");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12((-665), 2346);
      ByteVector byteVector2 = byteVector1.putLong(2);
      byteVector2.put12(2, 2);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "f)r^^", ":SVOY9xA<\"(\\9p&/_+", "f)r^^", "f)r^^");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "ConstantValue", "RuntimeInvisibleAnnotations", "ConstantValue", "ConstantValue");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("00ia P:D([M?ND");
      Attribute attribute1 = attribute0.next;
      fieldWriter1.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "E_T");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "d", "d", "d", "d");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("d", false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(4, (-1));
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-40), "d", "d", "d", "d");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12((-17), 1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"p2gy3x*(lVn.h+Qyw");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3), "\"p2gy3x*(lVn.h+Qyw", "d", "d", (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "d", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      fieldWriter0.getSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(65535, 65535);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"p2gy3x*(lVn.h+Qyw");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3), "\"p2gy3x*(lVn.h+Qyw", "d", "?y36+2Jl3rV ", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(2, 2189);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2461);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2461, "byte", "byte", "byte", (Object) null);
      classWriter0.newClass("77$+10\"Gt*voj1&Wpx");
      fieldWriter0.visitAnnotation("byte", false);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-5), "", "", "", "");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.put12((-5), 36);
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector2 = classWriter0.pool;
      byteVector0.put12((-5), 36);
      fieldWriter0.put(byteVector1);
      assertFalse(byteVector1.equals((Object)byteVector0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.version = (-1);
      boolean boolean0 = ClassReader.SIGNATURES;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "d", "d", "d", "d");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-327));
      classWriter0.visitOuterClass("", "", "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      classWriter0.version = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "d", "d", "d", "d");
      fieldWriter0.next = null;
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putLong(30);
      byteVector0.put12(4956, 0);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector3 = byteVector2.putShort(4956);
      fieldWriter1.put(byteVector3);
      fieldWriter1.visitEnd();
      fieldWriter0.put(byteVector1);
      assertSame(fieldWriter0, fieldWriter1);
  }
}
