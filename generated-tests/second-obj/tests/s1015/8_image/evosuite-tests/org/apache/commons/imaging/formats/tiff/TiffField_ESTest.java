/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:18:39 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-116), (-2559), fieldTypeRational0, 1101L, (-2559), byteArray0, byteOrder0, (byte)115);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-2559), tiffField0.getDirectoryType());
      assertEquals((-2559), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(8808, tiffField0.getBytesLength());
      assertEquals((-116), tiffField0.getTag());
      assertEquals(1101L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1863, 0, fieldTypeByte0, (byte)115, (byte)0, byteArray0, byteOrder0, 1863);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@42b7435d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-120);
      byteArray0[3] = (byte) (-27);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1206, 1206, fieldTypeLong0, 1206, 1206, byteArray0, byteOrder0, (byte)85);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1206, tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(1206, tiffField0.getTag());
      assertEquals(1206, tiffField0.getDirectoryType());
      assertEquals(4824, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1206L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, (-2147483648L), byteArray0, byteOrder0, (byte)84);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffff)", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(84, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(2136, 2136, fieldTypeDouble0, 1730L, 2136, byteArray0, byteOrder0, 1502);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-36);
      TiffField tiffField0 = new TiffField((byte) (-36), 1, fieldTypeByte0, 1, (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "UR]($]dayp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1989, "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(66, (-2398), fieldTypeFloat0, 1L, 1989, byteArray0, byteOrder0, 6367);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-2398), tiffField0.getDirectoryType());
      assertEquals(6367, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getTag());
      assertEquals(1989, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder.nativeOrder();
      int int0 = Double.BYTES;
      String string0 = File.pathSeparator;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(8, (-2968), fieldTypeRational0, (-4292L), (-787L), byteArray0, (ByteOrder) null, 17);
      String string1 = tiffField0.getTagName();
      assertEquals((-2968), tiffField0.getDirectoryType());
      assertEquals((-787), tiffField0.getOffset());
      assertEquals("GPSSatellites", string1);
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0.ASCII, (byte)0, 378L, byteArray0, (ByteOrder) null, 19);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = tiffField0.getStringValue();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(378, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 33, fieldTypeByte0, 33, 33, byteArray0, byteOrder0, 33);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@31f08263
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeFloat0, 5126L, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(20504, tiffField0.getBytesLength());
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(5126L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(21, "MD ScalePixel");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-69);
      byteArray0[5] = (byte) (-89);
      byteArray0[6] = (byte)39;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte) (-1);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("MD ScalePixel");
      ByteBuffer byteBuffer1 = byteBuffer0.put(byteArray0);
      ByteOrder byteOrder0 = byteBuffer1.order();
      TiffField tiffField0 = new TiffField(21, (-1312), fieldTypeFloat0, 1779L, 48L, byteArray0, byteOrder0, (-1000));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1000), tiffField0.getSortHint());
      assertEquals(7116, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getOffset());
      assertEquals((-1312), tiffField0.getDirectoryType());
      assertEquals(1779L, tiffField0.getCount());
      assertEquals(21, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)61;
      byteArray0[4] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1592), (-2038), fieldTypeAscii0, 1079L, (-2038), byteArray0, byteOrder0, (byte)61);
      String string0 = tiffField0.getValueDescription();
      assertEquals(61, tiffField0.getSortHint());
      assertEquals((-1592), tiffField0.getTag());
      assertEquals((-2038), tiffField0.getOffset());
      assertEquals(1079, tiffField0.getBytesLength());
      assertEquals((-2038), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(223, 223, fieldTypeRational0, 148L, 223, byteArray0, byteOrder0, 223);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 4736L, 0L, byteArray0, byteOrder0, 2136582715);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4241502c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, 1993L, (byte)0, byteArray0, byteOrder0, (-1));
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1993L, tiffField0.getCount());
      assertEquals(7972, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(34009, "URVb ea");
      byte[] byteArray0 = new byte[22];
      byteArray0[3] = (byte) (-23);
      byteArray0[13] = (byte)55;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145997499), (-2145997499), fieldTypeByte0, 34009, 34009, byteArray0, byteOrder0, (byte)55);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(34009, tiffField0.getBytesLength());
      assertEquals(34009L, tiffField0.getCount());
      assertEquals((-2145997499), tiffField0.getDirectoryType());
      assertEquals((-2145997499), tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(34009, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-67);
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-67);
      TiffField tiffField0 = new TiffField((byte) (-67), 1, fieldTypeByte0, 1, (byte) (-67), byteArray0, byteOrder0, (byte) (-67));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-67), tiffField0.getOffset());
      assertEquals((-67), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-67), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte)55;
      TiffField tiffField0 = new TiffField((byte)55, (byte)55, fieldTypeFloat0, (byte)55, 1241L, byteArray0, byteOrder0, 20);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      String string1 = tiffField0.getTagName();
      assertEquals(220, tiffField0.getBytesLength());
      assertEquals(55L, tiffField0.getCount());
      assertEquals("Unknown Tag (0x37)", string1);
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(1241, tiffField0.getOffset());
      assertEquals(20, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-108);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 3909, fieldTypeDouble0, 3909, (-1), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)1, (byte) (-108));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(31272, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3909L, tiffField0.getCount());
      assertEquals(3909, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeShort0, (byte)52, (byte)52, byteArray0, byteOrder2, (byte)52);
      String string0 = tiffField0.getValueDescription();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getTag());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(52L, tiffField0.getCount());
      assertEquals(52, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte)90;
      byteArray0[1] = (byte)90;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)90, (byte)0, fieldTypeRational0, (byte)0, (byte)90, byteArray0, byteOrder0, (byte)90);
      tiffField0.getIntArrayValue();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(90, tiffField0.getTag());
      assertEquals(90, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1358, 96, fieldTypeLong0, 1254L, 1254L, byteArray0, (ByteOrder) null, 96);
      tiffField0.getIntArrayValue();
      assertEquals(1254L, tiffField0.getCount());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(1358, tiffField0.getTag());
      assertEquals(1254, tiffField0.getOffset());
      assertEquals(5016, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2244, 2244, fieldTypeByte0, 2244, 2244, byteArray0, byteOrder0, 2244);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@538d90e1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)112, "(");
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2435, 905, fieldTypeLong0, 2804, (-1L), byteArray0, byteOrder0, 2435);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2804, 515);
      assertEquals(11216, tiffField0.getBytesLength());
      assertEquals(2435, tiffField0.getTag());
      assertEquals(2435, tiffField0.getSortHint());
      assertEquals(2804L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(905, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)26;
      TiffField tiffField0 = new TiffField((-1), 8, fieldTypeShort0, 8, 8, byteArray0, (ByteOrder) null, (byte)26);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(529, 5);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(26, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34030, (byte) (-116), fieldTypeLong0, 1L, (byte) (-116), byteArray0, byteOrder0, 34030);
      tiffField0.getIntValueOrArraySum();
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-116), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(34030, tiffField0.getSortHint());
      assertEquals((-116), int0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(34030, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)69;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeRational0, 25, 25, byteArray0, byteOrder0, (byte)69);
      tiffField0.getIntValueOrArraySum();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("x0Z9qT)>w_MF2B-d.3", "5N-VWR3Uq=bS");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 5N-VWR3Uq=bS
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(87, "EXIF_DIRECTORY_SUB_IFD");
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-31);
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(87, 87, fieldTypeLong0, 87, 87, byteArray0, byteOrder0, (-932));
      tiffField0.getDoubleArrayValue();
      assertEquals(348, tiffField0.getBytesLength());
      assertEquals(87, tiffField0.getOffset());
      assertEquals(87L, tiffField0.getCount());
      assertEquals(87, tiffField0.getTag());
      assertEquals((-932), tiffField0.getSortHint());
      assertEquals(87, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(223, 223, fieldTypeRational0, 148L, 223, byteArray0, byteOrder0, 223);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)96;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)96;
      byteArray0[5] = (byte)96;
      byteArray0[7] = (byte)96;
      byteArray0[8] = (byte)0;
      TiffField tiffField0 = new TiffField((-1451), (byte)96, fieldTypeShort0, 7, 1993L, byteArray0, byteOrder0, (byte)96);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {96, 24672, 24672, 24576}, intArray0);
      assertEquals((-1451), tiffField0.getTag());
      assertEquals(1993, tiffField0.getOffset());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(7L, tiffField0.getCount());
      assertEquals(14, tiffField0.getBytesLength());
      assertEquals(96, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "EXIF_DIRECTORY_SUB_IFD");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-31);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 1L, 46, byteArray0, byteOrder0, (-932));
      tiffField0.getDoubleArrayValue();
      assertEquals((-932), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getOffset());
      assertEquals(46, tiffField0.getTag());
      assertEquals(46, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(435, 435, fieldTypeShort0, 2500L, 435, byteArray0, byteOrder1, 435);
      int int0 = tiffField0.getSortHint();
      assertEquals(435, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(435, tiffField0.getDirectoryType());
      assertEquals(5000, tiffField0.getBytesLength());
      assertEquals(2500L, tiffField0.getCount());
      assertEquals(435, tiffField0.getTag());
      assertEquals(435, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(515, 82, fieldTypeShort0, 255L, 255L, byteArray0, byteOrder0, 515);
      tiffField0.getFieldTypeName();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.getTag();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(82, tiffField0.getDirectoryType());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals(255L, tiffField0.getCount());
      assertEquals("515 (0x203: JPEGRestartInterval): ", string0);
      assertEquals(515, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-422), "ouH&Cw(=b)~}Jf8_{");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)98, (byte)98, fieldTypeShort0, 5352, 4L, byteArray0, byteOrder0, (byte)98);
      String string0 = tiffField0.getValueDescription();
      tiffField0.getIntValueOrArraySum();
      String string1 = byteOrder0.toString();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1592), (-2038), fieldTypeAscii0, 1079L, (-2038), byteArray0, byteOrder0, (byte)4);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2038), tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-1592), tiffField0.getTag());
      assertEquals((-2038), tiffField0.getDirectoryType());
      assertEquals(1079, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-36);
      TiffField tiffField0 = new TiffField((byte) (-36), 1, fieldTypeByte0, 1, (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-36), tiffField0.getOffset());
      assertEquals((-36), tiffField0.getSortHint());
      assertEquals((-36), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)85, (-1917), fieldTypeDouble0, 895L, (-4002L), byteArray0, byteOrder0, 1895);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4002), tiffField0.getOffset());
      assertEquals(85, tiffField0.getTag());
      assertEquals((-1917), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1895, tiffField0.getSortHint());
      assertEquals(7160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2448, "F|2");
      TiffField tiffField0 = new TiffField(905, (byte)118, fieldTypeAscii0, 905, (-1L), byteArray0, byteOrder1, 53);
      String string0 = tiffField0.getValueDescription();
      assertEquals(905, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(118, tiffField0.getDirectoryType());
      assertEquals(905, tiffField0.getTag());
      assertEquals(53, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[208];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(48243, "(dHOCS57Oo,(y;3D");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-111), (-1), fieldTypeByte0, 42976L, (-1), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals((-111), tiffField0.getTag());
      assertEquals(42976, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[135];
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField((byte) (-125), (byte) (-125), fieldTypeLong0.SHORT, 1309L, (byte) (-125), byteArray0, byteOrder0, (byte) (-125));
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      tiffField0.dump();
      Long long0 = new Long(1309L);
      Long.min((byte) (-125), 1111L);
      try { 
        fieldTypeLong0.writeData(long0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 1309 (java.lang.Long)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[208];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(131, (byte)96, fieldTypeFloat0, (byte)96, 131, byteArray0, byteOrder0, 131);
      Byte byte0 = new Byte((byte)96);
      Object object0 = new Object();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      Object object1 = new Object();
      Object object2 = new Object();
      ByteOrder.nativeOrder();
      String string0 = File.separator;
      byteOrder1.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      tiffField0.getValueDescription();
      try { 
        Integer.valueOf((String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte byte0 = (byte)114;
      byte[] byteArray0 = new byte[420];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField((byte)114, (byte)114, fieldTypeDouble0, (byte)114, (byte)114, byteArray0, byteOrder0, (byte)114);
      tiffField0.dump();
      try { 
        FieldType.getFieldType((byte)114);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 114 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }
}
