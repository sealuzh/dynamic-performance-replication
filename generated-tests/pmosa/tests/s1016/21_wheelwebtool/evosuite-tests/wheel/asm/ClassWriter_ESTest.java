/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 09:36:52 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      String string0 = File.pathSeparator;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2, 25165828);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      Item item0 = classWriter0.newLong(16777216);
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1528));
      Item item0 = classWriter0.newInteger(0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      stringArray0[1] = "RuntimeVisibleAnnotations";
      stringArray0[2] = "RuntimeVisibleAnnotations";
      Item[] itemArray0 = new Item[4];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      classWriter0.typeTable = itemArray0;
      stringArray0[3] = "RuntimeVisibleAnnotations";
      item0.next = item0;
      stringArray0[4] = "RuntimeVisibleAnnotations";
      stringArray0[5] = "RuntimeInvisibleAnnotations";
      stringArray0[6] = "RuntimeInvisibleAnnotations";
      stringArray0[7] = "RuntimeVisibleAnnotations";
      classWriter0.visit(0, 0, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeInvisibleAnnotations", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(184);
      classWriter0.visit((-1847), (-366), "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", (String) null, (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1545);
      Boolean boolean0 = new Boolean(false);
      classWriter0.visitOuterClass("X{EtM3K9y@_(=xjkGP", "X{EtM3K9y@_(=xjkGP", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1545);
      String string0 = ">3Pa[WLBx2S3P>_f:Z";
      int int0 = Long.SIZE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(1545, 64, ">3Pa[WLBx2S3P>_f:Z", ">3Pa[WLBx2S3P>_f:Z", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1545);
      Boolean boolean0 = Boolean.TRUE;
      Item item0 = classWriter0.newConstItem(boolean0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter(732);
      String[] stringArray0 = new String[0];
      classWriter0.visit(3, 3, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", (String) null, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2124);
      int int0 = (-2060);
      classWriter0.visitInnerClass("org.apache.commons.io.filefilter.TrueFileFilter", "org.apache.commons.io.filefilter.TrueFileFilter", "Invalid IOCase name: ", (-2060));
      classWriter0.newUTF8("4I}p");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-289));
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, (-289));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-3374), (-289));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      ClassWriter classWriter0 = new ClassWriter(46);
      classWriter0.newUTF8("");
      int int0 = Frame.BASE;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2696));
      int int0 = classWriter0.addType("value ");
      assertEquals(1, int0);
      
      classWriter0.newNameType("]+[BH$b>", "]+[BH$b>");
      classWriter0.newField("", "", "cS!p|)@wkb:m|w!j");
      classWriter0.newClassItem("cS!p|)@wkb:m|w!j");
      classWriter0.newFloat(0.0F);
      classWriter0.newMethod("value ", "cS!p|)@wkb:m|w!j", "]+[BH$b>", false);
      classWriter0.newConstItem("]+[BH$b>");
      classWriter0.newDouble(1);
      classWriter0.toByteArray();
      classWriter0.toByteArray();
      int int1 = classWriter0.newField("XoM @!\"4N'WpC", "!Z|z$|nYqyQ}4iEOluL", "|XC)Gy!X=tK_/\"KZqJD");
      assertEquals(22, int1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      Double double0 = new Double(0.0);
      Float float0 = new Float(0.75);
      Item item0 = classWriter0.newConstItem(float0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(306);
      classWriter0.newMethod("RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", true);
      classWriter0.newMethod("zYtyLmMN", "zYtyLmMN", "", true);
      classWriter0.newClass("&!@H:u");
      classWriter0.visitField(9, "&!@H:u", "Fz)|7kcH['CF8^mK", "", "zYtyLmMN");
      Item item0 = classWriter0.newLong(0L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 14;
      ClassWriter classWriter0 = new ClassWriter(14);
      classWriter0.newLong(0L);
      Attribute attribute0 = new Attribute("byte");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      attribute0.value = byteArray0;
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.thisName = null;
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute((String) null);
      classWriter0.visitAttribute(attribute0);
      classWriter0.newClass("'mjI.Bj3Agui");
      classWriter0.visitAnnotation("'mjI.Bj3Agui", false);
      classWriter0.newUTF8("u\"ZpId\"JWWh");
      // Undeclared exception!
      try { 
        classWriter0.newNameType("'mjI.Bj3Agui", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("StackMapTable", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      classWriter0.version = 292552704;
      String string0 = "vg9YoS_";
      classWriter0.index = 292552704;
      Item[] itemArray0 = new Item[6];
      Item item0 = classWriter0.newInteger(292552704);
      itemArray0[0] = item0;
      Item item1 = classWriter0.newInteger(292552704);
      itemArray0[1] = item1;
      Item item2 = classWriter0.newFloat(292552704);
      itemArray0[2] = item2;
      Item item3 = classWriter0.newLong(1459L);
      itemArray0[3] = item3;
      Item item4 = classWriter0.newInteger(292552704);
      itemArray0[4] = item4;
      Item item5 = new Item(292552704, item0);
      itemArray0[5] = item5;
      classWriter0.typeTable = itemArray0;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, "vg9YoS_", "vg9YoS_", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2570);
      Item item0 = classWriter0.newFloat(2);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2812);
      classWriter0.newLong(2812);
      classWriter0.threshold = 648;
      classWriter0.newUTF8("\"?L3t@5`$+[H");
      classWriter0.newDouble((-1598.34039));
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2952);
      Byte byte0 = new Byte((byte)1);
      classWriter0.newConst(byte0);
      String string0 = "";
      classWriter0.newField("", "", "");
      Byte.toUnsignedInt((byte)1);
      Byte.toUnsignedLong((byte)117);
      Item[] itemArray0 = new Item[9];
      Item item0 = classWriter0.newLong(5);
      itemArray0[0] = item0;
      Item item1 = classWriter0.newFloat(601.05F);
      itemArray0[1] = item1;
      Item item2 = classWriter0.key;
      itemArray0[2] = item2;
      Item item3 = classWriter0.newFloat((-2650.0F));
      itemArray0[3] = item3;
      Item item4 = classWriter0.newFieldItem("", "", "");
      itemArray0[4] = item4;
      Item item5 = classWriter0.newFieldItem("", "pkFqRX4|)x(N+", "Deprecated");
      itemArray0[5] = item5;
      Item item6 = classWriter0.newClassItem("J/r;|bqD");
      itemArray0[6] = item6;
      Item item7 = classWriter0.newLong(0L);
      itemArray0[7] = item7;
      Item item8 = classWriter0.key3;
      itemArray0[8] = item8;
      classWriter0.typeTable = itemArray0;
      Byte.toUnsignedInt((byte) (-102));
      classWriter0.newInteger((byte)1);
      classWriter0.newInteger(1);
      String string1 = "07d";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("07d", "07d");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '07d.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2696));
      classWriter0.addType("value ");
      int int0 = (-786);
      int int1 = 0;
      classWriter0.newClassItem("FFdI%kM@-/P");
      classWriter0.addType("w-rq<W3SHBP6&![WW+");
      classWriter0.newFloat(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "wheel.asm.Type";
      stringArray0[1] = "";
      stringArray0[2] = ":7bz`XO/0jl2;";
      stringArray0[3] = "jBd~!XmHQMIV%";
      stringArray0[4] = "iG.:P`Ehjm";
      stringArray0[5] = "jBd~!XmHQMIV%";
      // Undeclared exception!
      try { 
        classWriter1.visitMethod(11, "<)q9S6=5h", "9PzhfV", "", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      classWriter0.visitInnerClass("", "", "", (-328));
      classWriter0.newConstItem("ev");
      int int0 = classWriter0.newConst("ev");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      classWriter0.newLong(16777216);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "";
      stringArray0[4] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit((-1251), (-1251), "", (String) null, "Deprecated", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      Item item0 = new Item(1);
      classWriter0.visit(0, 23, "", "RuntimeVisibleAnnotations", "K}^AA#4P(", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Type type0 = Type.SHORT_TYPE;
      Item item0 = classWriter0.newConstItem(type0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2196));
      classWriter0.visitInnerClass((String) null, "MT+D|9ex", "", 1545);
      Boolean boolean0 = Boolean.TRUE;
      Type type0 = Type.CHAR_TYPE;
      Item item0 = classWriter0.newConstItem(type0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1545);
      classWriter0.visitInnerClass("", "", "", 306);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.visitInnerClass("%lfi`I.GCdhJ/", "!'Y` D", "!'Y` D", 1545);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2712));
      ClassWriter classWriter1 = new ClassWriter((-2459));
      classWriter1.newMethod("LocalVariableTable", "}<`P!o", "Signature", false);
      Item item0 = classWriter1.newLong((-2459));
      classWriter0.visitSource("StackMapTable", "3BqP?a.g7{");
      Double double0 = new Double(2);
      Boolean boolean0 = Boolean.valueOf(false);
      Item item1 = classWriter0.newConstItem(boolean0);
      assertFalse(item1.equals((Object)item0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-324));
      classWriter0.visitInnerClass("", (String) null, "", 44);
      Item item0 = classWriter0.newConstItem("");
      classWriter0.visitSource((String) null, "float");
      Long long0 = new Long((-324));
      Long.sum((-1764L), (-324));
      Item item1 = classWriter0.newConstItem(long0);
      assertFalse(item1.equals((Object)item0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      Item item0 = new Item();
      classWriter0.visitOuterClass("StackMapTable", "StackMapTable", "StackMapTable");
      classWriter0.newNameType("StackMapTable", "StackMapTable");
      int int0 = classWriter0.newNameType("StackMapTable", "StackMapTable");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1545);
      classWriter0.newInteger(2178);
      Double double0 = new Double((-1255.80466));
      Item item0 = classWriter0.newConstItem(double0);
      classWriter0.newConst(double0);
      Item item1 = classWriter0.newClassItem("R");
      assertFalse(item1.equals((Object)item0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      classWriter0.newDouble(2121.315029547331);
      classWriter0.visitSource("v2__`?SZ", (String) null);
      classWriter0.newLong(16777216);
      int int0 = classWriter0.addUninitializedType("Af-&9'!s3^", 16777216);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(46);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      classWriter0.addType("");
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      String[] stringArray0 = new String[0];
      classWriter0.visit(15, 32, "nO1)`&S.krD2", "nO1)`&S.krD2", "nO1)`&S.krD2", stringArray0);
      Item item0 = classWriter0.newFieldItem("The FilenameFilter must not be null", "nO1)`&S.krD2", "gopPJ$[z-znv");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "Q0J^";
      stringArray0[2] = "Q0J^";
      stringArray0[3] = "Q0J^";
      stringArray0[4] = "short";
      classWriter0.visit((-328), (-328), "short", "Q0J^", "", stringArray0);
      ClassWriter classWriter1 = new ClassWriter(2);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitOuterClass("i|*6(x", (String) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      classWriter0.newFloat(172);
      classWriter0.addUninitializedType("BD{!0", 172);
      classWriter0.newField("cS!p|)@wkb:m|w!j", "cS!p|)@wkb:m|w!j", "BD{!0");
      classWriter0.newClassItem("BD{!0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Item item0 = classWriter0.newFloat(172);
      classWriter0.newMethod("InnerClasses", "BD{!0", "9svh*@jy*)!ysA", true);
      classWriter0.newConstItem("oZZ'j");
      Item item1 = new Item(32, item0);
      classWriter0.toByteArray();
      byte[] byteArray0 = classWriter0.toByteArray();
      int int0 = Short.SIZE;
      byte[] byteArray1 = classWriter0.toByteArray();
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      classWriter0.newMethod("$dX3:Wi+", "}BUTdxOA{@y3Rp&", "org.apache.commons.io.filefilter.CanReadFileFilter", false);
      classWriter0.newLong(16777216);
      ClassWriter classWriter1 = new ClassWriter(3976);
      classWriter0.newLong(16777216);
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(6, (-3497));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("java/lang/Object", "java/lang/Object");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "java/lang/Object";
      classWriter0.addUninitializedType("%,>h/wHQ.^]{Vj},arU", 1410);
      classWriter0.addUninitializedType("%,>h/wHQ.^]{Vj},arU", 1410);
      Item item0 = classWriter0.newMethodItem("java/lang/Object", "double", "double", false);
      Item item1 = classWriter0.newLong(0L);
      assertFalse(item1.equals((Object)item0));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      classWriter0.newMethod("", "", "", false);
      classWriter0.newMethodItem("", "", "", false);
      Attribute attribute0 = new Attribute("The filters must not be null");
      classWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-328));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "java/lang/Object");
      classWriter1.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Edge");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
