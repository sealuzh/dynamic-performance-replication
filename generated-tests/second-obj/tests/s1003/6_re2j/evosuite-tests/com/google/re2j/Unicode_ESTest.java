/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:38:56 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Unicode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Unicode_ESTest extends Unicode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Unicode.toUpper(981);
      assertEquals(934, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Unicode.toLower(981);
      assertEquals(981, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Unicode.isUpper((-1));
      boolean boolean1 = Unicode.isPrint((-1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Unicode.isTitle(1159);
      assertFalse(boolean0);
      
      int int0 = Unicode.toUpper(1159);
      assertEquals(1159, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Unicode.isTitle(1138);
      Unicode.toUpper(1138);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Unicode.isTitle(127386);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Unicode.isUpper(1152);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Unicode.isUpper(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Unicode.toLower(67);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Unicode.isLower((-3153));
      Unicode.toLower((-3153));
      Unicode.isPrint((-3153));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Unicode.simpleFold(1013);
      Unicode.isTitle(917);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Unicode.isLower((-2153));
      Unicode.simpleFold((-2153));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Unicode.isLower(662);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Unicode.toLower(122);
      Unicode.isTitle(122);
      Unicode.isPrint(122);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = Unicode.MAX_ASCII;
      Unicode.toUpper(127);
      Unicode.isPrint(127);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Unicode.simpleFold(11360);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Unicode.isPrint(3937);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Unicode.isPrint(68108);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Unicode.isPrint(5870);
      Unicode.isLower(5870);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Unicode.isPrint(68182);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = Unicode.MAX_LATIN1;
      Unicode.isLower(255);
      Unicode.isPrint(255);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Unicode.isPrint(747);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Unicode.isPrint(11903);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Unicode.simpleFold(90);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Unicode.isTitle(256);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Unicode.toLower(122);
      Unicode.isTitle(122);
      Unicode.toUpper(122);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Unicode.isPrint(173);
  }
}
