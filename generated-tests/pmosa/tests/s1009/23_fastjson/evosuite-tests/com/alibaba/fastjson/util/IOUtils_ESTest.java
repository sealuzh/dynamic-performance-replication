/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 14:08:17 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedReader;
import java.io.Closeable;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 502;
      char[] charArray0 = new char[1];
      char char0 = 'z';
      charArray0[0] = 'z';
      // Undeclared exception!
      try { 
        IOUtils.getChars(3696L, 502, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 501
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars(10L, 18, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "/KNRwCLF+|a+*lac";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("U}", 5, (-2));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('x');
      assertTrue(boolean0);
      
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-2654), (-2654), iOUtils0.specicalFlags_singleQuotes);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize((-1076L));
      assertEquals(1, int0);
      
      boolean boolean0 = IOUtils.isIdent('l');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "K";
      IOUtils.getStringProperty("K");
      IOUtils.stringSize((-798L));
      char[] charArray0 = new char[1];
      charArray0[0] = 'Z';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-78L), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars(1L, 12, iOUtils0.DIGITS);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam((String) null);
      IOUtils.stringSize(3498);
      IOUtils.firstIdentifier('@');
      char[] charArray0 = new char[9];
      charArray0[0] = '@';
      charArray0[1] = '@';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = '@';
      charArray0[5] = 'z';
      charArray0[6] = 'V';
      charArray0[7] = '@';
      charArray0[8] = '@';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-95), 1901, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1900
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize((-1076L));
      assertEquals(1, int0);
      
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("#<~jXNNT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("<N*xg1");
      assertFalse(boolean0);
      
      int int0 = IOUtils.stringSize((-3720));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = 'N';
      charArray0[2] = '{';
      charArray0[3] = '[';
      // Undeclared exception!
      try { 
        IOUtils.getChars(534, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize((-1076L));
      IOUtils.isIdent('X');
      IOUtils.firstIdentifier('q');
      char[] charArray0 = new char[7];
      charArray0[0] = 'X';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      charArray0[3] = 's';
      charArray0[4] = 'q';
      charArray0[5] = 'q';
      charArray0[6] = 'X';
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 1, 30, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      boolean boolean0 = IOUtils.isIdent('e');
      assertTrue(boolean0);
      
      StringReader stringReader0 = new StringReader("h3DC`");
      String string0 = IOUtils.readAll(stringReader0);
      assertEquals("h3DC`", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 6;
      char[] charArray0 = new char[6];
      charArray0[0] = '3';
      char char0 = '9';
      charArray0[1] = '9';
      charArray0[2] = 'o';
      charArray0[3] = 'S';
      charArray0[4] = 'k';
      charArray0[5] = 'S';
      IOUtils.getChars(0L, 6, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-378), (-378));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -757
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOUtils.stringSize(0L);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 5, 5);
      String string0 = IOUtils.getStringProperty("/KNRwCLF+|a+*lac");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      byte[] byteArray0 = IOUtils.decodeBase64("HUgv$n6", (-1488), 0);
      char[] charArray0 = new char[0];
      IOUtils.decodeUTF8(byteArray0, 0, (-1488), charArray0);
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      int int1 = (-346);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("HUgv$n6", 0, (-346));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char char0 = '$';
      IOUtils.isIdent('$');
      IOUtils.stringSize(0L);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      String string0 = "d.g";
      // Undeclared exception!
      try { 
        uTF8Decoder0.replaceWith("d.g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Replacement too long
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = charset0.encode("fastjson.compatibleWithJavaBean");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertFalse(charBuffer0.isReadOnly());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      uTF8Decoder0.flush(charBuffer0);
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset1 = IOUtils.UTF8;
      ByteBuffer byteBuffer1 = charset1.encode("xGGp15Rpn4,\"");
      CharBuffer charBuffer1 = charset1.decode(byteBuffer1);
      IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer1);
      byte byte0 = (byte)18;
      char[] charArray0 = new char[1];
      charArray0[0] = '=';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)18, (int) (byte)18, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("'C<:fR2XuJ8-oo_,oO");
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(0L);
      byte byte0 = (byte)5;
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.isIdent('H');
      IOUtils.isValidJsonpQueryParam("com.alibaba.fastjson.JSONException");
      char[] charArray0 = new char[2];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      // Undeclared exception!
      try { 
        IOUtils.getChars(655L, 200, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 199
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 5, 5);
      byte byte0 = (byte)73;
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'd';
      charArray0[2] = '&';
      char char0 = 'k';
      charArray0[3] = 'k';
      charArray0[4] = 'Z';
      charArray0[5] = ' ';
      char char1 = '7';
      charArray0[6] = '7';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)73, (int) (byte)73, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 72
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.alibaba.fastjson.util.IOUtils");
      IOUtils.close(stringReader0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize((-1076L));
      IOUtils.isIdent('X');
      IOUtils.firstIdentifier('q');
      char[] charArray0 = new char[7];
      charArray0[0] = 'X';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      Closeable closeable0 = null;
      IOUtils.close((Closeable) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)125;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, (-283), 1, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -283
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize((-1076L));
      assertEquals(1, int0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = ',';
      charArray0[1] = 'g';
      charArray0[2] = '/';
      charArray0[3] = 'L';
      charArray0[4] = 'u';
      charArray0[5] = 'o';
      charArray0[6] = '\'';
      charArray0[7] = 'A';
      charArray0[8] = '<';
      IOUtils.getChars(1, 1, charArray0);
      assertArrayEquals(new char[] {'1', 'g', '/', 'L', 'u', 'o', '\'', 'A', '<'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("zn?n68:");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-25), (byte) (-21)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6y%dJdU");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      IOUtils.isIdent(':');
      int int0 = 8064;
      IOUtils.stringSize(8064);
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("F?L ZNArM_TrKzML");
      IOUtils.loadPropertiesFromFile();
      IOUtils.getStringProperty("F?L ZNArM_TrKzML");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset0 = uTF8Decoder0.charset();
      String string0 = "utf8 decode error, ";
      ByteBuffer byteBuffer0 = charset0.encode("utf8 decode error, ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = FLUSHED, new state = CODING_END
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils.stringSize((-1208L));
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.CA, 1, 5);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("\"N\u0006]S*@~XPRK}Zre", 1, (-1252));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      charArray0[1] = 'U';
      charArray0[2] = '^';
      charArray0[3] = 'L';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 5, 5);
      assertArrayEquals(new byte[] {(byte)8, (byte) (-79), (byte)126}, byteArray0);
      
      IOUtils.decodeBase64("/KNRwCLF+|a+*lac");
      int int0 = IOUtils.stringSize(2147483647L);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('u');
      assertTrue(boolean0);
      
      char[] charArray0 = new char[3];
      charArray0[0] = 'u';
      charArray0[1] = 'u';
      charArray0[2] = 'u';
      IOUtils.getChars((byte)2, (int) (byte)2, charArray0);
      assertArrayEquals(new char[] {'u', '2', 'u'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      charArray0[3] = '';
      charArray0[4] = '/';
      charArray0[5] = 'e';
      charArray0[6] = '';
      charArray0[7] = 'e';
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, 119, charArray0);
      assertEquals((-1), int0);
      assertArrayEquals(new char[] {'\u0000', 'e', 'e', '', '/', 'e', '', 'e'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte) (-75);
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, 25, charArray0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals((-1), int0);
      
      int int1 = IOUtils.stringSize(25);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, 271, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "VA@6=09-xFw";
      IOUtils.getStringProperty("VA@6=09-xFw");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, 1395, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.CA, 2, 2, iOUtils0.specicalFlags_doubleQuotes);
      assertEquals(2, int0);
      
      int int1 = IOUtils.stringSize((-1457L));
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 3, 3);
      IOUtils.getStringProperty("/KNRwCLF+|a+*lac");
      IOUtils iOUtils0 = new IOUtils();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 3, 3, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder", 3, 3);
      assertArrayEquals(new byte[] {(byte)106}, byteArray0);
      
      IOUtils.getStringProperty("com.alibaba.fastjson.util.UTF8Decoder");
      byte[] byteArray1 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOUtils.getStringProperty("/^5],hJ_@qV~nlD;");
      char[] charArray0 = new char[6];
      charArray0[0] = '/';
      charArray0[1] = '';
      charArray0[2] = '-';
      charArray0[3] = '/';
      charArray0[4] = '!';
      charArray0[5] = '#';
      IOUtils.getChars((byte)96, 3, charArray0);
      byte[] byteArray0 = IOUtils.decodeBase64("/^5],hJ_@qV~nlD;");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[0] = 'S';
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'S';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 2, 2);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("rp>xEDi45K?N8i");
      IOUtils iOUtils0 = new IOUtils();
      int int0 = (-2390);
      int int1 = 6;
      IOUtils.getChars((-2390), 6, iOUtils0.CA);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int2 = (-123008);
      char[] charArray0 = new char[6];
      charArray0[0] = '>';
      charArray0[1] = '?';
      charArray0[2] = 'Q';
      charArray0[3] = '}';
      charArray0[4] = '@';
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("fastjson.properties");
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 2, 2);
      assertArrayEquals(new byte[] {(byte) (-57)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = 'x';
      IOUtils.decodeBase64(charArray0, 2, 2);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 18, 18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[8];
      byte[] byteArray0 = IOUtils.decodeBase64("`");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, 2, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.stringSize((-1874L));
      IOUtils.isIdent('\u0086');
      byte[] byteArray0 = IOUtils.decodeBase64("UTF-8");
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0086';
      charArray0[1] = '\u0086';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 74, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-58);
      char[] charArray0 = new char[0];
      int int0 = IOUtils.decodeUTF8(byteArray0, 0, 9, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("#O=");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars((-410L), 4894, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4893
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("#O=");
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-410L), 4894, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4893
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-28);
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 0, 271, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-35);
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte) (-58);
      byteArray0[5] = (byte) (-19);
      byteArray0[6] = (byte) (-19);
      byteArray0[7] = (byte) (-19);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'H';
      IOUtils.decodeUTF8(byteArray0, 0, 256, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 62, 57);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 62
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      char[] charArray0 = new char[2];
      IOUtils.decodeUTF8(byteArray0, 0, 271, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)0, (int) (byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-32);
      IOUtils.decodeUTF8(byteArray0, (byte)0, 25, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 25, (int) (byte) (-32));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte) (-27);
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte)30;
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = '.';
      charArray0[2] = '=';
      charArray0[3] = 'H';
      IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 36, 47, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 36
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)4;
      char[] charArray0 = new char[4];
      IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      IOUtils.getChars((byte) (-13), (int) (byte)4, charArray0);
      assertArrayEquals(new char[] {'\u0000', '-', '-', '\u0000'}, charArray0);
      
      int int0 = IOUtils.stringSize((long) (byte)4);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('\u0102');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)31;
      byteArray0[4] = (byte) (-42);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-42);
      char[] charArray0 = new char[4];
      charArray0[1] = '.';
      charArray0[2] = '=';
      charArray0[3] = 'H';
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)0, charArray0);
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray1 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 0, (int) (byte)31);
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)120;
      byteArray0[5] = (byte) (-58);
      byteArray0[6] = (byte) (-48);
      char[] charArray0 = new char[10];
      charArray0[0] = '*';
      IOUtils.decodeUTF8(byteArray0, (byte)3, (byte)3, charArray0);
      byte[] byteArray1 = IOUtils.decodeBase64("K4FtJU]wt#(kI}1i&p");
      byte[] byteArray2 = IOUtils.decodeBase64("fastjson.compatibleWithJavaBean");
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)23;
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte) (-13);
      char[] charArray0 = new char[0];
      IOUtils.decodeUTF8(byteArray0, (byte)4, 2, charArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IOUtils.firstIdentifier('\u0102');
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)72;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (-4), 1823, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte) (-80);
      char[] charArray0 = new char[7];
      charArray0[0] = '%';
      charArray0[2] = '%';
      charArray0[3] = '\"';
      charArray0[4] = '%';
      charArray0[5] = '%';
      charArray0[6] = '\u00F8';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 2, 31, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-82);
      IOUtils.decodeUTF8(byteArray0, (byte)0, 25, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 25, (int) (byte) (-32));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)0, 86);
      String string0 = IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-103);
      IOUtils.decodeUTF8(byteArray0, (byte)0, 32, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-32), (int) (byte) (-103), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -104
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
