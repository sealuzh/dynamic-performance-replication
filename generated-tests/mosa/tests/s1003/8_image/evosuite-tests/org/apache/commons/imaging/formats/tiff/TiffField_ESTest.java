/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:23:04 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeShort0.FLOAT, 1778, 1778, byteArray0, byteOrder0, 1778);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1778L, tiffElement0.offset);
      assertEquals(1778, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(1778, tiffField0.getTag());
      assertEquals(1778, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeAscii0, (-17), (-17), byteArray0, byteOrder0, (-17));
      String string0 = tiffField0.getTagName();
      assertEquals((-17), tiffField0.getDirectoryType());
      assertEquals((-17), tiffField0.getOffset());
      assertEquals((-17), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xffffffef)", string0);
      assertEquals((-17L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "/oLK$02mE8pLg.u`7<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33482, 33482, fieldTypeAscii0, 33482, 33482, byteArray0, byteOrder0, 33482);
      tiffField0.dump();
      assertEquals(33482, tiffField0.getOffset());
      assertEquals(33482, tiffField0.getSortHint());
      assertEquals(33482, tiffField0.getTag());
      assertEquals(33482, tiffField0.getBytesLength());
      assertEquals(33482, tiffField0.getDirectoryType());
      assertEquals(33482L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[98];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2619, 2619, fieldTypeShort0.DOUBLE, 2619, 2619, byteArray0, byteOrder0, 2619);
      tiffField0.dump();
      assertEquals(2619, tiffField0.getOffset());
      assertEquals(20952, tiffField0.getBytesLength());
      assertEquals(2619L, tiffField0.getCount());
      assertEquals(2619, tiffField0.getTag());
      assertEquals(2619, tiffField0.getSortHint());
      assertEquals(2619, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeShort0.FLOAT, 1778, 1778, byteArray0, byteOrder0, 1778);
      tiffField0.dump();
      assertEquals(1778L, tiffField0.getCount());
      assertEquals(1778, tiffField0.getSortHint());
      assertEquals(1778, tiffField0.getTag());
      assertEquals(1778, tiffField0.getOffset());
      assertEquals(1778, tiffField0.getDirectoryType());
      assertEquals(7112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1788, 1788, fieldTypeByte0, 1788, 1788, byteArray0, byteOrder0, 1788);
      String string0 = tiffField0.toString();
      assertEquals(1788, tiffField0.getOffset());
      assertEquals("1788 (0x6fc: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (101) (1788 Byte)", string0);
      assertEquals(1788, tiffField0.getSortHint());
      assertEquals(1788, tiffField0.getBytesLength());
      assertEquals(1788, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1787, 1787, fieldTypeByte0, 1787, 1787, byteArray0, byteOrder0, (-3));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1787, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1787, tiffField0.getTag());
      assertEquals(1787L, tiffField0.getCount());
      assertEquals(1787, tiffField0.getDirectoryType());
      assertEquals(1787, tiffField0.getBytesLength());
      assertEquals((-3), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(76, 76, fieldTypeShort0, 76, 76, byteArray0, byteOrder0, 76);
      tiffField0.getDoubleArrayValue();
      assertEquals(76, tiffField0.getOffset());
      assertEquals(76, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getTag());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(76L, tiffField0.getCount());
      assertEquals(152, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeAscii0, 4, 4, byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7ae237b8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1795, 1795, fieldTypeLong0, 1795, 1795, byteArray0, byteOrder0, 1795);
      tiffField0.dump();
      tiffField0.getIntArrayValue();
      assertEquals(1795, tiffField0.getTag());
      assertEquals(1795, tiffField0.getSortHint());
      assertEquals(1795L, tiffField0.getCount());
      assertEquals(1795, tiffField0.getDirectoryType());
      assertEquals(1795, tiffField0.getOffset());
      assertEquals(7180, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3068), (-3068), fieldTypeByte0, (-3068), (-3068), (byte[]) null, byteOrder0, (-3068));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3068), (-3068));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-3068), tiffField0.getSortHint());
      assertEquals((-3068), tiffField0.getTag());
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-3068), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeAscii0, 15, 15, byteArray0, byteOrder0, 15);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1794, 1794, fieldTypeShort0.FLOAT, 1794, 1794, byteArray0, byteOrder0, 1794);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7d0d74d7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeShort0, 47, 47, byteArray0, byteOrder0, 47);
      int int0 = tiffField0.getSortHint();
      assertEquals(47, tiffField0.getOffset());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeShort0, 47, 47, byteArray0, byteOrder0, 47);
      tiffField0.dump();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(47, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(94, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3068), (-3068), fieldTypeByte0, (-3068), (-3068), (byte[]) null, byteOrder0, (-3068));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3068), (-3068));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertEquals((-3068), tiffField0.getSortHint());
      assertEquals((-3068), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-3068), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 50784, 19680L, byteArray0, byteOrder0, 22);
      String string0 = tiffField0.getTagName();
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(50784, tiffField0.getDirectoryType());
      assertEquals(50784, tiffField0.getTag());
      assertEquals("Alias Layer Metadata", string0);
      assertEquals(19680, tiffField0.getOffset());
      assertEquals(50784L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[157];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeRational0, 0L, 4L, byteArray0, byteOrder0, 77);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(81, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50722, "GyZz2vy|Czf");
      TiffField tiffField0 = new TiffField(3881, (-2832), fieldTypeRational0, 255L, 50722, byteArray0, byteOrder0, 3881);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(840, 840, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).SLONG, 840, 840, byteArray0, byteOrder0, 840);
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      assertEquals(840, tiffField0.getTag());
      assertEquals(840, tiffField0.getSortHint());
      assertEquals(840, tiffField0.getDirectoryType());
      assertEquals(840, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3881, 3881, fieldTypeLong0, 3881, 3881, byteArray0, byteOrder0, 3881);
      tiffField0.dump();
      tiffField0.getIntValueOrArraySum();
      assertEquals(3881, tiffField0.getSortHint());
      assertEquals(3881, tiffField0.getTag());
      assertEquals(3881, tiffField0.getOffset());
      assertEquals(3881, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeShort0.FLOAT, 1778, 1778, byteArray0, byteOrder0, 1778);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1778, tiffField0.getOffset());
      assertEquals(1778, tiffField0.getTag());
      assertEquals(1778, tiffField0.getSortHint());
      assertEquals(1778, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-23), 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, (-23));
      ByteOrder.nativeOrder();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.dump();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-23 (0xffffffe9: Unknown Tag): ", string0);
      
      tiffField0.getByteArrayValue();
      tiffField0.getCount();
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1786, 1786, fieldTypeShort0, 1786, 1786, byteArray0, byteOrder0, 1786);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@74b7f623
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1775, 1775, fieldTypeFloat0, 1775, 1775, byteArray0, byteOrder0, 1775);
      tiffField0.getDoubleArrayValue();
      assertEquals(1775, tiffField0.getTag());
      assertEquals(1775, tiffField0.getSortHint());
      assertEquals(1775, tiffField0.getOffset());
      assertEquals(1775, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1795, 1795, fieldTypeShort0.ASCII, 1795, 1795, byteArray0, byteOrder0, 1795);
      tiffField0.dump();
      assertEquals(1795, tiffField0.getOffset());
      assertEquals(1795, tiffField0.getTag());
      assertEquals(1795, tiffField0.getDirectoryType());
      assertEquals(1795, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1), tagInfo0.tag);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeRational0, 22, 22, byteArray0, byteOrder0, 22);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2619, 2619, fieldTypeShort0, 2619, 2619, byteArray0, byteOrder0, 2619);
      tiffField0.dump();
      assertEquals(2619, tiffField0.getOffset());
      assertEquals(2619, tiffField0.getTag());
      assertEquals(2619, tiffField0.getSortHint());
      assertEquals(2619, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(34028, 1761, fieldTypeLong0, 34028, 34028, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.toString();
      assertEquals("34028 (0x84ec: TransparencyIndicator): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (34028 Long)", string0);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getDirectoryType());
      assertEquals(34028, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[320];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1785, 1785, fieldTypeFloat0, 1785, (-1274L), byteArray0, byteOrder0, 3999);
      String string0 = tiffField0.toString();
      assertEquals((-1274), tiffField0.getOffset());
      assertEquals(3999, tiffField0.getSortHint());
      assertEquals(1785, tiffField0.getDirectoryType());
      assertEquals("1785 (0x6f9: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (80) (1785 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[425];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1648, 1648, fieldTypeDouble0, 41489, 1648, byteArray0, byteOrder0, 1648);
      tiffField0.dump();
      assertEquals(1648, tiffField0.getOffset());
      assertEquals(1648, tiffField0.getSortHint());
      assertEquals(1648, tiffField0.getDirectoryType());
      assertEquals(1648, tiffField0.getTag());
  }
}
