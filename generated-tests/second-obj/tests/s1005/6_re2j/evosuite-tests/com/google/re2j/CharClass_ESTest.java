/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:27:28 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = new int[2];
      CharClass charClass2 = charClass0.appendNegatedClass(intArray0);
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-3251);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.appendRange((-3251), (-3251));
      assertSame(charClass0, charClass2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(20, 20);
      CharClass charClass2 = charClass0.appendRange(10, 10);
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass1 = charClass0.appendLiteral(331, 331);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass1 = charClass0.appendLiteral(321, 955);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      int[] intArray0 = new int[2];
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertNotNull(charClass1);
      assertSame(charClass0, charClass1);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      int[] intArray0 = new int[3];
      intArray0[0] = 228;
      intArray0[2] = 3352;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, (-747));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, (-747));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, (-142));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      CharClass charClass1 = charClass0.appendFoldedRange((-3920), (-3920));
      assertNotNull(charClass1);
      assertSame(charClass0, charClass1);
      assertSame(charClass1, charClass0);
      
      String string0 = charClass1.toString();
      assertNotNull(string0);
      assertEquals("[0xfffff0b0]", string0);
      assertSame(charClass0, charClass1);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      CharClass charClass1 = charClass0.appendLiteral(65, 65);
      assertNotNull(charClass1);
      assertSame(charClass0, charClass1);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      int[][] intArray0 = new int[0][5];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      assertNotNull(charClass1);
      assertSame(charClass0, charClass1);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 61;
      int[][] intArray1 = new int[0][2];
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      int[][] intArray2 = new int[4][6];
      assertFalse(intArray2.equals((Object)intArray1));
      
      intArray2[0] = intArray0;
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      assertNotNull(charClass0);
      
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[4];
      intArray1[0] = 815;
      intArray1[1] = 2736;
      intArray1[2] = (-4676);
      intArray1[3] = 12283;
      intArray0[0] = intArray1;
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][2];
      CharClass charClass1 = charClass0.appendTable(intArray0);
      CharClass charClass2 = charClass1.appendFoldedRange(179, 179);
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 8145;
      intArray0[1] = 2072;
      intArray0[2] = 12895;
      intArray0[4] = 8145;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[5][2];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 2072);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-95);
      intArray0[2] = 34;
      int[][] intArray1 = new int[4][0];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 66639);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[5];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendRange(2801, 2801);
      charClass0.appendLiteral((-1627), 2801);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[5] = (-95);
      intArray0[1] = 66647;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[0][9];
      CharClass charClass2 = charClass1.appendTable(intArray1);
      charClass2.appendTableWithSign(intArray1, 1765);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = 597;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.cleanClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 65;
      intArray0[2] = 4;
      intArray0[3] = 1708;
      intArray0[4] = 912;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral((-3251), (-137));
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendRange(0, (-3251));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, 12541);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(850, 68415);
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 2364;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass.charClassToString(intArray0, 0);
      charClass0.appendClassWithSign(intArray0, 7);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-2), (-2));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange((-3920), 8053);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1094;
      intArray0[1] = 2364;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      charClass2.negateClass();
      charClass0.cleanClass();
      int[][] intArray1 = new int[0][9];
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-1017);
      intArray0[0] = (-1017);
      intArray0[2] = (-1017);
      intArray0[3] = 65;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange((-2029), 65);
      charClass1.toString();
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-1016), 66647);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass0.cleanClass();
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-359);
      CharClass charClass0 = new CharClass(intArray0);
      boolean boolean0 = true;
      CharGroup charGroup0 = null;
      charClass0.toString();
      CharClass charClass1 = charClass0.appendFoldedRange(66639, 1114112);
      charClass1.appendFoldedClass(intArray0);
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(66651, 66651);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[2] = 1;
      intArray0[4] = (-2157);
      intArray0[6] = (-2157);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      charClass0.toString();
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[4];
      intArray1[0] = 3778;
      intArray1[1] = 1;
      intArray1[2] = 65128;
      intArray1[3] = 12842;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 3755;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 1114111;
      intArray2[4] = 1;
      intArray2[5] = 12842;
      intArray2[7] = 65128;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 12842;
      intArray3[1] = 1;
      intArray3[2] = 3755;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[5] = (-95);
      intArray0[1] = 66647;
      intArray0[2] = 1;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[0][9];
      charClass1.appendTable(intArray1);
      charClass1.toString();
      charClass0.appendLiteral(7379, (-1973));
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = 66639;
      intArray0[2] = 1;
      intArray0[3] = 428;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[1][3];
      intArray1[0] = intArray0;
      charClass0.appendTable(intArray1);
      charClass0.toString();
      charClass0.toArray();
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = (-81);
      intArray0[1] = 66647;
      intArray0[2] = 1;
      intArray0[3] = 66647;
      intArray0[4] = (-2157);
      intArray0[5] = 1;
      intArray0[6] = 8273;
      intArray0[7] = 8273;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(1, (-2157));
      CharClass charClass2 = charClass0.appendClass(intArray0);
      charClass2.negateClass();
      int[][] intArray1 = new int[1][0];
      charClass0.toString();
      intArray1[0] = intArray0;
      charClass1.appendNegatedTable(intArray1);
  }
}
