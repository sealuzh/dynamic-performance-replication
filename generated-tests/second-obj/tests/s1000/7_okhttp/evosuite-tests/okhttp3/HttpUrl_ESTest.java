/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:08:33 GMT 2018
 */

package okhttp3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.net.UnknownHostException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import okhttp3.HttpUrl;
import okio.Buffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpUrl_ESTest extends HttpUrl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("::");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("mA");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      try { 
        HttpUrl.getChecked("WSw<>cNr");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for WSw<>cNr
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("S=hAR(;");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.parse("S22':;%38=%3E@[]%5E%60%7B%7D%7C");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::::8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ::::8
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "r?rk\\m1iuWkKG$BQt";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("r?rkm1iuWkKG$BQt");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.parse("http:/");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:}q8[=u:aVyM");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("+7UVC7dVF");
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port((-728));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: -728
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "feff";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("feff");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.removePathSegment(290);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 290, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegments(".%2e");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removePathSegment(1012);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1012, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.password("%8q%");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      try { 
        HttpUrl.getChecked("httq:");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for httq:
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("http8:}q8s+u:_3yuc");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = HttpUrl.percentEncoded("`)~|LzPs@jK", 10, 119);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("D515W<40?X}q%9V");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string0 = ",";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      int int0 = 58;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(58, "j-zKwO'elJI21W");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 58, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setQueryParameter((String) null, "[:: }:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      try { 
        HttpUrl.getChecked("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        HttpUrl.getChecked("/...");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for /...
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      int int0 = HttpUrl.defaultPort("%8q%");
      assertEquals((-1), int0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("%8q%", "%8q%");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      try { 
        HttpUrl.getChecked("https:%7d8+[ax=u[avym");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:%7d8+[ax=u[avym
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      HttpUrl httpUrl0 = HttpUrl.parse("https:%7+[ax=u[avym");
      assertNull(httpUrl0);
      
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertTrue(buffer0.exhausted());
      assertEquals(0L, buffer0.size());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("%M'2ur~gz<wjE,tHz9&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: %M'2ur~gz<wjE,tHz9&
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("jN# zVa|LWl+y", "jN# zVa|LWl+y");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.port((-1080465922));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: -1080465922
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.password((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // password == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery((String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.host("o");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "lc";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("lc");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        HttpUrl.Builder.ParseResult.valueOf("?s&8s!(gF/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant okhttp3.HttpUrl.Builder.ParseResult.?s&8s!(gF/
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("]:X)0]AS");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string0 = ":-PR}8";
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host(":-PR}8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :-PR}8
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.removeAllQueryParameters("");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "z$ekBaM+{NPC>.";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("z$ekBaM+{NPC>.");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("Q}&QS<mhw|/RS");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath("Q}&QS<mhw|/RS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: Q}&QS<mhw|/RS
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = HttpUrl.canonicalize(")%20and%20stream%20length%20(", "https:}q8s=u:_3yu?", true, true, true, true);
      assertEquals(")%20and%20%73%74ream%20leng%74%68%20(", string0);
      assertNotNull(string0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "https:}q8s=u:_3yu?");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = HttpUrl.percentEncoded("U", 2, 2);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("N%2e%2e");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("-G\"i>H>5{016!");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath("[:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: [:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("(");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.username("(");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.addEncodedPathSegment("username == null");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.removeAllQueryParameters("(");
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.removePathSegment(0);
      assertNotNull(httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder5);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      try { 
        MockURL.URL(uRL0, (String) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("239:2");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        HttpUrl.percentDecode("239:2", 1223, (-147), true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "\n";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("\n");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string1 = "buffer(";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addQueryParameter("buffer(", "buffer(");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string2 = ":";
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      int int0 = HttpUrl.defaultPort("%8q%");
      assertEquals((-1), int0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("%8q%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: %8q%
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("tG6");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "]l!S 32%=<z;h@.>";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(55296, "]l!S 32%=<z;h@.>");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 55296, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertEquals(0L, buffer0.size());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertTrue(buffer0.exhausted());
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("[c94::2(n]j{<nPs:K");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.percentDecode(buffer0, "[c94::2(n]j{<nPs:K", 32, 32, true);
      assertEquals(0L, buffer0.size());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertTrue(buffer0.exhausted());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(17, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("EO?p0ba");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllQueryParameters("");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query((String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("-s=wCx", (String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "buffer(";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("buffer(");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegment("buffer(");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllEncodedQueryParameters("byteCount < 0: ");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder3.scheme("buffer(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: buffer(
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = HttpUrl.canonicalize("+WJi\"$@", "+WJi\"$@", true, false, false, false);
      assertEquals("%2B%57%4A%69%22%24%40", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:}qOs+,:_3yuc");
      assertNull(httpUrl0);
      
      int int0 = HttpUrl.decodeHexDigit('?');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      StringBuilder stringBuilder0 = new StringBuilder("B2::8");
      assertNotNull(stringBuilder0);
      assertEquals("B2::8", stringBuilder0.toString());
      
      StringBuilder stringBuilder1 = stringBuilder0.append((CharSequence) "B2::8");
      assertNotNull(stringBuilder1);
      assertEquals("B2::8B2::8", stringBuilder0.toString());
      assertEquals("B2::8B2::8", stringBuilder1.toString());
      assertSame(stringBuilder0, stringBuilder1);
      assertSame(stringBuilder1, stringBuilder0);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      
      HttpUrl.namesAndValuesToQueryString(stringBuilder1, list0);
      assertEquals("B2::8B2::8", stringBuilder0.toString());
      assertEquals("B2::8B2::8", stringBuilder1.toString());
      assertEquals(0, linkedList0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertSame(stringBuilder0, stringBuilder1);
      assertSame(stringBuilder1, stringBuilder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("B2::8");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "z|DBGEe%i.{h+$dM";
      String string1 = HttpUrl.percentDecode("z|DBGEe%i.{h+$dM", true);
      assertEquals("z|DBGEe%i.{h $dM", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      int int0 = (-605);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment((-605), "z|DBGEe%i.{h+$dM");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedPathSegment(0, "51`I");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.addPathSegments("51`I");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("51`I");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: 51`I
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("Me{ajJO5P+MMC", "Me{ajJO5P+MMC");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      int int0 = (-1712);
      String string0 = ".";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment((-1712), ".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: .
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string0 = "IF$,8+bU~j]BuWH";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllQueryParameters("IF$,8+bU~j]BuWH");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.removeAllQueryParameters("");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.setQueryParameter("", "yI'C1");
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.addEncodedPathSegments("%2e");
      assertNotNull(httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder5);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      
      String string1 = "Unexpected hex digit: ";
      // Undeclared exception!
      try { 
        httpUrl_Builder4.setEncodedPathSegment(2273, "Unexpected hex digit: ");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2273, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters(")9`X?oH_7ra3|`[yYi");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      int int0 = 1702;
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(1702);
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host(")9`X?oH_7ra3|`[yYi");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: )9`X?oH_7ra3|`[yYi
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("\u2026]");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.setEncodedQueryParameter("[2.3|:7;2O,8s$", (String) null);
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPath == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = 285;
      String string0 = HttpUrl.canonicalize("z+c,7", "z+c,7", true, true, true, true);
      assertEquals("%7A+%63%2C%37", string0);
      assertNotNull(string0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removePathSegment(6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      
      String string0 = httpUrl0.fragment();
      assertNull(string0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("Enk;");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.setQueryParameter("Enk;", " hex=");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(11);
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.addEncodedPathSegment("Enk;");
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)12;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte)12}, byteArray0);
      
      HttpUrl httpUrl0 = HttpUrl.parse("https:}8ws=uG_yu?");
      assertNotNull(httpUrl0);
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(443, httpUrl0.port());
      assertEquals("", httpUrl0.password());
      assertEquals("}8ws=ug_yu", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertTrue(httpUrl0.isHttps());
      assertEquals("https://}8ws=ug_yu/?", httpUrl0.toString());
      assertEquals("https", httpUrl0.scheme());
      assertEquals(1, httpUrl0.querySize());
      
      try { 
        MockURI.URI("vu^zMB-WnyuW;9Z![", "", "vu^zMB-WnyuW;9Z![");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 2: vu^zMB-WnyuW;9Z![:#vu%5EzMB-WnyuW;9Z![
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("EO?p0ba");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.removeAllEncodedQueryParameters("EO?p0ba");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("]6R7B2");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("]6R7B2");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.addQueryParameter("]6R7B2", "\r");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addQueryParameter("size < ", "size < ");
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.addPathSegments("\r");
      assertNotNull(httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder5);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder5.removeAllQueryParameters("size < ");
      assertNotNull(httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder6);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder6);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder6);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder5);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder6);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("%2e%2e");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(192);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPassword((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPassword == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery((String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedUsername("");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.addEncodedPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "JT=ioBnm5Z1EH";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("JT=ioBnm5Z1EH", (String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("%2e%2e");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string1 = "7.:H'@,\\";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("7.:H'@,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 7.:H'@,
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = " \"':;<=>@[]^`{}|/\\?#";
      String string1 = "SHA-1";
      try { 
        HttpUrl.getChecked("SHA-1");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for SHA-1
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters(" (to read code point prefixed (x");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.encodedPassword(" (to read code point prefixed (x");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegments("oQ2g o&8Z#Dk");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(42, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      try { 
        HttpUrl.getChecked("http:/");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: http:/
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl httpUrl0 = HttpUrl.parse("~Vcc1iQ$:,\"0&");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertTrue(buffer0.exhausted());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertEquals(0L, buffer0.size());
      
      HttpUrl httpUrl0 = HttpUrl.parse("R+&O's+W/G}");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      try { 
        HttpUrl.getChecked("https:}q8s=u:_3yu?");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: INVALID_PORT for https:}q8s=u:_3yu?
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("cr.");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string0 = "pathSegments == null";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("pathSegments == null");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllQueryParameters("pathSegments == null");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder3.addEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("timeout");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.port(1512);
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.addPathSegments("5w!B+c'dEk>");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder1.encodedUsername("p5/lbB^f`)>w3pT_");
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder0.removeAllQueryParameters("5w!B+c'dEk>");
      assertNotNull(httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder0.addEncodedPathSegment("timeout");
      assertNotNull(httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      
      HttpUrl.Builder httpUrl_Builder7 = httpUrl_Builder3.reencodeForUri();
      assertNotNull(httpUrl_Builder7);
      assertSame(httpUrl_Builder0, httpUrl_Builder7);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder6);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder7);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder7);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder6);
      assertSame(httpUrl_Builder7, httpUrl_Builder5);
      assertSame(httpUrl_Builder7, httpUrl_Builder0);
      assertSame(httpUrl_Builder7, httpUrl_Builder4);
      assertSame(httpUrl_Builder7, httpUrl_Builder1);
      assertSame(httpUrl_Builder7, httpUrl_Builder3);
      assertSame(httpUrl_Builder7, httpUrl_Builder2);
      assertSame(httpUrl_Builder7, httpUrl_Builder6);
      
      HttpUrl.Builder httpUrl_Builder8 = httpUrl_Builder0.scheme("http");
      assertNotNull(httpUrl_Builder8);
      assertSame(httpUrl_Builder0, httpUrl_Builder7);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder8);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder8, httpUrl_Builder7);
      assertSame(httpUrl_Builder8, httpUrl_Builder3);
      assertSame(httpUrl_Builder8, httpUrl_Builder2);
      assertSame(httpUrl_Builder8, httpUrl_Builder0);
      assertSame(httpUrl_Builder8, httpUrl_Builder1);
      assertSame(httpUrl_Builder8, httpUrl_Builder4);
      assertSame(httpUrl_Builder8, httpUrl_Builder5);
      assertSame(httpUrl_Builder8, httpUrl_Builder6);
      
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      assertEquals(8257536, int0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("%2e%2e");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port(8257536);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: 8257536
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "\u2026J";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("\u2026J");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllQueryParameters("\u2026J");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string1 = ";xg]qe";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath(";xg]qe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: ;xg]qe
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "https";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.scheme("https");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedQuery("https");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegments("https");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.port(52);
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder4.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      
      boolean boolean0 = httpUrl0.equals(httpUrl0);
      assertTrue(boolean0);
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      
      URI uRI0 = httpUrl0.uri();
      assertNotNull(uRI0);
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", uRI0.getHost());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRI0.toString());
      assertEquals("/fooExample", uRI0.getRawPath());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("www.somefakebutwellformedurl.org", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      
      String string0 = MockURL.getAuthority(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", string0);
      assertNotNull(string0);
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      String string1 = httpUrl0.host();
      assertEquals("www.somefakebutwellformedurl.org", string1);
      assertNotNull(string1);
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray1 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray1);
      assertNotSame(httpUrl_Builder_ParseResultArray1, httpUrl_Builder_ParseResultArray0);
      assertFalse(httpUrl_Builder_ParseResultArray1.equals((Object)httpUrl_Builder_ParseResultArray0));
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      
      String string0 = httpUrl0.queryParameter((String) null);
      assertNull(string0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedUsername((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedUsername == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      
      boolean boolean0 = httpUrl0.isHttps();
      assertFalse(boolean0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      
      int int0 = ObjectStreamConstants.baseWireHandle;
      assertEquals(8257536, int0);
      
      String string0 = httpUrl0.encodedQuery();
      assertNull(string0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      
      String string1 = httpUrl0.password();
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "(`\"%pZ>R\"u";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("cr.", "(`\"%pZ>R\"u");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.addPathSegment("(`\"%pZ>R\"u");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.addEncodedPathSegments("(`\"%pZ>R\"u");
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder0.encodedUsername("(`\"%pZ>R\"u");
      assertNotNull(httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.scheme("cr.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: cr.
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      byte[] byteArray0 = new byte[0];
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean1);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertFalse(boolean1 == boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "\r";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("-h[G&Vqg,:GwXK~J@=b");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl httpUrl1 = null;
      try {
        httpUrl1 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("2.r||:7;2F,8s$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 2.r||:7;2F,8s$
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("c94::2nj{<nPs:&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: c94::2nj{<nPs:&
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment((String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.username((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // username == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      boolean boolean0 = httpUrl0.equals(httpUrl0);
      assertTrue(boolean0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("#5%d?3$");
      assertNotNull(httpUrl_Builder0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("..");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("~Vcc1iQ$:,\"0&");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedPassword("%7D*LSGX%3Fn4UV6MjJ%7F%2F2");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder3.removePathSegment(45);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 45, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("*BRK{o", "=3/|-@YZWh/,1y");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = "https:k%08:y3yuc";
      String string1 = "";
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("");
      assertNotNull(httpUrl_Builder0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("https:k%08:y3yuc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: https:k%08:y3yuc
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      String string0 = httpUrl0.query();
      assertNull(string0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      
      int int0 = httpUrl0.querySize();
      assertEquals(0, int0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertEquals(0L, buffer0.size());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertTrue(buffer0.exhausted());
      
      try { 
        HttpUrl.getChecked("%2e.");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for %2e.
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      
      String string0 = httpUrl0.redact();
      assertEquals("http://www.somefakebutwellformedurl.org/...", string0);
      assertNotNull(string0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      
      URL uRL1 = httpUrl0.url();
      assertNotNull(uRL1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toExternalForm());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getRef());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toString());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getHost());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getAuthority());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      
      URL uRL1 = MockURL.URL(uRL0, "J*,j}%$|l#P +L");
      assertNotNull(uRL1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("P +L", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      String string0 = MockURL.getRef(uRL1);
      assertEquals("P +L", string0);
      assertNotNull(string0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("P +L", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      
      String string1 = MockURL.toExternalForm(uRL1);
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", string1);
      assertNotNull(string1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("P +L", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertFalse(string1.equals((Object)string0));
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL1);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("P +L", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/J*,j%7D%%7F$%7Cl#P +L", httpUrl0.toString());
      assertEquals("P +L", httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("P +L", httpUrl0.fragment());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      
      String string2 = httpUrl0.query();
      assertNull(string2);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("P +L", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/J*,j%7D%%7F$%7Cl#P +L", httpUrl0.toString());
      assertEquals("P +L", httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("P +L", httpUrl0.fragment());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      
      Set<String> set0 = httpUrl0.queryParameterNames();
      assertNotNull(set0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("P +L", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/J*,j}%$|l#P +L", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/J*,j%7D%%7F$%7Cl#P +L", httpUrl0.toString());
      assertEquals("P +L", httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("P +L", httpUrl0.fragment());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      
      StringBuilder stringBuilder0 = new StringBuilder(32);
      assertNotNull(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName(32);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      String string0 = httpUrl0.encodedPath();
      assertEquals("/fooExample", string0);
      assertNotNull(string0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      
      HttpUrl httpUrl1 = httpUrl0.resolve("/fooExample");
      assertNotNull(httpUrl1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl1.isHttps());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.password());
      assertEquals(0, httpUrl1.querySize());
      assertEquals(1, httpUrl1.pathSize());
      assertEquals("http", httpUrl1.scheme());
      assertNull(httpUrl1.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.username());
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl1, httpUrl0);
      assertTrue(httpUrl1.equals((Object)httpUrl0));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = HttpUrl.percentDecode("0Rc^Zrml9vKDf+R", true);
      assertEquals("0Rc^Zrml9vKDf R", string0);
      assertNotNull(string0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("0Rc^Zrml9vKDf R");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      int int1 = httpUrl0.hashCode();
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(int1 == int0);
      
      String string0 = HttpUrl.canonicalize("Z1FT", "Z1FT", true, false, false, true);
      assertEquals("%5A%31%46%54", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      int int0 = HttpUrl.defaultPort("");
      assertEquals((-1), int0);
      
      String string0 = httpUrl0.encodedPath();
      assertEquals("/fooExample", string0);
      assertNotNull(string0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName((-3169));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      URL uRL1 = MockURL.URL(uRL0, "NLl,csw PoF#Qn3*g");
      assertNotNull(uRL1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("Qn3*g", uRL1.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/NLl,csw PoF#Qn3*g", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/NLl,csw PoF#Qn3*g", uRL1.toString());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL1);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("Qn3*g", uRL1.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/NLl,csw PoF#Qn3*g", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/NLl,csw PoF#Qn3*g", uRL1.toString());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(80, httpUrl0.port());
      assertEquals("http://www.somefakebutwellformedurl.org/NLl,csw%20PoF#Qn3*g", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("Qn3*g", httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("Qn3*g", httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("Qn3*g", uRL1.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/NLl,csw PoF#Qn3*g", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/NLl,csw PoF#Qn3*g", uRL1.toString());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(80, httpUrl0.port());
      assertEquals("http://www.somefakebutwellformedurl.org/NLl,csw%20PoF#Qn3*g", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("Qn3*g", httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("Qn3*g", httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "B;xZ#Jl%.";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("B;xZ#Jl%.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: B;xZ#Jl%.
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      
      boolean boolean0 = httpUrl0.isHttps();
      assertFalse(boolean0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      
      List<String> list0 = httpUrl0.queryParameterValues("opxLm)A?VG1\"o8K (");
      assertNotNull(list0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      int int0 = ObjectStreamConstants.baseWireHandle;
      assertEquals(8257536, int0);
      
      String string0 = httpUrl0.encodedQuery();
      assertNull(string0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      
      String string1 = MockURL.getAuthority(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", string1);
      assertNotNull(string1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      assertEquals(8257536, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      
      List<String> list0 = httpUrl0.pathSegments();
      assertNotNull(list0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      String string0 = MockURL.getProtocol(uRL0);
      assertEquals("http", string0);
      assertNotNull(string0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      String string1 = HttpUrl.canonicalize("http", " \"':;<=>@[]^`{}|/?#", true, true, true, true);
      assertEquals("http", string1);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      URL uRL1 = httpUrl0.url();
      assertNotNull(uRL1);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getAuthority());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toExternalForm());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toString());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getHost());
      assertNull(uRL1.getRef());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      int int1 = httpUrl0.hashCode();
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(int1 == int0);
      
      List<String> list1 = httpUrl0.queryParameterValues((String) null);
      assertNotNull(list1);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertTrue(list1.isEmpty());
      assertEquals(0, list1.size());
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      URL uRL1 = MockURL.getHttpExample();
      assertNotNull(uRL1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL1.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL1.toString());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getRef());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertNotSame(uRL1, uRL0);
      assertTrue(uRL1.equals((Object)uRL0));
      
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertEquals(0L, buffer0.size());
      assertTrue(buffer0.exhausted());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      String string0 = httpUrl0.username();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNotSame(uRL0, uRL1);
      assertTrue(uRL0.equals((Object)uRL1));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("(");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegment(" content=");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder2.removePathSegment(0);
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder0.setEncodedPathSegment(0, "(");
      assertNotNull(httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      String string0 = "source == this";
      try { 
        MockURI.URI(" content=", "", "", "source == this");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0:  content=://#source%20==%20this
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "https:}q8s+u:_3yuc";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("\u2026]");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string1 = "/...";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllQueryParameters("/...");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedPath("/...");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.port(317);
      assertNotNull(httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      
      String string2 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder4.addPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e.");
      assertNotNull(httpUrl_Builder0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string0 = "\u2026]";
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(2);
      assertNotNull(httpUrl_Builder3);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      HttpUrl httpUrl1 = httpUrl_Builder2.build();
      assertNotNull(httpUrl1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org:2/%252e.", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.fragment());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(2, httpUrl1.port());
      assertEquals(1, httpUrl1.pathSize());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertNull(httpUrl1.encodedFragment());
      assertEquals(0, httpUrl1.querySize());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      List<String> list0 = httpUrl_Builder2.encodedQueryNamesAndValues;
      assertNull(list0);
      
      // Undeclared exception!
      try { 
        HttpUrl.namesAndValuesToQueryString((StringBuilder) null, (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("encodedPathSegments == null");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.addEncodedPathSegments("%2e%2e");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string1 = "7.|:H'@,8\\*";
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host("7.|:H'@,8*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 7.|:H'@,8*
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e.");
      assertNotNull(httpUrl_Builder0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(2);
      assertNotNull(httpUrl_Builder3);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      HttpUrl httpUrl1 = httpUrl_Builder2.build();
      assertNotNull(httpUrl1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl1.password());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(1, httpUrl1.pathSize());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("http", httpUrl1.scheme());
      assertNull(httpUrl1.encodedFragment());
      assertEquals(2, httpUrl1.port());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertNull(httpUrl1.fragment());
      assertFalse(httpUrl1.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org:2/%252e.", httpUrl1.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addPathSegments("\u2026]");
      assertNotNull(httpUrl_Builder4);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      URL uRL1 = MockURL.getHttpExample();
      assertNotNull(uRL1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL1.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getPort());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getRef());
      assertNotSame(uRL1, uRL0);
      assertTrue(uRL1.equals((Object)uRL0));
      
      URL uRL2 = MockURL.URL(uRL0, "\u2026]");
      assertNotNull(uRL2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL2.getHost());
      assertEquals((-1), uRL2.getDefaultPort());
      assertNull(uRL2.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL2.getAuthority());
      assertNull(uRL2.getQuery());
      assertEquals((-1), uRL2.getPort());
      assertNull(uRL2.getUserInfo());
      assertEquals("http", uRL2.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/\u2026]", uRL2.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/\u2026]", uRL2.toString());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL2, uRL0);
      assertNotSame(uRL2, uRL1);
      assertTrue(uRL0.equals((Object)uRL1));
      assertFalse(uRL2.equals((Object)uRL0));
      assertFalse(uRL2.equals((Object)uRL1));
      
      HttpUrl httpUrl2 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl2.port());
      assertEquals("", httpUrl2.encodedPassword());
      assertEquals(1, httpUrl2.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertFalse(httpUrl2.isHttps());
      assertEquals("", httpUrl2.password());
      assertEquals("http", httpUrl2.scheme());
      assertEquals("", httpUrl2.username());
      assertNull(httpUrl2.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl2.toString());
      assertNull(httpUrl2.encodedFragment());
      assertEquals(0, httpUrl2.querySize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl2, httpUrl1);
      assertNotSame(httpUrl2, httpUrl0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertTrue(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      assertTrue(httpUrl2.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder1.removeAllEncodedQueryParameters("/");
      assertNotNull(httpUrl_Builder5);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl0, httpUrl2);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertTrue(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl0.equals((Object)httpUrl2));
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder2.removeAllEncodedQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder6);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl0, httpUrl2);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder5);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertFalse(uRL0.equals((Object)uRL2));
      assertTrue(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl0.equals((Object)httpUrl2));
      
      HttpUrl.Builder httpUrl_Builder7 = httpUrl1.newBuilder();
      assertNotNull(httpUrl_Builder7);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl1.password());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(1, httpUrl1.pathSize());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("http", httpUrl1.scheme());
      assertNull(httpUrl1.encodedFragment());
      assertEquals(2, httpUrl1.port());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertNull(httpUrl1.fragment());
      assertFalse(httpUrl1.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org:2/%252e.", httpUrl1.toString());
      assertNotSame(httpUrl_Builder7, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder2);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder5);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder6);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder4);
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl0, httpUrl2);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder7);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder7);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder5);
      assertNotSame(httpUrl1, httpUrl2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder3));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder5));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder6));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder4));
      assertFalse(uRL0.equals((Object)uRL2));
      assertTrue(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl0.equals((Object)httpUrl2));
      assertFalse(httpUrl1.equals((Object)httpUrl2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder8 = httpUrl_Builder2.removeAllEncodedQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder8);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertSame(httpUrl_Builder8, httpUrl_Builder0);
      assertSame(httpUrl_Builder8, httpUrl_Builder2);
      assertSame(httpUrl_Builder8, httpUrl_Builder3);
      assertSame(httpUrl_Builder8, httpUrl_Builder4);
      assertNotSame(httpUrl_Builder8, httpUrl_Builder7);
      assertSame(httpUrl_Builder8, httpUrl_Builder5);
      assertSame(httpUrl_Builder8, httpUrl_Builder1);
      assertSame(httpUrl_Builder8, httpUrl_Builder6);
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl0, httpUrl2);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder7);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder8);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder8);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder7);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder5);
      assertFalse(httpUrl_Builder8.equals((Object)httpUrl_Builder7));
      assertFalse(uRL0.equals((Object)uRL2));
      assertTrue(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl0.equals((Object)httpUrl2));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder7));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder7));
      
      // Undeclared exception!
      try { 
        HttpUrl.getChecked((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment((String) null);
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("H\"NRd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: H\"NRd
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      String string0 = httpUrl0.encodedPassword();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      int int1 = httpUrl0.querySize();
      assertEquals(0, int1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(int1 == int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string1 = MockURL.getQuery(uRL0);
      assertNull(string1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      int int2 = httpUrl0.port();
      assertEquals(80, int2);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      String string2 = MockURL.getQuery(uRL0);
      assertNull(string2);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "JRbeU";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment(".%2e");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      String string1 = "";
      try { 
        MockURI.URI("", "JRbeU", ".%2e");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :JRbeU#.%252e
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = httpUrl0.encodedPassword();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      URL uRL1 = MockURL.URL(uRL0, "VgY37+#X2~pyXjX0V");
      assertNotNull(uRL1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("X2~pyXjX0V", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toExternalForm());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      URL uRL2 = httpUrl0.url();
      assertNotNull(uRL2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getAuthority());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toExternalForm());
      assertEquals("http", uRL2.getProtocol());
      assertEquals((-1), uRL2.getDefaultPort());
      assertNull(uRL2.getRef());
      assertNull(uRL2.getUserInfo());
      assertNull(uRL2.getQuery());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toString());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getHost());
      assertEquals((-1), uRL2.getPort());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL2, uRL0);
      assertNotSame(uRL2, uRL1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL2.equals((Object)uRL0));
      assertFalse(uRL2.equals((Object)uRL1));
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl0.newBuilder(" \"':;<=>@[]^`{}|/?#");
      assertNotNull(httpUrl_Builder1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      
      String string1 = MockURL.getAuthority(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", string1);
      assertNotNull(string1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = httpUrl0.encodedPassword();
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(string2.equals((Object)string1));
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder1));
      
      List<String> list0 = httpUrl0.pathSegments();
      assertNotNull(list0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      
      HttpUrl httpUrl1 = httpUrl_Builder1.build();
      assertNotNull(httpUrl1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals(1, httpUrl1.querySize());
      assertFalse(httpUrl1.isHttps());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.password());
      assertEquals("http://www.somefakebutwellformedurl.org/%22':;%3C=%3E@[]%5E%60%7B%7D%7C/?#", httpUrl1.toString());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllEncodedQueryParameters("username%20==%20null");
      assertNotNull(httpUrl_Builder3);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder1));
      
      String string3 = MockURL.getPath(uRL1);
      assertEquals("/VgY37+", string3);
      assertNotNull(string3);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("X2~pyXjX0V", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toExternalForm());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertNotSame(uRL1, uRL2);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertFalse(uRL1.equals((Object)uRL2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      String string4 = HttpUrl.percentDecode("%2e", false);
      assertEquals(".", string4);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterValue(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("\n");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.encodedQuery((String) null);
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.removeAllQueryParameters("\n");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e.");
      assertNotNull(httpUrl_Builder0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      
      String string0 = httpUrl0.encodedQuery();
      assertNull(string0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("\u2026]");
      assertNotNull(httpUrl_Builder2);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.setEncodedQueryParameter("size=%s offset=%s byteCount=%s", "%2e.");
      assertNotNull(httpUrl_Builder3);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.removeAllQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder4);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder3.port(1);
      assertNotNull(httpUrl_Builder5);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      URL uRL1 = MockURL.URL(uRL0, "If=c&9t*.S#hW");
      assertNotNull(uRL1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/If=c&9t*.S#hW", uRL1.toString());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("hW", uRL1.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/If=c&9t*.S#hW", uRL1.toExternalForm());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      StringBuilder stringBuilder0 = new StringBuilder(52);
      assertNotNull(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      List<String> list0 = HttpUrl.queryStringToNamesAndValues("{3Q=4&VC*lc");
      assertNotNull(list0);
      assertFalse(list0.isEmpty());
      assertEquals(4, list0.size());
      
      HttpUrl.namesAndValuesToQueryString(stringBuilder0, list0);
      assertEquals("{3Q=4&VC*lc", stringBuilder0.toString());
      assertFalse(list0.isEmpty());
      assertEquals(4, list0.size());
      
      URL uRL2 = httpUrl0.url();
      assertNotNull(uRL2);
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getAuthority());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toExternalForm());
      assertNull(uRL2.getRef());
      assertEquals("http", uRL2.getProtocol());
      assertEquals((-1), uRL2.getDefaultPort());
      assertNull(uRL2.getUserInfo());
      assertNull(uRL2.getQuery());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toString());
      assertEquals((-1), uRL2.getPort());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL2, uRL1);
      assertNotSame(uRL2, uRL0);
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL2.equals((Object)uRL1));
      assertFalse(uRL2.equals((Object)uRL0));
      assertFalse(uRL0.equals((Object)uRL1));
      
      URI uRI0 = MockURI.create("%2e.");
      assertNotNull(uRI0);
      assertNull(uRI0.getRawAuthority());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getScheme());
      assertEquals((-1), uRI0.getPort());
      assertEquals("%2e.", uRI0.getRawPath());
      assertEquals("%2e.", uRI0.toString());
      assertNull(uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertFalse(uRI0.isAbsolute());
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder2.query("khttp3.HttpUrl$1");
      assertNotNull(httpUrl_Builder6);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder6);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder5);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      
      // Undeclared exception!
      try { 
        httpUrl_Builder6.removeAllEncodedQueryParameters((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      
      String string0 = httpUrl0.password();
      assertEquals("", string0);
      assertNotNull(string0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      
      String string1 = httpUrl0.host();
      assertEquals("www.somefakebutwellformedurl.org", string1);
      assertNotNull(string1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertFalse(string1.equals((Object)string0));
      
      URL uRL1 = httpUrl0.url();
      assertNotNull(uRL1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNull(uRL1.getRef());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getHost());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getAuthority());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toExternalForm());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toString());
      assertNull(uRL1.getQuery());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      int int0 = httpUrl0.pathSize();
      assertEquals(1, int0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL1));
      
      String string2 = HttpUrl.percentDecode("www.somefakebutwellformedurl.org", 1, 1, false);
      assertEquals("", string2);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "\n";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.password("\n");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string1 = "oqg]uH2";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("oqg]uH2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: oqg]uH2
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = null;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("\n");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.encodedQuery((String) null);
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.removeAllQueryParameters("\n");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder(" \"';<=>@[]^`{}:/?#");
      assertNotNull(httpUrl_Builder0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      
      String string0 = MockURL.getUserInfo(uRL0);
      assertNull(string0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder0);
      assertNotNull(httpUrl1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(2, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.password());
      assertEquals("http://www.somefakebutwellformedurl.org/%22';%3C=%3E@[]%5E%60%7B%7D:/?#", httpUrl1.toString());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl1.newBuilder();
      assertNotNull(httpUrl_Builder1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(2, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.password());
      assertEquals("http://www.somefakebutwellformedurl.org/%22';%3C=%3E@[]%5E%60%7B%7D:/?#", httpUrl1.toString());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder1);
      assertNotSame(httpUrl1, httpUrl0);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterValues((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = httpUrl0.encodedPassword();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      URL uRL1 = MockURL.URL(uRL0, "VgY37+#X2~pyXjX0V");
      assertNotNull(uRL1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("X2~pyXjX0V", uRL1.getRef());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toExternalForm());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      
      URL uRL2 = httpUrl0.url();
      assertNotNull(uRL2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getAuthority());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toExternalForm());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toString());
      assertNull(uRL2.getQuery());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getHost());
      assertNull(uRL2.getRef());
      assertEquals((-1), uRL2.getDefaultPort());
      assertEquals("http", uRL2.getProtocol());
      assertEquals((-1), uRL2.getPort());
      assertNull(uRL2.getUserInfo());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL2, uRL0);
      assertNotSame(uRL2, uRL1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL2.equals((Object)uRL0));
      assertFalse(uRL2.equals((Object)uRL1));
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl0.newBuilder(" \"':;<=>@[]^`{}|/?#");
      assertNotNull(httpUrl_Builder1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      
      String string1 = httpUrl0.encodedUsername();
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      
      String string2 = httpUrl0.encodedPassword();
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder2);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder0));
      
      List<String> list0 = HttpUrl.queryStringToNamesAndValues("");
      assertNotNull(list0);
      assertEquals(2, list0.size());
      assertFalse(list0.isEmpty());
      
      String string3 = httpUrl_Builder2.toString();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", string3);
      assertNotNull(string3);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      HttpUrl httpUrl1 = httpUrl_Builder1.build();
      assertNotNull(httpUrl1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl1.encodedPassword());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.username());
      assertEquals("http://www.somefakebutwellformedurl.org/%22':;%3C=%3E@[]%5E%60%7B%7D%7C/?#", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals(2, httpUrl1.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllEncodedQueryParameters("username%20==%20null");
      assertNotNull(httpUrl_Builder3);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder0));
      
      String string4 = MockURL.getPath(uRL1);
      assertEquals("/VgY37+", string4);
      assertNotNull(string4);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("X2~pyXjX0V", uRL1.getRef());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/VgY37+#X2~pyXjX0V", uRL1.toExternalForm());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertNotSame(uRL1, uRL2);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertFalse(uRL1.equals((Object)uRL2));
      
      String string5 = HttpUrl.percentDecode("%2e", false);
      assertEquals(".", string5);
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      
      String string6 = MockURL.getFile(uRL2);
      assertEquals("/fooExample", string6);
      assertNotNull(string6);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getAuthority());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toExternalForm());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL2.toString());
      assertNull(uRL2.getQuery());
      assertEquals("www.somefakebutwellformedurl.org", uRL2.getHost());
      assertNull(uRL2.getRef());
      assertEquals((-1), uRL2.getDefaultPort());
      assertEquals("http", uRL2.getProtocol());
      assertEquals((-1), uRL2.getPort());
      assertNull(uRL2.getUserInfo());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(uRL2, uRL0);
      assertNotSame(uRL2, uRL1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(uRL2.equals((Object)uRL0));
      assertFalse(uRL2.equals((Object)uRL1));
      
      String string7 = httpUrl1.scheme();
      assertEquals("http", string7);
      assertNotNull(string7);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl1.encodedPassword());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.username());
      assertEquals("http://www.somefakebutwellformedurl.org/%22':;%3C=%3E@[]%5E%60%7B%7D%7C/?#", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals(2, httpUrl1.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string5));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder3));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      String string8 = httpUrl0.encodedFragment();
      assertNull(string8);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      boolean boolean1 = httpUrl0.equals(httpUrl_Builder0);
      assertFalse(boolean1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder2);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder1);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder3));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder1));
      assertTrue(boolean1 == boolean0);
      
      HttpUrl httpUrl2 = HttpUrl.parse("");
      assertNull(httpUrl2);
      
      String string9 = httpUrl1.query();
      assertEquals("", string9);
      assertNotNull(string9);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.username());
      assertEquals("", httpUrl1.encodedPassword());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.username());
      assertEquals("http://www.somefakebutwellformedurl.org/%22':;%3C=%3E@[]%5E%60%7B%7D%7C/?#", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals(2, httpUrl1.pathSize());
      assertNotSame(uRL0, uRL2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(uRL0.equals((Object)uRL2));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(string9.equals((Object)string3));
      assertTrue(string9.equals((Object)string0));
      assertTrue(string9.equals((Object)string1));
      assertTrue(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string4));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder3));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e.");
      assertNotNull(httpUrl_Builder0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(2);
      assertNotNull(httpUrl_Builder3);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.addPathSegment("%2e.");
      assertNotNull(httpUrl_Builder4);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder1);
      assertNotNull(httpUrl1);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl1.encodedFragment());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.username());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertNull(httpUrl1.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org:2/%252e./%252e.", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(0, httpUrl1.querySize());
      assertEquals(2, httpUrl1.port());
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder1.removeAllEncodedQueryParameters("/");
      assertNotNull(httpUrl_Builder5);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder2.removeAllEncodedQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder6);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder5);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      HttpUrl.Builder httpUrl_Builder7 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder7);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder6);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder2);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder4);
      assertNotSame(httpUrl_Builder7, httpUrl_Builder5);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder3));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder6));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder4));
      assertFalse(httpUrl_Builder7.equals((Object)httpUrl_Builder5));
      
      HttpUrl.Builder httpUrl_Builder8 = httpUrl_Builder2.removeAllEncodedQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder8);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder8);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder7);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder8);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder5);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder7);
      assertSame(httpUrl_Builder8, httpUrl_Builder1);
      assertSame(httpUrl_Builder8, httpUrl_Builder2);
      assertSame(httpUrl_Builder8, httpUrl_Builder3);
      assertSame(httpUrl_Builder8, httpUrl_Builder6);
      assertNotSame(httpUrl_Builder8, httpUrl_Builder7);
      assertSame(httpUrl_Builder8, httpUrl_Builder0);
      assertSame(httpUrl_Builder8, httpUrl_Builder4);
      assertSame(httpUrl_Builder8, httpUrl_Builder5);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder7));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder7));
      assertFalse(httpUrl_Builder8.equals((Object)httpUrl_Builder7));
      
      HttpUrl httpUrl2 = httpUrl0.resolve("/");
      assertNotNull(httpUrl2);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl2.scheme());
      assertEquals("", httpUrl2.username());
      assertNull(httpUrl2.encodedFragment());
      assertEquals(1, httpUrl2.pathSize());
      assertEquals("", httpUrl2.encodedPassword());
      assertEquals("", httpUrl2.password());
      assertEquals("http://www.somefakebutwellformedurl.org/", httpUrl2.toString());
      assertFalse(httpUrl2.isHttps());
      assertEquals(80, httpUrl2.port());
      assertEquals(0, httpUrl2.querySize());
      assertNull(httpUrl2.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertNotSame(httpUrl0, httpUrl2);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl2, httpUrl0);
      assertNotSame(httpUrl2, httpUrl1);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      
      HttpUrl.Builder httpUrl_Builder9 = httpUrl_Builder1.host("2.");
      assertNotNull(httpUrl_Builder9);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNotSame(httpUrl_Builder9, httpUrl_Builder7);
      assertSame(httpUrl_Builder9, httpUrl_Builder8);
      assertSame(httpUrl_Builder9, httpUrl_Builder2);
      assertSame(httpUrl_Builder9, httpUrl_Builder6);
      assertSame(httpUrl_Builder9, httpUrl_Builder3);
      assertSame(httpUrl_Builder9, httpUrl_Builder1);
      assertSame(httpUrl_Builder9, httpUrl_Builder0);
      assertSame(httpUrl_Builder9, httpUrl_Builder4);
      assertSame(httpUrl_Builder9, httpUrl_Builder5);
      assertNotSame(httpUrl0, httpUrl2);
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder8);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder9);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder7);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertNotSame(httpUrl_Builder1, httpUrl_Builder7);
      assertSame(httpUrl_Builder1, httpUrl_Builder8);
      assertSame(httpUrl_Builder1, httpUrl_Builder6);
      assertSame(httpUrl_Builder1, httpUrl_Builder9);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertFalse(httpUrl_Builder9.equals((Object)httpUrl_Builder7));
      assertFalse(httpUrl0.equals((Object)httpUrl2));
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder7));
      assertFalse(httpUrl_Builder1.equals((Object)httpUrl_Builder7));
      
      // Undeclared exception!
      try { 
        httpUrl_Builder9.setPathSegment(2, "2.");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      String string0 = "kBNsI~ttFR# c%);/8";
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      
      HttpUrl httpUrl1 = httpUrl0.resolve("");
      assertNotNull(httpUrl1);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertEquals(1, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("", httpUrl1.password());
      assertNull(httpUrl1.encodedFragment());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl1, httpUrl0);
      assertTrue(httpUrl1.equals((Object)httpUrl0));
      
      Set<String> set0 = httpUrl1.queryParameterNames();
      assertNotNull(set0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertEquals(1, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("", httpUrl1.password());
      assertNull(httpUrl1.encodedFragment());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl1, httpUrl0);
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl1.equals((Object)httpUrl0));
      
      URL uRL1 = httpUrl0.url();
      assertNotNull(uRL1);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getHost());
      assertNull(uRL1.getQuery());
      assertEquals("www.somefakebutwellformedurl.org", uRL1.getAuthority());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toExternalForm());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getRef());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRL1.toString());
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(uRL1, uRL0);
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      assertFalse(uRL1.equals((Object)uRL0));
      
      String string1 = "http:/";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("http:/");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegments("http:/");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl httpUrl2 = httpUrl1.resolve("^`{|}");
      assertNotNull(httpUrl2);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertEquals(1, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("", httpUrl1.password());
      assertNull(httpUrl1.encodedFragment());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl2.scheme());
      assertEquals("", httpUrl2.username());
      assertNull(httpUrl2.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertFalse(httpUrl2.isHttps());
      assertEquals("", httpUrl2.password());
      assertEquals(80, httpUrl2.port());
      assertEquals("", httpUrl2.encodedPassword());
      assertEquals(1, httpUrl2.pathSize());
      assertEquals("http://www.somefakebutwellformedurl.org/%5E%60%7B%7C%7D", httpUrl2.toString());
      assertNull(httpUrl2.encodedFragment());
      assertEquals(0, httpUrl2.querySize());
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl2);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl1, httpUrl0);
      assertNotSame(httpUrl1, httpUrl2);
      assertNotSame(httpUrl2, httpUrl0);
      assertNotSame(httpUrl2, httpUrl1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl1.equals((Object)httpUrl0));
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      
      List<String> list0 = httpUrl2.queryParameterValues("^`{|}");
      assertNotNull(list0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.encodedPassword());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertEquals(1, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("", httpUrl1.password());
      assertNull(httpUrl1.encodedFragment());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl2.scheme());
      assertEquals("", httpUrl2.username());
      assertNull(httpUrl2.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertFalse(httpUrl2.isHttps());
      assertEquals("", httpUrl2.password());
      assertEquals(80, httpUrl2.port());
      assertEquals("", httpUrl2.encodedPassword());
      assertEquals(1, httpUrl2.pathSize());
      assertEquals("http://www.somefakebutwellformedurl.org/%5E%60%7B%7C%7D", httpUrl2.toString());
      assertNull(httpUrl2.encodedFragment());
      assertEquals(0, httpUrl2.querySize());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNotSame(uRL0, uRL1);
      assertNotSame(httpUrl0, httpUrl2);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl1, httpUrl0);
      assertNotSame(httpUrl1, httpUrl2);
      assertNotSame(httpUrl2, httpUrl0);
      assertNotSame(httpUrl2, httpUrl1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(httpUrl0.equals((Object)httpUrl2));
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      assertTrue(httpUrl1.equals((Object)httpUrl0));
      assertFalse(httpUrl1.equals((Object)httpUrl2));
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedPathSegment(1420, "");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1420, Size: 3
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      
      boolean boolean0 = httpUrl0.isHttps();
      assertFalse(boolean0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      
      int int0 = HttpUrl.defaultPort("njur1o1c(f~2J");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e.");
      assertNotNull(httpUrl_Builder0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      String string0 = httpUrl0.encodedQuery();
      assertNull(string0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder2);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.query("\u2026]");
      assertNotNull(httpUrl_Builder3);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder1.setEncodedQueryParameter("", "");
      assertNotNull(httpUrl_Builder4);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder0);
      assertNotNull(httpUrl1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl1.scheme());
      assertNull(httpUrl1.fragment());
      assertEquals(1, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.password());
      assertEquals(2, httpUrl1.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/%252e.?%E2%80%A6]&=", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.username());
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      List<String> list0 = httpUrl1.queryParameterValues("\u2026]");
      assertNotNull(list0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http", httpUrl1.scheme());
      assertNull(httpUrl1.fragment());
      assertEquals(1, httpUrl1.pathSize());
      assertFalse(httpUrl1.isHttps());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.password());
      assertEquals(2, httpUrl1.querySize());
      assertEquals("http://www.somefakebutwellformedurl.org/%252e.?%E2%80%A6]&=", httpUrl1.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.username());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      try { 
        HttpUrl.getChecked("https");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for https
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%Me.");
      assertNotNull(httpUrl_Builder0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%Me.");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("%Me.");
      assertNotNull(httpUrl_Builder1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray1 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray1);
      assertNotSame(httpUrl_Builder_ParseResultArray1, httpUrl_Builder_ParseResultArray0);
      assertFalse(httpUrl_Builder_ParseResultArray1.equals((Object)httpUrl_Builder_ParseResultArray0));
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegments("%2e.");
      assertNotNull(httpUrl_Builder2);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.password("timeout");
      assertNotNull(httpUrl_Builder3);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder2.addQueryParameter("KKE]", "KKE]");
      assertNotNull(httpUrl_Builder4);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder4);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      
      String string0 = httpUrl_Builder1.toString();
      assertEquals("http://%25Me.:timeout@www.somefakebutwellformedurl.org/?KKE]=KKE]", string0);
      assertNotNull(string0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder1.addEncodedPathSegment("%Me.");
      assertNotNull(httpUrl_Builder5);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder5.addPathSegment("MD5");
      assertNotNull(httpUrl_Builder6);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.password());
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder6);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      assertSame(httpUrl_Builder5, httpUrl_Builder6);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
      
      HttpUrl httpUrl1 = HttpUrl.parse("%2e.");
      assertNull(httpUrl1);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%2e.");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      HttpUrl httpUrl2 = HttpUrl.getChecked("http://%25Me.:timeout@www.somefakebutwellformedurl.org/?KKE]=KKE]");
      assertNotNull(httpUrl2);
      assertEquals(80, httpUrl2.port());
      assertEquals("timeout", httpUrl2.password());
      assertEquals("timeout", httpUrl2.encodedPassword());
      assertEquals(1, httpUrl2.pathSize());
      assertNull(httpUrl2.encodedFragment());
      assertEquals("%Me.", httpUrl2.username());
      assertEquals(1, httpUrl2.querySize());
      assertEquals("http", httpUrl2.scheme());
      assertNull(httpUrl2.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertFalse(httpUrl2.isHttps());
      assertEquals("http://%25Me.:timeout@www.somefakebutwellformedurl.org/?KKE]=KKE]", httpUrl2.toString());
      assertNotSame(httpUrl2, httpUrl0);
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      
      StringBuilder stringBuilder0 = new StringBuilder();
      assertNotNull(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      StringBuilder stringBuilder1 = new StringBuilder("MD5");
      assertNotNull(stringBuilder1);
      assertEquals("MD5", stringBuilder1.toString());
      assertFalse(stringBuilder1.equals((Object)stringBuilder0));
      
      Set<String> set0 = httpUrl2.queryParameterNames();
      assertNotNull(set0);
      assertEquals(80, httpUrl2.port());
      assertEquals("timeout", httpUrl2.password());
      assertEquals("timeout", httpUrl2.encodedPassword());
      assertEquals(1, httpUrl2.pathSize());
      assertNull(httpUrl2.encodedFragment());
      assertEquals("%Me.", httpUrl2.username());
      assertEquals(1, httpUrl2.querySize());
      assertEquals("http", httpUrl2.scheme());
      assertNull(httpUrl2.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertFalse(httpUrl2.isHttps());
      assertEquals("http://%25Me.:timeout@www.somefakebutwellformedurl.org/?KKE]=KKE]", httpUrl2.toString());
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertNotSame(httpUrl2, httpUrl0);
      assertFalse(httpUrl2.equals((Object)httpUrl0));
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.someCakebutwellformedurl.org/fooexample");
      assertNotNull(httpUrl0);
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertTrue(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("https", httpUrl0.scheme());
      assertEquals("www.somecakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("https://www.somecakebutwellformedurl.org/fooexample", httpUrl0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(443, httpUrl0.port());
      assertEquals(1, httpUrl0.pathSize());
      
      URL uRL0 = httpUrl0.url();
      assertNotNull(uRL0);
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertTrue(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("https", httpUrl0.scheme());
      assertEquals("www.somecakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("https://www.somecakebutwellformedurl.org/fooexample", httpUrl0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(443, httpUrl0.port());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.somecakebutwellformedurl.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.somecakebutwellformedurl.org", uRL0.getAuthority());
      assertEquals("https", uRL0.getProtocol());
      assertEquals("https://www.somecakebutwellformedurl.org/fooexample", uRL0.toExternalForm());
      assertEquals("https://www.somecakebutwellformedurl.org/fooexample", uRL0.toString());
      
      String string0 = "XEn!";
      String string1 = HttpUrl.percentDecode("XEn!", false);
      assertEquals("XEn!", string1);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.effectivePort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      boolean boolean0 = httpUrl0.equals(httpUrl0);
      assertTrue(boolean0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      
      int int0 = httpUrl0.querySize();
      assertEquals(0, int0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.password());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e.");
      assertNotNull(httpUrl_Builder0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      
      String string0 = httpUrl0.encodedQuery();
      assertNull(string0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("\u2026]");
      assertNotNull(httpUrl_Builder2);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.setEncodedQueryParameter("size=%s offset=%s byteCount=%s", "%2e.");
      assertNotNull(httpUrl_Builder3);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.removeAllQueryParameters("%2e.");
      assertNotNull(httpUrl_Builder4);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder3.port(2);
      assertNotNull(httpUrl_Builder5);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder0);
      assertSame(httpUrl_Builder5, httpUrl_Builder4);
      assertSame(httpUrl_Builder5, httpUrl_Builder2);
      assertSame(httpUrl_Builder5, httpUrl_Builder1);
      assertSame(httpUrl_Builder5, httpUrl_Builder3);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder4);
      assertNotNull(httpUrl1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(1, httpUrl1.querySize());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(2, httpUrl1.port());
      assertEquals(1, httpUrl1.pathSize());
      assertNull(httpUrl1.fragment());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertEquals("http://www.somefakebutwellformedurl.org:2/?size%3D%s%20offset%3D%s%20byteCount%3D%s=%2e.", httpUrl1.toString());
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = httpUrl1.equals(fileSystemHandling0);
      assertFalse(boolean0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(1, httpUrl1.querySize());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals(2, httpUrl1.port());
      assertEquals(1, httpUrl1.pathSize());
      assertNull(httpUrl1.fragment());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.password());
      assertEquals("http://www.somefakebutwellformedurl.org:2/?size%3D%s%20offset%3D%s%20byteCount%3D%s=%2e.", httpUrl1.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder5);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertTrue(buffer0.exhausted());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertEquals(0L, buffer0.size());
      
      HttpUrl.canonicalize(buffer0, "y(pE`sm", 66, 66, "$z__0SM:", true, false, true, false);
      assertTrue(buffer0.exhausted());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertEquals(0L, buffer0.size());
      
      Buffer buffer1 = new Buffer();
      assertNotNull(buffer1);
      assertEquals(0L, buffer1.completeSegmentByteCount());
      assertEquals(0L, buffer1.size());
      assertTrue(buffer1.exhausted());
      assertTrue(buffer1.equals((Object)buffer0));
      
      String string1 = httpUrl_Builder3.toString();
      assertEquals("http://www.somefakebutwellformedurl.org:2/?size%3D%s%20offset%3D%s%20byteCount%3D%s=%2e.", string1);
      assertNotNull(string1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder4);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder4);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      boolean boolean1 = httpUrl0.isHttps();
      assertFalse(boolean1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertNotSame(httpUrl0, httpUrl1);
      assertTrue(boolean1 == boolean0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder4.addPathSegment("y(pE`sm");
      assertNotNull(httpUrl_Builder6);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.encodedPassword());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http", httpUrl0.scheme());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder6, httpUrl_Builder3);
      assertSame(httpUrl_Builder6, httpUrl_Builder4);
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
      assertSame(httpUrl_Builder6, httpUrl_Builder1);
      assertSame(httpUrl_Builder6, httpUrl_Builder0);
      assertSame(httpUrl_Builder6, httpUrl_Builder5);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertSame(httpUrl_Builder0, httpUrl_Builder6);
      assertSame(httpUrl_Builder0, httpUrl_Builder5);
      assertSame(httpUrl_Builder4, httpUrl_Builder6);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertSame(httpUrl_Builder4, httpUrl_Builder5);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterName(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[:: }:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [:: }:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPath("/");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string0 = "X%ueTMWli[Ga_;";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegment("X%ueTMWli[Ga_;");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllQueryParameters("[text=");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder3.host("/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: /
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("\r");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("239:2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 239:2
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("02.||:7;*,8s$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 02.||:7;*,8s$
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("O;B_=nKywG");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string0 = "duration <= 0: ";
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.password("duration <= 0: ");
      assertNotNull(httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder3);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
      assertSame(httpUrl_Builder3, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder3.host("::4::2nj{<nPs:&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ::4::2nj{<nPs:&
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("2.3|:7;2O,8s$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 2.3|:7;2O,8s$
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = "[23|S:72,D8\\]";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[23|S:72,D8]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [23|S:72,D8]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder(" \"':;<=>@[]^`{}|/?#");
      assertNotNull(httpUrl_Builder0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery(" \"':;<=>@[]^`{}|/?#");
      assertNotNull(httpUrl_Builder1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      int int0 = httpUrl0.port;
      assertEquals(80, int0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      List<String> list0 = httpUrl0.queryParameterValues("sizGe f= 0");
      assertNotNull(list0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder2);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNotSame(httpUrl_Builder2, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder2, httpUrl_Builder1);
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder2.equals((Object)httpUrl_Builder1));
      
      HttpUrl httpUrl1 = httpUrl_Builder0.build();
      assertNotNull(httpUrl1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertEquals("http://www.somefakebutwellformedurl.org/%22':;%3C=%3E@[]%5E%60%7B%7D%7C/?%20%22%27:;%3C=%3E@[]^`{}|/?%23#", httpUrl1.toString());
      assertEquals(80, httpUrl1.port());
      assertFalse(httpUrl1.isHttps());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("", httpUrl1.password());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.encodedPassword());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.port(2048);
      assertNotNull(httpUrl_Builder3);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder3, httpUrl_Builder1);
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder2);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder2));
      
      String string0 = httpUrl1.queryParameter("s~xs[o");
      assertNull(string0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertEquals("http://www.somefakebutwellformedurl.org/%22':;%3C=%3E@[]%5E%60%7B%7D%7C/?%20%22%27:;%3C=%3E@[]^`{}|/?%23#", httpUrl1.toString());
      assertEquals(80, httpUrl1.port());
      assertFalse(httpUrl1.isHttps());
      assertEquals(1, httpUrl1.querySize());
      assertEquals("", httpUrl1.password());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.fragment());
      assertEquals("", httpUrl1.encodedFragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("", httpUrl1.encodedPassword());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder2);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder0.fragment((String) null);
      assertNotNull(httpUrl_Builder4);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(httpUrl0.isHttps());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(80, httpUrl0.port());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder4);
      assertNotSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder4, httpUrl_Builder3);
      assertSame(httpUrl_Builder4, httpUrl_Builder1);
      assertSame(httpUrl_Builder4, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder4, httpUrl_Builder2);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl_Builder4.equals((Object)httpUrl_Builder2));
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder(" \"';<=>@[]^`{}:/?#");
      assertNotNull(httpUrl_Builder0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(80, httpUrl0.port());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertNull(httpUrl0.encodedFragment());
      
      String string0 = MockURL.getProtocol(uRL0);
      assertEquals("http", string0);
      assertNotNull(string0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      boolean boolean3 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      int int0 = 2;
      String string1 = "ec4";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(2, "ec4");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      String string0 = "glw;d";
      String string1 = httpUrl0.queryParameter("glw;d");
      assertNull(string1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      boolean boolean1 = httpUrl0.isHttps();
      assertFalse(boolean1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      assertFalse(boolean1 == boolean0);
      
      String string2 = httpUrl0.encodedQuery();
      assertNull(string2);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      int int0 = httpUrl0.querySize();
      assertEquals(0, int0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      HttpUrl httpUrl1 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl1);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(1, httpUrl1.pathSize());
      assertNotSame(httpUrl1, httpUrl0);
      assertTrue(httpUrl1.equals((Object)httpUrl0));
      
      httpUrl_Builder0.parse(httpUrl0, "glw;d");
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      assertNotSame(httpUrl0, httpUrl1);
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      
      List<String> list0 = httpUrl0.encodedPathSegments();
      assertNotNull(list0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotSame(httpUrl0, httpUrl1);
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("glw;d");
      assertNotNull(httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      String string3 = "zaJyl)tl@;:[@(pKXU";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.setQueryParameter("zaJyl)tl@;:[@(pKXU", "zaJyl)tl@;:[@(pKXU");
      assertNotNull(httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      HttpUrl httpUrl2 = new HttpUrl(httpUrl_Builder0);
      assertNotNull(httpUrl2);
      assertEquals("glw;d", httpUrl2.username());
      assertEquals(80, httpUrl2.port());
      assertEquals("", httpUrl2.encodedPassword());
      assertFalse(httpUrl2.isHttps());
      assertEquals("", httpUrl2.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertNull(httpUrl2.fragment());
      assertNull(httpUrl2.encodedFragment());
      assertEquals("http://glw%3Bd@www.somefakebutwellformedurl.org/glw;d?zaJyl)tl@;:[@(pKXU=zaJyl)tl@;:[@(pKXU", httpUrl2.toString());
      assertEquals("http", httpUrl2.scheme());
      assertEquals(1, httpUrl2.pathSize());
      assertEquals(1, httpUrl2.querySize());
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      
      HttpUrl.Builder httpUrl_Builder3 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder3);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertFalse(httpUrl0.isHttps());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertNull(httpUrl0.fragment());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      assertNotSame(httpUrl_Builder3, httpUrl_Builder1);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder0);
      assertNotSame(httpUrl_Builder3, httpUrl_Builder2);
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl0, httpUrl2);
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder1));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder0));
      assertFalse(httpUrl_Builder3.equals((Object)httpUrl_Builder2));
      assertFalse(httpUrl0.equals((Object)httpUrl2));
      assertTrue(httpUrl0.equals((Object)httpUrl1));
      
      String string4 = httpUrl2.queryParameter("zaJyl)tl@;:[@(pKXU");
      assertEquals("zaJyl)tl@;:[@(pKXU", string4);
      assertNotNull(string4);
      assertEquals("glw;d", httpUrl2.username());
      assertEquals(80, httpUrl2.port());
      assertEquals("", httpUrl2.encodedPassword());
      assertFalse(httpUrl2.isHttps());
      assertEquals("", httpUrl2.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertNull(httpUrl2.fragment());
      assertNull(httpUrl2.encodedFragment());
      assertEquals("http://glw%3Bd@www.somefakebutwellformedurl.org/glw;d?zaJyl)tl@;:[@(pKXU=zaJyl)tl@;:[@(pKXU", httpUrl2.toString());
      assertEquals("http", httpUrl2.scheme());
      assertEquals(1, httpUrl2.pathSize());
      assertEquals(1, httpUrl2.querySize());
      assertNotSame(httpUrl_Builder0, httpUrl_Builder3);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertNotSame(httpUrl2, httpUrl1);
      assertNotSame(httpUrl2, httpUrl0);
      assertFalse(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string3));
      assertFalse(httpUrl_Builder0.equals((Object)httpUrl_Builder3));
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      
      boolean boolean2 = httpUrl1.isHttps();
      assertFalse(boolean2);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertFalse(httpUrl1.isHttps());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("", httpUrl1.password());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl1.toString());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("", httpUrl1.username());
      assertEquals("http", httpUrl1.scheme());
      assertEquals(1, httpUrl1.pathSize());
      assertNotSame(httpUrl1, httpUrl2);
      assertNotSame(httpUrl1, httpUrl0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(httpUrl1.equals((Object)httpUrl2));
      assertTrue(httpUrl1.equals((Object)httpUrl0));
      
      // Undeclared exception!
      try { 
        httpUrl0.resolve((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      boolean boolean3 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean3);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder(" \"';<=>@[]^`{}:/?#");
      assertNotNull(httpUrl_Builder0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", httpUrl0.scheme());
      assertNull(httpUrl0.fragment());
      assertNull(httpUrl0.encodedFragment());
      assertEquals("", httpUrl0.password());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(0, httpUrl0.querySize());
      assertEquals(80, httpUrl0.port());
      assertFalse(httpUrl0.isHttps());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals("", httpUrl0.username());
      
      String string0 = MockURL.getProtocol(uRL0);
      assertEquals("http", string0);
      assertNotNull(string0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      boolean boolean4 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(2, "http");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      HttpUrl httpUrl0 = HttpUrl.parse("https:%7+[a]mx=[avym");
      assertNull(httpUrl0);
      
      Buffer buffer0 = new Buffer();
      assertNotNull(buffer0);
      assertEquals(0L, buffer0.size());
      assertEquals(0L, buffer0.completeSegmentByteCount());
      assertTrue(buffer0.exhausted());
      
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      assertNotNull(httpUrl_Builder0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("2::8");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      
      boolean boolean0 = httpUrl0.equals(httpUrl0);
      assertTrue(boolean0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      
      String string0 = "f0tu3[u44OG-0>Hl";
      List<String> list0 = httpUrl0.pathSegments();
      assertNotNull(list0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("f0tu3[u44OG-0>Hl");
      assertNotNull(httpUrl_Builder1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegments("f0tu3[u44OG-0>Hl");
      assertNotNull(httpUrl_Builder2);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      
      String string1 = httpUrl_Builder0.toString();
      assertEquals("http://f0tu3%5Bu44OG-0%3EHl@www.somefakebutwellformedurl.org/fooExample/f0tu3[u44OG-0%3EHl", string1);
      assertNotNull(string1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", httpUrl0.scheme());
      assertEquals("", httpUrl0.username());
      assertNull(httpUrl0.fragment());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals(80, httpUrl0.port());
      assertNull(httpUrl0.encodedFragment());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertFalse(httpUrl0.isHttps());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertFalse(string1.equals((Object)string0));
      
      HttpUrl httpUrl1 = HttpUrl.parse("http://f0tu3%5Bu44OG-0%3EHl@www.somefakebutwellformedurl.org/fooExample/f0tu3[u44OG-0%3EHl");
      assertNotNull(httpUrl1);
      assertNull(httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("f0tu3[u44OG-0>Hl", httpUrl1.username());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals(0, httpUrl1.querySize());
      assertFalse(httpUrl1.isHttps());
      assertEquals(80, httpUrl1.port());
      assertEquals("", httpUrl1.password());
      assertEquals("http://f0tu3%5Bu44OG-0%3EHl@www.somefakebutwellformedurl.org/fooExample/f0tu3[u44OG-0%3EHl", httpUrl1.toString());
      assertEquals("", httpUrl1.encodedPassword());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertNull(httpUrl1.fragment());
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("f0tu3[u44OG-0>Hl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: f0tu3[u44OG-0>Hl
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      assertNotNull(httpUrl_Builder0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      
      boolean boolean0 = httpUrl0.equals(httpUrl0);
      assertTrue(boolean0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      
      String string0 = "Wf0tu3[u44OG-0>pl";
      List<String> list0 = httpUrl0.pathSegments();
      assertNotNull(list0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("Wf0tu3[u44OG-0>pl");
      assertNotNull(httpUrl_Builder1);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      
      HttpUrl.Builder.ParseResult[] httpUrl_Builder_ParseResultArray0 = HttpUrl.Builder.ParseResult.values();
      assertNotNull(httpUrl_Builder_ParseResultArray0);
      
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegments("Wf0tu3[u44OG-0>pl");
      assertNotNull(httpUrl_Builder2);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertSame(httpUrl_Builder2, httpUrl_Builder1);
      assertSame(httpUrl_Builder2, httpUrl_Builder0);
      
      String string1 = MockURL.getAuthority(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", string1);
      assertNotNull(string1);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertFalse(string1.equals((Object)string0));
      
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder1);
      assertNotNull(httpUrl1);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.password());
      assertFalse(httpUrl1.isHttps());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.encodedPassword());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("Wf0tu3[u44OG-0>pl", httpUrl1.username());
      assertEquals("http://Wf0tu3%5Bu44OG-0%3Epl@www.somefakebutwellformedurl.org/fooExample/Wf0tu3[u44OG-0%3Epl", httpUrl1.toString());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      Set<String> set0 = httpUrl1.queryParameterNames();
      assertNotNull(set0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.password());
      assertFalse(httpUrl1.isHttps());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.encodedPassword());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("Wf0tu3[u44OG-0>pl", httpUrl1.username());
      assertEquals("http://Wf0tu3%5Bu44OG-0%3Epl@www.somefakebutwellformedurl.org/fooExample/Wf0tu3[u44OG-0%3Epl", httpUrl1.toString());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      
      String string2 = MockURL.getQuery(uRL0);
      assertNull(string2);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      
      String string3 = httpUrl1.toString();
      assertEquals("http://Wf0tu3%5Bu44OG-0%3Epl@www.somefakebutwellformedurl.org/fooExample/Wf0tu3[u44OG-0%3Epl", string3);
      assertNotNull(string3);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.password());
      assertFalse(httpUrl1.isHttps());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.encodedPassword());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("Wf0tu3[u44OG-0>pl", httpUrl1.username());
      assertEquals("http://Wf0tu3%5Bu44OG-0%3Epl@www.somefakebutwellformedurl.org/fooExample/Wf0tu3[u44OG-0%3Epl", httpUrl1.toString());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertNotSame(httpUrl0, httpUrl1);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl1, httpUrl0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      HttpUrl httpUrl2 = httpUrl1.resolve("www.someFakeButWellFormedURL.org");
      assertNotNull(httpUrl2);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl0.host());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(httpUrl0.isHttps());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("", httpUrl0.password());
      assertNull(httpUrl0.encodedFragment());
      assertNull(httpUrl0.fragment());
      assertEquals("", httpUrl0.encodedPassword());
      assertEquals(80, httpUrl0.port());
      assertEquals("", httpUrl0.username());
      assertEquals(0, httpUrl0.querySize());
      assertEquals("http", httpUrl0.scheme());
      assertEquals(2, httpUrl1.pathSize());
      assertEquals("", httpUrl1.password());
      assertFalse(httpUrl1.isHttps());
      assertNull(httpUrl1.encodedFragment());
      assertEquals("http", httpUrl1.scheme());
      assertEquals("", httpUrl1.encodedPassword());
      assertNull(httpUrl1.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl1.host());
      assertEquals("Wf0tu3[u44OG-0>pl", httpUrl1.username());
      assertEquals("http://Wf0tu3%5Bu44OG-0%3Epl@www.somefakebutwellformedurl.org/fooExample/Wf0tu3[u44OG-0%3Epl", httpUrl1.toString());
      assertEquals(80, httpUrl1.port());
      assertEquals(0, httpUrl1.querySize());
      assertEquals("", httpUrl2.encodedPassword());
      assertEquals(2, httpUrl2.pathSize());
      assertEquals(80, httpUrl2.port());
      assertFalse(httpUrl2.isHttps());
      assertEquals("", httpUrl2.password());
      assertNull(httpUrl2.encodedFragment());
      assertEquals(0, httpUrl2.querySize());
      assertNull(httpUrl2.fragment());
      assertEquals("www.somefakebutwellformedurl.org", httpUrl2.host());
      assertEquals("http", httpUrl2.scheme());
      assertEquals("Wf0tu3[u44OG-0>pl", httpUrl2.username());
      assertEquals("http://Wf0tu3%5Bu44OG-0%3Epl@www.somefakebutwellformedurl.org/fooExample/www.someFakeButWellFormedURL.org", httpUrl2.toString());
      assertNotSame(httpUrl0, httpUrl1);
      assertNotSame(httpUrl0, httpUrl2);
      assertSame(httpUrl_Builder0, httpUrl_Builder2);
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
      assertSame(httpUrl_Builder1, httpUrl_Builder2);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
      assertNotSame(httpUrl1, httpUrl0);
      assertNotSame(httpUrl1, httpUrl2);
      assertNotSame(httpUrl2, httpUrl1);
      assertNotSame(httpUrl2, httpUrl0);
      assertFalse(httpUrl0.equals((Object)httpUrl1));
      assertFalse(httpUrl1.equals((Object)httpUrl0));
      assertFalse(httpUrl2.equals((Object)httpUrl1));
      assertFalse(httpUrl2.equals((Object)httpUrl0));
      
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("Wf0tu3[u44OG-0>pl");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: Wf0tu3[u44OG-0>pl
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("0}cIgyVl:?4@I%8$h-");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllQueryParameters("[239:2");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.fragment((String) null);
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.setEncodedPathSegment(0, "4k:cMF0");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.encodedQuery("beginIndex < 0: ");
      httpUrl_Builder5.setQueryParameter("beginIndex < 0: ", "4k:cMF0");
      StringBuilder stringBuilder0 = new StringBuilder("[239:2");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedPathSegment(0, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HttpUrl.Builder.ParseResult.values();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllEncodedQueryParameters("encodedPassword == null");
      httpUrl_Builder0.fragment("encodedPassword == null");
      String string0 = ":@";
      int int0 = 92;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(92, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }
}
