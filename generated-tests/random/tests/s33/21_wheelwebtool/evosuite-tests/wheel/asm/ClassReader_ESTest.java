/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 17:50:19 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      classReader0.getClassName();
      classReader0.readByte((byte)22);
      // Undeclared exception!
      try { 
        classReader0.getItem(480);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 480
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LineNumberTable");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = 2330;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 2330);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassVisitor classVisitor0 = null;
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = '9';
      classReader0.getInterfaces();
      charArray0[2] = '<';
      charArray0[3] = '^';
      charArray0[4] = '6';
      charArray0[5] = ')';
      charArray0[6] = 'S';
      charArray0[2] = 'J';
      charArray0[8] = 'O';
      // Undeclared exception!
      try { 
        classReader0.readConst(10, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      assertEquals(830, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      classReader0.accept((ClassVisitor) classWriter0, (int) (byte) (-1));
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/ByteVector", string0);
      
      int int0 = classReader0.readByte((byte)22);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)62;
      byte byte0 = (byte)3;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)16;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-8), (byte) (-8));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassVisitor classVisitor0 = null;
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = '9';
      charArray0[2] = '<';
      charArray0[3] = '^';
      charArray0[4] = '6';
      charArray0[5] = ')';
      charArray0[6] = 'S';
      charArray0[7] = 'J';
      charArray0[8] = 'O';
      // Undeclared exception!
      try { 
        classReader0.readConst(10, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]-");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-62);
      byteArray0[4] = (byte) (-72);
      byteArray0[5] = (byte) (-84);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-5), (byte) (-72));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.addType("wheel.asm.ClassReader");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "X%M7_Llk<";
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 'P';
      charArray0[2] = '$';
      charArray0[3] = '+';
      charArray0[4] = '\"';
      charArray0[5] = '2';
      charArray0[6] = '~';
      charArray0[7] = '9';
      // Undeclared exception!
      try { 
        classReader0.readClass(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      assertEquals(830, classReader0.header);
      
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/ByteVector", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "java/lang/Class";
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)123;
      byteArray0[0] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)123, (byte)123);
      byteArrayInputStream0.skip(0L);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte) (-70);
      byte byte0 = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)124;
      byteArray0[5] = (byte)58;
      byteArray0[6] = (byte) (-15);
      byteArray0[7] = (byte) (-47);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("v1pf/V]3f");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassWriter classWriter0 = new ClassWriter((-2022));
      classWriter0.toByteArray();
      int int0 = 149;
      classReader0.accept((ClassVisitor) classWriter0, 149);
      classReader0.readLong(10);
      // Undeclared exception!
      try { 
        classReader0.readLong(4371);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4371
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3065);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.getSuperName();
      classWriter0.visitOuterClass("StackMapTable", "DiX8;<_0ul", "wheel.asm.Type");
      int int0 = (-97);
      classReader0.accept((ClassVisitor) classWriter0, (-97));
      classReader0.getInterfaces();
      int int1 = (-276);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, (-97));
      // Undeclared exception!
      try { 
        classReader0.readInt((-276));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -276
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("$9YuNpB=@4T`;rM_");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte) (-20);
      byteArray0[2] = (byte) (-79);
      byte byte0 = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)41;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)99;
      byteArray0[8] = (byte)32;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassWriter classWriter0 = new ClassWriter(9);
      classReader0.copyPool(classWriter0);
      int int0 = ClassReader.EXPAND_FRAMES;
      char[] charArray0 = new char[8];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = 'e';
      charArray0[4] = 'n';
      charArray0[6] = 'b';
      charArray0[7] = '7';
      Object object0 = new Object();
      classReader0.accept((ClassVisitor) classWriter0, 298);
      classReader0.getAccess();
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("LocalVariableTable");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
