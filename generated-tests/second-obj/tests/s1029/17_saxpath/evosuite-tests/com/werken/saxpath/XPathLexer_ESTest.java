/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 14:18:04 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r9E9");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.isIdentifierChar(';');
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jmy=4G(TRK@L[Y");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.getPreviousToken();
      assertEquals((-1), token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+");
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      xPathLexer0.or();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("+Jhe&R]SaEGja Q");
      xPathLexer0.rightBracket();
      xPathLexer4.nextToken();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer5.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.slashes();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Uc!Z]{jvO");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Uc", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      String string0 = token1.toString();
      assertEquals("[ (26) (!)", string0);
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:u=9");
      Token token0 = xPathLexer0.whitespace();
      token0.toString();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.nextToken();
      assertEquals("X-T{:u=9", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:u=9");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      Token token2 = xPathLexer0.colon();
      assertEquals("-", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (22) (hX)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.nextToken();
      assertEquals("T", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}d1hg");
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1435));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EP");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("EP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("EP", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jmyz4G([@h[Y");
      Token token0 = xPathLexer0.colon();
      Token token1 = xPathLexer0.pipe();
      assertEquals("m", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("j", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.isIdentifierChar('\u001E');
      Token token2 = xPathLexer0.slashes();
      String string0 = token2.toString();
      assertEquals("[ (11) (y)", string0);
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("4", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.consume(46);
      xPathLexer0.consume(12);
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "ghX-T{:u=9";
      XPathLexer xPathLexer0 = new XPathLexer("74x*c");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jmyz4G([@h[Y");
      Token token0 = xPathLexer0.colon();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("yz", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.isIdentifierChar('\u001E');
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("4", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("jmyz4G([@h[Y");
      xPathLexer1.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (18) (j)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("IB{h");
      Token token0 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("I;60.|zMt3}?6 7#9");
      Token token1 = xPathLexer1.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (I)", string0);
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("I;60.|zMt3}?6 7#9");
      xPathLexer1.endPosition();
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("I", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("");
      boolean boolean0 = xPathLexer4.hasMoreChars();
      assertFalse(boolean0);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer3.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer1.consume();
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("0", token6.getTokenText());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("L", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.pipe();
      assertEquals("b", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ZQZr", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.consume(1);
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:u=9");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (gh)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("X-T", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j]Km");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals(15, token0.getTokenType());
      assertEquals("[ (15) (j)", string0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals("]", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("k.8DNDvT>");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = new Token(1309, "k.8DNDvT>", 1309, 1309);
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.at();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZJ^V\"Q~");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(2, token0.getTokenType());
      assertEquals("Z", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("V\"", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals("V\"Q~", token2.getTokenText());
      
      xPathLexer0.getXPath();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.plus();
      assertEquals("[", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (1) (()", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZJ^V\"Q~");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      boolean boolean0 = xPathLexer0.isIdentifierChar('x');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(6, token1.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:C9");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      token0.toString();
      Token token1 = xPathLexer1.equals();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(":j?z}#<u-C");
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.endPosition();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(":j?z}#<u-C");
      assertEquals(":j?z}#<u-C", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(1);
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j]Km");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Uoy@HHh ;\"u");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.not();
      token0.toString();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      token2.toString();
      xPathLexer0.consume();
      assertEquals("Uoy@HHh ;\"u", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (1) (()", string0);
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(1, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".aiq6");
      Token token0 = xPathLexer0.minus();
      assertEquals(".", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.pipe();
      assertEquals("a", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("q6", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = ",d";
      XPathLexer xPathLexer0 = new XPathLexer("}L=s`r(U/|ij8$");
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string1 = "oUrY^.KL8sZSmu=G~";
      xPathLexer1.setXPath("oUrY^.KL8sZSmu=G~");
      xPathLexer0.consume(17);
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pkvb<9b7K#");
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      xPathLexer0.equals();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.operatorName();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pkvb<9b7cI");
      Token token0 = xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.at();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+.A");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      int int0 = (-172);
      xPathLexer0.consume((-172));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("|-ey{\"jSx_Xj#(R");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("arC 5i^aEbQX/;T");
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("}N;hheK2Em5:^ZZSY");
      Token token0 = xPathLexer1.comma();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer2.consume();
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")YxIwM+");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("arCi^aE*ebQXB/;T");
      token0.toString();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.plus();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("arC 5i^aEbQX/;T");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer1.number();
      xPathLexer0.number();
      xPathLexer2.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      Token token1 = xPathLexer0.equals();
      xPathLexer0.plus();
      token1.toString();
      xPathLexer0.rightBracket();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.endPosition();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8uws^=BA>,(;&j3L_q");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      xPathLexer1.setPreviousToken(token1);
      assertEquals(17, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("%b/Cnfi'i#<RXwIT8");
      xPathLexer2.isIdentifierChar('R');
      Token token2 = xPathLexer0.slashes();
      token2.toString();
      Token token3 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token3);
      String string0 = token2.toString();
      assertEquals("[ (11) (u)", string0);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("s^=BA>,(;&j3L_q", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.star();
      assertEquals("%", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer2.setPreviousToken(token3);
      assertEquals((-2), token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y/5T%AU?");
      Token token0 = xPathLexer0.slashes();
      assertEquals("y/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$*vTaH");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer0.hasMoreChars();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer(":(p]TCl?'5SpP7:G^");
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:u=9");
      Token token0 = xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sPWoRc[Y0c");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.not();
      token0.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (-2) ()");
      token1.toString();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",d");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      xPathLexer2.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8uws^=BA>,(;&j3L_q");
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.isIdentifierChar('D');
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("uws", token1.getTokenText());
      
      token0.toString();
      Token token2 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (17) (8)", string0);
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.star();
      assertEquals("=", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("B", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w");
      Token token0 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setXPath("w");
      Token token1 = xPathLexer3.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (w)", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(":j?z}#<u-C");
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(":j?z}#<u-C");
      assertEquals(":j?z}#<u-C", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("il");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.and();
      xPathLexer0.setXPath("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:u=9");
      Token token0 = xPathLexer0.notEquals();
      String string0 = token0.toString();
      assertEquals("[ (22) (gh)", string0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("X", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(203);
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jmy=4G(TRK@L[Y");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setXPath("VVR> Rz~9n\"s");
      xPathLexer0.literal();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("arCi^aE*ebQXB/;T");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer("arCi^aE*ebQXB/;T");
      token1.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^*}>i8;a|Q");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer1.colon();
      xPathLexer0.at();
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer();
      assertNull(xPathLexer4.getXPath());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^*}>i8;a|Q");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer1.colon();
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer();
      assertNull(xPathLexer4.getXPath());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("arCi^aE*ebQXB/;T");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".aiq6");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("6", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('T');
      xPathLexer0.and();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("t4U5'VkOM\"C`?a<c6r");
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";Wq;knbt<CxMy`%5bV?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";Wq;knbt<CxMy`%5bV?", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(";", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("W", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:C=9");
      XPathLexer xPathLexer1 = new XPathLexer("ghX-T{:C=9");
      Token token0 = xPathLexer1.slashes();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("`;JjhL$\u0001HQ+Fe>\u0002");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("`;JjhL$\u0001HQ+Fe>\u0002", token1.getTokenText());
      
      Token token2 = xPathLexer2.rightBracket();
      xPathLexer0.setXPath("A");
      String string0 = token2.toString();
      assertEquals("[ (4) (`)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (11) (g)", string1);
      
      xPathLexer1.setXPath("6}=");
      Token token3 = xPathLexer2.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      char char0 = xPathLexer2.LA(1708);
      assertEquals('\uFFFF', char0);
      
      xPathLexer2.nextToken();
      Token token4 = xPathLexer1.number();
      assertEquals("6", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("ghX-T{:C=9");
      xPathLexer4.consume('\uFFFF');
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer1.equals();
      assertEquals("}", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer4.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer4.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.operatorName();
      xPathLexer3.consume();
      xPathLexer3.consume(1708);
      xPathLexer6.div();
      Token token8 = xPathLexer2.getPreviousToken();
      assertEquals("JjhL$\u0001HQ+Fe>\u0002", token8.getTokenText());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = "#B\"Q7A`5g%m1xf/";
      XPathLexer xPathLexer0 = new XPathLexer("#B\"Q7A`5g%m1xf/");
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      token0.toString();
      Token token1 = xPathLexer1.dollar();
      token0.toString();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")fxI$M+");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("arCi^aE*ebQXB/;T");
      token0.toString();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.plus();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Md");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      token0.toString();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token0);
      token1.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      token1.toString();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("= '");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ghX-T{:C=9");
      XPathLexer xPathLexer1 = new XPathLexer("ghX-T{:C=9");
      Token token0 = xPathLexer1.slashes();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("`;JjhL$\u0001HQ+Fe>\u0002");
      xPathLexer2.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("A");
      assertFalse(xPathLexer0.equals((Object)xPathLexer2));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.equals();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer3 = new XPathLexer();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9o");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("1\"@gkjpv1GsC");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(" d", token2.getTokenText());
      
      Token token3 = xPathLexer4.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer6.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer6.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer6.star();
      assertEquals(20, token7.getTokenType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e`/ju0&R@2:8ReI{$");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      xPathLexer1.div();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = "!kNkc_f*a5O5/2J";
      XPathLexer xPathLexer0 = new XPathLexer("!kNkc_f*a5O5/2J");
      Token token0 = xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      token0.toString();
      String string1 = "<dmFN:~\"U";
      xPathLexer0.setXPath("<dmFN:~\"U");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("<dmFN:~\"U");
      Token token1 = xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("%b/Cnfi'i#<RXT8");
      xPathLexer1.or();
      xPathLexer1.setXPath("!=?LX%HU");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (11) (w)", string0);
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(22, token3.getTokenType());
      assertEquals("!=", token3.getTokenText());
      
      Token token4 = xPathLexer2.equals();
      assertEquals("%", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (11) (w)");
      Token token5 = xPathLexer3.plus();
      assertEquals("[", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("\"");
      XPathLexer xPathLexer5 = new XPathLexer("[ (11) (w)");
      xPathLexer1.mod();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.mod();
      XPathLexer xPathLexer8 = new XPathLexer("w");
      XPathLexer xPathLexer9 = new XPathLexer(")");
      Token token6 = xPathLexer9.rightParen();
      assertEquals(")", token6.getTokenText());
      
      XPathLexer xPathLexer10 = new XPathLexer(") (");
      XPathLexer xPathLexer11 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer9.leftParen();
      assertEquals(1, token7.getTokenType());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("joOU%");
      xPathLexer1.consume();
      xPathLexer1.or();
      xPathLexer1.comma();
      Token token1 = xPathLexer1.nextToken();
      token1.toString();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}C^G*S>El.(tc");
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.getXPath();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.consume();
      assertEquals("}C^G*S>El.(tc", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/_`NNq");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("`", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("N", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("N", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('D');
      assertTrue(boolean0);
      
      char char0 = xPathLexer0.LA(731);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%:g#'9_@qvq,Myc");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (:g)");
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.whitespace();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.whitespace();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer3.or();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("k.8DNDvT>");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("k.8DNDvT>");
      Token token1 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.not();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.equals();
      XPathLexer xPathLexer4 = new XPathLexer("[ (2) (k)");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.leftParen();
      xPathLexer3.getXPath();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer2.div();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token2 = xPathLexer10.plus();
      assertEquals(5, token2.getTokenType());
  }
}
