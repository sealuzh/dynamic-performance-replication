/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 14:41:33 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "H";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-fNa";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[5];
      stringArray0[3] = "java.time.chrono.Era";
      boolean boolean0 = true;
      ClassPath classPath0 = new ClassPath("R");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      classPathRepository0.clear();
      java.lang.ClassLoader.getSystemClassLoader();
      classPathRepository0.clear();
      JavaClass javaClass0 = classPathRepository0.loadClass("java.time.chrono.Era");
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "Warning: Padding byte != 0 in ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected class `CONSTANT_Methodref' at index 4 and got CONSTANT_InterfaceMethodref[11](class_index = 27, name_and_type_index = 56)
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class2HTML.toHTML("\nAnnotation(s):\n");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Object> class0 = Object.class;
      Class<MockHijrahDate> class1 = MockHijrahDate.class;
      classLoaderRepository0.loadClass(class1);
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      java.lang.ClassLoader.getSystemClassLoader();
      javaClass0.setRepository(classLoaderRepository0);
      javaClass0.setMethods((Method[]) null);
      java.lang.ClassLoader classLoader1 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository1 = new ClassLoaderRepository(classLoader1);
      javaClass0.isVarArgs(false);
      classLoaderRepository0.loadClass(class0);
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "\nAnnotation(s):\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.ConstantHTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class2HTML.referenceType("nk&6p9F9^[E\"MKc4");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "nk&6p9F9^[E\"MKc4";
      stringArray0[1] = "<A HREF=\"nk&6p9F9^.html\" TARGET=_top>nk&6p9F9^[E\"MKc4</A>";
      stringArray0[2] = "nk&6p9F9^[E\"MKc4";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[2] = "java.lang.Class";
      stringArray0[3] = "-d";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/|-PTG(0uR2@i3");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, stringArray0[1]);
      String[] stringArray1 = new String[8];
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringArray1[0] = "java.lang.Class";
      stringArray1[1] = "-d";
      stringArray1[2] = "-d";
      stringArray1[3] = "-d";
      stringArray1[4] = "java.lang.Class";
      stringArray1[5] = "-d";
      stringArray1[6] = "java.lang.Class";
      stringArray1[7] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      javaClass0.setClassName("w5nD");
      JavaClass javaClass1 = javaClass0.copy();
      classLoaderRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "9NC");
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/java.lang.Class/java.lang.Object_code.html");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "h_0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Tava.lang.Class/");
      Class2HTML.referenceType("Tava.lang.Class/");
      Class2HTML.toHTML("-C3");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "java.util.Formatter";
      stringArray0[1] = "ai-jA Y";
      stringArray0[2] = "<A HREF=\"Tava.lang.Class/.html\" TARGET=_top>Tava.lang.Class.</A>";
      stringArray0[3] = "ai-jA Y";
      stringArray0[4] = "|-PTG(0uR2@i3";
      stringArray0[5] = "-C3";
      stringArray0[6] = "-zip";
      stringArray0[7] = "h_0";
      stringArray0[8] = "ai-jA Y";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // h_0 (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[1] = "java.lang.Class";
      stringArray0[2] = "java.lang.Class";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[3] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "java.lang.Class";
      stringArray1[1] = "java.lang.Class";
      stringArray1[2] = "|-PTG(0uR2@i3/";
      stringArray1[3] = "-d";
      stringArray1[4] = "java.lang.Class";
      stringArray1[5] = "-d";
      stringArray1[6] = "|-PTG(0uR2@i3/";
      stringArray1[7] = "java.lang.Class";
      Class2HTML.referenceType("|-PTG(0uR2@i3/");
      Class2HTML.toHTML("ai-jA Y");
      try { 
        Class2HTML.main(stringArray1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
