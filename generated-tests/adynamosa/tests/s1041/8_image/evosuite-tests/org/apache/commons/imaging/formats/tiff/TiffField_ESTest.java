/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 19:11:28 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1853), (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      TiffField tiffField0 = new TiffField((-1853), (-2139895365), fieldTypeShort0, 2468L, (-10768L), byteArray0, byteOrder0, (-3343));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, int0);
      assertEquals((-1853), tiffField0.getTag());
      assertEquals((-10768), tiffField0.getOffset());
      assertEquals((-3343), tiffField0.getSortHint());
      assertEquals((-2139895365), tiffField0.getDirectoryType());
      assertEquals(4936, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40091, (byte)7, fieldTypeRational0, (byte)23, (byte)7, byteArray0, byteOrder0, (-448));
      String string0 = tiffField0.toString();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals("40091 (0x9c9b: XPTitle): Invalid value: Text field not encoded as bytes. (23 Rational)", string0);
      assertEquals((-448), tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-96), (-2874), fieldTypeLong0, 2193L, (-963L), byteArray0, byteOrder0, (-3397));
      String string0 = tiffField0.getValueDescription();
      assertEquals(8772, tiffField0.getBytesLength());
      assertEquals((-2874), tiffField0.getDirectoryType());
      assertEquals((-963), tiffField0.getOffset());
      assertEquals((-3397), tiffField0.getSortHint());
      assertEquals((-96), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeRational0, 4L, 562L, byteArray0, byteOrder0, (-2639));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2639), tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(1, tagInfo0.length);
      assertEquals(562, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-114), fieldTypeByte0, 0L, 4L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-114), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1856), "ModelTransformationTag");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 3987, fieldTypeAscii0, 3987, (-4355L), byteArray0, byteOrder0, (-16));
      int int0 = tiffField0.getTag();
      assertEquals(3987, tiffField0.getDirectoryType());
      assertEquals(281, int0);
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals((-4355), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2159, 2144719833, fieldTypeFloat0.ASCII, 0, 1L, byteArray0, byteOrder0, (-1280));
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1280), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2159, tiffField0.getTag());
      assertEquals(2144719833, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2077, "/y<]x/");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(537, 2077, fieldTypeFloat0, (-2448L), (-2448L), byteArray0, byteOrder0, 1985);
      int int0 = tiffField0.getSortHint();
      assertEquals(2077, tiffField0.getDirectoryType());
      assertEquals(1985, int0);
      assertEquals((-2448), tiffField0.getOffset());
      assertEquals(537, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte) (-4));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-4), int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(531, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131090642), 42035, fieldTypeAscii0, 780L, (-2131090642), byteArray0, byteOrder0, 504);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2131090642), tiffField0.getTag());
      assertEquals(42035, tiffField0.getDirectoryType());
      assertEquals(504, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals((-2131090642L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50936, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-285), (byte)0, fieldTypeLong0, (byte)0, 449L, byteArray0, byteOrder0, 37521);
      int int0 = tiffField0.getOffset();
      assertEquals(449, int0);
      assertEquals(37521, tiffField0.getSortHint());
      assertEquals((-285), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50971, 341, fieldTypeShort0, 155, (-554L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-554), int0);
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50971, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)4;
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField(1, 2448, fieldTypeRational0, 2448, (byte)0, byteArray0, byteOrder0, 3989);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2448, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3989, tiffField0.getSortHint());
      assertEquals(19584, tiffField0.getBytesLength());
      assertEquals(256, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2046, tiffField0.getOffset());
      assertEquals((-30), tiffField0.getTag());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(318, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-68);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-68), 2144719833, fieldTypeFloat0.SLONG, 1L, (byte) (-68), byteArray0, byteOrder0, 1668);
      tiffField0.getIntValue();
      assertEquals((-68), tiffField0.getTag());
      assertEquals(2144719833, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-68), tiffField0.getOffset());
      assertEquals(1668, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(318, tiffField0.getSortHint());
      assertEquals(2046, tiffField0.getOffset());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)50, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4400), 8, fieldTypeLong0, 4L, (byte)50, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-4400), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1658), (-1717986917), fieldTypeByte0, 0, (-2147483648L), byteArray0, byteOrder0, (byte) (-93));
      tiffField0.getFieldTypeName();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1658), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)44, 40960, (FieldType) null, (-5492L), (-5492L), byteArray0, byteOrder0, (-682));
      tiffField0.getFieldType();
      assertEquals((-682), tiffField0.getSortHint());
      assertEquals(44, tiffField0.getTag());
      assertEquals((-5492), tiffField0.getOffset());
      assertEquals(40960, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "W/iRU!+smbBB):y@;");
      TiffField tiffField0 = new TiffField((-682), (-664), fieldTypeShort0, (byte)44, (-682), byteArray0, byteOrder0, (-682));
      tiffField0.getFieldType();
      assertEquals((-682), tiffField0.getTag());
      assertEquals((-682), tiffField0.getSortHint());
      assertEquals((-664), tiffField0.getDirectoryType());
      assertEquals((-682), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 18249, fieldTypeFloat0.SRATIONAL, 1312L, 18249, byteArray0, byteOrder0, 10);
      tiffField0.getFieldType();
      assertEquals(18249, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(18249, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-68);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483645), (-2147483645), fieldTypeFloat0, 1L, 4278L, byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2147483645), tiffField0.getTag());
      assertEquals(4278, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals((-2147483645), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.getDoubleValue();
      assertEquals((-30), tiffField0.getTag());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2046, tiffField0.getOffset());
      assertEquals(318, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1765, (byte)0, fieldTypeShort0, 1765, (byte) (-96), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(1765, tiffField0.getTag());
      assertEquals((-96), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-2449));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2449), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-114), fieldTypeByte0, 0L, 4L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals((-114), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2034), (byte) (-6), fieldTypeFloat0, (byte) (-68), 0L, byteArray0, byteOrder0, (byte) (-6));
      tiffField0.getCount();
      assertEquals((-6), tiffField0.getDirectoryType());
      assertEquals((-2034), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-6), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(531, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131090642), 42035, fieldTypeAscii0, 780L, (-2131090642), byteArray0, byteOrder0, 504);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2131090642), tiffField0.getOffset());
      assertEquals(780, int0);
      assertEquals(42035, tiffField0.getDirectoryType());
      assertEquals((-2131090642), tiffField0.getTag());
      assertEquals(504, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(940, (-908), fieldTypeByte0, (-10768L), (-2147483648L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(940, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-908), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-10768), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 304L, (-1), byteArray0, (ByteOrder) null, (-231));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-231), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-488), (-488), fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)86);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-488), tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals((-488), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1943, (byte) (-32), (FieldType) null, 0L, 8L, byteArray0, byteOrder0, (-2924));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 2146955361, fieldTypeFloat0.SRATIONAL, 2146955361, (-1L), byteArray0, byteOrder0, 677);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2924), (-2924), (FieldType) null, (-2924), 0L, byteArray0, byteOrder0, 1056);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[74];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 37394, fieldTypeFloat0.ASCII, (-4712L), 33918, byteArray0, byteOrder0, (-1195));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "vW|Z");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1190), (-1190), fieldTypeFloat0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)50, "F%9~,jXg");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146955361, 342, fieldTypeLong0, 2140709251, 157L, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2671), (-2671), fieldTypeShort0, (-2671), (-2671), byteArray0, byteOrder0, (-673));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2924), (-2924), (FieldType) null, (-2924), 0L, byteArray0, byteOrder0, 1056);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2034), (byte) (-6), fieldTypeFloat0, (byte) (-68), 0L, byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[18];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("5`tZrP|");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(12, (-2139895365), fieldTypeByte0, 3122L, 2279L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2305, 65535, fieldTypeFloat0, (-2361L), (-1L), byteArray0, byteOrder0, 2825);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2924), (-2924), (FieldType) null, (-2924), 0L, byteArray0, byteOrder0, 1056);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3137, 0, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).SHORT, (-1304L), 204L, byteArray0, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50974, 2265, fieldTypeFloat0, 2265, 0L, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(166, (byte) (-100), fieldTypeFloat0.SBYTE, (byte) (-95), (byte)3, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-139), (-139), fieldTypeShort0, (-139), (-139), byteArray0, byteOrder0, (-139));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-257), (FieldType) null, (-257), 0, byteArray0, byteOrder0, (-1825));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[190];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(0, 2103, fieldTypeDouble0, (-1L), 2103, byteArray0, byteOrder0, 1626);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, 48323, (FieldType) null, 1L, (-1582L), byteArray0, byteOrder0, (-2139));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "pase?=WU1D>P}'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1546), 134, fieldTypeLong0, (-1546), (-2147483648L), byteArray0, byteOrder0, (byte) (-44));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" [dyGutW(CZRCxI<");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, 48323, (FieldType) null, 1L, (-1582L), byteArray0, byteOrder0, (-2139));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3987, "*yAW_PdbL");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1481), (byte)50, fieldTypeAscii0, (-1856), (-2147483648L), byteArray0, byteOrder0, (-3181));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(9, (-1717986917), fieldTypeLong0, (byte)59, 1626L, byteArray0, byteOrder0, 50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("PhotographicSensitivity");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(236, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1626, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 155, fieldTypeShort0, 1L, 4448L, byteArray0, byteOrder0, (byte) (-128));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(4448, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(155, tiffField0.getDirectoryType());
      assertEquals((-128), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(531, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131090642), 42035, fieldTypeAscii0, 780L, (-2131090642), byteArray0, byteOrder0, 504);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2131090642), tiffField0.getOffset());
      assertEquals((-2131090642), tiffField0.getTag());
      assertEquals(504, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(42035, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1465), (-1298), fieldTypeAscii0, 1901L, (-97L), byteArray0, byteOrder0, 249);
      tiffField0.getByteArrayValue();
      assertEquals(1901, tiffField0.getBytesLength());
      assertEquals((-1298), tiffField0.getDirectoryType());
      assertEquals((-97), tiffField0.getOffset());
      assertEquals((-1465), tiffField0.getTag());
      assertEquals(249, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1856), "ModelTransformationTag");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 3987, fieldTypeAscii0, 3987, (-4355L), byteArray0, byteOrder0, (byte) (-62));
      tiffField0.getFieldType();
      assertEquals((-62), tiffField0.getSortHint());
      assertEquals(281, tiffField0.getTag());
      assertEquals((-4355), tiffField0.getOffset());
      assertEquals(3987, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1717986917), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1309), (-1717986917), fieldTypeFloat0, (-1309), (-1309), byteArray0, byteOrder0, 1311);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7ymnB", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 304L, (-1), byteArray0, (ByteOrder) null, (-231));
      tiffField0.getValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(304, tiffField0.getBytesLength());
      assertEquals((-231), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1856), "ModelTransformationTag");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 3987, fieldTypeAscii0, 3987, (-4355L), byteArray0, byteOrder0, (-16));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(281, tagInfo0.tag);
      assertEquals((-4355), tiffField0.getOffset());
      assertEquals(281, tiffField0.getTag());
      assertEquals(3987, tiffField0.getDirectoryType());
      assertEquals((-16), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "Po#xn9C?7VYVCV1+ox");
      TiffField tiffField0 = new TiffField((-1), 1412, fieldTypeAscii0, 4L, (-10768L), (byte[]) null, byteOrder0, (-2924));
      int int0 = tiffField0.getTag();
      assertEquals(1412, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-10768), tiffField0.getOffset());
      assertEquals((-2924), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 3681L, 3681L, byteArray0, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(3681, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-37), 50, fieldTypeByte0, 0L, (-2386L), byteArray0, byteOrder0, 759);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(759, tiffField0.getSortHint());
      assertEquals((-2386), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-37), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.getDoubleValue();
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(318, tiffField0.getSortHint());
      assertEquals(2046, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.getIntValue();
      assertEquals(2046, tiffField0.getOffset());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(318, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(24, (-499), fieldTypeLong0, 2169L, (-1042L), byteArray0, byteOrder0, (-2139922084));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1042), tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
      assertEquals((-499), tiffField0.getDirectoryType());
      assertEquals((-2139922084), tiffField0.getSortHint());
      assertEquals(8676, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1724), fieldTypeFloat0, (byte)4, (-10768L), byteArray0, byteOrder0, (-2139895365));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@754a20c8 for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4810, (-936), fieldTypeShort0.DOUBLE, 4810, 1368L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(38480, tiffField0.getBytesLength());
      assertEquals(1368, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4810, tiffField0.getTag());
      assertEquals((-936), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(968, 2132673415, fieldTypeFloat0, 968, 2132673415, byteArray0, byteOrder0, (byte) (-100));
      tiffField0.getDoubleArrayValue();
      assertEquals(2132673415, tiffField0.getOffset());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals(3872, tiffField0.getBytesLength());
      assertEquals(2132673415, tiffField0.getDirectoryType());
      assertEquals(968, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, 65535, fieldTypeLong0, 2L, 0, byteArray0, byteOrder0, (byte) (-93));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2, doubleArray0.length);
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1), (-283), fieldTypeLong0, 4L, 4L, byteArray0, (ByteOrder) null, (-283));
      tiffField0.getDoubleArrayValue();
      assertEquals((-283), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-283), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3148, (byte)59, fieldTypeShort0, 4L, 69, byteArray0, byteOrder0, 69);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(4, doubleArray0.length);
      assertEquals(3148, tiffField0.getTag());
      assertEquals(69, tiffField0.getOffset());
      assertEquals(59, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 18249, fieldTypeFloat0.RATIONAL, 1312L, 18249, byteArray0, byteOrder0, 10);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(18249, tiffField0.getDirectoryType());
      assertEquals(10496, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(18249, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)96, (-983), fieldTypeByte0, (byte)50, 0L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@44abbeb2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals(2046, tiffField0.getOffset());
      assertEquals((-30), tiffField0.getTag());
      assertEquals(318, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)50, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4400), 8, fieldTypeLong0, 4L, (byte)50, byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-4400), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(4, intArray0.length);
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3148, (byte)59, fieldTypeShort0, 4L, 69, byteArray0, byteOrder0, 69);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(69, tiffField0.getOffset());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(3148, tiffField0.getTag());
      assertEquals(59, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50971, 341, fieldTypeShort0, 155, (-554L), byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(310, tiffField0.getBytesLength());
      assertEquals((-554), tiffField0.getOffset());
      assertEquals(50971, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField(1, 2448, fieldTypeRational0, 2448, (byte) (-68), byteArray0, byteOrder0, 3989);
      tiffField0.getIntArrayValue();
      assertEquals(19584, tiffField0.getBytesLength());
      assertEquals((-68), tiffField0.getOffset());
      assertEquals(2448, tiffField0.getDirectoryType());
      assertEquals(3989, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1502L, 0, byteArray0, byteOrder0, (byte)74);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1e99590b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(2046, tiffField0.getOffset());
      assertEquals(318, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte)2;
      TiffField tiffField0 = new TiffField((-1465), (-1298), fieldTypeAscii0, 1901L, (-97L), byteArray0, byteOrder0, 249);
      String string0 = tiffField0.getStringValue();
      assertEquals(249, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1901, tiffField0.getBytesLength());
      assertEquals((-1298), tiffField0.getDirectoryType());
      assertEquals((-1465), tiffField0.getTag());
      assertEquals((-97), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1465), (-1298), fieldTypeAscii0, 1901L, (-97L), byteArray0, byteOrder0, 249);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@4f420603
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483645), (-2147483645), fieldTypeFloat0, 1L, 4278L, byteArray0, byteOrder0, (byte) (-68));
      String string0 = tiffField0.getTagName();
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals(4278, tiffField0.getOffset());
      assertEquals((-2147483645), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x80000003)", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[18];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("5`tZrP|");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(12, (-2139895365), fieldTypeByte0, 3122L, 2279L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(2279, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
      assertEquals("GPSSpeedRef", string0);
      assertEquals((-2139895365), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1658), (-1717986917), fieldTypeLong0.UNDEFINED, 0, (-2147483648L), byteArray0, byteOrder0, (byte) (-93));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(bufferedOutputStream0, charsetEncoder0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(50, byteArrayOutputStream0.size());
      assertEquals((-1658), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(32996, 653, fieldTypeDouble0.FLOAT, 32996, 32996, byteArray0, byteOrder0, 653);
      String string0 = tiffField0.toString();
      assertEquals(32996, tiffField0.getOffset());
      assertEquals(653, tiffField0.getSortHint());
      assertEquals(653, tiffField0.getDirectoryType());
      assertEquals("32996 (0x80e4: DataType): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (32996 Float)", string0);
      assertEquals(131984, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-296), 1388, fieldTypeByte0, 119, (-1878L), byteArray0, byteOrder0, 271);
      String string0 = tiffField0.toString();
      assertEquals(119, tiffField0.getBytesLength());
      assertEquals((-1878), tiffField0.getOffset());
      assertEquals(271, tiffField0.getSortHint());
      assertEquals("-296 (0xfffffed8: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (66) (119 Byte)", string0);
      assertEquals(1388, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(968, 2132673415, fieldTypeFloat0, 968, 2132673415, byteArray0, byteOrder0, (byte) (-100));
      String string0 = tiffField0.toString();
      assertEquals(2132673415, tiffField0.getDirectoryType());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals(2132673415, tiffField0.getOffset());
      assertEquals("968 (0x3c8: Unknown Tag): 0.0, 0.0 (968 Float)", string0);
      assertEquals(3872, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[190];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1254), 2891, fieldTypeDouble0, (byte)33, 2103, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(33L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(2103, tiffField0.getOffset());
      assertEquals((-1254), tiffField0.getTag());
      assertEquals(2891, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0.IFD, 2020L, 142L, byteArray0, byteOrder0, 523);
      String string0 = tiffField0.toString();
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (2020 IFD)", string0);
      assertEquals(8080, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(523, tiffField0.getSortHint());
      assertEquals(142, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)96, (-983), fieldTypeByte0, (byte)50, 0L, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(96, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-983), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(69, 3148, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).SSHORT, 3148, 3148, byteArray0, byteOrder0, 3148);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3148, tiffField0.getOffset());
      assertEquals(69, tiffField0.getTag());
      assertEquals(3148, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3148, tiffField0.getSortHint());
      assertEquals(3148L, tiffField0.getCount());
      assertEquals(6296, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)123, (byte)113, fieldTypeShort0, (byte)110, 1L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(220, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(110L, tiffField0.getCount());
      assertEquals(123, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1119), (-4644), fieldTypeFloat0.ASCII, 3270L, 33918, byteArray0, byteOrder0, (-1195));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4644), tiffField0.getDirectoryType());
      assertEquals(33918, tiffField0.getOffset());
      assertEquals((-1195), tiffField0.getSortHint());
      assertEquals(3270, tiffField0.getBytesLength());
      assertEquals((-1119), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1856), "ModelTransformationTag");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 3987, fieldTypeAscii0, 3987, (-4355L), byteArray0, byteOrder0, (-16));
      tiffField0.dump();
      assertEquals(281, tiffField0.getTag());
      assertEquals(3987, tiffField0.getDirectoryType());
      assertEquals(3987, tiffField0.getBytesLength());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals(3987L, tiffField0.getCount());
      assertEquals((-4355), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(531, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131090642), 42035, fieldTypeAscii0, 780L, (-2131090642), byteArray0, byteOrder0, 504);
      tiffField0.toString();
      assertEquals(42035, tiffField0.getDirectoryType());
      assertEquals((-2131090642), tiffField0.getTag());
      assertEquals(504, tiffField0.getSortHint());
      assertEquals(780L, tiffField0.getCount());
      assertEquals((-2131090642), tiffField0.getOffset());
      assertEquals(780, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-30), (-704), fieldTypeByte0, 1L, 2046L, byteArray0, byteOrder0, 318);
      tiffField0.toString();
      assertEquals(2046, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-30), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-704), tiffField0.getDirectoryType());
      assertEquals(318, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte) (-4));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)51, 501);
      tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "Po#xn9C?7VYVCV1+ox");
      TiffField tiffField0 = new TiffField((-1), 1412, fieldTypeAscii0, 4L, (-10768L), (byte[]) null, byteOrder0, (-2924));
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1412, tiffField0.getDirectoryType());
      assertEquals((-10768), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2924), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "hxu2w+y8`KR&(H");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 1852, fieldTypeAscii0, 2844L, (-1500L), (byte[]) null, byteOrder0, 1412);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1658), (-1717986917), fieldTypeLong0.UNDEFINED, 0, (-2147483648L), byteArray0, byteOrder0, (byte) (-93));
      tiffField0.getFieldTypeName();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1658), tiffField0.getTag());
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 2448, fieldTypeRational0, 2448, (byte)0, byteArray0, byteOrder0, 3989);
      int int0 = tiffField0.getOffset();
      assertEquals(3989, tiffField0.getSortHint());
      assertEquals(2448L, tiffField0.getCount());
      assertEquals(2448, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(40963, "Unknown: ");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-303), (-697), fieldTypeAscii0, 1L, (-303), byteArray0, byteOrder0, (byte)51);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(51, tiffField0.getSortHint());
      assertEquals((-697), int0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-303), tiffField0.getTag());
      assertEquals((-303), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(379, 517, fieldTypeByte0, 517, (-417L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-417), tiffField0.getOffset());
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(379, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1843), (-1665), fieldTypeRational0, (-922L), (-922L), byteArray0, (ByteOrder) null, 72);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1665), tiffField0.getDirectoryType());
      assertEquals((-922), tiffField0.getOffset());
      assertEquals("-1843 (0xfffff8cd: Unknown Tag): ", string0);
      assertEquals((-7376), tiffField0.getBytesLength());
      assertEquals(72, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "Po#xn9C?7VYVCV1+ox");
      TiffField tiffField0 = new TiffField((-1), 1412, fieldTypeAscii0, 4L, (-10768L), (byte[]) null, byteOrder0, (-2924));
      tiffField0.getByteOrder();
      assertEquals(1412, tiffField0.getDirectoryType());
      assertEquals((-2924), tiffField0.getSortHint());
      assertEquals((-10768), tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(531, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131090642), 42035, fieldTypeAscii0, 780L, (-2131090642), byteArray0, byteOrder0, 504);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(6, (-2342));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(504, tiffField0.getSortHint());
      assertEquals((-2131090642), tiffField0.getTag());
      assertEquals(42035, tiffField0.getDirectoryType());
      assertEquals((-2131090642), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: yyyy-MM-dd'T'HH:mm:ss.SSSZ", string0);
      assertFalse(tiffField0.isLocalValue());
  }
}
