/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 06:17:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      classReader0.readShort(107);
      classReader0.readLong(107);
      classReader0.getInterfaces();
      classReader0.readByte((short)170);
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newClassItem("wheel.asm.Type");
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, 8);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.readShort(107);
      classReader0.readLong(107);
      classReader0.getInterfaces();
      classReader0.readByte((short)170);
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newClassItem("wheel.asm.Type");
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, (-336));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-307));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 1805);
      char[] charArray0 = new char[1];
      charArray0[0] = 't';
      classReader0.readConst(2, charArray0);
      classWriter0.newFieldItem("c-UR;Qd8+c.9sfs>>!U", "java/lang/Object", "c-UR;Qd8+c.9sfs>>!U");
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter1, 1);
      classWriter1.newNameType("5zaT$z#o/[jBe6%Z-", "5zaT$z#o/[jBe6%Z-");
      classWriter1.visitSource("5zaT$z#o/[jBe6%Z-", "org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.accept((ClassVisitor) classWriter1, (-3893));
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      classReader0.getInterfaces();
      ClassWriter classWriter2 = new ClassWriter(34);
      classReader0.copyPool(classWriter2);
      classReader0.readInt(2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (-1704));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("T#FQT=ZFai", "Signature", "org/apache/commons/io/filefilter/FalseFileFilter", 182);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.accept((ClassVisitor) classAdapter0, 8);
      int int0 = ClassReader.EXPAND_FRAMES;
      classReader1.getInterfaces();
      classReader1.getAccess();
      classReader1.getSuperName();
      classReader1.accept((ClassVisitor) classAdapter0, 182);
      // Undeclared exception!
      try { 
        classReader0.readLong(4569);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter((ClassVisitor) null);
      classReader0.readConst(2, (char[]) null);
      classWriter0.newFieldItem("StackMapTable", "", "D");
      // Undeclared exception!
      try { 
        classReader0.readUTF8(59, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(950);
      classWriter0.newLong(2521L);
      classWriter0.newLong(69L);
      byte[] byteArray0 = classWriter0.toByteArray();
      classReader0.accept((ClassVisitor) classWriter0, 1);
      int int0 = ClassReader.SKIP_FRAMES;
      ClassReader classReader1 = new ClassReader(byteArray0);
      ClassWriter classWriter1 = new ClassWriter(classReader1, 8);
      classReader1.getSuperName();
      // Undeclared exception!
      try { 
        classReader1.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("java/lang/Object", "java/lang/Object", (String) null, 59);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.copyPool(classWriter0);
      char[] charArray0 = new char[5];
      charArray0[1] = '4';
      classReader1.accept((ClassVisitor) classWriter0, 2);
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.getInterfaces();
      ClassWriter classWriter1 = new ClassWriter(51);
      classReader0.copyPool(classWriter1);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader0.b, 1008, 143);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      ClassWriter classWriter1 = new ClassWriter(60);
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.accept((ClassVisitor) classWriter1, 2);
      char char0 = 'Z';
      char char1 = 'Y';
      char char2 = 'H';
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 47780
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-307));
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = 'A';
      charArray0[2] = 'n';
      charArray0[3] = 't';
      classWriter0.newClassItem("The wildcard list must not be null");
      classReader0.readUTF8(518, charArray0);
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getInterfaces();
      classReader0.getClassName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      int int0 = 887;
      ClassWriter classWriter0 = new ClassWriter(887);
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = 'P';
      charArray0[2] = '!';
      charArray0[3] = '-';
      charArray0[4] = 'h';
      charArray0[5] = '+';
      charArray0[6] = '0';
      charArray0[7] = 'N';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(24, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter1, 1);
      classWriter1.newNameType("5zaT$z#o/[jBe6%Z-", "5zaT$z#o/[jBe6%Z-");
      classReader0.accept((ClassVisitor) classWriter1, (-3893));
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      char[] charArray0 = new char[3];
      charArray0[0] = 'Z';
      charArray0[1] = 'Y';
      charArray0[2] = 'H';
      // Undeclared exception!
      try { 
        classReader0.readConst(3033, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.FalseFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-307));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 1805);
      char[] charArray0 = new char[1];
      charArray0[0] = 't';
      // Undeclared exception!
      try { 
        classReader0.readConst(1805, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter1 = new ClassWriter(3);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("J*", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", 131072);
      ClassReader classReader1 = new ClassReader("wheel.asm.Edge");
      classReader1.accept((ClassVisitor) classAdapter0, 1316);
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.getInterfaces();
      int int1 = ClassReader.EXPAND_FRAMES;
      ClassWriter classWriter2 = new ClassWriter(14);
      classReader0.copyPool(classWriter2);
      // Undeclared exception!
      try { 
        classReader1.readLong((-689));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassWriter classWriter0 = new ClassWriter(330);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 11);
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 't';
      // Undeclared exception!
      try { 
        classReader0.readConst(64, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("java/lang/Object", "org/apache/commons/io/filefilter/FalseFileFilter", (String) null, 59);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.copyPool(classWriter0);
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '#';
      charArray0[3] = '<';
      charArray0[4] = '@';
      classReader0.readConst(2, charArray0);
      ClassWriter classWriter1 = new ClassWriter(classReader1, 9);
      classWriter1.newClassItem("Code");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 59);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader1.b);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ClassReader classReader2 = new ClassReader(sequenceInputStream0);
      assertFalse(classReader2.equals((Object)classReader1));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("java/lang/Object", "org/apache/commons/io/filefilter/FalseFileFilter", (String) null, 59);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.copyPool(classWriter0);
      char[] charArray0 = new char[17];
      charArray0[0] = 'C';
      charArray0[1] = 'f';
      // Undeclared exception!
      try { 
        classReader1.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = (-3893);
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'j';
      charArray0[4] = 'A';
      charArray0[5] = 'D';
      charArray0[6] = 'A';
      charArray0[7] = 'A';
      charArray0[8] = 'A';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-307));
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = 'D';
      charArray0[1] = 'A';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("java/lang/Object", "org/apache/commons/io/filefilter/FalseFileFilter", (String) null, 59);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.accept((ClassVisitor) classAdapter0, 1316);
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.getInterfaces();
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader1.getItem(2816);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2816
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      ClassWriter classWriter1 = new ClassWriter(60);
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.accept((ClassVisitor) classWriter1, 2);
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/FieldWriter", string0);
      
      int int0 = ClassReader.SKIP_FRAMES;
      int int1 = classReader0.getAccess();
      assertEquals(48, int1);
      
      int int2 = classReader0.getItem(2);
      assertEquals(16, int2);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      ClassWriter classWriter1 = new ClassWriter(60);
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.accept((ClassVisitor) classWriter1, 2);
      int int0 = ClassReader.SKIP_FRAMES;
      int int1 = classReader0.getAccess();
      assertEquals(48, int1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      classWriter0.newLong(4);
      byte[] byteArray0 = classWriter0.toByteArray();
      classReader0.accept((ClassVisitor) classWriter0, 248);
      int int0 = ClassReader.SKIP_FRAMES;
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader1.getAccess();
      String string0 = classReader1.getSuperName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      Locale.getISOLanguages();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(887);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (-2610));
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.getInterfaces();
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader0.getItem((-1292));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1292
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-35));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter1 = new ClassWriter(1);
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.copyPool(classWriter0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.readLong(1);
      int int0 = classReader0.getAccess();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      classWriter0.newLong((-2439L));
      classWriter0.toByteArray();
      classReader1.accept((ClassVisitor) classWriter0, 8);
      int int0 = ClassReader.SKIP_FRAMES;
      int int1 = classReader0.getAccess();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-46));
      classWriter0.addType("StackMapTable");
      classWriter0.visitInnerClass("=yj}tE&6Xk^6", "=yj}tE&6Xk^6", "=yj}tE&6Xk^6", (-46));
      ClassWriter classWriter1 = new ClassWriter(1);
      String string0 = "wheel.asm.FieldWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      // Undeclared exception!
      try { 
        classReader0.readLabel(2, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classReader0.getInterfaces();
      int int0 = (-2891);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-2891));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      classWriter0.newLong(701);
      byte[] byteArray0 = classWriter0.toByteArray();
      ClassReader classReader1 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, 701);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getSuperName();
      classWriter0.newLong(701);
      classWriter0.toByteArray();
      classReader0.accept((ClassVisitor) classWriter0, 2);
      int int0 = ClassReader.SKIP_FRAMES;
      int int1 = classReader0.getAccess();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      classWriter1.newNameType("5zaT$z#o/[jBe6%Z-", "5zaT$z#o/[jBe6%Z-");
      classReader0.accept((ClassVisitor) classWriter1, (-3893));
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.getAccess();
      classReader0.copyPool(classWriter0);
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-46));
      classWriter0.addType("StackMapTable");
      classWriter0.visitInnerClass("=yj}tE&6Xk^6", "=yj}tE&6Xk^6", "=yj}tE&6Xk^6", (-46));
      ClassWriter classWriter1 = new ClassWriter(1);
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.accept((ClassVisitor) classWriter1, 1);
      int int0 = ClassReader.SKIP_FRAMES;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter1 = new ClassWriter(701);
      short short0 = classReader0.readShort(2);
      assertEquals((short) (-17730), short0);
      
      String string0 = classReader0.getClassName();
      assertEquals(701, classReader0.header);
      assertEquals("org/apache/commons/io/filefilter/NotFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = 'o';
      classReader0.getInterfaces();
      int int0 = classReader0.readUnsignedShort(36);
      assertEquals(2816, int0);
      
      int int1 = classReader0.readInt(255);
      assertEquals(1701982030, int1);
      assertEquals(701, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      classWriter0.newLong(701);
      classWriter0.toByteArray();
      classReader0.accept((ClassVisitor) classWriter0, 1);
      int int0 = ClassReader.SKIP_FRAMES;
      int int1 = classReader0.getAccess();
      assertEquals(33, int1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3893));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      EvoSuiteFile evoSuiteFile0 = null;
      classReader0.getClassName();
      // Undeclared exception!
      try { 
        classReader0.readLabel(17, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = 'D';
      classReader0.accept((ClassVisitor) classWriter0, (-1641));
      int int0 = ClassReader.SKIP_FRAMES;
      int int1 = classReader0.getAccess();
      assertEquals(33, int1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      short short0 = classReader0.readShort(1);
      assertEquals((short)0, short0);
      
      classReader0.readLong(2);
      int int0 = classReader0.readInt((short)0);
      assertEquals(10, classReader0.header);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readLong((-2195));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      short short0 = classReader0.readShort(1);
      assertEquals((short)0, short0);
      
      long long0 = classReader0.readLong((short)0);
      assertEquals(10, classReader0.header);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = 'D';
      charArray0[2] = 'A';
      charArray0[3] = 't';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      long long0 = classReader0.readLong(20);
      assertEquals(504436186564198427L, long0);
      assertEquals(609, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 1964;
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(3414, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.getItem((-374));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -374
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.readShort(1);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 0;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-35));
      ClassWriter classWriter1 = new ClassWriter(1);
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.copyPool(classWriter0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertFalse(classReader1.equals((Object)classReader0));
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String string0 = "T<}hIJfG\":w!";
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 'W';
      charArray0[2] = '|';
      charArray0[3] = 'Q';
      charArray0[4] = '|';
      charArray0[5] = 'w';
      charArray0[6] = '~';
      charArray0[7] = ']';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2103), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
      
      int int0 = classReader0.getAccess();
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-648), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.readShort(1);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, (int) (short)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classReader0.readShort((-796));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.readShort(1);
      classReader0.readInt(1);
      int int0 = ClassReader.EXPAND_FRAMES;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-3630));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[9];
      charArray0[0] = '@';
      charArray0[1] = 'G';
      charArray0[2] = '\'';
      charArray0[3] = ' ';
      charArray0[4] = '[';
      charArray0[5] = 'R';
      charArray0[6] = '*';
      charArray0[7] = 'C';
      charArray0[8] = '.';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      ClassReader classReader1 = new ClassReader(classReader0.b, 1, 0);
      assertEquals(11, classReader1.header);
      
      long long0 = classReader0.readLong(1);
      assertEquals(10, classReader0.header);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.firstMethod = null;
      ClassWriter classWriter1 = new ClassWriter(1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        classReader0.getItem(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.readInt(1);
      // Undeclared exception!
      try { 
        classReader0.readByte((-842));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -842
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = ClassReader.EXPAND_FRAMES;
      classReader0.readInt(8);
      classReader0.readUnsignedShort(8);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|)6qXi+7on/=");
      classReader0.readUnsignedShort(0);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-2622));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1634);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.readInt(1);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 46;
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        classReader0.readLabel(46, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter((-1545));
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        classReader0.readInt((-1288));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassWriter classWriter1 = new ClassWriter(2481);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort(64);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(4);
      char[] charArray0 = new char[0];
      Object object0 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      classReader0.getInterfaces();
      classReader0.readByte(2);
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader0.readClass(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter((-624));
      // Undeclared exception!
      try { 
        classReader0.readConst(16777217, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = (-667);
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-2292), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      char[] charArray0 = new char[3];
      ClassWriter classWriter0 = new ClassWriter(104);
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("$pkaATtnH}~vFkjOd");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("$pkaATtnH}~vFkjOd");
      attributeArray0[1] = attribute1;
      Attribute attribute2 = new Attribute("$pkaATtnH}~vFkjOd");
      attributeArray0[2] = attribute2;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = 'P';
      charArray0[2] = 'S';
      charArray0[3] = 'h';
      // Undeclared exception!
      try { 
        classReader0.readConst((-440), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(10);
      ClassWriter classWriter1 = new ClassWriter(2);
      classReader0.getInterfaces();
      classReader0.readByte(2);
      int int0 = ClassReader.SKIP_DEBUG;
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)71;
      byteArray0[5] = (byte)52;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-7), (-1084));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(4);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(3505, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[3];
      charArray0[0] = ')';
      charArray0[1] = 'g';
      charArray0[2] = 'P';
      // Undeclared exception!
      try { 
        classReader0.readClass(23, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(10);
      ClassWriter classWriter1 = new ClassWriter((-378));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter1, (-378));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(183, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readClass((-3174), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(183, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      int int0 = classReader0.readByte(20);
      assertEquals(609, classReader0.header);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0, 0, 41);
      int int0 = (-889275714);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-889275714));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String string0 = "T<}hIJfG\":w!";
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 'W';
      charArray0[2] = '|';
      charArray0[3] = 'Q';
      charArray0[4] = 'W';
      charArray0[5] = 'w';
      charArray0[6] = '~';
      charArray0[7] = ']';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2103), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.readByte(10);
      int int0 = classReader0.readByte(0);
      assertEquals(0, int0);
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.readByte(10);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.readShort(15);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, 15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = ClassReader.SKIP_CODE;
      // Undeclared exception!
      try { 
        classReader0.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.getAccess();
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("Ins5nsitive");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readShort(17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = '3';
      charArray0[2] = '`';
      charArray0[3] = ']';
      charArray0[4] = 'S';
      charArray0[5] = '8';
      charArray0[6] = 'd';
      charArray0[7] = 'R';
      // Undeclared exception!
      try { 
        classReader0.readConst(1224, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 17;
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(10);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = ClassReader.SKIP_DEBUG;
      ClassWriter classWriter0 = new ClassWriter(1274);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        classReader0.readInt(17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readByte(17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3344));
      Label label0 = new Label();
      Label label1 = label0.successor;
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      char[] charArray0 = null;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-17);
      byte byte0 = (byte)58;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte) (-66);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-79);
      byteArray0[7] = (byte) (-108);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 127, 1000);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[2];
      charArray0[0] = 'J';
      charArray0[1] = 'F';
      ClassWriter classWriter0 = new ClassWriter(2451);
      Label label0 = new Label();
      Label label1 = label0.successor;
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      char[] charArray1 = null;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 4253, 2451);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassWriter classWriter0 = new ClassWriter((-1476));
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte)65;
      byteArray0[3] = (byte) (-100);
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte) (-92);
      byteArray0[7] = (byte) (-38);
      byteArray0[8] = (byte) (-81);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-5);
      byteArray0[8] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byte byte0 = (byte) (-43);
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)1;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
