/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:14:08 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)56;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-1374));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1374
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)94;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (byte)94);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 94
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 76;
      intArray0[1] = 159;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 76, (-215));
      assertEquals((-367), int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-121);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-121), 186);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -121
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "-", "-", "-", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2034));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B-eq0[VFWp{w\"}";
      stringArray0[1] = "h!k";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1862, "h!k", "h!k", "h!k", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addType("kG2~");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "4yf[gXwG9{k", "4yf[gXwG9{k", "4yf[gXwG9{k", (String[]) null, false, false);
      methodWriter0.visitIntInsn(17, 2);
      methodWriter0.visitMethodInsn(1, ",", ",", "4yf[gXwG9{k");
      methodWriter0.visitEnd();
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4153, "org.objectweb.asm.jip.Label", "c?M", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 33554432, "", "org.objectweb.asm.jip.Label", "c?M", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(4153, "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-314));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-314), "TN|{N{M;Hb(INuF", "TN|{N{M;Hb(INuF", "uq0d?ycUu", (String[]) null, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitIntInsn(186, 2);
      methodWriter0.visitFrame(143, 185, (Object[]) null, 184, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "?M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4152, "org.objectweb.asm.jip.Label", "?M", "4yf[gXwG9{k", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.MethodWriter", 2);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2045977725), "u", "?M", "?M", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIincInsn(2, 2);
      methodWriter0.visitIntInsn(2, 1);
      methodWriter1.visitTypeInsn((-2045977725), "?M");
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "?M", "org.objectweb.asm.jip.MethodWriter", "[s?{Z>}mYuCa>2awa");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1323));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 978, "]", "]", "]", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_k' Hr{g9IvRm??";
      stringArray0[1] = "_k' Hr{g9IvRm??";
      stringArray0[2] = "dpVDr;b\")hw6";
      stringArray0[3] = "dpVDr;b\")hw6";
      stringArray0[4] = "<init>";
      stringArray0[5] = "_k' Hr{g9IvRm??";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1270, "<init>", "ND<+II", "_k' Hr{g9IvRm??", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.<abel", "[J?-a2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.<abel");
      methodWriter0.visitMaxs(1, 1);
      methodWriter1.visitFieldInsn(2, "E3p!\"\"V,36A42c", "org.objectweb.asm.jip.<abel", "E3p!\"\"V,36A42c");
      methodWriter0.visitCode();
      methodWriter1.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      classWriter0.newInteger(1068);
      int int0 = Type.FLOAT;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "dpVDr;b\")hw6", (String[]) null, true, true);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Edge", 2);
      int int1 = methodWriter0.getSize();
      assertEquals(38, int1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int[] intArray0 = new int[6];
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Frame.VALUE;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8388607, "org.objectweb.asm.jip.<aOel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<aOel", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.exceptionCount = 2;
      boolean boolean0 = ClassReader.SIGNATURES;
      classWriter0.newConst(2);
      boolean boolean1 = classWriter0.invalidFrames;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.<aOel");
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(61, 40);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1124075009);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "int";
      stringArray0[1] = "int";
      stringArray0[2] = "Na,)S0{";
      stringArray0[3] = "int";
      stringArray0[4] = "int";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Na,)S0{", "Na,)S0{", "int", stringArray0, true, true);
      methodWriter0.visitMultiANewArrayInsn("s-r6,XggiA", 1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "b_t6>&Cju'", "StackMapTable", (String) null, (String[]) null, false, false);
      methodWriter0.visitFrame(2, (-1879), (Object[]) null, 1, (Object[]) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitInsn(1);
      classWriter0.newClassItem("Fl3.LjA`@U9mr");
      MethodWriter methodWriter2 = methodWriter0.next;
      assertNull(methodWriter2);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitOuterClass("?M", "?M", "?M");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2045977740), "?M", "?M", "?M", (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByte((-2045977740));
      ByteVector byteVector1 = byteVector0.putLong(1);
      methodWriter0.put(byteVector1);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 16711680;
      intArray0[1] = 64;
      intArray0[2] = 488;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {16711680, 64, 488}, intArray0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int[] intArray0 = new int[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4131, "?M", "?M", "?M", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIincInsn(2, 2);
      classWriter0.toByteArray();
      methodWriter1.visitTypeInsn(2, "?M");
      Label[] labelArray0 = new Label[6];
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "C[%mtQ9Q4\"% !1]Lb", (String[]) null, true, true);
      Label label0 = new Label();
      label0.status = 2;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "dpVDr;b\")hw6");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "C[%mtQ9Q4\"% !1]Lb", (String[]) null, true, true);
      Label label0 = new Label();
      label0.outputStackMax = 1068;
      methodWriter0.visitVarInsn(2, 20);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "dpVDr;b\")hw6");
      Attribute attribute0 = new Attribute("Y?ZOwqIGrQT ASq6");
      int int0 = Frame.DOUBLE;
      methodWriter0.visitInsn(2);
      methodWriter0.visitLdcInsn("dpVDr;b\")hw6");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Y?ZOwqIGrQT ASq6", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int[] intArray0 = new int[12];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "org.objectweb.asm.jip.<abel", "org.objectweb.asm.jip.<abel", (String[]) null, false, false);
      methodWriter0.visitMaxs(1, 70);
      Object[] objectArray0 = new Object[1];
      methodWriter0.visitFrame(70, 70, objectArray0, 1, objectArray0);
      methodWriter0.visitVarInsn((-294), 1);
      methodWriter0.visitMaxs(24, (-396));
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addType("?M");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4152, "?M", "?M", "4yf[gXwG9{k", (String[]) null, false, false);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      methodWriter0.visitMaxs(2, 4152);
      methodWriter0.visitMethodInsn(2, "?M", "4yf[gXwG9{k", "");
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "[J?-2q\u0000kX)2K", (String) null, (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.signature = "kG2~";
      methodWriter1.visitInsn(2);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addType("kG2~");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.Label", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = methodWriter1.next;
      methodWriter0.visitTypeInsn(2, "L&y#hV0)^");
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(4152, "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      String string0 = "dpVDr;b\")hw6";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "dpVDr;b\")hw6", (String[]) null, true, true);
      int int0 = 57;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.exceptionCount = 57;
      String string1 = classWriter0.thisName;
      methodWriter0.visitAnnotation("dpVDr;b\")hw6", true);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 16711680;
      ClassWriter classWriter0 = new ClassWriter(16711680);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "C^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a++G9xh8", "-p", "C^", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      int int0 = Frame.DOUBLE;
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "-p");
      ByteVector byteVector0 = new ByteVector();
      int int1 = Member.DECLARED;
      boolean boolean0 = ClassReader.ANNOTATIONS;
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BzDdj.O7v%B:sYu");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1015, "9E[Bt?'9aD", "dp=VDr;b\")hw6", "", (String[]) null, false, true);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitMethodInsn(1015, "dp=VDr;b\")hw6", "dp=VDr;b\")hw6", "BzDdj.O7v%B:sYu");
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn((-7009), 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addType("?M");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-877), "?M", "?M", "?M", (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong(4152);
      byteVector1.putByte(2246);
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int[] intArray0 = new int[6];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classWriter0.addType("kG2~");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4152, "org.objectweb.asm.jip.Label", "?M", "4yf[gXwG9{k", (String[]) null, false, false);
      methodWriter0.visitEnd();
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putUTF8("?M");
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(24, 4152);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      Attribute attribute0 = new Attribute("[J?-2q\u0000kX)2K");
      classWriter0.visitAttribute(attribute0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".IFJDS", "[J?-2q\u0000kX)2K", ".IFJDS", (String[]) null, true, false);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort(1);
      byteVector0.put12(2, 2);
      methodWriter0.visitTypeInsn(4066, "JHv");
      methodWriter0.visitVarInsn(73, 4066);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "?M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4152, "org.objectweb.asm.jip.Label", "?M", "4yf[gXwG9{k", (String[]) null, false, false);
      methodWriter0.visitEnd();
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.Label");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-32768), "4yf[gXwG9{k", "kG2~", "mUEtZM vxg 4a", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitTypeInsn(191, "");
      methodWriter0.visitIincInsn(1, 3220);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      classWriter0.addType("dpVDr;b\")hw6");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "dpVDr;b\")hw6", (String[]) null, true, true);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitFrame((-1181), 1, (Object[]) null, (-1181), (Object[]) null);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitFieldInsn(2, "3gw\f9!RU2TsB2R$", "dpVDr;b\")hw6", "dpVDr;b\")hw6");
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putLong(303L);
      byteVector0.putLong((-2447L));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 218, "hf~00ZHd'`Eps9", "?M", "?M", (String[]) null, false, false);
      methodWriter0.visitIincInsn(2, (-984));
      methodWriter0.visitVarInsn(641, (-984));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      classWriter0.newInteger(1068);
      classWriter0.addType("EnclosingMethod");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "C1%mt9'4\"%N!Lb", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(1, "C1%mt9'4\"%N!Lb", "dpVDr;b\")hw6", "EnclosingMethod");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(0, label0);
      methodWriter0.visitMultiANewArrayInsn("EnclosingMethod", 2);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addType("kG2~");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-32768), "4yf[gXwG9{k", "kG2~", "mUEtZM vxg 4a", (String[]) null, false, false);
      methodWriter0.visitTypeInsn((-32768), "mUEtZM vxg 4a");
      methodWriter0.visitFrame(1, (-1829), (Object[]) null, 1, (Object[]) null);
      methodWriter0.visitFieldInsn((-1829), "kG2~", "&", "kG2~");
      Label label0 = new Label();
      Label label1 = label0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable(".class", "8LKGo", "mUEtZM vxg 4a", (Label) null, label0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Edge.NORMAL;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Pn<(QZm @]}9Cs1bucV", "[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      Object object0 = label0.info;
      methodWriter1.exceptions = intArray0;
      ClassWriter classWriter1 = new ClassWriter(2);
      Label label1 = new Label();
      methodWriter1.visitLocalVariable("[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", "F#Kmi'", label0, label1, 0);
      Object object1 = label1.info;
      methodWriter0.getSize();
      methodWriter0.visitLineNumber(1826, label1);
      assertFalse(label1.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitSource("RuntimeVisibleParameterAnnotations", "xJuzY145DI OZ");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleParameterAnnotations", "[J?-2q\u0000)2K", "RuntimeVisibleParameterAnnotations", (String[]) null, false, false);
      classWriter0.newNameTypeItem("u?]-8pGK)UK", "u?]-8pGK)UK");
      methodWriter0.next = methodWriter0;
      Label label0 = new Label();
      label0.position = 2;
      methodWriter0.visitLocalVariable("[J?-2q\u0000)2K", "[J?-2q\u0000)2K", "[J?-2q\u0000)2K", label0, label0, 8388607);
      methodWriter0.visitLocalVariable("kGn~|", "Code", "[J?-2q\u0000)2K", label0, label0, 2);
      Object object0 = new Object();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int[] intArray0 = new int[6];
      ClassWriter classWriter0 = new ClassWriter(0);
      boolean boolean0 = ClassReader.SIGNATURES;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "?M", "?M", "?M", (String[]) null, false, false);
      classWriter0.firstMethod.classReaderLength = 16777220;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?M");
      methodWriter0.next = methodWriter0;
      methodWriter0.visitVarInsn(168, 2);
      Attribute attribute0 = new Attribute("?M");
      classWriter0.firstMethod.visitAttribute(attribute0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      Label label1 = label0.next;
      Frame frame0 = new Frame();
      boolean boolean1 = ClassReader.SIGNATURES;
      methodWriter0.next.visitTryCatchBlock(label0, label0, label0, "?M");
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Edge.NORMAL;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Pn<(QZm @]}9Cs1bucV", "[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      methodWriter1.exceptions = intArray0;
      methodWriter1.visitVarInsn(6, 2535);
      methodWriter1.visitJumpInsn(2, label0);
      Edge edge0 = new Edge();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "dpVDr;b\")hw6", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      label0.toString();
      label0.info = (Object) 2;
      Label label1 = label0.successor;
      label0.outputStackMax = 2;
      methodWriter0.exceptionCount = 57;
      String string0 = classWriter0.thisName;
      methodWriter0.visitAnnotation("dpVDr;b\")hw6", true);
      ByteVector byteVector0 = new ByteVector();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "C[%mtQ9'4\"% !1]Lb", (String[]) null, true, true);
      Label label0 = new Label();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitTypeInsn(2, "*uGEwyUF&i/");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitCode();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, (String) null);
      classWriter0.newNameTypeItem("{spY rly/:[! =CmK", "dpVDr;b\")hw6");
      methodWriter2.visitVarInsn(172, 2501);
      methodWriter2.visitFrame(1068, 1, (Object[]) null, 57, (Object[]) null);
      Attribute attribute0 = new Attribute("*uGEwyUF&i/");
      Edge edge0 = new Edge();
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-2794), (-1902));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2794
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label0 = new Label();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI1OKfN+q", (String[]) null, true, true);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitTypeInsn((-1), "z),GV>_xS");
      methodWriter0.visitMethodInsn((-2036), "X?|p4CY)@*%}m]@", "org.objectweb.asm.jip.Labe/", "Q@xwI1OKfN+q");
      methodWriter0.visitLabel(label0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (-2318));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2318
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int[] intArray0 = new int[6];
      boolean boolean0 = false;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 512, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "JQnVvq!BJ<!u", (String[]) null, false, true);
      Label label0 = new Label();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      methodWriter0.visitLabel(label0);
      label0.toString();
      Label label1 = label0.successor;
      String string0 = classWriter0.thisName;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "C1%mt9'4\"%N!Lb", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(1, "C1%mt9'4\"%N!Lb", "dpVDr;b\")hw6", "EnclosingMethod");
      int int0 = 0;
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(0, label0);
      methodWriter0.visitMultiANewArrayInsn("EnclosingMethod", 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "RuntimeVisibleParameterAnnotations", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-32768), "4yf[XwG9{k", "kG2~", "mUEtZM vxg 4a", (String[]) null, false, false);
      methodWriter0.visitAnnotation("kG2~", false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitTypeInsn(191, "");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.thisName = "org.objectweb.asm.jip.Type";
      int int0 = (-2318);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI?;OK<N+q", (String[]) null, true, true);
      methodWriter0.classReaderLength = (-3618);
      Attribute attribute0 = new Attribute("xj}f5sy@");
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-2318), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2318
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI?;OK<N+q", (String[]) null, true, true);
      methodWriter0.classReaderLength = (-3618);
      Attribute attribute0 = new Attribute("xj}f5sy@");
      methodWriter0.visitMaxs((-1583651840), (-2318));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@55db338
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "z),GV>_xS", "org.objectweb.asm.jip.Type", "_k' Hr{g9IvRm??", (String[]) null, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitEnd();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI?;OK<N+q", (String[]) null, true, true);
      MethodWriter methodWriter2 = methodWriter0.next;
      methodWriter2.visitMethodInsn(257, "z),GV>_xS", "<~ntO", "org.objectweb.asm.jip.Type");
      methodWriter0.visitInsn((-1861303128));
      Attribute attribute0 = new Attribute("xj}f5sy@");
      methodWriter1.visitMaxs((-1583651840), 2);
      methodWriter0.visitIntInsn((-695), (-1312));
      int int0 = methodWriter2.getSize();
      assertEquals(49, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = Frame.INTEGER;
      ClassWriter classWriter0 = new ClassWriter(16777217);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777217, "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", (String[]) null, false, false);
      methodWriter0.exceptionCount = 143;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitIntInsn(16777217, (-2949));
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 248, (Object[]) null, 185, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int[] intArray0 = new int[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4131, "?M", "?M", "?M", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIincInsn(2, 2);
      classWriter0.toByteArray();
      methodWriter1.visitTypeInsn(2, "?M");
      Label[] labelArray0 = new Label[6];
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter1.visitTableSwitchInsn((-1624), (-851), label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI1OKfN+q", (String[]) null, true, true);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitTypeInsn((-1), "z),GV>_xS");
      methodWriter0.signature = null;
      methodWriter0.visitLocalVariable("kI/", "Fd/%{]9=*d", "kI/", label0, label0, 3046);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) fileSystemHandling0;
      Object object0 = label0.info;
      int int0 = methodWriter0.getSize();
      assertEquals(89, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.threshold = 2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-877), "X2R@S2V]0H", "kG2~", "kG2~", (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11((-877), (-877));
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(1434, (-1396), label0, labelArray0);
      byteVector1.putInt((-877));
      methodWriter0.visitVarInsn((-877), (-1396));
      methodWriter0.visitVarInsn(2379, 384);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI1OKfN+q", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      
      methodWriter0.visitTypeInsn((-1), "z),GV>_xS");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("kG2~", (-2318));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("_k' Hr{g9IvRm??", "value ", "vq/GeI,>&WUo4<40");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "dpVDNwr;b\")hw6";
      stringArray0[1] = "dpVDNwr;b\")hw6";
      stringArray0[2] = "E>]CFvQ4$N`4 8Gqhix";
      stringArray0[3] = "char";
      stringArray0[4] = "dpVDNwr;b\")hw6";
      stringArray0[5] = "E>]CFvQ4$N`4 8Gqhix";
      stringArray0[6] = "dpVDNwr;b\")hw6";
      stringArray0[7] = "%)A|O&Q85L6#9ox";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "E>]CFvQ4$N`4 8Gqhix", "dpVDNwr;b\")hw6", "dpVDNwr;b\")hw6", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn((-1006), "StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visit(0, 0, "org.objectweb.asm.jip.<abel", (String) null, (String) null, (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("[J?-2q\u0000kX)2K", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMaxs(726, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.exceptionCount = (-1556);
      Item item0 = classWriter0.newFloat(726);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitLdcInsn("[J?-2q\u0000kX)2K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Item item1 = classWriter0.newLong(726);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertNotSame(item1, item0);
      
      methodWriter1.visitIincInsn(1, 726);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",QwVr", "LocalVariableTable", "[J?-2q\u0000kX)2K", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      methodWriter0.visitVarInsn(0, 64);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitJumpInsn(1921, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNull(methodWriter0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "59{J5#0 ", "59{J5#0 ", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.<abel");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      int int1 = Frame.ELEMENT_OF;
      assertFalse(int1 == int0);
      assertEquals((-268435456), int1);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("59{J5#0 ", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(1, 1, (Object[]) null, 726, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "[J?2q\u0000kX))2K", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.OBJECT;
      assertEquals(24117248, int0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("[J?2q\u0000kX))2K", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      intArray0[2] = 1;
      methodWriter0.visitIntInsn(187, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(187, "RuntimeInvisibleAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newUTF8("NMI)nF@Exv i9:2T<?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+.uKun~1");
      assertFalse(boolean0);
      
      classWriter0.index = 416;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-820), "+.uKun~1", "+.uKun~1", (String) null, (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame(12, 172, (Object[]) null, 419, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.<abel");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      int int1 = Frame.DOUBLE;
      assertFalse(int1 == int0);
      assertEquals(16777219, int1);
      
      methodWriter0.visitMaxs(0, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn(187, 32770);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "[J?-2q\u0000kX)2K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".s.IFJDCS", "[J?-2q\u0000kX)2K", ".s.IFJDCS", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(16777219, 2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitFrame(179, 179, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn(".s.IFJDCS", 657);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".s.IFJDCS", "[J?-2q\u0000kX)2K", ".s.IFJDCS", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(16777219, 2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      methodWriter0.visitFieldInsn(179, "[J?-2q\u0000kX)2K", ".s.IFJDCS", "LineNumberTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(180, 16777219);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1068);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1068, "dpVDr;b\")hw6", "dpVDr;b\")hw6", "dpVDr;b\")hw6", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "YCc*7i3SW";
      int int0 = 186;
      methodWriter0.visitLocalVariable("w%,G!xj", "YCc*7i3SW", "YCc*7i3SW", label0, label0, 186);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("YCc*7i3SW");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      int int1 = Frame.DOUBLE;
      assertFalse(int1 == int0);
      assertEquals(16777219, int1);
      
      String string1 = "Ljava/lang/Synthetic;";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ljava/lang/Synthetic;");
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int[] intArray0 = new int[12];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "org.objectweb.asm.jip.<abel", "org.objectweb.asm.jip.<abel", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs(1, 184);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(184, 184);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[1];
      methodWriter0.visitFrame(184, 184, objectArray0, 1, objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.exceptions = intArray0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 184, objectArray0, 1, objectArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2qykX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitTypeInsn((-3285), "[J?-2qykX)2K");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      
      methodWriter3.visitLdcInsn(":");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      
      methodWriter2.visitIntInsn((-3281), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter3);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter3.visitFieldInsn((-5920), "0)F", ":", "org.objectweb.asm.jip.<abel");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "kG2~";
      int int0 = classWriter0.addType("kG2~");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.Label", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = methodWriter1.next;
      assertNull(methodWriter2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("[J?-2q\u0000kX)2K", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter0, methodWriter1);
      
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(28, int1);
      
      Integer integer0 = new Integer(277);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(277, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertSame(methodWriter0, methodWriter1);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2qykX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitMultiANewArrayInsn("org.objectweb.asm.jip.<abel", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.visitTypeInsn(1, "[J?-2qykX)2K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      classWriter0.visitOuterClass("[J?-2qykX)2K", "org.objectweb.asm.jip.<abel", "[J?-2qykX)2K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L11", string0);
      
      int int0 = methodWriter2.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertEquals(42, int0);
      
      methodWriter1.visitLocalVariable(".<4v1#OK6Tl~a]<) 1:", "Code", "org.objectweb.asm.jip.<abel", label0, label0, 1525);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitTableSwitchInsn(1525, 90, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int[] intArray0 = new int[7];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "ucGqO=Q]2t)5", "ucGqO=Q]2t)5", "ucGqO=Q]2t)5", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("LineNumberTable");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      attribute0.next = null;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitMultiANewArrayInsn("LineNumberTable", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.version = 0;
      int int1 = Frame.CHAR;
      assertFalse(int1 == int0);
      assertEquals(16777227, int1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(2252, 2, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitFrame(255, 2252, labelArray0, 599, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".IFJDS", "[J?-2q\u0000kX)2K", ".IFJDS", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector1 = byteVector0.putShort(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(2, 2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      methodWriter0.visitFieldInsn(179, "[J?-2q\u0000kX)2K", ".IFJDS", "LineNumberTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1051);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.thisName = " ^tAi5@Y26M";
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ^tAi5@Y26M";
      stringArray0[1] = " ^tAi5@Y26M";
      stringArray0[2] = " ^tAi5@Y26M";
      stringArray0[3] = "dpVDr;b\")hw6";
      stringArray0[4] = " ^tAi5@Y26M";
      stringArray0[5] = " ^tAi5@Y26M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1250, " ^tAi5@Y26M", "dpVDr;b\")hw6", "dpVDr;b\")hw6", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIntInsn(23, 1051);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(62, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "org.objectweb.asm.jip.<abel";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2qykX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.visitTypeInsn((-3285), "[J?-2qykX)2K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = 9;
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.classReaderOffset = 9;
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter0);
      
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "org.objectweb.asm.jip.Type", "z),GV>_xS", "Q@xwI1OKfN+q", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      methodWriter0.visitTypeInsn((-1), "z),GV>_xS");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("kI/", "Fd/%{]9=*d", "kI/", label0, label0, 3046);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) fileSystemHandling0;
      Object object0 = label0.info;
      assertNull(object0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(97, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Item item0 = classWriter0.newMethodItem("Code", "Code", "org.objectweb.asm.jip.<abel", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      classWriter0.visitOuterClass("org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(2, 176, (Object[]) null, (-3653), (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(176, "@?c44IUfw\"y(]", "p)]Wu*`Jzr", "p)]Wu*`Jzr");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3653), "sp0[1Ah9SggG}Uio", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter0.newInteger(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Pn<(QZm @]}9Cs1bucV", "[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      label0.outputStackMax = 0;
      methodWriter1.exceptions = intArray0;
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitLocalVariable("_", "[J?-2q\u0000kX)2K", (String) null, label1, label0, (-160));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      Object object1 = label1.info;
      assertNull(object1);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      methodWriter0.visitIntInsn((-160), 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 187, (Object[]) null, 24117255, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      String[] stringArray0 = null;
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2989, "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitIntInsn(0, (-2953));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte byte0 = (byte)39;
      int int1 = 185;
      methodWriter0.visitFrame(2989, 248, (Object[]) null, 185, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitTypeInsn(1, "[J?-2q\u0000kX)2K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-555), (-2953));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(59, int2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(185, "[J?-2q\u0000kX)2K", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "vjERns#Nf_H8", "[J?-2q\u0000kX)2K", "vjERns#Nf_H8", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("[J?-2q\u0000kX)2K", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put11(2, (-2186));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putShort(2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector2.put12(1, (-457));
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      
      methodWriter0.put(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      
      AnnotationVisitor annotationVisitor1 = classWriter0.visitAnnotation("[J?-2q\u0000kX)2K", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitFrame(2, 2, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(188);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ByteVector byteVector4 = byteVector0.put12(2370, 2370);
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMethodInsn(188, "yp+G$k;b9_Gz(", "}S `av2ERl", "?WM'l>dR}7P.Xg)");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "kG2~", "kG2~", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L10", string0);
      
      methodWriter0.visitLdcInsn("L10");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("L10", "RuntimeInvisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(1, 1, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(2, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.addType("kG2~");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 1, (Object[]) null, 1, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1074);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_k' Hr{g9IvRm??";
      stringArray0[1] = "_k' Hr{g9IvRm??";
      stringArray0[2] = "_k' Hr{g9IvRm??";
      stringArray0[3] = "<init>";
      stringArray0[4] = "<init>";
      stringArray0[5] = "_k' Hr{g9IvRm??";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "_k' Hr{g9IvRm??", "<init>", "<init>", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      classWriter0.visitOuterClass("_k' Hr{g9IvRm??", "PX;|Mk3JK:\"NC.|`x@", "_k' Hr{g9IvRm??");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = "_k' Hr{g9IvRm??";
      methodWriter0.visitFrame(1, 2, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "!%~PN+{gD'A@Y<", "[J?-2q\u0000kX)2K", "!%~PN+{gD'A@Y<", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("[J?-2q\u0000kX)2K");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      classWriter0.version = 0;
      int int1 = Frame.TOP_IF_LONG_OR_DOUBLE;
      assertFalse(int1 == int0);
      assertEquals(8388608, int1);
      
      methodWriter0.visitMaxs(0, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1, 0, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 2, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = MethodWriter.getNewOffset(intArray0, intArray0, 8388608, (-300));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals((-8388908), int2);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderLength = 882;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("g|z'7''kH`DfMQ3", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitIntInsn(2147483614, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "Signature";
      Attribute attribute0 = new Attribute("Signature");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1878), "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", "ae}K F2", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int1 = Frame.DOUBLE;
      assertFalse(int1 == int0);
      assertEquals(16777219, int1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, (-32768), (Object[]) null, 184, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitJumpInsn((byte)59, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 171, (Object[]) null, 255, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitFrame(91, 1, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label0.next;
      assertNull(label2);
      
      Object object0 = label1.info;
      assertNull(object0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      int int0 = classWriter0.newClass("?r|6+GL9(Y-O#|");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(4, int0);
      
      methodWriter0.visitFieldInsn(1, "V", "[J?-2q\u0000kX)2K", "LocalVariableTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      
      Integer integer0 = new Integer((-69));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals((-69), (int)integer0);
      
      methodWriter0.visitVarInsn(55, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitFrame(1474, 4033, (Object[]) null, 76, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.exceptions = null;
      methodWriter0.visitVarInsn(1, (-2050559108));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.<abel");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter1.visitFieldInsn(2, "E3p!\"\"V,T6H42c", "L(", "E3p!\"\"V,T6H42c");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Integer integer0 = new Integer(8388607);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(8388607, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(integer0.equals((Object)int0));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int[] intArray0 = new int[3];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "?M", "?M", "?M", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(37, int0);
      
      methodWriter0.visitFieldInsn(2, "?M", "?M", ",96[`WdAn| 3KL6");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(2, "?M");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.next.visitFrame(37, 3525, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.index = 8;
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.next.visitLdcInsn(byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ByteVector@1
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int[] intArray0 = new int[6];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "YCc*7i3SW", "YCc*7i3SW", "YCc*7i3SW", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[8];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      byteArray0[2] = (byte) (-1);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "YCc*7i3SW";
      objectArray0[1] = (Object) byteArray0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte) (-1), (byte) (-76), objectArray0, 133, objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "vjERns#Nf_H8", "[J?-2q\u0000kX)2K", "vjERns#Nf_H8", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("[J?-2q\u0000kX)2K", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      AnnotationVisitor annotationVisitor1 = classWriter0.visitAnnotation("[J?-2q\u0000kX)2K", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitFrame(2, 2147483625, (Object[]) null, 2147483625, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(188);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      
      methodWriter3.visitVarInsn(188, 188);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      
      // Undeclared exception!
      try { 
        methodWriter3.visitIntInsn(2147483625, (-3490));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Object object0 = label1.info;
      assertNull(object0);
      
      Item item0 = classWriter0.newFieldItem("Synthetic", "org.objectweb.asm.jip.<abel", "Synthetic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(185, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      methodWriter0.visitMaxs(9, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = 9;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitLdcInsn("Synthetic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("[J?-2q\u0000kX)2K");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2qykX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Object object0 = label1.info;
      assertNull(object0);
      
      methodWriter0.visitTypeInsn((-3285), "[J?-2qykX)2K");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      label0.inputStackTop = (-3285);
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitJumpInsn(185, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label0, label1);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      methodWriter0.visitMaxs(9, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.classReaderOffset = 2;
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter0);
      
      methodWriter3.visitMultiANewArrayInsn("0.4BQqHuR>I", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter2);
      
      methodWriter1.visitMaxs(2, 2252);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter3);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".s.IFJDCS", "[J?-2q\u0000kX)2K", ".s.IFJDCS", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(2, 2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "RuntimeVisibleAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int0);
      
      methodWriter0.visitMaxs((-1679), 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int[] intArray0 = new int[6];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-648), "6Kev7lM", "Ug>o)=*7z", "[J?-2q\u0000kX)2K", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Attribute attribute0 = new Attribute("%Htm&Jpg2o");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(2707);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      Integer integer0 = new Integer(25);
      assertNotNull(integer0);
      assertEquals(25, (int)integer0);
      
      methodWriter1.visitFrame(25, 2, (Object[]) null, 414, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = Frame.OBJECT;
      assertEquals(24117248, int0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitParameterAnnotation(1836, "Ljava/lang/Synthetic;", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(annotationVisitor0);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "StackMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Pn<(QZm @]}9Cs1bucV", "[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.classReaderLength = 2;
      Item item0 = classWriter0.newNameTypeItem("[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation(",eL>$6jy*)S{aZ", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(2252, 128, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      methodWriter0.visitTypeInsn(187, ",eL>$6jy*)S{aZ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int[] intArray0 = new int[11];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "(4", "(4", "(4", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item[] itemArray0 = new Item[24];
      byte[] byteArray0 = new byte[5];
      classWriter0.visit(127, (byte) (-45), "(4", "(4", "|l+Cqz<@0h% \"aNG07", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte) (-80);
      byteArray0[4] = (byte) (-45);
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      classWriter0.firstField = null;
      methodWriter0.visitMaxs(76, 255);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(997, 2, itemArray0, 187, itemArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(187, "ozkPp", "(4", "(4");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      byte[] byteArray1 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertNotNull(byteArray1);
      assertNotSame(byteArray1, byteArray0);
      
      methodWriter0.visitTypeInsn((byte)0, "&}++>Z@");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray1, (byte) (-45));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -45
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LineNumberTable");
      assertFalse(boolean0);
      
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.UNINITIALIZED;
      assertEquals(25165824, int0);
      
      Attribute attribute0 = new Attribute((String) null);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      Attribute attribute2 = new Attribute((String) null);
      assertFalse(attribute2.isCodeAttribute());
      assertTrue(attribute2.isUnknown());
      assertFalse(attribute2.equals((Object)attribute0));
      assertNotNull(attribute2);
      
      attribute0.next = attribute2;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute2.isCodeAttribute());
      assertTrue(attribute2.isUnknown());
      assertFalse(attribute0.next.isCodeAttribute());
      assertTrue(attribute0.next.isUnknown());
      
      Object[] objectArray0 = new Object[6];
      methodWriter0.visitFrame(2, 2, objectArray0, 2, objectArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("/f%~'YO;v", "[J?-2q\u0000kX)2K", "r:eHP/Xce(-s%G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitFieldInsn(1, "LineNumberTable", "r:eHP/Xce(-s%G", "ger%M9&[1");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(169);
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int[] intArray0 = new int[7];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3, "", "?M", "?M", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, ":");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      boolean boolean3 = ClassReader.ANNOTATIONS;
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Label offset position has not been resolved yet", "[J?-2qkX)2", "Label offset position has not been resolved yet", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(180, "Label offset position has not been resolved yet", "Z[$dRI", "Label offset position has not been resolved yet");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("Label offset position has not been resolved yet", "%YPyC@", "EnclosingMethod");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("$NvNfYx", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      methodWriter0.visitMaxs(2, 180);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 18;
      ClassWriter classWriter0 = new ClassWriter(18);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int1 = Edge.NORMAL;
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      String string0 = "[J?-2q\\0kX)2K";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1878), "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", "ae}K F2", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("J!D),", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn(0, "*`9:Ck[PV_ yK9uc7");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitFieldInsn(0, "Wv)G3LrFZ72/j", "*`9:Ck[PV_ yK9uc7", "J!D),");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string1 = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(2, (String) null, "J!D),", "[J?-2q\u0000kX)2K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2269), "z),GV>_xS", "z),GV>_xS", "z),GV>_xS", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      intArray0[0] = (-3618);
      methodWriter0.visitMaxs(1, (-2269));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-2269), (-2269));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 2, (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, (-2147483645), (Object[]) null, 0, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("z),GV>_xS", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "z),GV>_xS", "z),GV>_xS", "z),GV>_xS");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "z),GV>_xS");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2269), "z),GV>_xS", "z),GV>_xS", "z),GV>_xS", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      intArray0[0] = (-2269);
      methodWriter0.visitMaxs(1, (-2269));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-2269), (-2269));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(28, int0);
      
      methodWriter0.visitMaxs(1, 3020);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("z),GV>_xS");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putShort(547);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector0.putInt(2);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      
      ByteVector byteVector4 = byteVector3.putShort(80);
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector1);
      
      ByteVector byteVector5 = byteVector0.putLong((-2269));
      assertNotNull(byteVector5);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector5);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector5, byteVector1);
      assertSame(byteVector5, byteVector2);
      assertSame(byteVector5, byteVector0);
      assertSame(byteVector5, byteVector3);
      assertSame(byteVector5, byteVector4);
      
      ByteVector byteVector6 = byteVector4.put12(547, 28);
      assertNotNull(byteVector6);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector5);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector6);
      assertSame(byteVector3, byteVector5);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector6);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector5);
      assertSame(byteVector4, byteVector6);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector6, byteVector1);
      assertSame(byteVector6, byteVector4);
      assertSame(byteVector6, byteVector0);
      assertSame(byteVector6, byteVector5);
      assertSame(byteVector6, byteVector2);
      assertSame(byteVector6, byteVector3);
      
      methodWriter0.visitFieldInsn(238, "RuntimeVisibleParameterAnnotations", "AnnotationDefault", "AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int[] intArray0 = new int[7];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.version = 71;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3, ":", "r?", "r?", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("jaa/lang/Thowable");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "jaa/lang/Thowable";
      objectArray0[1] = (Object) intArray0;
      objectArray0[2] = (Object) classWriter0;
      objectArray0[4] = (Object) "jaa/lang/Thowable";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 162, objectArray0, 162, objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.<abel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderLength = 882;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("g|z'7''kH`DfMQ3", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIntInsn(2147483614, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 1392510721;
      Attribute attribute0 = new Attribute("Signature");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1392510721, 176, (Object[]) null, 2147483614, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[J?-2q\u0000kX)2K");
      assertFalse(boolean0);
      
      methodWriter0.visitInsn(176);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("[J?-2q\u0000kX)2K", "RuntimeVisibleAnnotations", "Signature");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      byte byte0 = (byte)66;
      int int1 = Frame.UNINITIALIZED_THIS;
      assertFalse(int1 == int0);
      assertEquals(16777222, int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((byte)66, "g|z'7''kH`DfMQ3", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2318), "z),GV>_xS", "z),GV>_xS", "Q@xwI1OKfN+q", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(1, "z),GV>_xS");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("kI/", "Fd/%{]9=*yd", "kI/", label0, label0, 3046);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(12, 65535);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("LineNumberTable", 3046);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(12, 12);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putUTF8("kI/");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector2.putShort(12);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      
      methodWriter0.put(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`N(R,");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Pn<(QZm @]}9Cs1bucV", "[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.exceptions = intArray0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.classReaderLength = 2;
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation(".jar", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.signature = "Pn<(QZm @]}9Cs1bucV";
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      label0.position = 186;
      ByteVector byteVector1 = byteVector0.putLong(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotSame(classWriter0, classWriter1);
      assertSame(byteVector0, byteVector1);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertSame(byteVector0, byteVector1);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label1.line = 28;
      methodWriter0.visitLineNumber(169, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(label1, label0);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter.getNewOffset(methodWriter1.exceptions, methodWriter1.exceptions, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label0.equals((Object)label1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(label0, label1);
      
      int int1 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(int1 == int0);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(28, int1);
      
      methodWriter1.visitLineNumber(1296, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label0.equals((Object)label1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      Label[] labelArray0 = new Label[0];
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling1));
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling2);
      
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) fileSystemHandling0;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int[] intArray0 = new int[4];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "[J?-2qykX)2K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.visitTypeInsn(1, "[J?-2qykX)2K");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      classWriter0.visitOuterClass("[J?-2qykX)2K", "lpM!f^ZIpz>E", "[J?-2qykX)2K");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L11", string0);
      
      methodWriter1.visitLocalVariable("RuntimeVisibleParameterAnnotations", "Code", "org.objectweb.asm.jip.<abel", label0, label0, 1525);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter2.visitLocalVariable("LR`3_3O7Kg]ZiL1!QF ", "JfgMN,", "JfgMN,", label0, label0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-45), "org.objectweb.asm.jip.<abel", "LR`3_3O7Kg]ZiL1!QF ", "org.objectweb.asm.jip.<abel", "JfgMN,");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(fieldVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitMethodInsn(1, "15x-", "LR`3_3O7Kg]ZiL1!QF ", "RuntimeVisibleParameterAnnotations");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Pn<(QZm @]}9Cs1bucV", "[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.classReaderLength = 2;
      Item item0 = classWriter0.newNameTypeItem("[J?-2q\u0000kX)2K", "Pn<(QZm @]}9Cs1bucV");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotation(",eL>$6jy*)S{aZ", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      label0.status = 1;
      methodWriter0.visitTypeInsn(2, "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.exceptions = intArray0;
      label0.info = (Object) ",eL>$6jy*)S{aZ";
      Item item1 = classWriter0.newLong(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertNotSame(item1, item0);
      
      ClassWriter classWriter1 = new ClassWriter((-8));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      
      int int0 = classWriter1.newClass("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, int0);
      
      methodWriter1.visitVarInsn(24, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter.getNewOffset(intArray0, methodWriter1.exceptions, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      
      int int1 = MethodWriter.getNewOffset(methodWriter1.exceptions, intArray0, 178, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(int1 == int0);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals((-176), int1);
      
      methodWriter1.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int[] intArray0 = new int[6];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8388607, "org.objectweb.asm.jip.<aOel", "[J?-2q\u0000kX)2K", "org.objectweb.asm.jip.<aOel", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.signature = ":i?*ZX";
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      int int1 = classWriter0.newConst(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, ":i?*ZX");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(28, int2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.<abel", "J?2qOkY)K", "org.objectweb.asm.jip.<abel", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitMultiANewArrayInsn("org.objectweb.asm.jip.<abel", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      Item item0 = classWriter0.newFieldItem("org.objectweb.asm.jip.<abel", "J?2qOkY)K", "J?2qOkY)K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      classWriter0.visitOuterClass("J?2qOkY)K", "org.objectweb.asm.jip.<abel", "J?2qOkY)K");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.put12(2, 2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      methodWriter1.visitTryCatchBlock(label0, (Label) null, (Label) null, "org.objectweb.asm.jip.<abel");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(47, int0);
      
      methodWriter1.visitMaxs(2596, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Frame.ARRAY_OF;
      assertEquals(268435456, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 268435456, "org.obj.ctweb.asm.jip.<:Oel", "[J?-2q\u0000kX)2K", "org.obj.ctweb.asm.jip.<:Oel", (String[]) null, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[23];
      label0.info = (Object) label0;
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      Integer integer0 = new Integer(2);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      Integer integer1 = new Integer((byte)59);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertNotNull(integer1);
      assertEquals(59, (int)integer1);
      
      int int1 = classWriter0.newConst(integer0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      
      label0.line = 1;
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      labelArray0[2] = label0;
      edge0.successor = label0;
      labelArray0[3] = edge0.successor;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      methodWriter0.visitTableSwitchInsn(1, 1, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      edge0.successor = label0;
      Item item0 = classWriter0.newMethodItem("org.obj.ctweb.asm.jip.<:Oel", "[J?-2q\u0000kX)2K", "[J?-2q\u0000kX)2K", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter0.visitVarInsn((byte)59, (byte)0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.visitSubroutine(label0, 2, 13);
      byteArray0[7] = (byte)59;
      label0.addToSubroutine(1, 1);
      classWriter0.thisName = "=Xd9w>cR<KjXBlprY3";
      methodWriter0.visitMultiANewArrayInsn("org.obj.ctweb.asm.jip.<:Oel", 187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(22, 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+.uKun~1");
      assertFalse(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      classWriter0.index = 416;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-820), "+.uKun~1", "+.uKun~1", (String) null, (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn((-161));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = (-1256);
      ByteVector byteVector1 = byteVector0.putInt((-1256));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.classReaderLength = (-2050559108);
      ByteVector byteVector2 = byteVector0.putInt(1);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector2.putShort(1);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      
      ByteVector byteVector4 = classWriter0.pool;
      assertFalse(byteVector4.equals((Object)byteVector3));
      assertFalse(byteVector4.equals((Object)byteVector0));
      assertFalse(byteVector4.equals((Object)byteVector1));
      assertFalse(byteVector4.equals((Object)byteVector2));
      assertNotNull(byteVector4);
      assertNotSame(byteVector4, byteVector3);
      assertNotSame(byteVector4, byteVector0);
      assertNotSame(byteVector4, byteVector1);
      assertNotSame(byteVector4, byteVector2);
      
      int int1 = 185;
      methodWriter0.visitLdcInsn("StackMapTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "XiniP3G\"LrR~\"%", "StackMapTable", "StackMap");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
