/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 08:41:02 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1656));
      classWriter0.index = (-2508);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1656), "W", "W", (String) null, "W");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1666));
      classWriter0.index = (-1515);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1666), "Signatur0", "Signatur0", "Signatur0", "Signatur0");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1672));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1672), "WKQ<v7~*Sa@;,j>5)", "WKQ<v7~*Sa@;,j>5)", (String) null, "WKQ<v7~*Sa@;,j>5)");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1672));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1672), "WKQ<v7~*Sa@;,j>5)", "WKQ<v7~*Sa@;,j>5)", (String) null, "WKQ<v7~*Sa@;,j>5)");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1686));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1686), "Spgytur=", "Spgytur=", "Spgytur=", "Spgytur=");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 41, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1679));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1679), "Class not found", "Class not found", "Class not found", "Class not found");
      Attribute attribute0 = new Attribute("Class not found");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1672));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1672), "WKQ<v7~*Sa@;,j>5)", "BEWU!J;0$IWTy", (String) null, "WKQ<v7~*Sa@;,j>5)");
      fieldWriter0.next = fieldWriter0;
      ByteVector byteVector0 = new ByteVector(28);
      ByteVector byteVector1 = byteVector0.putByteArray((byte[]) null, 10, (-3440));
      // Undeclared exception!
      try { 
        fieldWriter0.next.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1679));
      classWriter0.index = 64022;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2641), "The FileFilter must not be null", "The FileFilter must not be null", "", "The FileFilter must not be null");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1837));
      classWriter0.index = 16777218;
      classWriter0.newFieldItem("LwI#08", "zTo=g@AH;LZ@^xj/_=Q", "zTo=g@AH;LZ@^xj/_=Q");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1837), "op(~V", "op(~V", (String) null, "op(~V");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-95), "GrPvbCH[$^/h+E}-", "GrPvbCH[$^/h+E}-", "GrPvbCH[$^/h+E}-", "GrPvbCH[$^/h+E}-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 91, "^}f", "^}f", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@7a43264f
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1807));
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong((-1807));
      byteVector1.putInt((-6397));
      byte[] byteArray0 = new byte[8];
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 49, "n~%t", (String) null, "@;0a`RC", (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1672));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1672), "WKQ<v7~*Sa@;,j>5)", "BEWU!J;0$IWTy", (String) null, "WKQ<v7~*Sa@;,j>5)");
      Attribute attribute0 = new Attribute("BEWU!J;0$IWTy");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "WKQ<v7~*Sa@;,j>5)", "WKQ<v7~*Sa@;,j>5)", (String) null, "WKQ<v7~*Sa@;,j>5)");
      fieldWriter0.visitAnnotation("X_bCGm", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3501));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "UYvjd1CV42d{J", "WKQ<v7~*Sa@;,j>5)", "", "");
      fieldWriter0.visitAnnotation("ConstantValue", true);
      ByteVector byteVector0 = new ByteVector(101);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1656));
      classWriter0.visit((-1656), (-1656), "6HY30", "2:^6K", "2:^6K", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1656), "W", "W", (String) null, "W");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2092, "The strings must not be null", "The strings must not be null", "wheel.asm.Frame", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3501));
      Attribute attribute0 = new Attribute("aQktAE)yY*o363H`R");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "UYvjd1CV42d{J", "aQktAE)yY*o363H`R", "WKQ<v7~*Sa@;,j>5)");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "WKQ<v7~*Sa@;,j>5)", "WKQ<v7~*Sa@;,j>5)", (String) null, "WKQ<v7~*Sa@;,j>5)");
      fieldWriter0.visitAnnotation("X_bCGm", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1666));
      classWriter0.version = (-1514);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1666), "Signatur0", "Signatur0", "Signatur0", "Signatur0");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2092, "The strings must not be null", "The strings must not be null", "wheel.asm.Frame", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3501));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "UYvjd1CV42d{J", "WKQ<v7~*Sa@;,j>5)", "", "");
      fieldWriter0.visitAnnotation("ConstantValue", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "WKQ<v7~*Sa@;,j>5)", "WKQ<v7~*Sa@;,j>5)", (String) null, "WKQ<v7~*Sa@;,j>5)");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2092, "The strings must not be null", "The strings must not be null", "wheel.asm.Frame", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1672));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1672), "WKQ<v7~*Sa@;,j>5)", "WKQ<v7~*Sa@;,j>5)", (String) null, "WKQ<v7~*Sa@;,j>5)");
      fieldWriter0.visitEnd();
  }
}
