/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:46:48 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[60];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeFloat0, 11, 11, byteArray0, byteOrder0, 11);
      tiffField0.dump();
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11L, tiffField0.getCount());
      assertEquals(11, tiffField0.getTag());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)30, (byte)30, fieldTypeByte0, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)30, (byte)30, fieldTypeByte0, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      String string0 = tiffField0.getValueDescription();
      assertEquals(30L, tiffField0.getCount());
      assertEquals(30, tiffField0.getTag());
      assertEquals(30, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2147475455, 2147475455, fieldTypeDouble0, 2147475455, 2147475455, byteArray0, byteOrder0, 2147475455);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2147475455L, tiffElement0.offset);
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals(2147475455, tiffField0.getSortHint());
      assertEquals(2147475455, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[73];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1977, 1977, fieldTypeFloat0, 1977, 1977, byteArray0, byteOrder0, 1977);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1598, 1598);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1977, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(1977, tiffField0.getSortHint());
      assertEquals(1977, tiffField0.getTag());
      assertEquals(1977, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[82];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1977, 1977, fieldTypeFloat0, 1977, 1977, byteArray0, byteOrder0, 1977);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(7908, tiffField0.getBytesLength());
      assertEquals(1977, tiffField0.getTag());
      assertEquals(1977, tiffField0.getOffset());
      assertEquals(1977, int0);
      assertEquals(1977, tiffField0.getSortHint());
      assertEquals(1977L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2147475455, 2147475455, fieldTypeDouble0, 2147475455, 2147475455, byteArray0, byteOrder0, 2147475455);
      tiffField0.getFieldTypeName();
      assertEquals(2147475455, tiffField0.getOffset());
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[51];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeLong0, (byte)13, (byte)13, byteArray0, byteOrder0, (byte)13);
      int int0 = tiffField0.getSortHint();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, int0);
      assertEquals(13, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1972, 1972, fieldTypeFloat0, 1972, 1972, byteArray0, byteOrder0, 1972);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5418f08d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[69];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeLong0, 22, 22, byteArray0, byteOrder0, 22);
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.getValueDescription();
      assertEquals(22, tiffField0.getTag());
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(22, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(22, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[89];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1977, 1977, fieldTypeFloat0, 1977, 1977, byteArray0, byteOrder0, 1977);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@6719e9bf for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1469, "LeT*4B`75W#q'xqb");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1469, (byte) (-38), fieldTypeRational0, 1418L, 1469, byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getTagName();
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[297];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3167, 1986, fieldTypeRational0, 0L, 4L, byteArray0, byteOrder0, 1986);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1986, tiffField0.getSortHint());
      assertEquals(3167, tiffField0.getTag());
      assertEquals(1986, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[266];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(301, 301, fieldTypeDouble0, (-6796L), 301, byteArray0, (ByteOrder) null, 301);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(301, tiffField0.getOffset());
      assertEquals(301, tiffField0.getSortHint());
      assertEquals(301, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(301, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[51];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeLong0.ASCII, 22, 22, byteArray0, byteOrder0, 22);
      String string0 = tiffField0.getValueDescription();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getBytesLength());
      assertEquals(22, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1966, 1966, fieldTypeFloat0, 1966, 1966, byteArray0, byteOrder0, 1966);
      tiffField0.getDoubleArrayValue();
      assertEquals(1966, tiffField0.getSortHint());
      assertEquals(1966, tiffField0.getDirectoryType());
      assertEquals(1966, tiffField0.getTag());
      assertEquals(1966, tiffField0.getOffset());
      assertEquals(7864, tiffField0.getBytesLength());
      assertEquals(1966L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[51];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)30, (byte)30, fieldTypeLong0, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      tiffField0.getIntValueOrArraySum();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@2d529b40
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[51];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)30, (byte)30, fieldTypeLong0, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(30, tiffField0.getTag());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)58, (byte)58, fieldTypeByte0, (byte)58, (byte)58, byteArray0, byteOrder0, (byte)58);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@34af38cf for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[49];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeLong0, (byte)32, (byte)32, byteArray0, byteOrder0, (byte)32);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("32 (0x20: Unknown Tag): ", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[297];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3167, 1986, fieldTypeRational0, 3167, 4L, byteArray0, byteOrder0, 1986);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[91];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeFloat0.SHORT, 45, 45, byteArray0, byteOrder0, 45);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getValueDescription();
      assertEquals(45, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(45, tiffField0.getTag());
      assertEquals(45L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[89];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(312, 312, fieldTypeDouble0, 312, 312, byteArray0, byteOrder0, 312);
      String string0 = tiffField0.toString();
      assertEquals("312 (0x138: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (312 Double)", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(312, tiffField0.getOffset());
      assertEquals(312, tiffField0.getSortHint());
      assertEquals(312, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[60];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeFloat0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[60];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2502, 2502, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 2502);
      assertEquals(4, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(2502, tiffField0.getSortHint());
      assertEquals(2502, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2502, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41994, 41994, fieldTypeFloat0, 41994, 41994, byteArray0, byteOrder0, 41994);
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "41994 (0xa40a: Unknown Tag):  (41994 Float)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[91];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeShort0, 42, 3379L, byteArray0, byteOrder0, 42);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(42L, tiffField0.getCount());
      assertEquals(42, tiffField0.getTag());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(3379, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[91];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-23), 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-23), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(987, (String) null);
      TiffField tiffField0 = new TiffField(987, 32, fieldTypeAscii0, 0L, 32, byteArray0, byteOrder0, 32);
      String string0 = tiffField0.getValueDescription();
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(987, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[415];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      tiffField0.getFieldType();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[91];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-23), 45, fieldTypeShort0, 45, 45, byteArray0, byteOrder0, 45);
      String string0 = tiffField0.toString();
      assertEquals("-23 (0xffffffe9: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (45 Short)", string0);
      
      tiffField0.getIntArrayValue();
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "<OP+|BW`kuWh");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), 50741, fieldTypeRational0.ASCII, 0, 0, byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals(50741, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[89];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2978, 2978, fieldTypeByte0, 2978, 2978, byteArray0, byteOrder1, 2978);
      String string0 = tiffField0.toString();
      assertEquals(2978, tiffField0.getOffset());
      assertEquals("2978 (0xba2: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (89) (2978 SByte)", string0);
      assertEquals(2978, tiffField0.getSortHint());
      assertEquals(2978, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[69];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeLong0.ASCII, 918L, 22, byteArray0, byteOrder0, 22);
      String string0 = tiffField0.getValueDescription();
      assertEquals(22, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[138];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50732, (-170), fieldTypeShort0, 50732, (-170), byteArray0, byteOrder0, 50732);
      String string0 = tiffField0.toString();
      assertEquals((-170), tiffField0.getOffset());
      assertEquals("50732 (0xc62c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (69) (50732 Short)", string0);
      assertEquals(50732, tiffField0.getSortHint());
      assertEquals((-170), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[297];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1966, 1966, fieldTypeFloat0, 1966, 1966, byteArray0, byteOrder0, 1966);
      String string0 = tiffField0.toString();
      assertEquals("1966 (0x7ae: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (74) (1966 Float)", string0);
      assertEquals(1966, tiffField0.getOffset());
      assertEquals(1966, tiffField0.getDirectoryType());
      assertEquals(1966, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[223];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeLong0, 1977, 1977, byteArray0, byteOrder0, 18);
      String string0 = tiffField0.toString();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals("3 (0x3: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (1977 SLong)", string0);
      assertEquals(1977, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[427];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(182, 182, fieldTypeFloat0.DOUBLE, 182, 182, byteArray0, byteOrder0, 182);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(182, 182);
      tiffField0.getValueDescription();
      tiffField_OversizeValueElement0.getElementDescription();
      ByteOrder.nativeOrder();
      int int0 = 24;
      tiffField0.getDescriptionWithoutValue();
      TiffField tiffField1 = new TiffField(182, 24, fieldTypeFloat0, 10L, 2147483647L, byteArray0, byteOrder0, (-2463));
      // Undeclared exception!
      try { 
        tiffField1.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
