/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:45:35 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextAction;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.Interpreter;
import org.mozilla.javascript.NativeCall;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;
import org.mozilla.javascript.regexp.RegExpImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("0B;%V");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "0B;%V", 39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (0B;%V#39)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(" &&n ", " &&n ", 99);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ( &&n #99)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("J/]LVvB#{tWUjzD2", "language version", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "this";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      parser0.addStrictWarning("this", "this");
      String string1 = "wv0%\"w`kl#AoXBbEZ9";
      // Undeclared exception!
      try { 
        parser0.parse("wv0%\"w`kl#AoXBbEZ9", "wv0%\"w`kl#AoXBbEZ9", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (wv0%\"w`kl#AoXBbEZ9#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("8(##", "8(##", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (8(###2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      NativeCall nativeCall0 = new NativeCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Object object0 = new Object();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      compilerEnvirons0.setGeneratingSource(false);
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("throw", "language version", 7640);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#7640)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context(contextFactory0);
      compilerEnvirons1.setGeneratingSource(false);
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("const", "error reporter", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing variable name (error reporter#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = ";";
      parser0.parse(";", ";", 45);
      String string1 = "msg.syntax";
      PipedReader pipedReader0 = null;
      PipedWriter pipedWriter0 = null;
      try {
        pipedWriter0 = new PipedWriter((PipedReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser0.parse("private", "", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: identifier is a reserved word (#170)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.addStrictWarning("F-?#Sq{OjFJn#;/", (String) null);
      // Undeclared exception!
      try { 
        parser0.parse("F-?#Sq{OjFJn#;/", "c", 58);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (c#58)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "ay3l@:jx2zl<";
      // Undeclared exception!
      try { 
        parser0.parse("ay3l@:jx2zl<", "ay3l@:jx2zl<", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (ay3l@:jx2zl<#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addError("msg.var.redecl", "msg.var.redecl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons2.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      String string0 = "K}";
      // Undeclared exception!
      try { 
        parser0.parse("K}", (String) null, 2048);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      contextFactory0.enterContext(context0);
      boolean boolean0 = context0.generateObserverCount;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Context context1 = new Context();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser0.parse("!VB#4; F<Ex\"J` ", "t", 800);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (t#800)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      String string0 = "<adapter>";
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("<adapter>", "error reporter", 150);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (error reporter#150)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.no.brace.after.body", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Context context1 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      boolean boolean0 = context1.compileFunctionsWithDynamicScopeFlag;
      String string0 = "hIO< \\+Eju;WSY*";
      // Undeclared exception!
      try { 
        parser0.parse("hIO< +Eju;WSY*", "@wer$:e", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I%V,=9(t@7CR-7{");
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      compilerEnvirons0.setXmlAvailable(true);
      compilerEnvirons1.setXmlAvailable(true);
      char[] charArray0 = new char[6];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = 'L';
      charArray0[3] = 'L';
      charArray0[4] = 'L';
      charArray0[5] = ';';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      parser0.parse((Reader) charArrayReader0, "Bad jump target: ", 1306);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(1, false, "msg.no.parm");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(false);
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.no.while.do", "O={3fgN6aW-mq", 2529);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (O={3fgN6aW-mq#2529)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      contextFactory0.makeContext();
      String string0 = "Array";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Array");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = "[gVPt;Oce,";
      ContextFactory.getGlobal();
      contextFactory0.makeContext();
      EvaluatorException evaluatorException0 = new EvaluatorException("", "c7", 1);
      contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        parser0.parse("x[<HAb*V*VXzg6~h~aE", "get", 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (get#4)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = context0.generateObserverCount;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter3);
      context0.getApplicationClassLoader();
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      compilerEnvirons1.getErrorReporter();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      compilerEnvirons0.initFromContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse("Dx(=U%6Gl5+o{,]W", "{y9Q]c;`lb#Hwj&W|w?", 131);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ({y9Q]c;`lb#Hwj&W|w?#131)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      parser0.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("@8Ower$:e", "@8Ower$:e", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (@8Ower$:e#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@wer$:e", "@wer$:e", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (@wer$:e#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons1.setErrorReporter(errorReporter0);
      contextFactory0.getApplicationClassLoader();
      contextFactory0.createClassLoader((ClassLoader) null);
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{{uZToTSN6");
      // Undeclared exception!
      try { 
        parser0.parse("@WXJ/CCGzPAqNB>4qW", "set", 23);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (set#23)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setGenerateDebugInfo(true);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons2.setGeneratingSource(true);
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser0.parse("Qa::2|zmU", ".;;)Rq", 104);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after :: operator (.;;)Rq#104)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.stringIsCompilableUnit("msg^const.redecl");
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      contextFactory1.enterContext(context0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory2 = new ContextFactory();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.getErrorReporter();
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 10);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("b:-^Ol", "b:-^Ol", 1048576);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (b:-^Ol#1048576)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(true);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("for", "z", (-3621));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3621
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      String string0 = "/u)^*c";
      // Undeclared exception!
      try { 
        parser0.parse("/u)^*c", "set", (-897));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -897
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      // Undeclared exception!
      try { 
        parser0.parse("-A(G{", "msg.bad.var", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (msg.bad.var#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(true);
      compilerEnvirons0.setXmlAvailable(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setGeneratingSource(true);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("-/&", "wrapRegExp", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (wrapRegExp#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter.forEval((ErrorReporter) null);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I%V,=9(t@7CR-7{");
      boolean boolean0 = true;
      compilerEnvirons2.setXmlAvailable(true);
      compilerEnvirons0.setXmlAvailable(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "$u>u\\H?U~9Aj?u( -R";
      // Undeclared exception!
      try { 
        parser0.parse("$u>uH?U~9Aj?u( -R", "_i", 108);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      StringReader stringReader0 = new StringReader("0B;%V");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        parser0.parse("Ap,~", "Ap,~", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (Ap,~#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(false);
      NativeCall nativeCall0 = new NativeCall();
      Context context1 = new Context(contextFactory0);
      boolean boolean0 = context0.generateObserverCount;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("f|`Q?A)<OtkwDw&! Z/", "get", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (get#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGenerateDebugInfo(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setGenerateObserverCount(false);
      parser0.addStrictWarning("error reporter", "error reporter");
      String string0 = " V> zeFd$e&Ew'Uc/ ";
      // Undeclared exception!
      try { 
        parser0.parse("~D#5`T", " V> zeFd$e&Ew'Uc/ ", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character ( V> zeFd$e&Ew'Uc/ #12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      StringReader stringReader0 = new StringReader(";");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons2.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      compilerEnvirons0.setGenerateDebugInfo(true);
      String string0 = null;
      // Undeclared exception!
      try { 
        parser0.parse("ConVXJT=CIUlta0?-", (String) null, 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Context context1 = new Context();
      ErrorReporter errorReporter0 = context1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      errorReporter0.runtimeError("language version", "language version", 1, "error reporter", 1566);
      // Undeclared exception!
      try { 
        parser0.parse("{", "{", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing } in compound statement ({#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      String string0 = "I%V,=9(t@7CR-7{";
      compilerEnvirons0.setXmlAvailable(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "I%V,=9(t@7CR-7{", 114);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(114, true, "I%V,=9(t@7CR-7{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      StringReader stringReader0 = new StringReader("0B;%V");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      contextFactory0.onContextCreated(context0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "try ";
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("try ", "error reporter", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing { before try block (error reporter#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Set<String> set0 = compilerEnvirons0.activationNames;
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.enter();
      classLoader0.clearAssertionStatus();
      contextFactory0.createClassLoader(classLoader0);
      context0.getDebugger();
      compilerEnvirons0.setGeneratingSource(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[3] = '&';
      charArray0[4] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) pushbackReader0, "language version", 112);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegally formed XML syntax (language version#112)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("", "", 12);
      StringReader stringReader0 = new StringReader("");
      parser0.getEncodedSource();
      parser0.pushScope(scriptOrFnNode0);
      // Undeclared exception!
      try { 
        parser0.pushScope(scriptOrFnNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.makeContext();
      contextFactory0.enterContext();
      ContextFactory.getGlobal();
      ContextFactory contextFactory2 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("z?;9.OBFOa5", "z?;9.OBFOa5", 1917);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (z?;9.OBFOa5#1917)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("$+", "msg.only.from.new", 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (msg.only.from.new#15)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)114;
      compilerEnvirons1.activationNames = (Set<String>) linkedHashSet0;
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        parser0.parse("do ", "language version", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(true);
      NativeCall nativeCall0 = new NativeCall();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context.exit();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons2, errorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("VJVoU*\"F~", "language version", 203);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (language version#203)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      Context context1 = contextFactory0.enterContext(context0);
      ErrorReporter errorReporter0 = context1.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter1);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context2 = contextFactory0.makeContext();
      contextFactory1.onContextCreated(context2);
      context2.stringIsCompilableUnit("");
      compilerEnvirons1.setErrorReporter(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter1);
      Parser parser2 = new Parser(compilerEnvirons1, errorReporter0);
      String string0 = "typeof";
      // Undeclared exception!
      try { 
        parser2.parse("typeof", "", (-889));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -889
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter1 = context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter1);
      parser0.calledByCompileFunction = false;
      FunctionNode functionNode0 = new FunctionNode("language version");
      FunctionNode functionNode1 = new FunctionNode("language version");
      contextFactory0.enterContext();
      context0.stringIsCompilableUnit("msg.bad.throw.eol");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser((CompilerEnvirons) null, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(4, true, "msg.bad.throw.eol");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      defaultErrorReporter0.runtimeError("c7", "c7", 140, "c7", 117);
      contextFactory0.getE4xImplementationFactory();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      parser0.parse("$z:kac3K", "error reporter", 8);
      // Undeclared exception!
      try { 
        NativeJavaMethod.scriptSignature(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("this", "this", 164);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(120, false, "error reporter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter1 = context0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter1);
      errorReporter0.runtimeError("msg.bad.throw.eol", "C5O$V)5 fI", 11, "MP7 X*sv", 44);
      String string0 = "#\"VX>3";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      parser1.parse("msg.bad.throw.eol", "#\"VX>3", 2);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser1.getCurrentLineNumber();
      // Undeclared exception!
      try { 
        parser1.parse("MP7 X*sv", "", 18);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (#18)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)34;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      compilerEnvirons1.setAllowMemberExprAsFunctionName(true);
      parser0.parse("this", (String) null, 119);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.getErrorReporter();
      Context.createInterpreter();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) inputStreamReader0, "language version", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Parser parser0 = new Parser(compilerEnvirons2, errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u@ExK4#z8:");
      // Undeclared exception!
      try { 
        parser1.parse("var ", "error reporter", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing variable name (error reporter#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("[-", "*", 106);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (*#106)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      errorReporter0.runtimeError("language version", "language version", 1, "msg.continue.outside", 1566);
      errorReporter0.runtimeError("error reporter", "error reporter", 3, "error reporter", 117);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        parser0.parse("[O", "msg.no.paSren.let", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (msg.no.paSren.let#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = context0.isContinuationsTopCall;
      NativeCall nativeCall0 = new NativeCall();
      Context context1 = contextFactory0.enter();
      context1.currentActivationCall = nativeCall0;
      ContextFactory contextFactory1 = new ContextFactory();
      Context.exit();
      boolean boolean1 = context1.generateObserverCount;
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[,+", "error reporter", (-1594));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1594
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      compilerEnvirons0.setGeneratingSource(true);
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory1.enterContext();
      context1.getErrorReporter();
      Context.exit();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      boolean boolean0 = context1.generateObserverCount;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[r,+", "error reporter", 39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (error reporter#39)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("F-?#Sq{OjFJn#;/", "F-?#Sq{OjFJn#;/");
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      RegExpImpl regExpImpl0 = new RegExpImpl();
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      char[] charArray0 = new char[7];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      contextFactory0.enterContext(context0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Parser parser3 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser3.parse("~{_/$", "language version", 1590);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing : after property id (language version#1590)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons1.setErrorReporter(errorReporter0);
      contextFactory0.getApplicationClassLoader();
      contextFactory0.createClassLoader((ClassLoader) null);
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{{uZToTSN6");
      // Undeclared exception!
      try { 
        parser0.parse("{{uZToTSN6", "set", 23);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing } in compound statement (set#23)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = contextFactory0.enter();
      context1.stringIsCompilableUnit("language version");
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      Context context2 = new Context(contextFactory1);
      Context context3 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons2.setErrorReporter(errorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      String string0 = "c7";
      String string1 = "with";
      // Undeclared exception!
      try { 
        parser1.parse("with", "language version", 101);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before with-statement object (language version#101)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateDebugInfo(false);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(true);
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter1);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      defaultErrorReporter2.runtimeError("<+", "<+", 540, "Qa::2|zmU", 220);
      // Undeclared exception!
      try { 
        parser0.parse("delete", "<+", (-1502));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1502
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      StringReader stringReader0 = new StringReader("}zT[s[H#7G-");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = new Context(contextFactory0);
      String string0 = "FBFYf.yf..Vh";
      context0.stringIsCompilableUnit("FBFYf.yf..Vh");
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " Ld%Z}GXtxRFP7");
      // Undeclared exception!
      try { 
        parser0.parse("K?", "K?", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (K?#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y%{");
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons3, defaultErrorReporter0);
      parser1.createDecompiler(compilerEnvirons2);
      Parser parser2 = new Parser(compilerEnvirons3, defaultErrorReporter0);
      compilerEnvirons2.setGenerateDebugInfo(false);
      // Undeclared exception!
      try { 
        parser0.parse("y%{", "C", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid property id (C#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      context0.generateObserverCount = context0.generateObserverCount;
      context0.instructionThreshold = 100;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("+[E-f+G]W}", "language version", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("(new Number(", "(new Number(");
      // Undeclared exception!
      try { 
        parser0.parse("(new Number(", "(new Number(", 168);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file ((new Number(#168)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      StringReader stringReader0 = new StringReader("0B;%V");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("0B;%V");
      functionNode0.hasSideEffects();
      parser0.parse("(new Boolean(false))", "msg.no.brace.after.body", 2);
      parser0.getEncodedSource();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(true);
      compilerEnvirons0.setXmlAvailable(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "I%V,=9(t@7CR-7{", 108);
      parser0.defineSymbol(108, false, "I%V,=9(t@7CR-7{");
      parser0.eof();
      // Undeclared exception!
      try { 
        parser0.addWarning("", "I%V,=9(t@7CR-7{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(true);
      compilerEnvirons0.setXmlAvailable(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "I%V,=9(t@7CR-7{", 108);
      parser0.defineSymbol(108, false, "I%V,=9(t@7CR-7{");
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(3, false, "I%V,=9(t@7CR-7{");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Context context1 = contextFactory1.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      contextFactory0.onContextCreated(context0);
      ContextFactory contextFactory2 = new ContextFactory();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      contextFactory1.createClassLoader(classLoader0);
      ContextFactory contextFactory3 = new ContextFactory();
      Context context2 = new Context();
      ContextFactory contextFactory4 = ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      context1.useDynamicScope = false;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("{}JT", "error reporter", 9);
      contextFactory4.onContextCreated(context2);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Interpreter interpreter0 = new Interpreter();
      // Undeclared exception!
      try { 
        parser0.defineSymbol(5, false, "error reporter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      context0.getErrorReporter();
      boolean boolean0 = context0.generateObserverCount;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setGeneratingSource(false);
      NativeCall nativeCall0 = context0.currentActivationCall;
      contextFactory0.enterContext();
      boolean boolean1 = context0.compileFunctionsWithDynamicScopeFlag;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      contextFactory0.enterContext(context0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Context context1 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("return", "language version", (-742));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -742
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Context context0 = new Context();
      context0.stringIsCompilableUnit("w");
      Context context1 = new Context();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons5 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.enter();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w");
      context0.stringIsCompilableUnit("factory.makeContext() returned Context instance already associated with some thread");
      CompilerEnvirons compilerEnvirons6 = new CompilerEnvirons();
      ContextFactory contextFactory2 = ContextFactory.getGlobal();
      Context context2 = contextFactory2.enterContext();
      Context context3 = contextFactory0.enterContext(context2);
      contextFactory0.enterContext(context3);
      Set<String> set0 = context0.activationNames;
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter2);
      // Undeclared exception!
      try { 
        parser0.addError("w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property w
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Set<String> set0 = compilerEnvirons0.activationNames;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      context0.getDebugger();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setGeneratingSource(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("IHZ_nU>=<-9WJoW_G", "m", 140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (m#140)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("QLA^<+l`P4{@dS", (String) null, 1954);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      compilerEnvirons0.setGenerateObserverCount(false);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setGeneratingSource(true);
      Context context0 = new Context(contextFactory0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("<>", "<>", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (<>#10)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      defaultErrorReporter0.runtimeError("c7", "c7", 140, "c7", 117);
      contextFactory0.getE4xImplementationFactory();
      Locale locale0 = new Locale("error reporter", "error reporter", "");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      context0.activationNames = set0;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      parser0.parse("$z:kac3K", "error reporter", 8);
      parser0.parse("$z:kac3K", "language version", 10);
      // Undeclared exception!
      try { 
        NativeJavaMethod.scriptSignature(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Set<String> set0 = compilerEnvirons0.activationNames;
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      context0.getDebugger();
      compilerEnvirons0.setGeneratingSource(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = '&';
      charArray0[3] = '&';
      charArray0[4] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      PushbackReader pushbackReader1 = new PushbackReader(pushbackReader0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) pushbackReader1, "language version", (int) 'r');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegally formed XML syntax (language version#114)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      parser0.parse("Ket", "language version", 110);
      ContextFactory.getGlobal();
      contextFactory0.enterContext(context0);
      compilerEnvirons0.initFromContext(context0);
      compilerEnvirons0.setGeneratingSource(false);
      Context.createInterpreter();
      parser0.defineSymbol(153, false, "language version");
      // Undeclared exception!
      try { 
        parser0.defineSymbol((-3851), false, "|@`6c9F$TkU[cz{(R7");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      parser0.parse("Ket", "language version", 110);
      context0.getRegExpProxy();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      compilerEnvirons3.setGeneratingSource(false);
      String string0 = "9";
      String string1 = "set";
      // Undeclared exception!
      try { 
        parser0.parse("@*?&M=O", "set", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (set#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
