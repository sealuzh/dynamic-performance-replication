/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:50:21 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.chrono.ChronoLocalDate;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.jdbc.ConnectionContext;
import org.apache.derby.iapi.store.raw.ContainerHandle;
import org.apache.derby.iapi.types.TypeId;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBBlob;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.Right;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      Recover.execute("G0CRI)c3G~`; ", "G0CRI)c3G~`; ");
      // Undeclared exception!
      try { 
        DBUtil.runScript("G0CRI)c3G~`; ", 'E', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Right.SELECT;
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.getOpenPreparedStatementCount();
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("--8000004f-00d0-fd77-3ed8-000a0a0b1900", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript(">S7$`T\")", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.existsEnvironment("_F<\"e7q:afF!^Ih");
      // Undeclared exception!
      try { 
        DBUtil.queryLong("_F<\"e7q:afF!^Ih", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.getOpenPreparedStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      String string0 = "us-ascii";
      DBUtil.available("us-ascii", "us-ascii", "us-ascii", "us-ascii");
      DBUtil.checkReadOnly("us-ascii", false);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("No JDBC driver class name specified", false, false, false, true, "us-ascii", false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'No JDBC driver class name specified.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect("Np", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Np.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "There are unclosed database resources: ";
      stringArray0[2] = "";
      stringArray0[3] = "KvCHa|JQ";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "There are unclosed database resources: ", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.equivalent(dBUniqueConstraint0, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.checkReadOnly("y", false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Statement statement0 = null;
      DBUtil.createLoggingResultSet((ResultSet) null, (Statement) null);
      String string0 = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("[2k`|S1P", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "_F<\"e7q:afF!^\\Ih";
      // Undeclared exception!
      try { 
        DBUtil.query("_F<\"e7q:afF!^Ih", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "[2k`|S1P";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("[2k`|S1P", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis(3754L);
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      DBUtil.close((ResultSet) null);
      String string0 = "preparing statement: ";
      DBUtil.existsEnvironment("preparing statement: ");
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "updateBoolean";
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("updateBoolean", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: updateBoolean
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.existsEnvironment("Failed to fetch metadata from connection ");
      try { 
        DBUtil.getMetaData((Connection) null, "Failed to fetch metadata from connection ", "org.databene.SQL", false, false, false, false, "0;u*LQ!n#@UT", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = TypeId.SMALLINT_SCALE;
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.getOpenPreparedStatementCount();
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("--8000004f-00d0-fd77-3ed8-000a0a0b1900", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("--8000004f-00d0-fd77-3ed8-000a0a0b1900", "--8000004f-00d0-fd77-3ed8-000a0a0b1900", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --8000004f-00d0-fd77-3ed8-000a0a0b1900
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.checkReadOnly("5^7XnP", false);
      DBUtil.getOpenResultSetCount();
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("*DHzcu", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "Ul{V1g}Y(t?d|B  n";
      boolean boolean0 = false;
      String string1 = "--Ul{V1g}Y(t?d|B  n";
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      DBUtil.runScript("--Ul{V1g}Y(t?d|B  n", 't', (Connection) null, false, errorHandler0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation0.getCurrentConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.countRows("TL}ab%$P", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.getOpenConnectionCount();
      String string0 = DBUtil.escape("Ul");
      assertEquals("Ul", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("LONG");
      DBUtil.dependencyOrderedTables(tableContainer0);
      DBUtil.checkReadOnly("LONG", false);
  }
}
