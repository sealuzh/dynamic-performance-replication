/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:36:33 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBBlob;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      DBUtil.getOpenPreparedStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) proxy0, "hr-9", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("u&^4/&'[^vZ;D", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.connect("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.available((String) null, "4s>", "UA47XjxqJ'WtX`9b", "UA47XjxqJ'WtX`9b");
      DBUtil.existsEnvironment("4s>");
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 17 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf((String) null);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase((String) null, "(*~GL:nu0lv8", versionNumber0);
      defaultDatabase0.getCatalog(",Z^h7^H[Dm%%");
      DBSchema dBSchema0 = new DBSchema("--", (DBCatalog) null);
      DBUtil.dependencyOrderedTables(dBSchema0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool.create((ConnectionPoolDataSource) jdbcDataSource0);
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("Z5Q8m\u0004ZIFTeKu+;Q%p", level0);
      assertEquals(Level.info, errorHandler0.getLevel());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      Connection connection0 = null;
      DBUtil.escape("UA47XjxqJ'WtX`9b");
      // Undeclared exception!
      try { 
        DBUtil.query("^WJ2a1o<", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.close((Connection) null);
      DBUtil.existsEnvironment("");
      try { 
        DBUtil.connect("", "", "", "", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "ANcp";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("UA47XjxqJ'1WtX`9-", "ANcp", "SUPERTABLE_NAME", "UA47XjxqJ'1WtX`9-", (String) null, "4zw6]$YDa&/Cpza");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting ANcp failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet(17L, 604);
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.close((Connection) null);
      DBUtil.existsEnvironment("");
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      String string0 = "Z5Q8m\\4ZIFTeKu+;Q%p";
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("PQF,rk\"i:zSAln=)l", level0);
      char char0 = 'S';
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "Z5Q8m\u0004ZIFTeKu+;Q%p", "yb", "Z5Q8m\u0004ZIFTeKu+;Q%p", "PQF,rk\"i:zSAln=)l", "Cannot establish a savepoint in auto-commit mode.");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("--_+1B[We+<ML~e$2", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: --_+1B[We+<ML~e$2
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("wasNll", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "ANcp";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("UA47XjxqJ'1WtX`9-", "ANcp", "SUPERTABLE_NAME", "UA47XjxqJ'1WtX`9-", (String) null, "4zw6]$YDa&/Cpza");
      boolean boolean0 = false;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      // Undeclared exception!
      try { 
        JDBCConnectData.parseSingleDbProperties("IGNORECASE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: IGNORECASE
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      DBUtil.existsEnvironment("^WJ2a1o2");
      DBUtil.assertAllDbResourcesClosed(false);
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("^WJ2a1o2", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("^WJ2a1o2", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = FBBlob.SEGMENTED;
      Connection connection0 = null;
      DBUtil.resetMonitors();
      Level level0 = Level.fatal;
      ErrorHandler errorHandler0 = new ErrorHandler("--ZlOfxTo-UX", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("V3?qEu<rWh\"gqD", 'Y', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("yw", (String) null, "--'UNICODE' AS CLIENT_ENCODING FROM DUAL", "--'UNICODE' AS CLIENT_ENCODING FROM DUAL");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.countRows("databene", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      DBUtil.existsEnvironment("^WJ2a1o2");
      DBUtil.assertAllDbResourcesClosed(false);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.runScript("^WJ2a1o2", "^WJ2a1o2", (Connection) null, false, (ErrorHandler) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: ^WJ2a1o2
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.resetMonitors();
      Level level0 = Level.fatal;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      errorHandler0.setLoggingStackTrace(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ErrorHandler errorHandler1 = new ErrorHandler("");
      DBUtil.runScript("--pr", '^', (Connection) null, true, errorHandler1);
      DBUtil.getOpenStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("org.hsqldb.Trace", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "";
      VersionNumber.valueOf("");
      Connection connection0 = null;
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler(" result set(s)", level0);
      try { 
        DBUtil.getMetaData((Connection) null, "|WJHkU:$!@#yT2Tg)", "Prepare called before end", false, false, false, false, "rspY&ihr_@Y-J_", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      DBUtil.getOpenPreparedStatementCount();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      defaultDBTable0.getColumns(stringArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Connecting the database failed silently - probably due to wrong driver (", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, dBPrimaryKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      DBCatalog dBCatalog0 = new DBCatalog("Unknown ResultSet holdability setting: {0}.");
      DBSchema dBSchema0 = new DBSchema(", ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("XBM0G.D", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "XBM0G.D";
      dBCatalog0.getSequences();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[1] = " ZgvZc<@:?[";
      stringArray0[2] = "9{,rE.-(}c:";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XBM0G.D", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      boolean boolean0 = FBBlob.SEGMENTED;
      defaultDBTable0.getForeignKeyConstraint(stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBForeignKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'XBM0G.D' not found in table 'XBM0G.D'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      DBUtil.existsEnvironment(", ");
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.checkReadOnly("--cn;~jz=", false);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "42Z32.U", false, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBUtil.existsEnvironment("");
      DBUtil.checkReadOnly("Im", false);
      DBUtil.close((Statement) null);
      DBUtil.createLoggingStatementHandler((Statement) null, false);
      DBUtil.getOpenResultSetCount();
      Recover recover0 = new Recover();
      Connection connection0 = recover0.getLobConnection();
      assertNull(connection0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = new Boolean("Zl");
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("Zl", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
