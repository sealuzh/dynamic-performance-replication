/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:02:00 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "r&]Wfmml_#N`)(kR:";
      ElExpression elExpression0 = new ElExpression("r&]Wfmml_#N`)(kR:");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("can't parse int value");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("can't parse int value");
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setComponent((Component) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel0.setTopLevelComponent(errorPage0);
      assertTrue(errorPage0.isPage());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("4 0Ia");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression 4 0Ia evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("[] from ");
      dynamicSelectModel0.translateValue("[] from ");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue((-2154));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2154
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] from ");
      dynamicSelectModel1.value("[] from ");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(errorPage0);
      dynamicSelectModel0.translateValue("rujv;ZxKbo");
      dynamicSelectModel0.reset();
      System.setCurrentTimeMillis(2147483647L);
      int int0 = dynamicSelectModel2.getOptionCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "4 a";
      dynamicSelectModel0.value("4 a");
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("4 a");
      String string1 = "[] from ";
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.translator("4 a");
      dynamicSelectModel2.translator("4 a");
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.empty(mockHijrahDate0);
      ErrorPage errorPage1 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel4 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.value("4 a");
      dynamicSelectModel5.setComponent(errorPage0);
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel0.collection("[] from ");
      dynamicSelectModel6.translateValue("java.lang.Integer@0000000033");
      String string2 = "rujv;ZxKbo";
      // Undeclared exception!
      try { 
        dynamicSelectModel3.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("4 a");
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("4 a");
      DynamicSelectModel dynamicSelectModel2 = new DynamicSelectModel();
      dynamicSelectModel1.label("[] from ");
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.empty(mockHijrahDate0);
      DynamicSelectModel dynamicSelectModel4 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.value("4 a");
      Clock clock0 = MockClock.systemDefaultZone();
      MockHijrahDate.now(clock0);
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel0.collection("[] from ");
      String string0 = "java.lang.Integer@0000000033";
      dynamicSelectModel6.translateValue("java.lang.Integer@0000000033");
      dynamicSelectModel3.validate();
      dynamicSelectModel0.translateValue("java.lang.Integer@0000000033");
      dynamicSelectModel5.translateValue("java.lang.Integer@0000000035");
      DynamicSelectModel dynamicSelectModel7 = dynamicSelectModel4.collection("java.lang.Integer@0000000033");
      int int0 = 58;
      // Undeclared exception!
      try { 
        dynamicSelectModel7.getLabel(58);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
