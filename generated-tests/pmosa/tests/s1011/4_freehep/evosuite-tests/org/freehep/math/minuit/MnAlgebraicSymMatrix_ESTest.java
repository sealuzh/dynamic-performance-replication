/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 20:07:43 GMT 2018
 */

package org.freehep.math.minuit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.freehep.math.minuit.MnAlgebraicSymMatrix;
import org.freehep.math.minuit.MnAlgebraicVector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MnAlgebraicSymMatrix_ESTest extends MnAlgebraicSymMatrix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(0);
      mnAlgebraicSymMatrix0.toString();
      int int1 = (-1658);
      int int2 = (-3794);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set((-1658), (-3794), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1369859
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(0);
      mnAlgebraicSymMatrix0.toString();
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(0);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.eigenvalues();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(1);
      mnAlgebraicSymMatrix0.eigenvalues();
      try { 
        mnAlgebraicSymMatrix0.invert();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(3);
      mnAlgebraicSymMatrix0.eigenvalues();
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set((-1), 3820, (-690.782693903965));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(2);
      mnAlgebraicSymMatrix0.toString();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix1.eigenvalues();
      mnAlgebraicSymMatrix0.eigenvalues();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix2 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix2.eigenvalues();
      mnAlgebraicSymMatrix2.toString();
      mnAlgebraicSymMatrix2.nrow();
      mnAlgebraicSymMatrix1.set(1, (-1), 1.0E-35);
      mnAlgebraicSymMatrix1.toString();
      mnAlgebraicSymMatrix2.invert();
      mnAlgebraicSymMatrix1.size();
      mnAlgebraicSymMatrix1.size();
      mnAlgebraicSymMatrix1.invert();
      assertFalse(mnAlgebraicSymMatrix1.equals((Object)mnAlgebraicSymMatrix0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(0);
      mnAlgebraicSymMatrix0.nrow();
      mnAlgebraicSymMatrix0.invert();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(2);
      mnAlgebraicSymMatrix0.toString();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix1.eigenvalues();
      mnAlgebraicSymMatrix1.eigenvalues();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix2 = mnAlgebraicSymMatrix1.clone();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix3 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix2.eigenvalues();
      mnAlgebraicSymMatrix2.toString();
      mnAlgebraicSymMatrix2.size();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix4 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix1.toString();
      mnAlgebraicSymMatrix3.eigenvalues();
      mnAlgebraicSymMatrix3.clone();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix5 = mnAlgebraicSymMatrix1.clone();
      mnAlgebraicSymMatrix5.ncol();
      mnAlgebraicSymMatrix4.eigenvalues();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix6 = new MnAlgebraicSymMatrix(1);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix6.set(2, 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(2);
      mnAlgebraicSymMatrix0.toString();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix1.eigenvalues();
      mnAlgebraicSymMatrix1.eigenvalues();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix2 = mnAlgebraicSymMatrix1.clone();
      mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix2.eigenvalues();
      mnAlgebraicSymMatrix2.invert();
      // Undeclared exception!
      mnAlgebraicSymMatrix2.eigenvalues();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(3);
      mnAlgebraicSymMatrix0.set(1, 2, 1.0);
      MnAlgebraicVector mnAlgebraicVector0 = mnAlgebraicSymMatrix0.eigenvalues();
      MnAlgebraicVector mnAlgebraicVector1 = mnAlgebraicSymMatrix0.eigenvalues();
      assertFalse(mnAlgebraicVector1.equals((Object)mnAlgebraicVector0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(1);
      mnAlgebraicSymMatrix0.data();
      try { 
        mnAlgebraicSymMatrix0.invert();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(8);
      mnAlgebraicSymMatrix0.eigenvalues();
      mnAlgebraicSymMatrix0.invert();
      mnAlgebraicSymMatrix0.toString();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      // Undeclared exception!
      mnAlgebraicSymMatrix1.eigenvalues();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 1;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(1);
      int int1 = 3;
      mnAlgebraicSymMatrix0.eigenvalues();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = new MnAlgebraicSymMatrix(3);
      mnAlgebraicSymMatrix1.eigenvalues();
      mnAlgebraicSymMatrix1.set(1, 1, (-707.01));
      mnAlgebraicSymMatrix1.eigenvalues();
      try { 
        mnAlgebraicSymMatrix1.invert();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(3);
      mnAlgebraicSymMatrix0.toString();
      mnAlgebraicSymMatrix0.set(1, 1, 1);
      MnAlgebraicVector mnAlgebraicVector0 = mnAlgebraicSymMatrix0.eigenvalues();
      assertNotNull(mnAlgebraicVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(1);
      mnAlgebraicSymMatrix0.set(0, 0, 3460.42);
      mnAlgebraicSymMatrix0.invert();
  }
}
