/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 06:14:49 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.lang.reflect.Method;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class2HTML.toHTML("Y");
      Class2HTML.referenceType("U/`,9%*-@$ddjS");
      String string0 = "@y=7b#bq\\TUjn";
      Class2HTML.toHTML("@y=7b#bqTUjn");
      Class2HTML.toHTML("[}UqAM>F&v7GfT");
      Class2HTML.toHTML("boolean");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "boolean";
      stringArray0[1] = "boolean";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "&VZM68H#7ho?zQ>*m";
      stringArray0[0] = "&VZM68H#7ho?zQ>*m";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/<");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "java.time.chrono.JapaneseEra");
      JavaClass javaClass0 = syntheticRepository0.loadClass("java.time.chrono.JapaneseEra");
      syntheticRepository0.loadClass("java.lang.Class");
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "</TT><UL><LI><A HREF=\"#cp");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          Class2HTML.referenceType("Fj2.=fQ5c-+G|M");
          ClassPath classPath0 = new ClassPath("3JS_}~hTDOws]7");
          ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
          Class<Method> class0 = Method.class;
          MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
          Class<Method> class1 = Method.class;
          JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class1);
          classPathRepository0.storeClass(javaClass0);
          JavaClass javaClass1 = classPathRepository0.loadClass(class0);
          classPathRepository0.clear();
          Class2HTML class2HTML0 = new Class2HTML(javaClass1, "\n");
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("_attributeshtml\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTk>\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME N)ME=\"Code\" SRC=\"");
      classPath0.getResources("_attributeshtml\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTk>\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME N)ME=\"Code\" SRC=\"");
      ClassPath classPath1 = new ClassPath(classPath0, "_attributeshtml\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTk>\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME N)ME=\"Code\" SRC=\"");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath1);
      classPathRepository0.clear();
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      java.lang.ClassLoader.getSystemClassLoader();
      JavaClass javaClass0 = classLoaderRepository0.loadClass("java.lang.reflect.AnnotatedType");
      classLoaderRepository0.storeClass(javaClass0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "java.lang.reflect.AnnotatedType");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_attributeshtml\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTk>\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME N)ME=\"Code\" SRC=\"";
      stringArray0[1] = "#D%C,{??j";
      stringArray0[2] = "java.lang.reflect.TypeVariable";
      stringArray0[3] = "java.lang.reflect.AnnotatedType";
      stringArray0[4] = "java.lang.reflect.AnnotatedType";
      stringArray0[5] = "_attributeshtml\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTk>\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME N)ME=\"Code\" SRC=\"";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "\t(wide)";
      Class2HTML.referenceType("\t(wide)");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Object> class0 = Object.class;
      java.lang.ClassLoader.getSystemClassLoader();
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      javaClass0.setSourceFileName("Fy`H&*WBqGlXLlXN");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "<A HREF=\"\t(wide).html\" TARGET=_top>\t(wide)</A>");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<A HREF=\"\t(wide).html\" TARGET=_top>\t(wide)</A>";
      stringArray0[1] = "\t(wide)";
      stringArray0[2] = "\t(wide)";
      stringArray0[3] = "\t(wide)";
      stringArray0[4] = "\t(wide)";
      stringArray0[5] = "\t(wide)";
      stringArray0[6] = "";
      stringArray0[7] = "\t(wide)";
      stringArray0[8] = "\t(wide)";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<String> class0 = String.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      javaClass0.isProtected(false);
      javaClass0.isPrivate(false);
      javaClass0.isStrictfp(false);
      Class2HTML.toHTML("_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"");
      Class2HTML.referenceType("_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;/FRAMESET&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"Code\" SRC=\"");
      Class2HTML.referenceType(" 2&8~*");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"";
      stringArray0[1] = "<A HREF=\" 2&8~*.html\" TARGET=_top> 2&8~*</A>";
      stringArray0[2] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;/FRAMESET&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"Code\" SRC=\"";
      stringArray0[3] = "\"@R>-9}U}>;y'";
      stringArray0[4] = " 2&8~*";
      stringArray0[5] = "boolean";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[18];
      String string0 = "-SZM68H#7ho?zQ>*+";
      stringArray0[0] = "-SZM68H#7ho?zQ>*+";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      java.lang.ClassLoader.getSystemClassLoader();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "java.nio.ByteBuffer";
      stringArray0[1] = "\r";
      stringArray0[2] = "j,";
      stringArray0[3] = "D63S?wnD";
      stringArray0[4] = "-zip";
      stringArray0[5] = "double";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // double (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader1);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      javaClass0.setClassName("$");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "Unreachable default case reached!");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Unreachable default case reached!";
      stringArray0[1] = "Unreachable default case reached!";
      stringArray0[2] = "Unreachable default case reached!";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class2HTML.toHTML("_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-d";
      stringArray0[1] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;/FRAMESET&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"Code\" SRC=\"";
      stringArray0[2] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;/FRAMESET&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"Code\" SRC=\"";
      stringArray0[3] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"";
      stringArray0[4] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"";
      stringArray0[5] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;/FRAMESET&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"Code\" SRC=\"";
      stringArray0[6] = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;/FRAMESET&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"Code\" SRC=\"";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      stringArray0[3] = "-d";
      stringArray0[4] = "-d";
      stringArray0[5] = "-d";
      stringArray0[6] = "-d";
      stringArray0[7] = "-d";
      stringArray0[8] = "";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/w0!:0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/");
      Class2HTML.toHTML("-d");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "w0!:0";
      stringArray0[1] = "-d";
      stringArray0[2] = "/";
      stringArray0[3] = "-d";
      stringArray0[4] = "w0!:0";
      stringArray0[5] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
