/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 04:57:39 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)64;
      TiffField tiffField0 = new TiffField((byte)64, 2146897704, fieldTypeShort0, (byte)64, 0L, byteArray0, byteOrder0, 246);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(64, tiffField0.getTag());
      assertEquals(2146897704, tiffField0.getDirectoryType());
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals(64, int0);
      assertEquals(246, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2304, (-2147483646), fieldTypeAscii0.UNDEFINED, 4L, 255L, byteArray0, byteOrder0, (-2760));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2760), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2304, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-2147483646), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(40092, 65535, fieldTypeShort0, (-4498), 65535, byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(40092, tiffField0.getTag());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(270, 270, fieldTypeRational0, 270, 270, byteArray0, byteOrder0, 270);
      tiffField0.getValue();
      assertEquals(270, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getSortHint());
      assertEquals(2160, tiffField0.getBytesLength());
      assertEquals(270, tiffField0.getTag());
      assertEquals(270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1271), fieldTypeRational0, 27, 27, byteArray0, byteOrder0, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-1271), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146771381, (-1), fieldTypeLong0, (-2320L), (-1), byteArray0, byteOrder0, 2464);
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2464, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2146771381, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-768), 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 563);
      int int0 = tiffField0.getTag();
      assertEquals(563, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-768), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3567), "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte) (-28);
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-20);
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte) (-126);
      byteArray0[7] = (byte)100;
      TiffField tiffField0 = new TiffField(34954, 334, fieldTypeAscii0, 2160L, (-712L), byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals(334, tiffField0.getDirectoryType());
      assertEquals(2160, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-712), tiffField0.getOffset());
      assertEquals(34954, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1393, 1393, fieldTypeRational0, 220L, (-241L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-241), tiffField0.getOffset());
      assertEquals(1393, tiffField0.getTag());
      assertEquals(1393, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(917, "ygoG}");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(917, 917, fieldTypeLong0, 0L, (-2597L), byteArray0, (ByteOrder) null, (byte) (-75));
      int int0 = tiffField0.getSortHint();
      assertEquals(917, tiffField0.getDirectoryType());
      assertEquals((-2597), tiffField0.getOffset());
      assertEquals(917, tiffField0.getTag());
      assertEquals((-75), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, 1973L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 0, fieldTypeDouble0, 255L, 30, byteArray0, byteOrder0, (-2428));
      int int0 = tiffField0.getOffset();
      assertEquals(10, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(30, int0);
      assertEquals((-2428), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)64;
      byteArray0[4] = (byte)64;
      TiffField tiffField0 = new TiffField(4, 3578, fieldTypeRational0, (byte)64, 1444L, byteArray0, byteOrder0, (byte)64);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3578, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(256, int0);
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(512, tiffField0.getBytesLength());
      assertEquals(1444, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-42);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1544, "_-~R>LMM_Xmbr");
      TiffField tiffField0 = new TiffField((byte) (-42), (-3155), fieldTypeLong0, (byte)9, 1651L, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-42), tiffField0.getTag());
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals((-3155), tiffField0.getDirectoryType());
      assertEquals(1651, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1392), (-1063), fieldTypeAscii0.BYTE, 1, (-2793L), byteArray0, byteOrder0, (-1063));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1392), tiffField0.getTag());
      assertEquals((-1063), tiffField0.getDirectoryType());
      assertEquals((-1063), tiffField0.getSortHint());
      assertEquals((-2793), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)64;
      byteArray0[4] = (byte)64;
      TiffField tiffField0 = new TiffField(3647, 2316, fieldTypeRational0, (byte)1, 2885L, byteArray0, byteOrder0, (-2178));
      tiffField0.getIntValue();
      assertEquals(3647, tiffField0.getTag());
      assertEquals((-2178), tiffField0.getSortHint());
      assertEquals(2316, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2885, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-108);
      TiffField tiffField0 = new TiffField(51, 23, fieldTypeShort0, 1L, (-142L), byteArray0, byteOrder0, (-1679));
      tiffField0.getIntValue();
      assertEquals((-1679), tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals((-142), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(51, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, (String) null);
      TiffField tiffField0 = new TiffField(50, 402, fieldTypeDouble0, 2993L, 402, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(402, tiffField0.getDirectoryType());
      assertEquals(402, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3547), (-3547), fieldTypeDouble0, (-3547), 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals((-3547), tiffField0.getTag());
      assertEquals((-3547), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1695, (-1717986917), (FieldType) null, 1L, 0L, byteArray0, byteOrder0, 1120);
      tiffField0.getFieldType();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(1120, tiffField0.getSortHint());
      assertEquals(1695, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, " for: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(949, 0, fieldTypeByte0, 4L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(949, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[51];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "a");
      TiffField tiffField0 = new TiffField(26, 1695, fieldTypeFloat0, 6236L, (-513L), byteArray0, byteOrder0, 26);
      tiffField0.getFieldType();
      assertEquals(1695, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getTag());
      assertEquals((-513), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-187), (-187), fieldTypeLong0, 1, 1L, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleValue();
      assertEquals((-187), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-187), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      TiffField tiffField0 = new TiffField(50940, (-1434), fieldTypeLong0.UNDEFINED, 1, 50940, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50940, tiffField0.getTag());
      assertEquals(50940, tiffField0.getOffset());
      assertEquals((-1434), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-108);
      TiffField tiffField0 = new TiffField(51, 23, fieldTypeShort0, 1L, (-142L), byteArray0, byteOrder0, (-1679));
      tiffField0.getDoubleValue();
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(51, tiffField0.getTag());
      assertEquals((-1679), tiffField0.getSortHint());
      assertEquals((-142), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-768), 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 563);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(563, tiffField0.getSortHint());
      assertEquals((-768), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1808, fieldTypeRational0, 1808, 2698L, byteArray0, byteOrder0, (byte)105);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1808L, tiffField0.getCount());
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(2698, tiffField0.getOffset());
      assertEquals(1808, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-768), 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 563);
      tiffField0.getCount();
      assertEquals((-768), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(563, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)64, 2146897704, fieldTypeShort0, (byte)64, 0L, byteArray0, byteOrder0, 246);
      long long0 = tiffField0.getCount();
      assertEquals(246, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(64, tiffField0.getTag());
      assertEquals(64L, long0);
      assertEquals(2146897704, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeAscii0, (-860L), (-860L), byteArray0, byteOrder0, (byte)108);
      tiffField0.getCount();
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(271, tiffField0.getTag());
      assertEquals(271, tiffField0.getDirectoryType());
      assertEquals((-860), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37380, 65107, fieldTypeRational0, 0L, 65107, byteArray0, byteOrder0, 50932);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50932, tiffField0.getSortHint());
      assertEquals(65107, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(37380, tiffField0.getTag());
      assertEquals(65107, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32845, 32845, fieldTypeRational0, 801L, 32845, byteArray0, byteOrder0, (-3821));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-3821), tiffField0.getSortHint());
      assertEquals(32845, tiffField0.getOffset());
      assertEquals(32845, tiffField0.getTag());
      assertEquals(32845, tiffField0.getDirectoryType());
      assertEquals(6408, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1502, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-158), (-158), fieldTypeFloat0, (-2663L), (byte)92, byteArray0, byteOrder0, 521);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-158), tiffField0.getTag());
      assertEquals(92, tiffField0.getOffset());
      assertEquals(521, tiffField0.getSortHint());
      assertEquals((-10652), int0);
      assertEquals((-158), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(4098, (-1277), fieldTypeShort0, 1L, (-556L), byteArray0, (ByteOrder) null, 41730);
      tiffField0.getByteOrder();
      assertEquals((-1277), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-556), tiffField0.getOffset());
      assertEquals(4098, tiffField0.getTag());
      assertEquals(41730, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1477), (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1477), fieldTypeDouble0, 1L, (-682L), byteArray0, byteOrder0, (-1477));
      tiffField0.getByteOrder();
      assertEquals((-1477), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1477), tiffField0.getDirectoryType());
      assertEquals((-682), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "*");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeFloat0, 1L, 4L, byteArray0, byteOrder0, (byte)88);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, byteArray1.length);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1164, (byte)17, fieldTypeDouble0, (byte)0, 26L, byteArray0, byteOrder0, 2185);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
      assertEquals(1164, tiffField0.getTag());
      assertEquals(2185, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)9, 50, fieldTypeRational0, 4L, 3305L, byteArray0, byteOrder0, (-3821));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(252, 252, fieldTypeRational0, 252, 252, (byte[]) null, byteOrder0, 252);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-104), (-104), fieldTypeRational0, (-104), (-104), byteArray0, byteOrder0, (-104));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)25, 555, (FieldType) null, 255L, 763L, byteArray0, byteOrder0, (byte)25);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(252, 252, fieldTypeRational0, 252, 252, (byte[]) null, byteOrder0, 252);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2276), (-2276), fieldTypeRational0, (-2276), (-2276), byteArray0, byteOrder0, (-2276));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 18, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(40092, 65535, fieldTypeShort0, (-4498), 65535, byteArray0, (ByteOrder) null, 65535);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51007, 51007, fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, 51007);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-4L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2258, 2258, fieldTypeShort0, 2258, 2258, (byte[]) null, byteOrder0, 2258);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1071), (-1071), fieldTypeShort0, (-1071), (-1071), byteArray0, byteOrder0, (-1071));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[201];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48, 48, (FieldType) null, 568L, 48, byteArray0, byteOrder0, 48);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(242, 242, fieldTypeRational0, 242, 242, (byte[]) null, byteOrder0, 242);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5082), (-5082), fieldTypeRational0, (-5082), (-5082), byteArray0, byteOrder0, (-5082));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-2691), fieldTypeShort0, 28, 1L, byteArray0, byteOrder0, (-2691));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2260, 2260, fieldTypeByte0, 2260, 2260, (byte[]) null, byteOrder0, 2260);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1772), (-1772), fieldTypeShort0, (-1772), (-1772), byteArray0, byteOrder0, (-1772));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(249, 249, (FieldType) null, 249, 249, byteArray0, byteOrder0, 249);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3570), (-3570), fieldTypeRational0, (-3570), (-3570), byteArray0, byteOrder0, (-3570));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(256, 256, fieldTypeRational0, 1L, 256, byteArray0, byteOrder0, 256);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-3466), fieldTypeRational0.SHORT, 28, (-3466), (byte[]) null, byteOrder0, (-3466));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(249, (-1503), fieldTypeRational0, 249, 249, (byte[]) null, byteOrder0, (-1503));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-264), (-264), fieldTypeShort0, (-264), (-264), byteArray0, byteOrder0, (-264));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[206];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(939, 939, (FieldType) null, 939, 939, byteArray0, byteOrder0, 939);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-591), (-591), fieldTypeShort0, (-591), (-591), byteArray0, byteOrder0, (-591));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 4204L, 4204L, (byte[]) null, byteOrder0, (-853));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2305), (-2305), fieldTypeRational0, (-2305), (-2305), byteArray0, byteOrder0, 364);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 1, fieldTypeRational0, (-154L), 1496L, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("InkSet");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(789, 141, fieldTypeRational0, 1L, 4698L, byteArray0, byteOrder0, (byte)114);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1780), (-1780), fieldTypeRational0, (-1780), (-1780), byteArray0, byteOrder0, (-1780));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(249, 249, fieldTypeRational0, 1L, 249, byteArray0, byteOrder0, 249);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1119), (-4140), fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, (-4140));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OriginalRawFileData");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(270, 270, fieldTypeRational0, 270, 270, byteArray0, byteOrder0, 270);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(270, tiffField0.getOffset());
      assertEquals(270, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getSortHint());
      assertEquals(270, tiffField0.getTag());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeAscii0, 0, 950, byteArray0, byteOrder0, 22);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(950, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51016, 51016, fieldTypeShort0, 51016, 51016, byteArray0, byteOrder0, 51016);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1930, 1930, fieldTypeByte0, 1930, 1930, (byte[]) null, byteOrder0, 1930);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, 1179, fieldTypeDouble0, 6236L, (-1485L), byteArray0, byteOrder0, 2862);
      int int0 = tiffField0.getOffset();
      assertEquals(2862, tiffField0.getSortHint());
      assertEquals(1179, tiffField0.getDirectoryType());
      assertEquals(6236L, tiffField0.getCount());
      assertEquals((-1485), int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(273, 1401, fieldTypeRational0, 273, (-1953L), byteArray0, byteOrder0, 769);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1401, tiffField0.getDirectoryType());
      assertEquals(273L, tiffField0.getCount());
      assertEquals(273, tagInfo0.tag);
      assertEquals((-1953), tiffField0.getOffset());
      assertEquals(273, tiffField0.getTag());
      assertEquals(769, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 8L, 690L, byteArray0, byteOrder0, 50973);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(690, tiffField0.getOffset());
      assertEquals(50973, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 492, (FieldType) null, 0, 0, byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(270, 270, fieldTypeRational0, 270, 270, byteArray0, byteOrder0, 270);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(240, 240, fieldTypeShort0.DOUBLE, 240, 240, byteArray0, byteOrder0, 240);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5f362fab for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(242, 242, fieldTypeRational0, 242, 242, byteArray0, byteOrder0, 242);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.DOUBLE, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1033, 1033, fieldTypeDouble0, 1033, 1033, byteArray0, byteOrder0, 1033);
      tiffField0.getDoubleArrayValue();
      assertEquals(1033, tiffField0.getSortHint());
      assertEquals(1033, tiffField0.getDirectoryType());
      assertEquals(1033L, tiffField0.getCount());
      assertEquals(1033, tiffField0.getTag());
      assertEquals(1033, tiffField0.getOffset());
      assertEquals(8264, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2318, 2318, fieldTypeByte0, 2318, 2318, byteArray0, byteOrder0, 2318);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3d42526a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(141, 141, fieldTypeLong0, 141, 141, byteArray0, byteOrder0, 141);
      tiffField0.getDoubleArrayValue();
      assertEquals(141L, tiffField0.getCount());
      assertEquals(141, tiffField0.getDirectoryType());
      assertEquals(564, tiffField0.getBytesLength());
      assertEquals(141, tiffField0.getSortHint());
      assertEquals(141, tiffField0.getTag());
      assertEquals(141, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      tiffField0.getDoubleArrayValue();
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92L, tiffField0.getCount());
      assertEquals(92, tiffField0.getOffset());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(281, 281, fieldTypeFloat0, 281, 281, byteArray0, byteOrder0, 281);
      tiffField0.getDoubleArrayValue();
      assertEquals(281, tiffField0.getDirectoryType());
      assertEquals(281, tiffField0.getSortHint());
      assertEquals(281, tiffField0.getTag());
      assertEquals(281, tiffField0.getOffset());
      assertEquals(1124, tiffField0.getBytesLength());
      assertEquals(281L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      tiffField0.getDoubleArrayValue();
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92L, tiffField0.getCount());
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(242, 242, fieldTypeRational0, 242, 242, byteArray0, byteOrder0, 242);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(242, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(242, tiffField0.getSortHint());
      assertEquals(1936, tiffField0.getBytesLength());
      assertEquals(242L, tiffField0.getCount());
      assertEquals(242, tiffField0.getTag());
      assertEquals(242, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(256, 256, fieldTypeLong0, 256, 256, byteArray0, byteOrder0, 256);
      tiffField0.getIntArrayValue();
      assertEquals(256, tiffField0.getSortHint());
      assertEquals(256, tiffField0.getDirectoryType());
      assertEquals(1024, tiffField0.getBytesLength());
      assertEquals(256, tiffField0.getTag());
      assertEquals(256, tiffField0.getOffset());
      assertEquals(256L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getOffset());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92L, tiffField0.getCount());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1020, 1020, fieldTypeDouble0, 1020, 1020, byteArray0, byteOrder0, 1020);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@69017d4f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(222, 222, fieldTypeRational0, 222, 222, byteArray0, byteOrder0, 222);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      tiffField0.getIntArrayValue();
      assertEquals(92L, tiffField0.getCount());
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getOffset());
      assertEquals(92, tiffField0.getTag());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(249, 249, fieldTypeRational0, 249, 249, byteArray0, byteOrder0, 249);
      tiffField0.getIntArrayValue();
      assertEquals(1992, tiffField0.getBytesLength());
      assertEquals(249, tiffField0.getTag());
      assertEquals(249, tiffField0.getSortHint());
      assertEquals(249L, tiffField0.getCount());
      assertEquals(249, tiffField0.getOffset());
      assertEquals(249, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeAscii0, 0, 950, byteArray0, byteOrder0, 22);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(950, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@24819e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(240, 240, fieldTypeShort0.DOUBLE, 240, 240, byteArray0, byteOrder0, 240);
      String string0 = tiffField0.getTagName();
      assertEquals(240, tiffField0.getDirectoryType());
      assertEquals(240, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xf0)", string0);
      assertEquals(240, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(519, 519, fieldTypeFloat0, 519, 519, byteArray0, byteOrder0, 519);
      String string0 = tiffField0.getTagName();
      assertEquals(519, tiffField0.getTag());
      assertEquals("JPEGQTables", string0);
      assertEquals(519, tiffField0.getOffset());
      assertEquals(519, tiffField0.getSortHint());
      assertEquals(519, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(913, 913, fieldTypeRational0, 913, 913, byteArray0, byteOrder0, 913);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "~{a>2)71VX5tz?%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(474, 474, fieldTypeFloat0, 474, 474, byteArray0, byteOrder0, 474);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(474L, tiffField0.getCount());
      assertEquals(474, tiffField0.getDirectoryType());
      assertEquals(474, tiffField0.getSortHint());
      assertEquals(474, tiffField0.getTag());
      assertEquals(1896, tiffField0.getBytesLength());
      assertEquals(474, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeByte0, 265, 265, byteArray0, byteOrder0, 1100);
      tiffField0.dump();
      assertEquals(265L, tiffField0.getCount());
      assertEquals(265, tiffField0.getTag());
      assertEquals(265, tiffField0.getBytesLength());
      assertEquals(265, tiffField0.getOffset());
      assertEquals(1100, tiffField0.getSortHint());
      assertEquals(265, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(923, 923, fieldTypeByte0, 923, 923, byteArray0, byteOrder0, 923);
      String string0 = tiffField0.toString();
      assertEquals(923, tiffField0.getOffset());
      assertEquals(923, tiffField0.getBytesLength());
      assertEquals(923, tiffField0.getSortHint());
      assertEquals(923, tiffField0.getDirectoryType());
      assertEquals("923 (0x39b: Unknown Tag): 0, 0, 0, 0 (923 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[423];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeFloat0.DOUBLE, 107, 107, byteArray0, byteOrder0, 107);
      tiffField0.dump();
      assertEquals(107L, tiffField0.getCount());
      assertEquals(856, tiffField0.getBytesLength());
      assertEquals(107, tiffField0.getOffset());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getTag());
      assertEquals(107, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1020, 1020, fieldTypeDouble0, 1020, 1020, byteArray0, byteOrder0, 1020);
      tiffField0.dump();
      assertEquals(1020, tiffField0.getTag());
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(1020, tiffField0.getDirectoryType());
      assertEquals(1020, tiffField0.getSortHint());
      assertEquals(1020L, tiffField0.getCount());
      assertEquals(8160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeLong0, 41, 41, byteArray0, byteOrder0, 41);
      String string0 = tiffField0.getValueDescription();
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41L, tiffField0.getCount());
      assertEquals(164, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(41, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[278];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(141, 141, fieldTypeLong0, 141, 141, byteArray0, byteOrder0, 141);
      String string0 = tiffField0.toString();
      assertEquals("141 (0x8d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (69) (141 IFD)", string0);
      assertEquals(141, tiffField0.getOffset());
      assertEquals(141, tiffField0.getSortHint());
      assertEquals(141, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[310];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeShort0, 71, 71, byteArray0, byteOrder0, 71);
      String string0 = tiffField0.toString();
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals("71 (0x47: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (71) (71 SShort)", string0);
      assertEquals(71, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[235];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(474, 474, fieldTypeFloat0, 474, 474, byteArray0, byteOrder0, 474);
      String string0 = tiffField0.getValueDescription();
      assertEquals(474L, tiffField0.getCount());
      assertEquals(474, tiffField0.getTag());
      assertEquals(1896, tiffField0.getBytesLength());
      assertEquals(474, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(474, tiffField0.getSortHint());
      assertEquals(474, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[70];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50938, 50938, fieldTypeAscii0, 2937L, 2937L, byteArray0, byteOrder0, 50938);
      tiffField0.dump();
      assertEquals(2937, tiffField0.getOffset());
      assertEquals(50938, tiffField0.getSortHint());
      assertEquals(50938, tiffField0.getTag());
      assertEquals(2937L, tiffField0.getCount());
      assertEquals(2937, tiffField0.getBytesLength());
      assertEquals(50938, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(242, 242, fieldTypeRational0, 242, 242, byteArray0, byteOrder0, 242);
      tiffField0.toString();
      assertEquals(242, tiffField0.getOffset());
      assertEquals(242, tiffField0.getSortHint());
      assertEquals(242, tiffField0.getDirectoryType());
      assertEquals(242L, tiffField0.getCount());
      assertEquals(1936, tiffField0.getBytesLength());
      assertEquals(242, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 92, 92, byteArray0, byteOrder0, 92);
      String string0 = tiffField0.getValueDescription();
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 1L, 31, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1382, 1382, fieldTypeAscii0, 1382, 1937L, byteArray0, byteOrder0, 1382);
      tiffField0.toString();
      assertEquals(1937, tiffField0.getOffset());
      assertEquals(1382L, tiffField0.getCount());
      assertEquals(1382, tiffField0.getTag());
      assertEquals(1382, tiffField0.getDirectoryType());
      assertEquals(1382, tiffField0.getSortHint());
      assertEquals(1382, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2251), (-2251), fieldTypeRational0, (-2251), (-2251), byteArray0, byteOrder0, (-2251));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-2251), tiffField0.getDirectoryType());
      assertEquals((-2251), tiffField0.getSortHint());
      assertEquals((-2251), tiffField0.getTag());
      assertEquals((-2251), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(917, "ygoG}");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte)12, fieldTypeLong0, 1559L, 0L, byteArray0, byteOrder0, 1057);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-51), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(1057, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(1559L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(351, 351, fieldTypeRational0, 351, 351, byteArray0, byteOrder0, 351);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(351, 351);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: OPIProxy, fieldType: Rational", string0);
      assertEquals(351, tiffField0.getDirectoryType());
      assertEquals(351, tiffField0.getTag());
      assertEquals(351, tiffField0.getSortHint());
      assertEquals(2808, tiffField0.getBytesLength());
      assertEquals(351, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(245, 245, fieldTypeShort0, 245, 245, byteArray0, byteOrder0, 245);
      tiffField0.getFieldTypeName();
      assertEquals(245, tiffField0.getDirectoryType());
      assertEquals(245L, tiffField0.getCount());
      assertEquals(245, tiffField0.getOffset());
      assertEquals(245, tiffField0.getTag());
      assertEquals(245, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1258, (-726), fieldTypeLong0, (-726), (-726), byteArray0, byteOrder0, (-164));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-164), tiffField0.getSortHint());
      assertEquals(1258, tiffField0.getTag());
      assertEquals((-726), tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
      assertEquals((-726), int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(242, 242, fieldTypeRational0, 242, 242, byteArray0, byteOrder0, 242);
      int int0 = tiffField0.getSortHint();
      assertEquals(242, tiffField0.getOffset());
      assertEquals(242, tiffField0.getTag());
      assertEquals(242, tiffField0.getDirectoryType());
      assertEquals(242, int0);
      assertEquals(242L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(242, 242, fieldTypeRational0, 242, 242, byteArray0, byteOrder0, 242);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(242, tiffField0.getSortHint());
      assertEquals(242, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals("242 (0xf2: Unknown Tag): ", string0);
      assertEquals(242, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeShort0, 760L, 760L, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(276, 276, fieldTypeRational0, 276, 276, byteArray0, byteOrder0, 276);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(276, tiffField0.getSortHint());
      assertEquals(276, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(276, tiffField0.getTag());
      assertEquals(276L, tiffElement0.offset);
  }
}
