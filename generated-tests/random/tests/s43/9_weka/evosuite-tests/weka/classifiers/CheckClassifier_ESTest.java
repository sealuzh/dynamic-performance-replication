/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 04:43:33 GMT 2019
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.AbstractClassifier;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.functions.Logistic;
import weka.classifiers.functions.SGD;
import weka.classifiers.lazy.IBk;
import weka.classifiers.meta.AdditiveRegression;
import weka.classifiers.misc.InputMappedClassifier;
import weka.classifiers.rules.M5Rules;
import weka.classifiers.trees.J48;
import weka.core.CheckScheme;
import weka.core.Utils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumRelational(35);
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.doTests();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 5;
      try { 
        checkClassifier0.makeTestDataset((-2085), 1967, (-4572), (-2085), (-4572), (-4572), 42, 647, 5, 2322, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -15758
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.m_Classifier = null;
      int int0 = 97;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      checkClassifier0.setNumInstances(97);
      checkClassifier0.canTakeOptions();
      InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
      inputMappedClassifier0.getOptions();
      checkClassifier0.setClassifier(inputMappedClassifier0);
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(true, true, true, true, true, 1421);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1421' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      checkClassifier0.setNumNominal(120);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.listOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, true, false, true, true, 0, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.getOptions();
      checkClassifier0.getClassifier();
      int int0 = 42;
      boolean boolean0 = true;
      checkClassifier0.makeTestDataset((-3651), 42, (-2368), 1075, 1075, 1711, 1075, 69, 42, 617, true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      IBk iBk0 = new IBk((-1222));
      iBk0.setCrossValidate(true);
      iBk0.setDebug(true);
      checkClassifier0.setDebug(true);
      checkClassifier0.setClassifier(iBk0);
      checkClassifier0.setNumInstances(68);
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = false;
      int int0 = 100;
      checkClassifier0.printAttributeSummary(true, true, true, true, false, true, 100);
      boolean boolean3 = true;
      J48 j48_0 = new J48();
      checkClassifier0.m_Classifier = (Classifier) j48_0;
      boolean boolean4 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: null
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-112);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-88);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Results differ between non-missing and missing test class values.";
      stringArray0[2] = "\tTurn on debugging output.";
      CheckClassifier.main(stringArray0);
      M5Rules m5Rules0 = new M5Rules();
      checkClassifier0.setClassifier(m5Rules0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setSilent(true);
      AdditiveRegression additiveRegression0 = new AdditiveRegression();
      checkClassifier0.m_Classifier = (Classifier) additiveRegression0;
      checkClassifier0.getOptions();
      boolean boolean0 = false;
      boolean boolean1 = false;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean2 = false;
      int int0 = 15000;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(false, false, false, false, false, 15000);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '15000' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      int int0 = 2160;
      int int1 = (-1);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(true, true, true, true, true, false, 2160, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2160' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.correctBuildInitialisation(false, false, false, false, false, false, 0);
      try { 
        checkClassifier0.makeTestDataset(0, 1196, 1196, 0, 1196, 0, 0, 0, (-3285), (-1062), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute type '-3285' unknown!
         //
         verifyException("weka.core.TestInstances", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.instanceWeights(false, false, false, false, false, false, 0);
      checkClassifier0.makeTestDataset((-3285), (-1062), 0, (-1062), 0, 1196, 1196, 0, 0, false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      checkClassifier0.setWordSeparators("");
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.testToString();
      boolean boolean0 = false;
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, false, false, true, false, 34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '34' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
      checkClassifier0.m_Classifier = (Classifier) inputMappedClassifier0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      checkClassifier0.listOptions();
      Classifier classifier0 = AbstractClassifier.makeCopy(inputMappedClassifier0);
      AbstractClassifier.makeCopies(classifier0, 2525);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      checkClassifier0.canTakeOptions();
      checkClassifier0.updateableClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, true, false, false, false, true, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.misc.InputMappedClassifier: Cannot handle relational attributes!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = checkClassifier0.getOptions();
      checkClassifier0.setSilent(true);
      // Undeclared exception!
      try { 
        CheckClassifier.main(stringArray0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean[] booleanArray0 = checkClassifier0.updatingEquality(false, false, true, true, true, false, 0);
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
      
      boolean[] booleanArray1 = checkClassifier0.doesntUseTestClassVal(false, true, true, true, true, false, 0);
      assertEquals(2, booleanArray1.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = 34;
      checkClassifier0.testToString();
      checkClassifier0.getRevision();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(1, true, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Classifier classifier0 = checkClassifier0.getClassifier();
      checkClassifier0.instanceWeights(false, true, false, false, false, true, 1);
      checkClassifier0.canHandleNClasses(false, false, false, true, false, false, 1);
      checkClassifier0.getOptions();
      checkClassifier0.printAttributeSummary(false, true, true, true, true, true, 1);
      System.setCurrentTimeMillis(1);
      checkClassifier0.listOptions();
      checkClassifier0.setNumRelational(1);
      checkClassifier0.canHandleZeroTraining(false, true, false, false, false, true, 1);
      checkClassifier0.setClassifier(classifier0);
      assertEquals(2, checkClassifier0.getNumNominal());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(false, false, false, true, false, true, (-2891), true, true, (-2891));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2891' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(12L);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, true, true, true, true, 121);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '121' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.listOptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = false;
      checkClassifier0.multiInstanceHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, false, false, false, 1556);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1556' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      int int0 = 969;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, false, true, false, false, false, 969);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '969' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, true, true, true, true, false, 2986);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2986' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)66;
      byteArray0[0] = (byte)66;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      checkClassifier0.setWordSeparators((String) null);
      boolean boolean0 = false;
      boolean boolean1 = false;
      int int0 = (-1347);
      int int1 = (-518);
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, true, false, true, false, (-518));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-518' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      boolean boolean0 = true;
      checkClassifier0.canHandleOnlyClass(false, false, true, false, false, 0);
      boolean boolean1 = true;
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleNClasses(true, false, false, true, true, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: null
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      boolean boolean0 = true;
      boolean boolean1 = false;
      Logistic logistic0 = new Logistic();
      logistic0.getCapabilities();
      logistic0.listOptions();
      checkClassifier0.setClassifier(logistic0);
      checkClassifier0.setSilent(false);
      checkClassifier0.datasetIntegrity(false, false, false, true, false, false, 0, false, true);
      boolean boolean2 = true;
      boolean boolean3 = true;
      int int0 = 87;
      int int1 = (-1572);
      checkClassifier0.setNumDate((-1572));
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, true, true, false, false, false, 87, 87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '87' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = " or ";
      CheckClassifier.main(stringArray0);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      CheckClassifier.main(stringArray0);
      checkClassifier0.setNumInstancesRelational((-221));
      try { 
        checkClassifier0.makeTestDataset(0, 1024, 1137, (-221), 0, 662, (-3921), (-3921), 662, 1024, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.TestInstances", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean[] booleanArray0 = checkClassifier0.testToString();
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray0));
      
      checkClassifier0.getClassifier();
      boolean[] booleanArray1 = checkClassifier0.declaresSerialVersionUID();
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray1));
      
      CheckClassifier.main((String[]) null);
      String[] stringArray0 = checkClassifier0.getOptions();
      assertEquals(18, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.instanceWeights(true, true, false, true, true, false, 0);
      checkClassifier0.makeTestDataset((-3285), (-1062), 0, (-1062), 0, 1196, 1196, 0, 0, false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      boolean boolean0 = false;
      checkClassifier0.weightedInstancesHandler();
      boolean boolean1 = true;
      boolean boolean2 = true;
      checkClassifier0.listOptions();
      boolean boolean3 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = (-1082);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(false, false, false, true, true, false, (-1082));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1082' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[NOk>ra(pe{SW~Q");
      CheckClassifier checkClassifier0 = new CheckClassifier();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[NOk>ra(pe{SW~Q";
      stringArray0[1] = "[NOk>ra(pe{SW~Q";
      stringArray0[2] = "[NOk>ra(pe{SW~Q";
      stringArray0[3] = "[NOk>ra(pe{SW~Q";
      stringArray0[4] = "V&CmL,=]/'}z\"mL\"m;/";
      stringArray0[5] = "[NOk>ra(pe{SW~Q";
      stringArray0[6] = "[NOk>ra(pe{SW~Q";
      stringArray0[7] = "[NOk>ra(pe{SW~Q";
      CheckClassifier.main(stringArray0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      int int0 = 31;
      checkClassifier0.setNumInstances(31);
      int int1 = 84;
      checkClassifier0.setNumInstances(84);
      int int2 = (-74);
      int int3 = 2934;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, false, false, false, false, (-74), 2934);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-74' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      SGD sGD0 = new SGD();
      sGD0.setDontNormalize(false);
      checkClassifier0.weightedInstancesHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, false, true, false, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.rules.ZeroR: Cannot handle string class!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.setNumInstances(2003);
      checkClassifier0.updateableClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = false;
      checkClassifier0.printAttributeSummary(true, true, false, false, false, true, 1514);
      int int0 = 1;
      boolean boolean3 = false;
      checkClassifier0.makeTestDataset((-1322), 969, (-1322), (-1322), 969, 969, 969, 969, 969, 1, false);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, false, true, false, false, false, (-1546));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1546' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getWords();
      Utils.SMALL = 0.4942148268014971;
      checkClassifier0.canTakeOptions();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, false, true, false, true, 4914, 4914);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '4914' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }
}
