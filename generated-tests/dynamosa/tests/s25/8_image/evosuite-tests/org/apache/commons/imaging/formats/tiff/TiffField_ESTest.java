/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 13:15:49 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)8;
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField(2145830465, (byte)8, fieldTypeRational0, (byte)8, (-16304L), byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-16304), tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(2145830465, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField(2145830465, (byte)8, fieldTypeRational0, (byte)8, (-16304L), byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2145830465, tiffField0.getTag());
      assertEquals((-16304), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2138927936, (byte)127, fieldTypeShort0.FLOAT, 1L, 4L, byteArray0, byteOrder0, 6);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2138927936, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(127, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-961), fieldTypeShort0, 2735L, (-933L), byteArray0, byteOrder0, 1465);
      String string0 = tiffField0.toString();
      assertEquals((-933), tiffField0.getOffset());
      assertEquals(1465, tiffField0.getSortHint());
      assertEquals((-961), tiffField0.getDirectoryType());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (2735 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, fieldTypeShort0, (byte)11, (byte)11, byteArray0, byteOrder0, (byte)11);
      tiffField0.dump();
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37522, (byte)0, fieldTypeShort0, (byte)0, 4326L, byteArray0, byteOrder0, (-2132));
      String string0 = tiffField0.getValueDescription();
      assertEquals(37522, tiffField0.getTag());
      assertEquals(4326, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2132), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(717, "LocalizedCameraModel");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(717, 3919, fieldTypeAscii0, 34310, (-2147483648L), byteArray0, byteOrder0, 3919);
      tiffField0.getValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(3919, tiffField0.getDirectoryType());
      assertEquals(717, tiffField0.getTag());
      assertEquals(3919, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2146379543, fieldTypeRational0, 2146379543, (-1636L), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2146379543, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1636), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37522, (byte)0, fieldTypeShort0, (byte)0, 4326L, byteArray0, byteOrder0, (-2132));
      int int0 = tiffField0.getTag();
      assertEquals(37522, int0);
      assertEquals((-2132), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4326, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(18249, "IntergraphMatrixTag");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)23;
      TiffField tiffField0 = new TiffField((byte)23, 65535, fieldTypeRational0.ASCII, 18249, (-506), byteArray0, byteOrder0, (-2613));
      String string0 = tiffField0.getStringValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-2613), tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals((-506), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), 1209, fieldTypeLong0, (-1386L), (-3088L), byteArray0, byteOrder0, 1830);
      int int0 = tiffField0.getSortHint();
      assertEquals((-3088), tiffField0.getOffset());
      assertEquals(1209, tiffField0.getDirectoryType());
      assertEquals((-1529), tiffField0.getTag());
      assertEquals(1830, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), (byte)6, fieldTypeShort0, 0L, (-3088L), byteArray0, byteOrder0, (-2233));
      int int0 = tiffField0.getSortHint();
      assertEquals((-14), tiffField0.getTag());
      assertEquals((-3088), tiffField0.getOffset());
      assertEquals((-2233), int0);
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(18249, "IntergraphMatrixTag");
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1885, 65535, fieldTypeRational0, (byte) (-1), (byte)53, byteArray0, byteOrder0, (-1429));
      int int0 = tiffField0.getOffset();
      assertEquals(53, int0);
      assertEquals(1885, tiffField0.getTag());
      assertEquals((-1429), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(423, "[TagInfo. tag: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(423, (-1307), fieldTypeRational0, 0L, (-1307), byteArray0, byteOrder0, (-1307));
      int int0 = tiffField0.getOffset();
      assertEquals(423, tiffField0.getTag());
      assertEquals((-1307), tiffField0.getSortHint());
      assertEquals((-1307), tiffField0.getDirectoryType());
      assertEquals((-1307), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, (-1609), fieldTypeShort0, 1, 3185L, byteArray0, byteOrder0, (-2145783343));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1609), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
      assertEquals(3185, tiffField0.getOffset());
      assertEquals((-2145783343), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(598, (-2145783343), fieldTypeShort0, 5838L, 2100, byteArray0, byteOrder0, (byte)127);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-256), int0);
      assertEquals(2100, tiffField0.getOffset());
      assertEquals((-2145783343), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getSortHint());
      assertEquals(598, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3088, 1, fieldTypeShort0, 1, 1937L, byteArray0, byteOrder0, (-2147400246));
      tiffField0.getIntValue();
      assertEquals(3088, tiffField0.getTag());
      assertEquals(1937, tiffField0.getOffset());
      assertEquals((-2147400246), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147115613, (-1609), fieldTypeShort0, 1, 3185L, byteArray0, byteOrder0, (-2145783343));
      tiffField0.getIntValue();
      assertEquals((-2145783343), tiffField0.getSortHint());
      assertEquals(3185, tiffField0.getOffset());
      assertEquals((-1609), tiffField0.getDirectoryType());
      assertEquals(2147115613, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-122);
      TiffField tiffField0 = new TiffField(50729, 1, fieldTypeShort0, 1, 50729, byteArray0, byteOrder0, (byte) (-122));
      tiffField0.getIntValue();
      assertEquals(50729, tiffField0.getOffset());
      assertEquals(50729, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-122), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1741, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2144867955, (-977), fieldTypeLong0, 142L, 84, byteArray0, byteOrder0, 2445);
      tiffField0.getFieldTypeName();
      assertEquals(2144867955, tiffField0.getTag());
      assertEquals((-977), tiffField0.getDirectoryType());
      assertEquals(2445, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[82];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1483, 1483, fieldTypeShort0, 1483, 1483, byteArray0, byteOrder0, 1483);
      tiffField0.getFieldTypeName();
      assertEquals(1483, tiffField0.getTag());
      assertEquals(1483, tiffField0.getDirectoryType());
      assertEquals(1483, tiffField0.getSortHint());
      assertEquals(1483, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(59932, "");
      TiffField tiffField0 = new TiffField(2138927936, (byte)127, fieldTypeFloat0, 1L, 4L, byteArray0, byteOrder0, 6);
      tiffField0.getFieldTypeName();
      assertEquals(2138927936, tiffField0.getTag());
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146948781), (-1301), (FieldType) null, (-1301), (-1301), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-2146948781), tiffField0.getTag());
      assertEquals((-1301), tiffField0.getOffset());
      assertEquals((-1301), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)127, fieldTypeLong0, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2145830465, fieldTypeShort0, 1, 1410L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(1410, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2145830465, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2145830465, fieldTypeShort0, 1, 1410L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2145830465, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1410, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)117;
      CharBuffer charBuffer0 = CharBuffer.allocate(34856);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-501), (-501), fieldTypeLong0, 1L, (-4L), byteArray0, byteOrder0, (-501));
      tiffField0.getDoubleValue();
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-501), tiffField0.getDirectoryType());
      assertEquals((-501), tiffField0.getTag());
      assertEquals((-501), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-79);
      TiffField tiffField0 = new TiffField(1493, 0, fieldTypeShort0, 1L, (-3807L), byteArray0, byteOrder0, (byte) (-79));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1493, tiffField0.getTag());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals((-3807), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(765, "VRGEW*xX4DN.Z#$");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5379), (-5379), fieldTypeFloat0, (-472L), (-1L), byteArray0, byteOrder0, (byte)27);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-5379), tiffField0.getTag());
      assertEquals((-5379), int0);
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), (byte)6, fieldTypeShort0, 0L, (-3088L), byteArray0, byteOrder0, (-2233));
      tiffField0.getCount();
      assertEquals((-2233), tiffField0.getSortHint());
      assertEquals((-3088), tiffField0.getOffset());
      assertEquals((-14), tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(18228, "IntergraphMatrixTag");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2957), (byte)0, fieldTypeRational0, (-515L), (-1109L), byteArray0, byteOrder0, (-2081));
      long long0 = tiffField0.getCount();
      assertEquals((-2081), tiffField0.getSortHint());
      assertEquals((-1109), tiffField0.getOffset());
      assertEquals((-515L), long0);
      assertEquals((-2957), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = charset0.encode("IntergraphMatrixTag");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)53, (-775), fieldTypeRational0, (byte)0, (-4L), byteArray0, byteOrder0, (-3600));
      tiffField0.getBytesLength();
      assertEquals(53, tiffField0.getTag());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-3600), tiffField0.getSortHint());
      assertEquals((-775), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1751, 806, fieldTypeDouble0, (-139L), 821L, byteArray0, byteOrder0, (-1367));
      tiffField0.getBytesLength();
      assertEquals(1751, tiffField0.getTag());
      assertEquals(821, tiffField0.getOffset());
      assertEquals((-1367), tiffField0.getSortHint());
      assertEquals(806, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50718, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(51022, 351, fieldTypeRational0, 50718, 351, byteArray0, (ByteOrder) null, (-2621));
      tiffField0.getByteOrder();
      assertEquals(351, tiffField0.getDirectoryType());
      assertEquals(51022, tiffField0.getTag());
      assertEquals((-2621), tiffField0.getSortHint());
      assertEquals(351, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(290, 2075, fieldTypeShort0, 2323L, 0L, byteArray0, byteOrder0, 2075);
      tiffField0.getByteArrayValue();
      assertEquals(2075, tiffField0.getSortHint());
      assertEquals(2075, tiffField0.getDirectoryType());
      assertEquals(290, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(423, "[TagInfo. tag: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(423, (-1307), fieldTypeRational0, 0L, (-1307), byteArray0, byteOrder0, (-1307));
      tiffField0.getByteArrayValue();
      assertEquals((-1307), tiffField0.getOffset());
      assertEquals((-1307), tiffField0.getSortHint());
      assertEquals((-1307), tiffField0.getDirectoryType());
      assertEquals(423, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2643), (byte)0, (FieldType) null, (-2643), (-2147483648L), byteArray0, byteOrder0, (-2643));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0.FLOAT, (byte)0, (byte)0, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-4), (byte) (-4), fieldTypeRational0, (byte) (-4), (byte) (-4), byteArray0, byteOrder0, (byte) (-4));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)103, 1, fieldTypeRational0, 1, (byte)103, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte) (-127), (byte)0, (FieldType) null, (byte) (-127), (byte)0, byteArray0, (ByteOrder) null, (byte) (-127));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), (byte) (-25), fieldTypeRational0, (byte) (-25), (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 2096);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeRational0, 4086L, 4086L, byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146379543, 2146379543, fieldTypeShort0, 2146379543, 2146379543, byteArray0, byteOrder0, 2146379543);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 1L, (-2160L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeShort0, (byte)13, (byte)13, (byte[]) null, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-2), (byte) (-2), fieldTypeRational0, (byte) (-2), (byte) (-2), byteArray0, byteOrder0, (byte) (-2));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1614, 1614, fieldTypeRational0, 1L, 1614, byteArray0, byteOrder0, 1614);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1474, 1474, fieldTypeRational0, 1474, 1474, (byte[]) null, byteOrder0, 1474);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-8), (byte) (-8), fieldTypeRational0, (byte) (-8), (byte) (-8), byteArray0, byteOrder0, (byte) (-8));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2005), fieldTypeShort0, (-2005), (-2075L), byteArray0, byteOrder0, (-2005));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2030, 2030, fieldTypeRational0, 2030, 2030, (byte[]) null, byteOrder0, 2030);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-24), (byte) (-24), fieldTypeRational0, (byte) (-24), (byte) (-24), byteArray0, byteOrder0, (byte) (-24));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 1L, (-2160L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, (FieldType) null, 3, 3, (byte[]) null, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-96), (byte) (-96), fieldTypeShort0, (byte) (-96), (byte) (-96), byteArray0, byteOrder0, (byte) (-96));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeShort0, (-1), 2072L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2237), (-2237), fieldTypeShort0, (-2237), (-2237), byteArray0, byteOrder0, (-2237));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-17), (byte) (-17), fieldTypeRational0, (byte) (-17), (byte) (-17), byteArray0, byteOrder0, (byte) (-17));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeDouble0, (-1L), 5, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (-25432L), (-25432L), byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BO(!OXkV");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "BO(!OXkV");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter((byte)1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)127);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(340, 2147115574, fieldTypeShort0, 2147115574, 340, byteArray0, byteOrder0, 340);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-42), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-649), 12, fieldTypeLong0, 1L, 3372L, byteArray0, byteOrder0, (byte) (-20));
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-652), (-652), fieldTypeRational0, (-652), (-652), byteArray0, byteOrder0, (-652));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 108, fieldTypeShort0, 1L, 108, byteArray0, byteOrder0, 108);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeShort0, 2262L, 1L, byteArray0, byteOrder0, 2147093551);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(4098, (byte) (-66), fieldTypeShort0, (-629), (-629), byteArray0, (ByteOrder) null, (byte) (-66));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4098, tiffField0.getTag());
      assertEquals((-629), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-66), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, 2138927936, fieldTypeShort0, (byte)127, (byte)127, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(127, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(127, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2138927936, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), (byte)6, fieldTypeShort0, 0L, (-3088L), byteArray0, byteOrder0, (-2233));
      tiffField0.getByteOrder();
      assertEquals((-14), tiffField0.getTag());
      assertEquals((-3088), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-2233), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483647), (-2147483647), fieldTypeRational0, (-2147483647), 68L, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1122), "w\"ZIO$vBdv+");
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3151, 453, fieldTypeAscii0, 453, (-2338L), byteArray0, byteOrder0, 1551);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(453, int0);
      assertEquals((-2338), tiffField0.getOffset());
      assertEquals(3151, tiffField0.getTag());
      assertEquals(1551, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1493, 1493, fieldTypeShort0, 1493, 1493, byteArray0, byteOrder0, 1493);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-634), (-634), fieldTypeShort0, (-634), (-634), (byte[]) null, byteOrder0, (-634));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(18249, "IntergraphMatrxvTag");
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = charset0.encode("IntergraphMatrxvTag");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-52), (-2145783343), fieldTypeRational0, 5838L, (byte)0, byteArray0, byteOrder0, (-1294));
      int int0 = tiffField0.getOffset();
      assertEquals((-52), tiffField0.getTag());
      assertEquals((-2145783343), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1294), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), (byte)6, fieldTypeShort0, 0L, (-3088L), byteArray0, byteOrder0, (-2233));
      tiffField0.getTagInfo();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-2233), tiffField0.getSortHint());
      assertEquals((-3088), tiffField0.getOffset());
      assertEquals((-14), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1866), 0, fieldTypeLong0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1866), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3151, 453, fieldTypeAscii0, 453, (-2338L), byteArray0, byteOrder0, 1551);
      long long0 = tiffField0.getCount();
      assertEquals(3151, tiffField0.getTag());
      assertEquals(453L, long0);
      assertEquals(453, tiffField0.getDirectoryType());
      assertEquals((-2338), tiffField0.getOffset());
      assertEquals(1551, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)127, fieldTypeShort0.SLONG, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeRational0, 1L, 31, byteArray0, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[193];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(5948, 5948, fieldTypeLong0, 5948, 5948, byteArray0, byteOrder0, 5948);
      tiffField0.getIntValueOrArraySum();
      assertEquals(5948, tiffField0.getTag());
      assertEquals(5948, tiffField0.getSortHint());
      assertEquals(5948L, tiffField0.getCount());
      assertEquals(5948, tiffField0.getDirectoryType());
      assertEquals(5948, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeShort0.FLOAT, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)127);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2f41a61d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1526, 1526, fieldTypeAscii0, 1526, 1526, byteArray0, byteOrder0, 1526);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@606a4eee for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeDouble0, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)127);
      tiffField0.getDoubleArrayValue();
      assertEquals(127, tiffField0.getTag());
      assertEquals(127L, tiffField0.getCount());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(127, tiffField0.getSortHint());
      assertEquals(127, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[205];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(460, 460, fieldTypeLong0, 460, 460, byteArray0, byteOrder0, 460);
      tiffField0.getDoubleArrayValue();
      assertEquals(460, tiffField0.getOffset());
      assertEquals(460, tiffField0.getTag());
      assertEquals(460, tiffField0.getSortHint());
      assertEquals(460L, tiffField0.getCount());
      assertEquals(460, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeShort0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      tiffField0.getDoubleArrayValue();
      assertEquals(12L, tiffField0.getCount());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeRational0, (byte)9, (byte)9, byteArray0, byteOrder0, (byte)9);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9L, tiffField0.getCount());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeShort0.FLOAT, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)127);
      tiffField0.getDoubleArrayValue();
      assertEquals(127, tiffField0.getSortHint());
      assertEquals(127, tiffField0.getTag());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(127L, tiffField0.getCount());
      assertEquals(127, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(791, 791, fieldTypeLong0, 791, 791, byteArray0, byteOrder0, 791);
      tiffField0.getIntArrayValue();
      assertEquals(791, tiffField0.getSortHint());
      assertEquals(791, tiffField0.getOffset());
      assertEquals(791L, tiffField0.getCount());
      assertEquals(791, tiffField0.getTag());
      assertEquals(791, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getOffset());
      assertEquals(33L, tiffField0.getCount());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)33, (byte)33, fieldTypeRational0, (byte)33, (byte)33, byteArray0, byteOrder0, (byte)33);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeShort0.FLOAT, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)127);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@32cf6ec5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[186];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-874), (-874), fieldTypeAscii0, 1L, (-874), byteArray0, byteOrder0, (-874));
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals((-874), tiffField0.getTag());
      assertEquals((-874), tiffField0.getSortHint());
      assertEquals((-874), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-874), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@19f0bc07
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(283, 283, fieldTypeFloat0, 283, 283, byteArray0, byteOrder0, 283);
      String string0 = tiffField0.getTagName();
      assertEquals("YResolution", string0);
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(283, tiffField0.getTag());
      assertEquals(283, tiffField0.getOffset());
      assertEquals(283, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[286];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(63, 63, fieldTypeFloat0, 63, 63, byteArray0, byteOrder0, 63);
      String string0 = tiffField0.getValueDescription();
      assertEquals(63, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (63)", string0);
      assertEquals(63, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(63L, tiffField0.getCount());
      assertEquals(63, tiffField0.getTag());
      assertEquals(63, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(300, 300, fieldTypeShort0.SBYTE, 300, 300, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.toString();
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals(300, tiffField0.getDirectoryType());
      assertEquals(300, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals("300 (0x12c: ColorResponseUnit): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (86) (300 SByte)", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(891, 891, fieldTypeByte0, 891, 891, byteArray0, (ByteOrder) null, 891);
      String string0 = tiffField0.toString();
      assertEquals("891 (0x37b: Unknown Tag): 0 (891 Undefined)", string0);
      assertEquals(891, tiffField0.getOffset());
      assertEquals(891, tiffField0.getDirectoryType());
      assertEquals(891, tiffField0.getSortHint());
      assertEquals(891, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeDouble0, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)127);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1016, tiffField0.getBytesLength());
      assertEquals(127L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
      assertEquals(127, tiffField0.getSortHint());
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[405];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3333, "Unknown value: ");
      TiffField tiffField0 = new TiffField(3333, 3333, fieldTypeLong0, 3333, 3333, byteArray0, byteOrder0, 3333);
      String string0 = tiffField0.toString();
      assertEquals(3333, tiffField0.getSortHint());
      assertEquals(3333, tiffField0.getDirectoryType());
      assertEquals(3333, tiffField0.getOffset());
      assertEquals("3333 (0xd05: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (101) (3333 Unknown value: )", string0);
      assertEquals(13332, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(791, 791, fieldTypeLong0, 791, 791, byteArray0, byteOrder0, 791);
      String string0 = tiffField0.toString();
      assertEquals(791, tiffField0.getDirectoryType());
      assertEquals(791, tiffField0.getSortHint());
      assertEquals("791 (0x317: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (791 Long)", string0);
      assertEquals(3164, tiffField0.getBytesLength());
      assertEquals(791, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, (byte)127, fieldTypeShort0.FLOAT, (byte)127, (byte)127, byteArray0, byteOrder0, (byte)127);
      String string0 = tiffField0.toString();
      assertEquals("127 (0x7f: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (127 Float)", string0);
      assertEquals(508, tiffField0.getBytesLength());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(127, tiffField0.getSortHint());
      assertEquals(127, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[321];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(849, 849, fieldTypeAscii0, 849, 849, byteArray0, byteOrder0, 4098);
      String string0 = tiffField0.getValueDescription();
      assertEquals(849, tiffField0.getTag());
      assertEquals(849, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(849, tiffField0.getDirectoryType());
      assertEquals(4098, tiffField0.getSortHint());
      assertEquals(849, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1474, 1474, fieldTypeShort0, 205L, 32528L, byteArray0, byteOrder0, 1474);
      String string0 = tiffField0.toString();
      assertEquals(1474, tiffField0.getDirectoryType());
      assertEquals("1474 (0x5c2: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (205 Short)", string0);
      assertEquals(410, tiffField0.getBytesLength());
      assertEquals(1474, tiffField0.getSortHint());
      assertEquals(32528, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(849, 849, fieldTypeRational0.ASCII, 849, 849, byteArray0, byteOrder0, 849);
      String string0 = tiffField0.getValueDescription();
      assertEquals(849, tiffField0.getDirectoryType());
      assertEquals(849, tiffField0.getSortHint());
      assertEquals(849, tiffField0.getBytesLength());
      assertEquals(849, tiffField0.getTag());
      assertEquals(849, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, (byte)51, fieldTypeRational0, (byte)51, (byte)51, byteArray0, byteOrder0, (byte)51);
      tiffField0.toString();
      assertEquals(51L, tiffField0.getCount());
      assertEquals(51, tiffField0.getTag());
      assertEquals(408, tiffField0.getBytesLength());
      assertEquals(51, tiffField0.getOffset());
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), (byte)6, fieldTypeShort0, 0L, (-3088L), byteArray0, byteOrder0, (-2233));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1), (-1534));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2233), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-14), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-3088), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32932, (byte)0, fieldTypeRational0, 1314L, 32932, byteArray0, byteOrder0, 7037);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(106, 32932);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(7037, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(32932, tiffField0.getTag());
      assertEquals(32932, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: WangAnnotation, fieldType: SRational", string0);
      assertEquals(10512, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2772), 871, (FieldType) null, 2195L, 2195L, byteArray0, byteOrder0, (-2017));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1306), (-1306), fieldTypeShort0, (byte)0, (-1306), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1306), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1306), tiffField0.getOffset());
      assertEquals((-1306), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeRational0, (byte)20, (byte)20, byteArray0, byteOrder0, (byte)20);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals("20 (0x14: Unknown Tag): ", string0);
      assertEquals(20, tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5004), (-5004), fieldTypeShort0, (byte)24, (-5004), (byte[]) null, byteOrder0, (-2175));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeRational0, (byte)28, (byte)28, byteArray0, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeShort0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(12L, tiffElement0.offset);
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
  }
}
