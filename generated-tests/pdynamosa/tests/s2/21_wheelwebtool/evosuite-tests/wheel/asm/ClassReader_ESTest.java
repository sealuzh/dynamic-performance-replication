/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 10:21:10 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getInterfaces();
      classReader1.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(168);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitAnnotation("wheel.asm.Frame", false);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, (-1));
      // Undeclared exception!
      try { 
        classReader0.getItem(3025);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3025
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = new ClassReader("wheel.asm.Item");
      classReader1.accept((ClassVisitor) classWriter0, 464);
      Attribute attribute0 = new Attribute("hM1wt5;D");
      char[] charArray0 = new char[0];
      Label[] labelArray0 = new Label[3];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = new Label();
      labelArray0[1] = label1;
      Label label2 = label1.successor;
      labelArray0[2] = null;
      attribute0.read(classReader1, 464, 4, charArray0, 773, labelArray0);
      attribute0.read(classReader1, 529, 2, charArray0, 0, labelArray0);
      Attribute attribute1 = new Attribute("hM1wt5;D");
      ClassReader classReader2 = new ClassReader(classReader1.b, 773, 773);
      Attribute[] attributeArray0 = new Attribute[0];
      // Undeclared exception!
      try { 
        classReader2.accept((ClassVisitor) classWriter0, attributeArray0, 529);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader2 = new ClassReader(byteArrayInputStream0);
      classReader2.getAccess();
      // Undeclared exception!
      try { 
        classReader0.getItem((-1832));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1832
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "wheel.asm.Frame";
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1791));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classReader0.readConst((-1791), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1791
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.getInterfaces();
      classReader1.getSuperName();
      ClassWriter classWriter1 = new ClassWriter(classReader1, 2);
      classReader0.accept((ClassVisitor) classWriter1, 8);
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = ';';
      charArray0[2] = 'i';
      charArray0[3] = 'f';
      charArray0[4] = 'B';
      charArray0[5] = 'N';
      charArray0[6] = 'f';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.getInterfaces();
      Locale.getISOCountries();
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = '(';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getInterfaces();
      classReader1.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, 3025);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte) (-6);
      byteArray0[8] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readShort((byte) (-6));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.getClassName();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1992);
      classReader0.getInterfaces();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)76;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("The strings must not be null");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byte byte0 = (byte) (-6);
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      // Undeclared exception!
      try { 
        classReader0.readLabel((byte)0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      classWriter0.newClass("StackMapTable");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte) (-6);
      byteArray0[8] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      long long0 = classReader0.readLong(6);
      assertEquals(13229461512128000L, long0);
      
      int int0 = classReader0.getItem((byte)12);
      assertEquals(116, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 4, (byte) (-6));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 680
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(classReader0.b);
      assertEquals(679, byteArrayInputStream1.available());
      
      long long0 = classReader0.readLong(2);
      assertEquals((-4990551337076850656L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 4);
      assertEquals(48, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 2381);
      // Undeclared exception!
      try { 
        classReader1.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      // Undeclared exception!
      try { 
        classReader0.readClass(2, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      int int0 = (-2409);
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-2409), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-78));
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 7);
      classReader0.getInterfaces();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CubV6WUk7z-N3W");
      classReader1.getInterfaces();
      // Undeclared exception!
      try { 
        classReader1.readShort((-78));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getClassName();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(24);
      Attribute[] attributeArray0 = null;
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 182);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(byteArrayInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.ByteArrayInputStream@70f09a4a
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getClassName();
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      assertEquals(3025, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 497);
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readByte((-1313));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1313
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte) (-51);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-51));
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(254);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 8);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassWriter classWriter0 = new ClassWriter(180);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, (int) (byte) (-6));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      assertEquals(6, byteArrayInputStream1.available());
      
      classReader0.readByte((byte)76);
      // Undeclared exception!
      try { 
        classReader0.getItem(53);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 53
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2863);
      classWriter0.newNameType("InnerClasses", "InnerClasses");
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      assertNotNull(string0);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      URI uRI0 = MockURI.aFileURI;
      int int0 = classReader0.readInt(2);
      assertEquals((-1161953280), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      char[] charArray0 = new char[9];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FileFileFilter");
      charArray0[0] = ',';
      char[] charArray1 = new char[6];
      charArray1[0] = 'B';
      charArray1[1] = '?';
      charArray1[2] = '?';
      charArray1[3] = '?';
      charArray1[4] = '?';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FileFileFilter");
      charArray1[5] = 'B';
      char[] charArray2 = new char[8];
      charArray2[0] = 'S';
      charArray2[1] = ',';
      charArray2[2] = '\'';
      charArray2[3] = ',';
      charArray2[4] = '4';
      charArray2[5] = ',';
      charArray2[6] = 'B';
      charArray2[7] = ',';
      classReader0.readClass(26, charArray2);
      // Undeclared exception!
      try { 
        classReader0.readConst(26, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '^';
      charArray0[2] = 'r';
      // Undeclared exception!
      try { 
        classReader0.readConst((byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      char[] charArray0 = new char[7];
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = 286;
      // Undeclared exception!
      try { 
        classReader0.readConst(286, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      int int0 = (-139);
      Label[] labelArray0 = new Label[1];
      Label[] labelArray1 = new Label[1];
      Label label0 = new Label();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      labelArray1[0] = label0;
      // Undeclared exception!
      try { 
        classReader0.readLabel((byte) (-6), labelArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = ',';
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      // Undeclared exception!
      try { 
        classReader1.readUTF8(4096, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '^';
      charArray0[2] = 'r';
      charArray0[3] = 'a';
      charArray0[4] = '`';
      charArray0[5] = '4';
      charArray0[6] = 'M';
      charArray0[7] = '{';
      // Undeclared exception!
      try { 
        classReader0.readConst(19532, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.getInterfaces();
      Locale.getISOCountries();
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = '(';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      charArray0[5] = '(';
      charArray0[6] = '(';
      charArray0[7] = 'j';
      // Undeclared exception!
      try { 
        classReader0.readClass(3025, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(254);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter1 = new ClassWriter(254);
      classWriter1.newMethodItem("ConstantValue", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.WildcardFilter", false);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter1, 2);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader1.readConst(185, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = new ClassReader("wheel.asm.Item");
      classReader1.accept((ClassVisitor) classWriter0, 464);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader1.b, (-499), 2147483645);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        classReader0.readConst((-1808), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      ClassReader classReader1 = new ClassReader(classReader0.b, 13, 2381);
      // Undeclared exception!
      try { 
        classReader1.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '^';
      charArray0[2] = 'r';
      charArray0[3] = 'a';
      charArray0[4] = '`';
      charArray0[5] = '4';
      charArray0[6] = 'M';
      charArray0[7] = '{';
      // Undeclared exception!
      try { 
        classReader0.readLong((byte)76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.getInterfaces();
      classReader1.getSuperName();
      Locale.getISOCountries();
      char[] charArray0 = new char[7];
      charArray0[0] = 'c';
      charArray0[1] = '8';
      charArray0[2] = 'i';
      charArray0[3] = '.';
      classReader1.accept((ClassVisitor) classWriter0, 97);
      charArray0[4] = 'e';
      charArray0[5] = 'h';
      charArray0[6] = ',';
      // Undeclared exception!
      try { 
        classReader1.readConst(97, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(254);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter1 = new ClassWriter(254);
      classWriter1.newMethodItem("ConstantValue", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.WildcardFilter", false);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter1, 2);
      ClassReader classReader2 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 8);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassWriter classWriter1 = new ClassWriter(classReader1, 354);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      ClassWriter classWriter2 = new ClassWriter(3025);
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader2.accept((ClassVisitor) classWriter1, (Attribute[]) null, 3025);
      classReader2.accept((ClassVisitor) classWriter0, 1);
      ClassReader classReader3 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(33, classReader3.getAccess());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte) (-6));
      // Undeclared exception!
      try { 
        classReader0.readInt(223);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)76;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-32);
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      classReader0.readInt((byte)0);
      int int0 = (-2653);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 1183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 46, (byte) (-6));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 680
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1992);
      classReader0.getInterfaces();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)76;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FileFileFilter");
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-6);
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte) (-6);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      short short0 = classReader0.readShort(110);
      assertEquals((short)1091, short0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classWriter0.index = 1913;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, (byte) (-6));
      classReader0.accept((ClassVisitor) classAdapter0, (int) (byte) (-6));
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("[Fo&feUXNeZm?7uWF");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2863);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.getSuperName();
      char[] charArray0 = new char[1];
      charArray0[0] = ')';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(2383, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassWriter classWriter1 = new ClassWriter(8);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      classReader2.accept((ClassVisitor) classWriter0, 1);
      ClassReader classReader3 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader3.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader3.readLabel(2, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = 105;
      PipedInputStream pipedInputStream0 = new PipedInputStream(105);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      ClassWriter classWriter0 = new ClassWriter((-1));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      classReader0.readInt((byte)0);
      int int0 = 12;
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      charArray0[1] = 'K';
      // Undeclared exception!
      try { 
        classReader0.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-32);
      byteArray0[5] = (byte) (-6);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      char[] charArray0 = new char[7];
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getInterfaces();
      // Undeclared exception!
      try { 
        classReader1.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)76;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-32);
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      classReader0.readInt((byte)0);
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = 'X';
      charArray0[2] = '';
      // Undeclared exception!
      try { 
        classReader0.readClass((-2653), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2820);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classWriter0, 1);
      ClassWriter classWriter1 = new ClassWriter((-633));
      classReader0.accept((ClassVisitor) classWriter1, (-872));
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte byte0 = (byte)76;
      byte byte1 = (byte) (-6);
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.getSuperName();
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'f';
      charArray0[2] = ')';
      charArray0[3] = 'I';
      charArray0[4] = 't';
      charArray0[5] = '\\';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-47), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      int int0 = 19532;
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '^';
      charArray0[2] = 'a';
      char char0 = 'a';
      ClassWriter classWriter0 = new ClassWriter((byte)76);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)76;
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-6);
      byteArray0[6] = (byte) (-123);
      byteArray0[8] = (byte) (-6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      long long0 = classReader0.readLong((byte)0);
      assertEquals(464, classReader0.header);
      assertEquals((-3819410108757049297L), long0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      classReader0.readInt((byte)0);
      // Undeclared exception!
      try { 
        classReader0.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)76;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      assertEquals(679, byteArrayInputStream0.available());
      
      byte[] byteArray1 = new byte[0];
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      int int0 = classReader0.readUnsignedShort(200);
      assertEquals(27749, int0);
      
      // Undeclared exception!
      try { 
        classReader0.readByte((-1341));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1341
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      Attribute[] attributeArray0 = new Attribute[1];
      classReader0.readLong(462);
      Attribute attribute0 = new Attribute((String) null);
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 60);
      // Undeclared exception!
      try { 
        classReader0.readClass(2, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      int int0 = classReader1.readByte(773);
      assertEquals(0, int0);
      assertEquals(773, classReader1.header);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(254);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter1 = new ClassWriter(254);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter1, 1913);
      ClassReader classReader2 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      // Undeclared exception!
      try { 
        classReader2.readLabel(8, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader0.b, 2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68677
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte) (-6);
      byteArray0[8] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      long long0 = classReader0.readLong(6);
      assertEquals(13229461512128000L, long0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte) (-6));
      // Undeclared exception!
      try { 
        classReader0.readInt((byte) (-6));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(254);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter1 = new ClassWriter(254);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(293, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      ClassWriter classWriter0 = new ClassWriter((-1));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      charArray0[1] = 'B';
      classReader0.getInterfaces();
      short short0 = classReader0.readShort(1);
      assertEquals(464, classReader0.header);
      assertEquals((short) (-326), short0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      int int0 = 19532;
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '^';
      charArray0[2] = 'r';
      charArray0[3] = 'a';
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader1.getSuperName();
      classReader1.getInterfaces();
      URI uRI0 = MockURI.aFileURI;
      ClassVisitor classVisitor0 = null;
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("EnclosingMethod");
      int int0 = 4096;
      int int1 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'F';
      charArray0[2] = '^';
      int int2 = 2668;
      Label[] labelArray0 = new Label[6];
      Label label0 = new Label();
      labelArray0[0] = label0;
      ClassReader classReader2 = new ClassReader(classReader0.b);
      Label label1 = classReader2.readLabel(4, labelArray0);
      labelArray0[1] = label1;
      Label label2 = label0.getFirst();
      labelArray0[2] = label2;
      // Undeclared exception!
      try { 
        classReader1.readLabel(601, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(464, classReader0.header);
      
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      classReader0.getInterfaces();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte) (-6);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      short short0 = classReader0.readShort(110);
      assertEquals((short)1091, short0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-32);
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)0);
      classReader0.readInt((byte)0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 1183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      int int0 = classReader0.readInt((byte)0);
      assertEquals(1275068416, int0);
      
      int int1 = classReader0.readByte((byte)0);
      assertEquals(4, classReader0.header);
      assertEquals(76, int1);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter0, 28);
      ClassReader classReader3 = null;
      try {
        classReader3 = new ClassReader("Signature");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      ClassReader classReader2 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter1 = new ClassWriter(1);
      ClassReader classReader3 = new ClassReader(classReader1.b);
      classReader0.accept((ClassVisitor) classWriter0, 19);
      ClassReader classReader4 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      assertEquals(33, classReader4.getAccess());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      int int0 = 26;
      char[] charArray0 = new char[9];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FileFileFilter");
      charArray0[0] = ',';
      charArray0[1] = '>';
      charArray0[2] = '6';
      charArray0[3] = '\\';
      charArray0[4] = '`';
      charArray0[5] = 'Q';
      charArray0[6] = ' ';
      charArray0[7] = '$';
      charArray0[8] = 'A';
      classReader0.readUTF8(26, charArray0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(";@<");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-46);
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte)51;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.getInterfaces();
      classReader1.getSuperName();
      Locale.getISOCountries();
      char[] charArray0 = new char[7];
      charArray0[0] = 'c';
      charArray0[1] = '8';
      charArray0[2] = 'i';
      ClassReader classReader2 = new ClassReader("java/lang/Object");
      classReader2.accept((ClassVisitor) classWriter0, 1366);
      assertEquals(33, classReader2.getAccess());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte byte0 = (byte)76;
      byte byte1 = (byte) (-6);
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      charArray0[1] = 'B';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-20));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 1);
      // Undeclared exception!
      try { 
        classReader1.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      String string0 = "wheel.asm.Frame";
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      int int0 = (-1791);
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1791));
      Attribute[] attributeArray0 = new Attribute[9];
      Attribute attribute0 = new Attribute(" 4");
      attributeArray0[0] = attribute0;
      int int1 = (-1);
      char[] charArray0 = new char[9];
      char char0 = 'n';
      charArray0[0] = 'n';
      charArray0[1] = '&';
      char char1 = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'k';
      char char2 = '(';
      charArray0[4] = '(';
      char char3 = 'b';
      charArray0[5] = 'b';
      char char4 = '}';
      charArray0[6] = '}';
      charArray0[7] = '3';
      charArray0[8] = 'v';
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-1), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Signature");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byte byte0 = (byte) (-6);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)76;
      ClassReader classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)76);
      classReader0.readInt((byte)0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)76);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, (byte)76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      char[] charArray1 = new char[1];
      charArray1[0] = ',';
      classReader0.readConst(26, charArray1);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 294);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-4);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-4), (byte)76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      assertEquals(11770, byteArrayInputStream0.available());
      
      ClassReader classReader2 = new ClassReader(byteArrayInputStream0);
      classReader1.readUnsignedShort(4);
      assertEquals(48, classReader1.getAccess());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1791));
      Attribute[] attributeArray0 = new Attribute[9];
      Attribute attribute0 = new Attribute(" 4");
      attributeArray0[0] = attribute0;
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = '&';
      charArray0[2] = 'M';
      charArray0[3] = 'k';
      charArray0[4] = '(';
      classReader0.readConst(185, charArray0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("fk-z.0!");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassWriter classWriter0 = new ClassWriter(180);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classWriter0.newDouble(180);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, (int) (byte) (-6));
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass((byte)76, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2863);
      classWriter0.invalidFrames = true;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      assertEquals(7802, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.getSuperName();
      classReader0.getInterfaces();
      ClassReader classReader2 = new ClassReader("java/lang/Object");
      classReader2.getSuperName();
      classReader2.accept((ClassVisitor) classWriter0, 2048);
      ClassReader classReader3 = null;
      try {
        classReader3 = new ClassReader(classReader1.b, 2359, 3025);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68677
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byte byte0 = (byte) (-6);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ClassWriter classWriter0 = new ClassWriter(180);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, (int) (byte) (-6));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader0.readLong((-778));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-6));
      classWriter0.toByteArray();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte) (-6);
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)76;
      byteArray0[6] = (byte) (-123);
      byteArray0[8] = (byte) (-6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      long long0 = classReader0.readLong((byte)0);
      assertEquals((-3819410108757049297L), long0);
      
      short short0 = classReader0.readShort(4);
      assertEquals(464, classReader0.header);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      // Undeclared exception!
      try { 
        classReader0.readUTF8(568, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
