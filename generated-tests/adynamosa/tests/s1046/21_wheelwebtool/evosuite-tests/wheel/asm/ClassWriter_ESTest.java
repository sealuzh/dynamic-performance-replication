/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 04:53:33 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(950);
      classWriter0.invalidFrames = true;
      classWriter0.visit(950, 14, "short", "LiV/.xQUudP^0uK", ";V&lTx0CV7ZTkc", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(93, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 0;
      int int0 = classWriter0.newUTF8("?3QQe&w<bB!te.S");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1356));
      classWriter0.index = (-1356);
      int int0 = classWriter0.newNameType("MV/*u", "");
      assertEquals((-1354), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.index = (-1440);
      int int0 = classWriter0.newField("P&L~i]g;@-S,R3M&29", "3vL$MF`V0;", "");
      assertEquals((-1435), int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.index = (-1440);
      int int0 = classWriter0.newConst("");
      assertEquals((-1439), int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1356));
      classWriter0.index = (-1356);
      int int0 = classWriter0.newClass("The list of prefixes must not be null");
      assertEquals((-1355), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitSource("", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.visitOuterClass("", "m(gGzL1'Q", "I/eM@2QFWt9'Zecr A~");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(0, "EnclosingMethod", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(3, (String) null, (String) null, " CFbm=+$", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(929, "", "laZUD;?-i]16E", (String) null, (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(0, "?3QQe&w<bB!te.S", "?3QQe&w<bB!te.S", "#c$2Do'Kc35^Cdv;7", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-2270), "The array of suffixes must not be null", "Synthetic", "TVs7hF[Rn^p H3iL5N", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitInnerClass("9.T_I kv?f,J=(", "@", "Ofc$m~mAI;", 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitInnerClass("The array of prefixes must not be null", "SourceFile", "The array of prefixes must not be null", (-2317));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      classWriter0.visitInnerClass("", "", "", 31);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Float float0 = new Float(0.0F);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-1), "", "Dd[T`8>&", (String) null, float0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      // Undeclared exception!
      try { 
        classWriter0.visitField(3479, "", (String) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Float float0 = new Float((double) 2);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(0, "", "Synthetic", "", float0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25165824);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        classWriter0.visit(1, 1836, (String) null, ">PnCa;i>7)Yt=68X5)$", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        classWriter0.visit(9, 0, "", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit(0, 1, "b->0?-mF2r(2)1lTF", "Lsx$W`;9^", "org.apache.commons.io.IOCase", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[0];
      classWriter0.visit((-360), 255, "", "GZ!3pS/&-=Vz[2O`q", "", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.newUTF8("?3QQe&w<bB!te.S");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      int int0 = classWriter0.newUTF8("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3894));
      Item item0 = classWriter0.newMethodItem("RuntimeInvisibleAnnotations", "M,xb6c59Gobe7snux", "P", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2015);
      Item item0 = classWriter0.newMethodItem("Sv<", "", "value ", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, "Invalid IOCase name: ", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-911));
      Item item0 = classWriter0.newMethodItem("", "wn&J4 RLId:p", "", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.newMethod("{rr", "{rr", "Deprecated", true);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(42);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "N E1^x9UcD=", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1356));
      int int0 = classWriter0.newMethod("", "wl", "", false);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1238));
      Item item0 = classWriter0.newLong(0L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newLong(1L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Item item0 = classWriter0.newLong((-1));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newInteger(0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newInteger((-4268));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1687));
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Item item0 = classWriter0.newFloat((-1));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Item item0 = classWriter0.newFieldItem("H:>oI4=TjP8odkd|", "H:>oI4=TjP8odkd|", "RLJj_RK4?AKh:>z&/W");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      Item item0 = classWriter0.newFieldItem("", "", "");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, " {crK1En${", "value ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25165824);
      int int0 = classWriter0.newField("", "", "");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newDouble(0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(107);
      Item item0 = classWriter0.newDouble(107);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3894));
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@498c86e1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(2131, "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter");
      // Undeclared exception!
      try { 
        classWriter0.newConst(fieldVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newClassItem("SourceFile");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1045);
      Item item0 = classWriter0.newClassItem("");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      int int0 = classWriter0.newClass("");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("wl'D", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'wl'D.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, "(N]4#vjSWZ,q#C");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.addUninitializedType("", 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2015);
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classWriter0.visitField(1, (String) null, "J>", "RuntimeVisibleAnnotations", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(107);
      Float float0 = new Float(0.0F);
      Item item0 = classWriter0.newConstItem(float0);
      // Undeclared exception!
      try { 
        classWriter0.visitField((-3861), "wcl8`T_Yfv~%d~({$", "SourceDebugExtension", "wcl8`T_Yfv~%d~({$", item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-911));
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1045);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.OrFileFilter");
      classWriter0.visitAttribute(attribute0);
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      // Undeclared exception!
      try { 
        classWriter0.newUTF8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1356));
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("Deprecated", (String) null, "Deprecated", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2256);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(classReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassReader@1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4386));
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      // Undeclared exception!
      try { 
        classWriter0.newClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("9}YdQ]S&0+TqOTRmC~", (-289));
      classWriter0.addUninitializedType("org.apache.commons.io.IOCase", (-289));
      classWriter0.addType("~8MA20Op");
      classWriter0.addUninitializedType("~8MA20Op", 0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(4, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '~8MA20Op.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(22, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("9}YdQ]S&0+TqOTRmC~", (-289));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-1910), (-889275714));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1910
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3077);
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 1569);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item[] itemArray0 = new Item[0];
      classWriter0.typeTable = itemArray0;
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType("9}YdQ]S&0+TqOTRmC~", (-289));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1356));
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, (-1048576));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      classWriter0.addType("org.apache.commons.io.filefilter.WildcardFilter");
      int int0 = classWriter0.addType("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      int int0 = classWriter0.newMethod("FTIdW0s}f5", "", "\u0007cw", false);
      assertEquals(6, int0);
      
      int int1 = classWriter0.newNameType("", "\u0007cw");
      assertEquals(5, int1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(268435456);
      classWriter0.threshold = 2;
      String[] stringArray0 = new String[0];
      classWriter0.visit(1, 2, "RuntimeInvisibHeAnnotations", "-&\"`cc1C", "", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.WildcardFileFilter", "wheel.asm.ByteVector");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.ByteVector", "java/lang/Object");
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item[] itemArray0 = new Item[1];
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("gem-<Y~J3t4wr^^~j", 0);
      int int0 = classWriter0.addUninitializedType("0}YdQnS&0+TqOTRmC~", 1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.addUninitializedType("9}YdQ]S&0+TqOTRmC~", (-289));
      assertEquals(1, int0);
      
      int int1 = classWriter0.addUninitializedType("9}YdQ]S&0+TqOTRmC~", (-289));
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = classWriter0.addType("org.apache.commons.io.filefilter.TrueFileFilter");
      assertEquals(1, int0);
      
      int int1 = classWriter0.getMergedType(1, 1);
      assertTrue(int1 == int0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Item item0 = classWriter0.newConstItem("+e5cF2ZE/+-Z]");
      Item item1 = classWriter0.newConstItem("+e5cF2ZE/+-Z]");
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-911));
      Item item0 = classWriter0.newDouble((-911));
      Item item1 = classWriter0.newDouble((-911));
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Float float0 = new Float(1726.722F);
      classWriter0.visitField((-4268), "sf|HufrJ8KlE?<", "sf|HufrJ8KlE?<", "sf|HufrJ8KlE?<", float0);
      Item item0 = classWriter0.newFloat(1726.722F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      Item item0 = classWriter0.newInteger(2);
      Item item1 = classWriter0.newInteger(2);
      assertNotNull(item1);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Type type0 = Type.getObjectType("sJ]Ab6FeuPDPjd1@nP@");
      FieldVisitor fieldVisitor0 = classWriter0.visitField(5, "org.apache.commons.io.IOCase", "sJ]Ab6FeuPDPjd1@nP@", "sJ]Ab6FeuPDPjd1@nP@", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-911));
      Type type0 = Type.BYTE_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1409, "", "K$<y|z=KpZrIwDbx", "f$?o<KL-H[wZGH6", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Double double0 = new Double(384);
      Item item0 = classWriter0.newConstItem(double0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Long long0 = new Long(1);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-360), "RLJj_RK4?AKh:>z&/W", "", "weKI0%Vet{)1F", long0);
      FieldVisitor fieldVisitor1 = classWriter0.visitField(4, "", "", "weKI0%Vet{)1F", long0);
      assertFalse(fieldVisitor1.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Boolean boolean0 = new Boolean((String) null);
      Item item0 = classWriter0.newConstItem(boolean0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1045);
      Boolean boolean0 = new Boolean(true);
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Short short0 = Short.valueOf((short) (-5231));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(23, "", "", " D:QZF)~", short0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2092);
      Character character0 = new Character('O');
      Item item0 = classWriter0.newConstItem(character0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      Byte byte0 = new Byte((byte) (-34));
      Item item0 = classWriter0.newConstItem(byte0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      Item item0 = classWriter0.newConstItem(classWriter0.COMPUTE_FRAMES);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visitAnnotation("2", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(68, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.visitInnerClass("GRo mG)j:PhE", "GRo mG)j:PhE", "The filters must not be null", 17);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(104, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "org.apache.commons.io.filefilter.WildcardFileFilter";
      classWriter0.visit(8, (-3685), "Lsx$W`;9^", "", "u1xt", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(192, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "org.apache.commons.io.filefilter.WildcardFileFilter";
      classWriter0.visit(252, (-3685), "Lsx$W`;9^", "", "u1xt", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(174, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visitOuterClass("LocalVariableTypeTable", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(88, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "3vL$MF`V0;";
      classWriter0.visit(17, 17, "3vL$MF`V0;", "3vL$MF`V0;", "3vL$MF`V0;", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(62, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitMethod(428, "l02#}`fP|/_7P+", "sf|HufrJ8KlE?<", "sf|HufrJ8KlE?<", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(86, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Float float0 = new Float(1726.722F);
      classWriter0.visitField((-4268), "sf|HufrJ8KlE?<", "sf|HufrJ8KlE?<", "sf|HufrJ8KlE?<", float0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(117, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visitInnerClass("Insensitive", "oR}/Udt}\" (O.", "", 1);
      classWriter0.visitInnerClass("oR}/Udt}\" (O.", "W2*QAxPv iy", "hZ^K\u0003I:*IBe.Oxh6", 2207);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      classWriter0.visitAnnotation("4E$NYEkrpcn#Dzuu=", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(87, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visitOuterClass("5LaI4^'O>pt)\"O", "5LaI4^'O>pt)\"O", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visitOuterClass("}.bG;ZsI{>_KoVL.Or", (String) null, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.visitSource("-&\"`cc1C", "-&\"`cc1C");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(93, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(201);
      classWriter0.visitSource((String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "java/lang/Object";
      stringArray0[1] = "org.apache.commons.io.filefilter.WildcardFileFilter";
      classWriter0.visit(2578, (-1183), "java/lang/Object", (String) null, "SourceDebugExtension", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[0];
      classWriter0.visit(3, 3, "", "%{*:ih.@OF\"$MIOk", (String) null, stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      Attribute[] attributeArray0 = new Attribute[3];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 252);
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1045);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.OrFileFilter");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
