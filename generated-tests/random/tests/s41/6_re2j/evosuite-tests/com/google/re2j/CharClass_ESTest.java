/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 02:27:24 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-226);
      intArray0[0] = (-226);
      intArray0[1] = (-3291);
      intArray0[2] = 6112;
      int int1 = 0;
      intArray0[3] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.cleanClass();
      int[][] intArray1 = new int[2][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int int2 = 66640;
      CharClass charClass3 = charClass0.appendFoldedRange((-3291), 66640);
      charClass3.negateClass();
      CharClass charClass4 = charClass2.appendTableWithSign(intArray1, (-3291));
      CharClass charClass5 = charClass4.appendClassWithSign(intArray0, 1);
      charClass2.appendClassWithSign(intArray0, 2494);
      charClass5.appendClassWithSign(intArray0, 1);
      CharClass charClass6 = charClass4.appendClass(intArray0);
      charClass0.toString();
      CharGroup charGroup0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        charClass6.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[6];
      int int0 = 4;
      intArray1[0] = 4;
      intArray1[1] = (-2673);
      intArray1[2] = 1;
      intArray1[3] = 4228;
      intArray1[4] = (-1667);
      intArray1[5] = (-2608);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-2608);
      intArray2[1] = (-2673);
      intArray2[2] = (-1855);
      intArray2[3] = 4;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = (-2673);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = (-1855);
      intArray4[1] = 4;
      intArray4[2] = 1;
      intArray4[3] = (-1667);
      intArray4[4] = (-2608);
      intArray4[5] = 4;
      intArray0[3] = intArray4;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(68098, 66639);
      CharClass charClass2 = charClass1.appendRange(93, 93);
      charClass0.negateClass();
      CharClass charClass3 = charClass2.cleanClass();
      int[] intArray0 = new int[0];
      charClass1.appendClassWithSign(intArray0, 66639);
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, 2404);
      CharClass charClass5 = charClass4.appendClass(intArray0);
      assertSame(charClass4, charClass5);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][1];
      int int0 = 6622;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 6622);
      CharClass charClass2 = charClass1.negateClass();
      int int1 = 128534;
      // Undeclared exception!
      charClass2.appendFoldedRange(6622, 128534);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 8472;
      intArray0[1] = 1601;
      intArray0[2] = (-1510);
      intArray0[3] = 1;
      String string0 = CharClass.charClassToString(intArray0, (-639));
      assertEquals("[]", string0);
      
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[9][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      int[] intArray2 = new int[9];
      intArray2[0] = 8472;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 2673;
      intArray2[4] = 1601;
      intArray2[5] = 1601;
      intArray2[6] = 1;
      intArray2[7] = 1;
      intArray2[8] = 8472;
      intArray1[6] = intArray2;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      charClass0.appendTable(intArray1);
      charClass0.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {8472, 1601, (-1510), 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(97, 65100);
      charClass1.appendRange(65100, (-2133));
      charClass0.toString();
      int[] intArray1 = new int[9];
      intArray1[0] = 97;
      intArray1[1] = (-2133);
      intArray1[2] = 97;
      intArray1[3] = 97;
      intArray1[4] = 65100;
      intArray1[5] = 93;
      intArray1[6] = 65100;
      intArray1[7] = (-2133);
      int int0 = (-2769);
      int[] intArray2 = new int[9];
      intArray2[0] = 65100;
      intArray2[1] = (-2133);
      intArray2[2] = (-670);
      intArray2[3] = 97;
      intArray2[4] = (-2769);
      intArray2[5] = (-2769);
      intArray2[6] = (-2769);
      intArray2[7] = 7406;
      intArray2[8] = 1744;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.cleanClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 4120;
      intArray0[1] = (-1816);
      intArray0[2] = (-1005);
      intArray0[3] = (-1220);
      intArray0[4] = 909;
      intArray0[5] = (-1683);
      CharClass charClass3 = charClass2.appendClass(intArray0);
      CharClass charClass4 = charClass3.appendLiteral(4120, (-1683));
      int[][] intArray1 = new int[5][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[0] = 4120;
      intArray2[1] = (-1005);
      intArray2[2] = (-1005);
      intArray2[3] = 4120;
      intArray1[4] = intArray2;
      CharClass charClass5 = charClass4.appendTable(intArray1);
      int[] intArray3 = charClass5.toArray();
      assertEquals(10, intArray3.length);
      assertArrayEquals(new int[] {0, 1114111, 4120, (-1816), (-1005), (-1220), 909, (-1683), 4120, 4120}, intArray3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral((-3134), (-3134));
      String string0 = CharClass.charClassToString(intArray0, (-3134));
      assertEquals("[]", string0);
      
      charClass0.appendFoldedClass(intArray0);
      int[] intArray1 = charClass0.toArray();
      assertArrayEquals(new int[] {(-3134), (-3134)}, intArray1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange(1140, 1140);
      charClass1.negateClass();
      int[] intArray1 = new int[2];
      CharClass charClass2 = charClass0.appendClassWithSign(intArray1, 65019);
      int[][] intArray2 = new int[8][7];
      int[] intArray3 = new int[0];
      intArray2[0] = intArray3;
      intArray2[1] = intArray0;
      intArray2[2] = intArray0;
      intArray2[3] = intArray1;
      intArray2[4] = intArray1;
      intArray2[5] = intArray1;
      intArray2[6] = intArray1;
      intArray2[7] = intArray1;
      // Undeclared exception!
      try { 
        charClass2.appendTable(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-775);
      intArray0[1] = (-149);
      intArray0[2] = 66639;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange(66639, (-149));
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass1.appendTable(intArray1);
      charClass0.toString();
      CharClass charClass2 = charClass0.appendLiteral(69, 66639);
      int[][] intArray2 = new int[0][8];
      CharClass charClass3 = charClass1.appendNegatedTable(intArray2);
      assertSame(charClass3, charClass2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = 65530;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 65530);
      CharClass charClass2 = charClass1.appendFoldedRange(65530, 1);
      charClass2.cleanClass();
      intArray0[1] = 2482;
      intArray0[2] = 65;
      intArray0[3] = (-938);
      CharClass charClass3 = charClass0.appendClass(intArray0);
      CharClass charClass4 = charClass3.cleanClass();
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 65;
      intArray1[2] = 2482;
      intArray1[3] = (-350);
      intArray1[4] = (-938);
      intArray1[5] = 1;
      intArray1[6] = 65530;
      intArray1[7] = 65;
      intArray1[8] = 65;
      // Undeclared exception!
      try { 
        charClass4.appendFoldedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-46);
      intArray0[1] = 184;
      intArray0[2] = (-26);
      intArray0[3] = 1378;
      intArray0[4] = (-89);
      intArray0[5] = 186;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendClassWithSign(intArray0, 1195);
      assertArrayEquals(new int[] {(-89), 1378, (-46), 184, (-26), 1378}, intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArrayArray0 = null;
      int int0 = 254;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, 254);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[5];
      intArray0[0] = (-92);
      intArray0[1] = (-3106);
      intArray0[2] = 0;
      intArray0[3] = 192;
      intArray0[4] = 1114111;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = (-579);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-483));
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      charClass2.appendLiteral((-579), 1264);
      CharClass charClass4 = charClass3.appendFoldedClass(intArray0);
      assertSame(charClass1, charClass4);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 4246;
      intArray0[1] = 4378;
      intArray0[2] = 2765;
      intArray0[3] = 1;
      intArray0[4] = 64041;
      intArray0[5] = 1;
      intArray0[6] = (-113);
      intArray0[7] = 1202;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 1);
      int[] intArray1 = new int[0];
      charClass0.appendFoldedRange(2765, 1);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray1);
      charClass1.appendClass(intArray0);
      charClass2.appendClassWithSign(intArray1, 4378);
      CharClass charClass3 = charClass1.negateClass();
      charClass1.appendFoldedClass(intArray1);
      // Undeclared exception!
      charClass3.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 32;
      intArray0[1] = 3635;
      intArray0[2] = 993;
      intArray0[3] = (-1930);
      intArray0[4] = 3893;
      intArray0[5] = 66639;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-90));
      int[][] intArray1 = new int[7][6];
      int[] intArray2 = new int[3];
      intArray2[0] = 3893;
      intArray2[1] = (-1930);
      intArray2[2] = (-90);
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass2.appendTableWithSign(intArray1, (-522));
      charClass3.appendNegatedTable(intArray1);
      assertArrayEquals(new int[] {32, 3635, 993, (-1930), 3893, 66639}, intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-67);
      intArray0[1] = (-21);
      intArray0[2] = 64;
      intArray0[3] = 192;
      intArray0[4] = (-161);
      intArray0[5] = (-1482);
      intArray0[6] = 65380;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][2];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      CharClass charClass1 = charClass0.appendLiteral(1318, (-21));
      charClass1.appendFoldedRange(943, 347);
      int int0 = 3381;
      charClass1.appendTableWithSign(intArray1, 3381);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = (-3814);
      intArray0[1] = (-638);
      intArray0[2] = 33;
      intArray0[3] = (-2016);
      CharClass.charClassToString(intArray0, (-3814));
      intArray0[4] = 856;
      intArray0[5] = (-1824);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass4 = charClass3.appendClass(intArray0);
      CharClass charClass5 = charClass1.appendLiteral((-638), (-2));
      int[][] intArray1 = new int[7][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = (-638);
      intArray2[2] = 33;
      intArray2[3] = (-4061);
      intArray2[4] = 492;
      intArray2[5] = 3693;
      intArray2[6] = (-638);
      intArray1[6] = intArray2;
      charClass2.appendNegatedTable(intArray1);
      charClass5.appendClassWithSign(intArray0, (-4061));
      charClass4.negateClass();
      charClass1.appendLiteral(2273, 860);
      charClass2.appendLiteral(252, 2273);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-3638180);
      intArray0[1] = (-579);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      charClass1.toString();
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-483));
      charClass2.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendLiteral(1114111, 1264);
      CharClass charClass4 = charClass3.cleanClass();
      charClass4.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[3][0];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[0] = (-3638180);
      intArray2[1] = (-579);
      intArray2[2] = (-3638180);
      intArray2[3] = (-483);
      intArray2[4] = 9185;
      intArray2[5] = (-3638180);
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, (-3638180));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-3637816);
      intArray0[1] = 66639;
      intArray0[2] = (-1517);
      intArray0[3] = (-2214);
      intArray0[4] = 1;
      intArray0[5] = 809;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[0][2];
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass2.negateClass();
      CharClass charClass4 = charClass3.cleanClass();
      CharClass charClass5 = charClass4.appendNegatedClass(intArray0);
      CharClass charClass6 = charClass5.appendLiteral(66639, (-371));
      int[] intArray2 = new int[9];
      intArray2[0] = (-371);
      intArray2[1] = 66639;
      intArray2[2] = (-371);
      intArray2[3] = 1;
      intArray2[4] = (-1517);
      intArray2[5] = (-2214);
      intArray2[6] = 66639;
      intArray2[7] = 1;
      intArray2[8] = (-3637816);
      // Undeclared exception!
      try { 
        charClass6.appendNegatedClass(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
