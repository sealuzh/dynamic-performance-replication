/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 10:17:13 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[4] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 5275, fieldTypeRational0, 1050L, 1050L, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(5, int0);
      assertEquals(1050, tiffField0.getOffset());
      assertEquals(5275, tiffField0.getDirectoryType());
      assertEquals(8400, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 5275, fieldTypeRational0, 1050L, 1050L, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(8400, tiffField0.getBytesLength());
      assertEquals(1050, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(5275, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(82, 937, fieldTypeAscii0.LONG, 1, (-1L), byteArray0, byteOrder0, 19);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(937, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-4353), fieldTypeRational0.SBYTE, (-559L), (-4353), byteArray0, byteOrder0, (-5));
      String string0 = tiffField0.toString();
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals((-4353), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (-559 SByte)", string0);
      assertEquals((-4353), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1634), 120, fieldTypeShort0, 0L, 120, byteArray0, byteOrder0, 37378);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(37378, tiffField0.getSortHint());
      assertEquals((-1634), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-549), (-549), fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte) (-63));
      tiffField0.getValue();
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-549), tiffField0.getDirectoryType());
      assertEquals((-549), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeRational0, 28, (-64L), byteArray0, byteOrder0, (-4241));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-64), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-4241), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 5275, fieldTypeRational0, 1050L, 1050L, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getTag();
      assertEquals(1050, tiffField0.getOffset());
      assertEquals(5275, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-3940), fieldTypeShort0, (byte)85, (-3940), byteArray0, byteOrder0, (-3940));
      int int0 = tiffField0.getTag();
      assertEquals((-1), int0);
      assertEquals((-3940), tiffField0.getOffset());
      assertEquals((-3940), tiffField0.getSortHint());
      assertEquals((-3940), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-107);
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeAscii0, 119, 24, byteArray0, byteOrder0, (-3844));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(119, tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals((-3844), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41492, 41492, fieldTypeByte0, 41492, (-968), byteArray0, byteOrder0, (-2131090642));
      int int0 = tiffField0.getSortHint();
      assertEquals(41492, tiffField0.getDirectoryType());
      assertEquals((-2131090642), int0);
      assertEquals(41492, tiffField0.getTag());
      assertEquals((-968), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(197, 197, fieldTypeRational0, 197, 0L, byteArray0, byteOrder0, 234);
      int int0 = tiffField0.getOffset();
      assertEquals(234, tiffField0.getSortHint());
      assertEquals(197, tiffField0.getDirectoryType());
      assertEquals(197, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(242, 1, fieldTypeShort0, 242, 1, byteArray0, byteOrder0, 3859);
      int int0 = tiffField0.getOffset();
      assertEquals(242, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(3859, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)107;
      TiffField tiffField0 = new TiffField((byte)107, (-2585), fieldTypeShort0, 967L, 0L, byteArray0, byteOrder0, (-345));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2585), tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1934, tiffField0.getBytesLength());
      assertEquals((-345), tiffField0.getSortHint());
      assertEquals(107, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1840, 2083, fieldTypeShort0, 1216L, 260L, byteArray0, byteOrder0, (byte) (-121));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2083, tiffField0.getDirectoryType());
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals((-256), int0);
      assertEquals(1840, tiffField0.getTag());
      assertEquals(260, tiffField0.getOffset());
      assertEquals(2432, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 4541L, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(4541, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-96);
      byteArray0[4] = (byte) (-86);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1857L, byteArray0, byteOrder0, 218);
      tiffField0.getIntValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(218, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1857, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-46);
      TiffField tiffField0 = new TiffField(1194, 26, fieldTypeShort0, 1L, 1608L, byteArray0, byteOrder0, (-295));
      tiffField0.getIntValue();
      assertEquals((-295), tiffField0.getSortHint());
      assertEquals(1194, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1608, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3689), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3689), (-3689), fieldTypeLong0, (-984L), (-984L), byteArray0, byteOrder0, (-1565));
      tiffField0.getFieldTypeName();
      assertEquals((-984), tiffField0.getOffset());
      assertEquals((-1565), tiffField0.getSortHint());
      assertEquals((-3689), tiffField0.getTag());
      assertEquals((-3689), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(937, "");
      TiffField tiffField0 = new TiffField((-173), 4395, fieldTypeDouble0, 1887L, 119, byteArray0, byteOrder0, (byte)55);
      tiffField0.getFieldTypeName();
      assertEquals(55, tiffField0.getSortHint());
      assertEquals((-173), tiffField0.getTag());
      assertEquals(119, tiffField0.getOffset());
      assertEquals(4395, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1974, 39, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (-368));
      tiffField0.getFieldType();
      assertEquals((-368), tiffField0.getSortHint());
      assertEquals(1974, tiffField0.getTag());
      assertEquals(39, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-16), (-16), fieldTypeAscii0, (-1), 4L, byteArray0, byteOrder0, (-16));
      tiffField0.getFieldType();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals((-16), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 4541L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4541, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)87;
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, 1115);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1115, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-26);
      TiffField tiffField0 = new TiffField(1, 1194, fieldTypeRational0, 1, 1194, byteArray0, byteOrder0, (byte) (-26));
      tiffField0.getDoubleValue();
      assertEquals(1194, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1194, 1194, byteArray0, byteOrder0, 1194);
      tiffField0.getDoubleArrayValue();
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals(1194, tiffField0.getTag());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getOffset());
      assertEquals(9552, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3888, 3888, (FieldType) null, 3888, 2890L, byteArray0, byteOrder0, 2028);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3888, int0);
      assertEquals(3888, tiffField0.getTag());
      assertEquals(2028, tiffField0.getSortHint());
      assertEquals(2890, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2924, (-1), fieldTypeByte0.FLOAT, (-1), (-2837L), (byte[]) null, byteOrder0, 657);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(657, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(2924, tiffField0.getTag());
      assertEquals((-2837), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, 1115);
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1115, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 1, fieldTypeShort0, (byte) (-63), (byte) (-1), (byte[]) null, byteOrder0, 257);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(257, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(10, (-16), fieldTypeAscii0, 10, (-16), byteArray0, byteOrder0, 2128970857);
      int int0 = tiffField0.getBytesLength();
      assertEquals(10, int0);
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals(2128970857, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getTag());
      assertEquals((-16), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)12, (-368), fieldTypeAscii0, (-368), 2090L, byteArray0, byteOrder0, (-2216));
      int int0 = tiffField0.getBytesLength();
      assertEquals(12, tiffField0.getTag());
      assertEquals((-2216), tiffField0.getSortHint());
      assertEquals(2090, tiffField0.getOffset());
      assertEquals((-368), int0);
      assertEquals((-368), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(930, "");
      TiffField tiffField0 = new TiffField((byte) (-41), (byte)11, fieldTypeByte0, (byte) (-25), (byte)11, byteArray0, (ByteOrder) null, (byte) (-2));
      tiffField0.getByteOrder();
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getSortHint());
      assertEquals((-41), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-127), (byte)1, fieldTypeRational0, 4310L, (-3557L), byteArray0, byteOrder0, (byte) (-127));
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals((-127), tiffField0.getTag());
      assertEquals((-3557), tiffField0.getOffset());
      assertEquals(34480, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50937, 50937, fieldTypeAscii0, 0L, (-3366L), byteArray0, byteOrder0, 993);
      tiffField0.getByteArrayValue();
      assertEquals((-3366), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50937, tiffField0.getDirectoryType());
      assertEquals(993, tiffField0.getSortHint());
      assertEquals(50937, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-309), (-309), fieldTypeRational0, (-309), (-309), (byte[]) null, byteOrder0, (-309));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeRational0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1180, 1180, fieldTypeRational0, 1180, 1180, (byte[]) null, byteOrder0, 1180);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeRational0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-4353), fieldTypeRational0.SBYTE, (-559L), (-4353), byteArray0, byteOrder0, (-5));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50932, 50932, fieldTypeAscii0, (-3919L), 50932, byteArray0, byteOrder0, 50932);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-1890L), byteArray0, byteOrder0, (-380));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeShort0, 34, 34, (byte[]) null, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 36, fieldTypeShort0, 36, 36, (byte[]) null, byteOrder0, 2129284634);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeRational0, 37, 37, (byte[]) null, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-620), (-620), fieldTypeShort0, (-620), (-620), byteArray0, byteOrder0, (-620));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1L, 1194, byteArray0, byteOrder0, 1194);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-1434), fieldTypeRational0, (-1434), (-1434), byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, (FieldType) null, 34, 34, byteArray0, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-427), (-427), fieldTypeAscii0.SHORT, (-427), (-427), byteArray0, byteOrder0, (-427));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(691, 65535, fieldTypeRational0, 1L, 691, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeAscii0, 14, 14, (byte[]) null, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-13), (-13), fieldTypeShort0, (-13), (-13), byteArray0, byteOrder0, (-13));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 1L, 12, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-635L), 0, byteArray0, byteOrder0, 1722);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(40093, 1725, fieldTypeRational0, 40093, (-1828L), byteArray0, byteOrder0, (-713));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2892, 2892, fieldTypeByte0, 2892, 2892, (byte[]) null, byteOrder0, 2892);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2658), (-2658), fieldTypeAscii0.SHORT, (-2658), (-2658), byteArray0, byteOrder0, (-2658));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 1L, 8, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 15, (byte[]) null, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeShort0, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeRational0, 1L, 265, byteArray0, byteOrder0, 213);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(95, 95, fieldTypeRational0, 95, 95, (byte[]) null, byteOrder0, 95);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeRational0, (-1409L), 1316L, byteArray0, byteOrder0, 1375);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lfaz:+NVYX)uLfI?");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "lfaz:+NVYX)uLfI?");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(82, 82, fieldTypeRational0, 1L, 82, byteArray0, byteOrder0, 82);
      File file0 = MockFile.createTempFile("2iIdQF'", "GPSDestLongitudeRef");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "H*kH_b");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-53), (-53), fieldTypeAscii0.SHORT, (-53), (-53), byteArray0, byteOrder0, (-53));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("K$[.sjg");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[short[]: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(95, 95, fieldTypeRational0, 95, 95, (byte[]) null, byteOrder0, 95);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, (-1L), 11, byteArray0, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(34, 1, fieldTypeRational0, 1, (-2752L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)55, fieldTypeLong0.DOUBLE, (byte)55, (-946L), byteArray0, byteOrder0, 2521);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48325, 33, fieldTypeLong0, (byte) (-108), 0L, byteArray0, byteOrder0, (byte)32);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(48325, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-108L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-16), 2090, fieldTypeAscii0, 1211L, (-1152L), byteArray0, byteOrder0, 2090);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-16), tiffField0.getTag());
      assertEquals(2090, tiffField0.getDirectoryType());
      assertEquals((-1152), tiffField0.getOffset());
      assertEquals(2090, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1531, (byte)86, fieldTypeLong0, (byte) (-50), (byte) (-76), byteArray0, byteOrder0, 3809);
      tiffField0.getByteOrder();
      assertEquals(1531, tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals((-50L), tiffField0.getCount());
      assertEquals(3809, tiffField0.getSortHint());
      assertEquals((-76), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-742), (-742), fieldTypeAscii0, (-742), (-742), byteArray0, byteOrder0, (-742));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "ZfjbF%h");
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 2459L, 2823L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(2823, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2459L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeAscii0.SHORT, 46, 46, byteArray0, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (-1L), 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1531, (byte)86, fieldTypeLong0, (byte) (-50), (byte) (-76), byteArray0, byteOrder0, 3809);
      int int0 = tiffField0.getOffset();
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals((-50L), tiffField0.getCount());
      assertEquals((-76), int0);
      assertEquals(1531, tiffField0.getTag());
      assertEquals(3809, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34853, 820, fieldTypeAscii0.SBYTE, (-2071), 34853, byteArray0, byteOrder0, 97);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(34853, tiffField0.getOffset());
      assertEquals(820, tiffField0.getDirectoryType());
      assertEquals(1, tagInfo0.length);
      assertEquals((-2071L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1235, fieldTypeShort0, 1235, 1235, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1235, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1235, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)12);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 73, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 50737);
      tiffField0.getCount();
      assertEquals(50737, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(73, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)109, (byte) (-123), fieldTypeByte0, 0L, (byte) (-123), byteArray0, byteOrder0, 289);
      int int0 = tiffField0.getBytesLength();
      assertEquals(289, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(109, tiffField0.getTag());
      assertEquals((-123), tiffField0.getDirectoryType());
      assertEquals((-123), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0, 1194, 1194, byteArray0, byteOrder0, 1194);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0, 1194, 1194, byteArray0, byteOrder0, 1194);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[199];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1194, 1194, byteArray0, byteOrder0, 1194);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0, 1194, 1194, byteArray0, byteOrder0, 1194);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@57eb4f12 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[148];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeDouble0, 48, 48, byteArray0, byteOrder0, 48);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(48, tiffField0.getTag());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getOffset());
      assertEquals(18, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0, 1194, 1194, byteArray0, byteOrder0, 1194);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7fe15187 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[159];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeLong0, 55, 55, byteArray0, byteOrder0, 55);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getTag());
      assertEquals(39, doubleArray0.length);
      assertEquals(55, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeRational0, 59, 59, byteArray0, byteOrder0, 59);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(472, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(102, 102, fieldTypeAscii0.FLOAT, 102, 102, byteArray0, byteOrder0, 102);
      tiffField0.getDoubleArrayValue();
      assertEquals(102, tiffField0.getOffset());
      assertEquals(408, tiffField0.getBytesLength());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(102, tiffField0.getDirectoryType());
      assertEquals(102, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 46, 46, byteArray0, byteOrder0, 46);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(44, intArray0.length);
      assertEquals(46, tiffField0.getOffset());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1194, 1194, byteArray0, byteOrder0, 1194);
      tiffField0.getIntArrayValue();
      assertEquals(9552, tiffField0.getBytesLength());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals(1194, tiffField0.getTag());
      assertEquals(1194, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1173, 1173, fieldTypeRational0, 1173, 1173, byteArray0, byteOrder0, 1173);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[347];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0, 1194, 1194, byteArray0, byteOrder0, 1194);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@564c4b54 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(102, 102, fieldTypeAscii0.FLOAT, 102, 102, byteArray0, byteOrder0, 102);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@5cc063ad
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2700), fieldTypeAscii0, 28, 28, byteArray0, byteOrder0, 28);
      String string0 = tiffField0.getStringValue();
      assertEquals(28, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2700), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1235, fieldTypeShort0, 1235, 1235, (byte[]) null, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(1235, tiffField0.getDirectoryType());
      assertEquals(1235, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getTag());
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2868), (-2868), fieldTypeRational0, (-2868), (-2868), byteArray0, byteOrder0, (-2868));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4391, 4178, fieldTypeFloat0, 213L, 4178, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4178, tiffField0.getOffset());
      assertEquals(4178, tiffField0.getDirectoryType());
      assertEquals(213L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55)", string0);
      assertEquals(4391, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[280];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50939, 50939, fieldTypeDouble0.SBYTE, 3710L, 50939, byteArray0, byteOrder0, 50939);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50939, tiffField0.getTag());
      assertEquals(50939, tiffField0.getSortHint());
      assertEquals(3710, tiffField0.getBytesLength());
      assertEquals(50939, tiffField0.getOffset());
      assertEquals(3710L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50939, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0, 1194, 1194, byteArray0, byteOrder0, 1194);
      String string0 = tiffField0.toString();
      assertEquals(1194, tiffField0.getOffset());
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getBytesLength());
      assertEquals("1194 (0x4aa: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (1194 SByte)", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[425];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeDouble0, 2783L, 14, byteArray0, byteOrder0, 14);
      String string0 = tiffField0.getValueDescription();
      assertEquals(22264, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(2783L, tiffField0.getCount());
      assertEquals(14, tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(14, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeLong0, 71, 71, byteArray0, byteOrder0, 71);
      String string0 = tiffField0.toString();
      assertEquals("71 (0x47: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (71 IFD)", string0);
      assertEquals(71, tiffField0.getOffset());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(71, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(97, 97, fieldTypeAscii0.SLONG, 97, 97, byteArray0, byteOrder0, 97);
      String string0 = tiffField0.toString();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getOffset());
      assertEquals("97 (0x61: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (97 SLong)", string0);
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(388, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37354, 37354, fieldTypeAscii0.SHORT, 37354, 37354, byteArray0, byteOrder0, 37354);
      String string0 = tiffField0.toString();
      assertEquals("37354 (0x91ea: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (37354 Short)", string0);
      assertEquals(74708, tiffField0.getBytesLength());
      assertEquals(37354, tiffField0.getSortHint());
      assertEquals(37354, tiffField0.getOffset());
      assertEquals(37354, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeAscii0, 56, 56, byteArray0, byteOrder0, 56);
      tiffField0.toString();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56L, tiffField0.getCount());
      assertEquals(56, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeAscii0, 28, 28, byteArray0, byteOrder0, 28);
      tiffField0.toString();
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28L, tiffField0.getCount());
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(97, 97, fieldTypeAscii0.FLOAT, 97, 97, byteArray0, byteOrder0, 97);
      String string0 = tiffField0.toString();
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(97, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals("97 (0x61: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (97 Float)", string0);
      assertEquals(388, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeAscii0, 56, 56, byteArray0, byteOrder0, 56);
      tiffField0.toString();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 1176, fieldTypeRational0, 1176, 853L, (byte[]) null, byteOrder0, 1176);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41, 1176);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(33, tiffField0.getTag());
      assertEquals(853, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(1176, tiffField0.getSortHint());
      assertEquals(9408, tiffField0.getBytesLength());
      assertEquals(1176, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeAscii0, (-2376), (-2376), byteArray0, byteOrder0, 35);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(35, 35);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-2376), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeShort0, 16, 16, byteArray0, byteOrder0, 16);
      tiffField0.getFieldTypeName();
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0, (byte[]) null, byteOrder0, 711);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(711, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 4, fieldTypeRational0, 3, 3, byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getSortHint();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(4, int0);
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1194, 1194, byteArray0, byteOrder0, 1194);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getOffset());
      assertEquals("1194 (0x4aa: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 4541L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(4541, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0.SHORT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1194, 1194, byteArray0, byteOrder0, 1194);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(1194L, tiffElement0.offset);
      assertEquals(1194, tiffField0.getTag());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getSortHint());
  }
}
