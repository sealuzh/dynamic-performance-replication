/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:32:36 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.time.ZoneOffset;
import java.time.chrono.ThaiBuddhistDate;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalField;
import java.time.temporal.UnsupportedTemporalTypeException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1262));
      Character character0 = Character.valueOf('@');
      // Undeclared exception!
      try { 
        classWriter0.visitField((-1262), "!#.Rl", (String) null, (String) null, character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(42);
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
      
      int int1 = classWriter0.addType("");
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777221);
      classWriter0.visitSource("pG.PK+i2E+)yH", "pG.PK+i2E+)yH");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      String[] stringArray0 = new String[0];
      classWriter0.visit(8, 4, "zWQ^#1y>J_5XP:", "(Q", "zWQ^#1y>J_5XP:", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.visitAnnotation("Deprecated", false);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "Deprecated", "Deprecated", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "wheel.asm.Type";
      stringArray0[1] = "wheel.asm.Type";
      stringArray0[2] = "wheel.asm.Type";
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 19);
      classWriter0.visitSource("wheel.asm.Type", "tw");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(13);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newMethod("InnerClasses", "B~QIPVm", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter((-643));
      classWriter0.newMethodItem("float", "float", "value ", true);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(589);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(589, 589, "", "", "", stringArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Character.MIN_RADIX;
      classWriter0.visitInnerClass("", (String) null, "", 928);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1182, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Item[] itemArray0 = new Item[5];
      ClassWriter classWriter0 = new ClassWriter(557);
      classWriter0.visitInnerClass("ljd", "ljd", "", 2590);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2487);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "3lA7$lbuz%}4+;n";
      classWriter0.visitAnnotation("3lA7$lbuz%}4+;n", true);
      // Undeclared exception!
      try { 
        classWriter0.newField(":+d", "3lA7$lbuz%}4+;n", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2467);
      classWriter0.newFieldItem("", "", "");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2467, 2467);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4735);
      classWriter0.toByteArray();
      classWriter0.newInteger(35);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(192);
      classWriter0.addUninitializedType("4~Ah[=?+zPX%,6}", (-128));
      classWriter0.newFloat(192);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.TrueFileFilter");
      ClassWriter classWriter0 = new ClassWriter(9);
      Character character0 = Character.valueOf('P');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newConstItem(character0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1865);
      int int0 = Character.MIN_SUPPLEMENTARY_CODE_POINT;
      classWriter0.newClassItem("");
      classWriter0.newConst("");
      classWriter0.visitField(65535, "!)8,_9~h<", "", "Xav2eoA1z?YoY^", "");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.newLong(10);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClassItem("");
      classWriter0.newLong(708L);
      Long long0 = new Long(2);
      classWriter0.newConst(long0);
      classWriter0.visitField(65535, "", "", "", "");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String string0 = null;
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(8, 37, "M6SsYiGj|DA-hJo&h", "39vr-=j", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(63);
      classWriter0.visitOuterClass("># J8IM*D,)HU>@64", "Q2mL.Z04Y^$g*^M", (String) null);
      classWriter0.newLong(63);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-229));
      String string0 = "81Fv/-,<HEQ+[fiiTD$";
      classWriter0.newNameType("", "81Fv/-,<HEQ+[fiiTD$");
      String string1 = "";
      Integer integer0 = new Integer((-229));
      Integer integer1 = new Integer(169);
      Integer.getInteger("81Fv/-,<HEQ+[fiiTD$", integer1);
      Integer.getInteger("$7D", 1);
      classWriter0.visitField(3, "", "Signature", "Signature", integer0);
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "81Fv/-,<HEQ+[fiiTD$", "81Fv/-,<HEQ+[fiiTD$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(63);
      classWriter0.visitOuterClass("># J8IM*D,)HU>@64", "Q2mL.Z04Y^$g*^M", (String) null);
      String[] stringArray0 = new String[7];
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "The prefix must not be null";
      stringArray0[4] = "Q2mL.Z04Y^$g*^M";
      stringArray0[5] = "BQ|lr/|~?+*FcV3TVsj";
      stringArray0[6] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(463, 63, "Q2mL.Z04Y^$g*^M", (String) null, "Q2mL.Z04Y^$g*^M", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      boolean boolean0 = ClassReader.SIGNATURES;
      classWriter0.threshold = 2;
      Item item0 = classWriter0.key2;
      item0.strVal2 = "";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newFieldItem("", "", "");
      classWriter0.getCommonSuperClass("java/lang/Class", "wheel.asm.Type");
      classWriter0.toByteArray();
      classWriter0.newNameType("", "");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3987);
      classWriter0.visitOuterClass("O'0tK_", (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.visitInnerClass((String) null, (String) null, "wheel.asm.ClassWriter", 1);
      classWriter0.getCommonSuperClass("java/lang/Class", "wheel.asm.Type");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zQc%+H_o{*Vp(()\"w?<");
      ClassWriter classWriter0 = new ClassWriter(2498);
      classWriter0.addType("4");
      classWriter0.visitSource("WC3f$ezhr]Vtm91e?r", "");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(24, (-1541));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      classWriter0.newDouble(0.0);
      Integer integer0 = new Integer(1);
      classWriter0.visitOuterClass("", "Deprecated", "");
      classWriter0.newFloat(1);
      String string0 = File.pathSeparator;
      classWriter0.newFloat(1);
      classWriter0.newInteger(0);
      classWriter0.addType("Synthetic");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      String string0 = "}D&T_abl=_$>#>D9";
      String string1 = null;
      String string2 = "";
      classWriter0.visitSource((String) null, "");
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClassItem("+?b`Y[Uk^");
      classWriter0.newLong(0L);
      classWriter0.newLong(2);
      classWriter0.newLong(0L);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item item0 = new Item(0);
      item0.set(1);
      Item item1 = new Item(2, item0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("java/lang/Class", "wheel.asm.Type");
      classWriter0.toByteArray();
      classWriter0.newDouble(0);
      Attribute attribute0 = new Attribute("java/lang/Object");
      Attribute attribute1 = attribute0.next;
      classWriter0.newDouble(0);
      classWriter0.newNameType("Class not found", "");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      String string0 = "|fl .";
      String string1 = "}D&T_abl=_$>#>D9";
      String string2 = "EnclosingMethod";
      ClassWriter classWriter1 = new ClassWriter(2);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      Double double0 = new Double(24117248);
      Double.isFinite(1.0);
      classWriter0.newConst(double0);
      classWriter0.newFloat(1);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("}D&T_abl=_$>#>D9", "RuntimeInvisibleAnnotations");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '}D&T_abl=_$>#>D9.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(268435467);
      Boolean boolean0 = Boolean.valueOf(false);
      classWriter0.newConst(boolean0);
      Boolean.getBoolean((String) null);
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.cr = null;
      String string0 = "value ";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      classWriter0.visit((-343), 3240, "value ", "3^z:?C ) Du>Gd+Ve3", "value ", (String[]) null);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 3240, "/!<\"6Jo", "/!<\"6Jo", "", (String[]) null, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Byte.BYTES;
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod(12, "org.apache.commons.iofilefilter.CanReadFileFilter", "+9}*m/eD", "org.apache.commons.iofilefilter.CanReadFileFilter", stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      classWriter0.toByteArray();
      Item item0 = new Item(25);
      Item item1 = new Item(2);
      Item item2 = classWriter0.key3;
      int int0 = 18;
      short short0 = (short) (-171);
      Short short1 = new Short((short) (-171));
      Item item3 = classWriter0.newConstItem(short1);
      Item item4 = new Item(18, item3);
      String string0 = "java/lang/Class";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("java/lang/Class", "4@=5n1bKr)6k<.Yn4c");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '4@=5n1bKr)6k</Yn4c.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      classWriter0.toByteArray();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      Boolean.valueOf(false);
      Item item0 = classWriter0.key;
      Integer integer0 = new Integer(24117248);
      classWriter0.newClassItem("");
      classWriter0.newMethod("", "", "", false);
      ClassWriter classWriter1 = new ClassWriter((int) integer0);
      classWriter0.newMethodItem("", "", "", false);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("4", "pUEq <wGyLdx.o$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '4.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "Deprecated";
      Attribute attribute0 = new Attribute("Deprecated");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.threshold = 2;
      classWriter0.toByteArray();
      classWriter0.visit(251, 384, "c*0o#g^", "c*0o#g^", "float", (String[]) null);
      Item item0 = new Item(30);
      Item item1 = new Item(2, item0);
      boolean boolean0 = ClassReader.FRAMES;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character.getName(25);
      classWriter0.toByteArray();
      ClassWriter classWriter1 = new ClassWriter(2);
      // Undeclared exception!
      try { 
        classWriter1.getCommonSuperClass(")^z~ m\"_EE_eS&Z", "float");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class ')^z~ m\"_EE_eS&Z.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.toByteArray();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "y7u";
      classWriter1.visit(1, 1, "", "", "", stringArray0);
      classWriter1.visit(23, 20, "y7u", "y7u", "", stringArray0);
      FieldWriter fieldWriter0 = classWriter1.firstField;
      int int0 = Character.MIN_SUPPLEMENTARY_CODE_POINT;
      classWriter1.toByteArray();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      chronoField0.isTimeBased();
      // Undeclared exception!
      try { 
        thaiBuddhistDate0.with((TemporalField) chronoField0, (long) 1);
        fail("Expecting exception: UnsupportedTemporalTypeException");
      
      } catch(UnsupportedTemporalTypeException e) {
         //
         // Unsupported field: ClockHourOfDay
         //
         verifyException("java.time.LocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      classWriter0.threshold = 25;
      classWriter0.toByteArray();
      Item item0 = new Item(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      String string0 = null;
      classWriter0.visitSource(" d6skw<Kv&RC", (String) null);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("java/lang/Class", " d6skw<Kv&RC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class ' d6skw<Kv&RC.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item item0 = classWriter0.key2;
      Item item1 = classWriter0.key3;
      Item item2 = new Item(2, item0);
      boolean boolean0 = ClassReader.FRAMES;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visitAnnotation("java/lang/Class", true);
      item2.set(172);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 41;
      ClassWriter classWriter0 = new ClassWriter(41);
      classWriter0.threshold = 1;
      classWriter0.toByteArray();
      Item item0 = new Item();
      Item item1 = new Item(1, item0);
      int int1 = 3;
      item0.set(2);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 3);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(268435467);
      Boolean boolean0 = Boolean.TRUE;
      Boolean.logicalAnd(false, false);
      classWriter0.newConst(boolean0);
      Boolean.getBoolean((String) null);
      classWriter0.cr = null;
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      classWriter0.threshold = 2;
      classWriter0.toByteArray();
      Item item0 = new Item(41);
      item0.strVal2 = null;
      item0.set(2);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 3);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 26);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(262, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      Float float0 = new Float((-1306.09115611));
      classWriter0.visitField(33, "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", float0);
      Item item0 = new Item();
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.threshold = 2;
      Item item0 = classWriter0.key2;
      item0.strVal2 = "";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-1563);
      Byte byte0 = new Byte((byte)12);
      classWriter0.visitField((-1563), "java/lang/Class", "java/lang/Class", "", byte0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wheel.asm.Type");
      classWriter0.visitAnnotation("qGJGR OB>+83E-NlA", true);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("java/lang/Class", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item[] itemArray0 = new Item[5];
      Item item0 = classWriter0.key;
      itemArray0[1] = item0;
      classWriter0.newLong(3126);
      Type type0 = Type.BOOLEAN_TYPE;
      classWriter0.newConst(type0);
      // Undeclared exception!
      try { 
        type0.getElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      classWriter0.newInteger(1686);
      classWriter0.newInteger(1686);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classWriter0.visitOuterClass("bP\\6*4{xlAq,", "M_U1//[P<)SB[DX7Gb", "bP\\6*4{xlAq,");
      classWriter0.threshold = (-17);
      classWriter0.toByteArray();
      Item item0 = new Item((-17));
      Item item1 = new Item(1, item0);
      Item item2 = classWriter0.key3;
      ClassWriter classWriter1 = new ClassWriter(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        classWriter1.getCommonSuperClass("bP\\6*4{xlAq,", "M_U1//[P<)SB[DX7Gb");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'bP\\6*4{xlAq,.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = 2498;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zQc%+H_o{*Vp(()\"w?<");
      ClassWriter classWriter0 = new ClassWriter(2498);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.CanReadFileFilter", 1);
      classWriter0.addType("org.apache.commons.io.filefilter.CanReadFileFilter");
      classWriter0.newConstItem("org.apache.commons.io.filefilter.CanReadFileFilter");
      classWriter0.newClass("org.apache.commons.io.filefilter.CanReadFileFilter");
      classWriter0.newLong(2);
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.CanReadFileFilter", 1);
      String string0 = "value ";
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item item0 = classWriter0.key2;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("java/lang/Class", "java/lang/Class");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter(2467);
      classWriter0.visitAnnotation("", false);
      String string1 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      classWriter0.toByteArray();
      String string2 = "SourceFile";
      String string3 = "?3";
      String string4 = "";
      int int0 = 4;
      classWriter0.newClass(")7XCJBFP");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "SourceFile");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-29));
      int int0 = 4727;
      ClassWriter classWriter1 = new ClassWriter(4727);
      Float float0 = new Float((double) 1);
      Type type0 = Type.getObjectType("6j -.//.y[\"93q$>A?6");
      classWriter0.visitField((-29), "6j -.//.y[\"93q$>A?6", "SourceFile", "SourceFile", type0);
      Item item0 = new Item(2);
      String string0 = "iCvfuv{K@";
      String string1 = null;
      // Undeclared exception!
      try { 
        classWriter1.getCommonSuperClass((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = ClassWriter.TYPE;
      Item[] itemArray0 = new Item[1];
      Item item0 = new Item();
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.visitInnerClass((String) null, (String) null, "wheel.asm.ClassWriter", 1);
      ClassWriter classWriter1 = new ClassWriter(1);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter2 = new ClassWriter(classReader0, 171);
      classWriter1.addType("java/lang/Class");
      classWriter0.addUninitializedType("i6cJJ", 2);
      classWriter1.visitSource((String) null, "+%_GA'Jyk~!l");
      classWriter1.newInteger(2);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = "org.apache.commons.io.filefilter.CanReadFileFilter";
      boolean boolean0 = new Boolean("org.apache.commons.io.filefilter.CanReadFileFilter");
      boolean boolean1 = ClassReader.ANNOTATIONS;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.CanReadFileFilter", "wheel.asm.Type");
      ClassWriter classWriter1 = new ClassWriter((-1));
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(1, (-1553));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-160));
      classWriter0.addUninitializedType("", 22);
      classWriter0.newField("", "", "");
      classWriter0.newFieldItem("", "", "");
      classWriter0.newInteger((-2996));
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item item0 = new Item(0);
      Item item1 = new Item(2, item0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("java/lang/Class", "wheel.asm.Type");
      classWriter0.toByteArray();
      classWriter0.getCommonSuperClass("java/lang/Class", "java/lang/Object");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.threshold = 2;
      classWriter0.toByteArray();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "c*0o#g^";
      stringArray0[2] = "c*0o#g^";
      classWriter0.visit((-889275714), (-1412), "c*0o#g^", (String) null, "The wildcard list must not be null", (String[]) null);
      Item item0 = new Item(1);
      int int0 = 7;
      Item item1 = new Item(7, item0);
      boolean boolean0 = ClassReader.FRAMES;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "~uDJ_6UZzsRR";
      Character.getName(2);
      Character.getName(2);
      classWriter0.toByteArray();
      ClassWriter classWriter1 = new ClassWriter(33);
      // Undeclared exception!
      try { 
        classWriter1.getCommonSuperClass("The wildcard list must not be null", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'The wildcard list must not be null.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.threshold = 2;
      classWriter0.toByteArray();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "c*0o#g^";
      stringArray0[1] = "c*0o#g^";
      stringArray0[2] = "c*0o#g^";
      stringArray0[3] = "c*0o#g^";
      stringArray0[4] = "c*0o#g^";
      stringArray0[5] = "I+lmsl+EJ>.R,";
      classWriter0.visit(0, (-1412), "I+lmsl+EJ>.R,", "c*0o#g^", "I+lmsl+EJ>.R,", stringArray0);
      Item item0 = new Item(0);
      Item item1 = new Item(2, item0);
      boolean boolean0 = ClassReader.FRAMES;
      FileSystemHandling.shouldAllThrowIOExceptions();
      item0.strVal1 = "~uDJ_6UZzsRR";
      Character.getName(0);
      classWriter0.toByteArray();
      ClassWriter classWriter1 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("c*0o#g^", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'c*0o#g^.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
