/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:37:58 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "value ");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3990), "value ", "value ", "`rIIDp`1", "`rIIDp`1");
      Attribute attribute0 = new Attribute("`rIIDp`1");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "value ", "value ", "`rIIDp`1", "`rIIDp`1");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      Item item0 = classWriter0.key;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3990), "value ", "value ", "value ", "value ");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "}[{6U0WL", "}[{6U0WL", "}[{6U0WL", "}[{6U0WL");
      Attribute attribute0 = new Attribute("nY/4;%uW gGAU$R:B");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAnnotation("8GGjVjFe*", true);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      Item item0 = classWriter0.key;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "value ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3990), "value ", "value ", "value ", "value ");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      int int0 = fieldWriter1.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      classWriter0.newDouble((-16));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-16), "value ", "value ", "`rIIDp`1", "`rIIDp`1");
      fieldWriter0.visitAnnotation("ndRol=<7=5J!", true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(48);
      fieldWriter0.put(byteVector1);
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 28, "YEmZlCd)8, Q", "YEmZlCd)8, Q", "enZqH-i*qXl l", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = new ByteVector(28);
      byteVector0.put12(28, 2);
      byteVector0.putByte((-1657));
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "", "", "`rIIDp`1", "`rIIDp`1");
      fieldWriter0.visitAnnotation("ndRol=<7=5J!", false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter1 = fieldWriter0.next;
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.visitEnd();
      fieldWriter2.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter2.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "value ");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "", "value ", (Object) null);
      Attribute attribute0 = new Attribute("value ");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("Synthetic", false);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("cI@`G_~@}'k:");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      Item item0 = classWriter0.key;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YPW,3)2b|iK,w!K*fG");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "ConstantValue", "BFf`RF", (String) null, "ConstantValue");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(576, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "}[{6U0WL", "}[{6U0WL", "}[{6U0WL", "}[{6U0WL");
      Attribute attribute0 = new Attribute("nY/4;%uW gGAU$R:B");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAnnotation("8GGjVjFe*", true);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putInt(3014);
      ByteVector byteVector2 = byteVector1.putShort(3014);
      ByteVector byteVector3 = byteVector2.put12(3014, (-3122));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-898), "", "", "", "");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "c0%2 ";
      stringArray0[6] = "";
      classWriter0.visit((-3990), 0, "", "", "", stringArray0);
      ByteVector byteVector0 = new ByteVector(3);
      ByteVector byteVector1 = byteVector0.put11(285212682, 4);
      ByteVector byteVector2 = byteVector1.putUTF8("");
      ByteVector byteVector3 = byteVector2.put12(2, 4);
      ByteVector byteVector4 = byteVector3.putByte((-898));
      ByteVector byteVector5 = byteVector4.putShort(22);
      ByteVector byteVector6 = byteVector5.putLong(1);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      byteVector0.putUTF8("mQz#fSo");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.getSize();
      ByteVector byteVector7 = new ByteVector();
      fieldWriter0.put(byteVector5);
      byteVector5.put12(1, 1);
      byteVector6.putByte(3);
      fieldWriter1.put(byteVector5);
      fieldWriter1.getSize();
      fieldWriter1.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter1.visitAnnotation("mQz#fSo", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3990));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-898), "", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1), "wheel.asm.ClassReader", "wheel.asm.ClassReader", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      classWriter0.newFloat(0.0F);
      ByteVector byteVector1 = byteVector0.putLong(2);
      byteVector0.putShort(1);
      fieldWriter0.getSize();
      byteVector1.putByte(1);
      ByteVector byteVector2 = new ByteVector();
      fieldWriter1.put(byteVector1);
      fieldWriter1.getSize();
      fieldWriter0.visitEnd();
      assertFalse(fieldWriter0.equals((Object)fieldWriter1));
  }
}
