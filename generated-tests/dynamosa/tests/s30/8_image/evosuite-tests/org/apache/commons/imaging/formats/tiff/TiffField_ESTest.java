/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 19:37:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-10), (byte) (-10), fieldTypeShort0, (byte)79, (-2L), byteArray0, byteOrder0, (byte)26);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(26, int0);
      assertEquals((-10), tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals((-10), tiffField0.getDirectoryType());
      assertEquals(158, tiffField0.getBytesLength());
      assertEquals((-2), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1931, (-1302), fieldTypeAscii0.LONG, 1L, (-5232L), byteArray0, byteOrder0, 1931);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1931, tiffField0.getSortHint());
      assertEquals(1931, tiffField0.getTag());
      assertEquals((-5232), tiffField0.getOffset());
      assertEquals((-1302), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(40095, 55, fieldTypeShort0, 40095, 40095, byteArray0, byteOrder0, (-248));
      String string0 = tiffField0.getValueDescription();
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(40095, tiffField0.getTag());
      assertEquals(40095, tiffField0.getOffset());
      assertEquals((-248), tiffField0.getSortHint());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeShort0, 13, 13, byteArray0, byteOrder0, 115);
      tiffField0.dump();
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(26, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 22L, byteArray0, byteOrder0, (byte)29);
      String string0 = tiffField0.getValueDescription();
      assertEquals(22, tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-79), (byte)95, fieldTypeByte0, (byte)75, (-1721L), byteArray0, byteOrder0, (byte) (-79));
      tiffField0.getValue();
      assertEquals(75, tiffField0.getBytesLength());
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getTag());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals((-1721), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeByte0, 0L, 449L, byteArray0, byteOrder0, 37399);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(449, tiffField0.getOffset());
      assertEquals(400, tagInfo0.tag);
      assertEquals(37399, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(385, 385, fieldTypeShort0, 385, (-1116L), byteArray0, byteOrder0, (byte) (-55));
      int int0 = tiffField0.getTag();
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals(385, tiffField0.getDirectoryType());
      assertEquals((-1116), tiffField0.getOffset());
      assertEquals(385, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-103), 184, fieldTypeLong0, (byte) (-110), 7584L, byteArray0, byteOrder0, (-2146232928));
      int int0 = tiffField0.getTag();
      assertEquals(184, tiffField0.getDirectoryType());
      assertEquals(7584, tiffField0.getOffset());
      assertEquals((-103), int0);
      assertEquals((-2146232928), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte) (-32);
      byteArray0[5] = (byte)92;
      TiffField tiffField0 = new TiffField(167, 45, fieldTypeAscii0, 45, 106L, byteArray0, byteOrder0, (-3059));
      String string0 = tiffField0.getStringValue();
      assertEquals(45, tiffField0.getBytesLength());
      assertEquals((-3059), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(167, tiffField0.getTag());
      assertEquals(106, tiffField0.getOffset());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(115, 1, fieldTypeShort0, 4L, (byte)0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2054114792), (-2054114792), (FieldType) null, 50732, (-2054114792), byteArray0, byteOrder0, (-2054114792));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2054114792), int0);
      assertEquals((-2054114792), tiffField0.getDirectoryType());
      assertEquals((-2054114792), tiffField0.getOffset());
      assertEquals((-2054114792), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-3898), fieldTypeShort0.DOUBLE, (byte)79, 2667L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(2667, int0);
      assertEquals((-3898), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-63), 50732, fieldTypeShort0, 1498L, (-421), byteArray0, byteOrder0, (byte) (-63));
      int int0 = tiffField0.getOffset();
      assertEquals((-63), tiffField0.getTag());
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals((-421), int0);
      assertEquals(50732, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)8;
      byteArray0[4] = (byte) (-80);
      TiffField tiffField0 = new TiffField(74, 2147407746, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).BYTE).RATIONAL, 50, 3219L, byteArray0, byteOrder0, (-295));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-295), tiffField0.getSortHint());
      assertEquals(3219, tiffField0.getOffset());
      assertEquals(2147407746, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getTag());
      assertEquals(11, int0);
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-110);
      TiffField tiffField0 = new TiffField((byte) (-110), 2147317601, fieldTypeLong0, 6, (byte) (-103), byteArray0, byteOrder0, (-5284));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-103), tiffField0.getOffset());
      assertEquals(2147317601, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals((-110), tiffField0.getTag());
      assertEquals((-5284), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, 74, fieldTypeRational0.UNDEFINED, 1L, 50982, byteArray0, byteOrder0, (byte)8);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(50982, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)19;
      TiffField tiffField0 = new TiffField(2277, 1, fieldTypeLong0, 1, (-696L), byteArray0, byteOrder0, 3146);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2277, tiffField0.getTag());
      assertEquals((-696), tiffField0.getOffset());
      assertEquals(3146, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-31);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte)48);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(15, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, (byte)68, fieldTypeLong0, 1174L, (-2352L), byteArray0, byteOrder0, (byte) (-87));
      tiffField0.getFieldTypeName();
      assertEquals((-2352), tiffField0.getOffset());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2907, "");
      TiffField tiffField0 = new TiffField((byte) (-10), (byte) (-103), fieldTypeByte0, 23, 631L, byteArray0, byteOrder0, (byte) (-10));
      tiffField0.getFieldTypeName();
      assertEquals((-10), tiffField0.getTag());
      assertEquals((-10), tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getDirectoryType());
      assertEquals(631, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 257);
      tiffField0.getFieldType();
      assertEquals(257, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-526), fieldTypeLong0, 1896L, 0, byteArray0, byteOrder0, (-1003));
      tiffField0.getFieldType();
      assertEquals((-526), tiffField0.getDirectoryType());
      assertEquals((-1003), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1717986917), "v%=N{t.G+1Srf<-pP`1");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-2875), fieldTypeDouble0, 1115, (-1717986917), byteArray0, byteOrder0, (-99));
      tiffField0.getFieldType();
      assertEquals((-2875), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-99), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1931, (-1302), fieldTypeAscii0.SLONG, 1L, (-5232L), byteArray0, byteOrder0, 1931);
      tiffField0.getDoubleValue();
      assertEquals((-5232), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1931, tiffField0.getTag());
      assertEquals(1931, tiffField0.getSortHint());
      assertEquals((-1302), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-110), "");
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-10);
      TiffField tiffField0 = new TiffField((byte)0, (-1908874352), fieldTypeShort0.FLOAT, 1L, (byte)0, byteArray0, byteOrder0, (byte) (-103));
      tiffField0.getDoubleValue();
      assertEquals((-103), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-36);
      TiffField tiffField0 = new TiffField(2147103495, 50732, fieldTypeShort0.IFD, 1L, (-40L), byteArray0, byteOrder0, (-4127));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2147103495, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50732, tiffField0.getDirectoryType());
      assertEquals((-40), tiffField0.getOffset());
      assertEquals((-4127), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeShort0.RATIONAL, 42, 42, byteArray0, (ByteOrder) null, 42);
      tiffField0.getDoubleArrayValue();
      assertEquals(336, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42L, tiffField0.getCount());
      assertEquals(42, tiffField0.getOffset());
      assertEquals(42, tiffField0.getTag());
      assertEquals(42, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 2514);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2514, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2084, (-1547), fieldTypeShort0, 665L, 1315L, byteArray0, byteOrder0, 264);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1547), int0);
      assertEquals(264, tiffField0.getSortHint());
      assertEquals(1315, tiffField0.getOffset());
      assertEquals(2084, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 22L, byteArray0, byteOrder0, (-2054114792));
      tiffField0.getCount();
      assertEquals(22, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2054114792), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1253), fieldTypeByte0.SRATIONAL, (-2147483648L), 2543L, byteArray0, byteOrder0, (-1253));
      long long0 = tiffField0.getCount();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2147483648L), long0);
      assertEquals((-1253), tiffField0.getSortHint());
      assertEquals((-1253), tiffField0.getDirectoryType());
      assertEquals(2543, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50732, 2, fieldTypeAscii0.SHORT, 0L, (-905L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-905), tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(50732, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-51), (-51), fieldTypeLong0, (-51), (-1985L), byteArray0, byteOrder0, (-2260));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-51), tiffField0.getDirectoryType());
      assertEquals((-204), int0);
      assertEquals((-2260), tiffField0.getSortHint());
      assertEquals((-51), tiffField0.getTag());
      assertEquals((-1985), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-520), "UyaGIqmiNEj`hp`-N>");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-520), (-3604), fieldTypeByte0, (-632L), (-2007L), byteArray0, byteOrder0, (byte)100);
      tiffField0.getByteOrder();
      assertEquals((-520), tiffField0.getTag());
      assertEquals((-2007), tiffField0.getOffset());
      assertEquals(100, tiffField0.getSortHint());
      assertEquals((-3604), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2965), 2084, fieldTypeShort0, 738L, (byte)86, byteArray0, byteOrder0, (byte)86);
      tiffField0.getByteArrayValue();
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-2965), tiffField0.getTag());
      assertEquals(86, tiffField0.getOffset());
      assertEquals(1476, tiffField0.getBytesLength());
      assertEquals(2084, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 2514);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(2514, tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1839, 1839, fieldTypeByte0, 1839, 1839, (byte[]) null, byteOrder0, 1839);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3201), (-3201), fieldTypeByte0, (-3201), (-3201), byteArray0, byteOrder0, (-3201));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2006, 2006, fieldTypeShort0, 2006, 2006, (byte[]) null, byteOrder0, 2006);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1197), (-1197), fieldTypeShort0.RATIONAL, (-1197), (-1197), byteArray0, (ByteOrder) null, (-1197));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(40095, 55, fieldTypeShort0, 40095, 40095, byteArray0, byteOrder0, (-248));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1807), (-1807), fieldTypeShort0, (-1807), (-1807), byteArray0, byteOrder0, (-1807));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 4L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(49, 49, (FieldType) null, 49, 49, (byte[]) null, byteOrder0, 49);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-485), (-485), fieldTypeShort0, (-485), (-485), byteArray0, byteOrder0, (-485));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-60), 46, fieldTypeShort0, 128L, 46, (byte[]) null, (ByteOrder) null, (-60));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(858, 858, (FieldType) null, 858, 858, byteArray0, (ByteOrder) null, 858);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-511), (-511), fieldTypeRational0, (-511), (-511), byteArray0, byteOrder0, (-511));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, 766);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 15, (byte[]) null, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-529), (-529), fieldTypeRational0, (-529), (-529), byteArray0, byteOrder0, (-529));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(843, 1, fieldTypeShort0, 1, 843, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, (-511), fieldTypeRational0, 1, (-511), byteArray0, byteOrder0, (-511));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2241), (-2241), fieldTypeByte0, (-2241), (-2241), (byte[]) null, byteOrder0, (-2241));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1000), (-1000), fieldTypeLong0, (-1000), (-1000), byteArray0, byteOrder0, (-1000));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147467263, 2147089966, (FieldType) null, 2147467263, 2147467263, byteArray0, byteOrder0, 2147467263);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40092, 42, fieldTypeShort0, 42, 42, byteArray0, (ByteOrder) null, 1);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(884, 884, fieldTypeShort0, 884, 884, (byte[]) null, (ByteOrder) null, 884);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-490), (-490), fieldTypeRational0, (-490), (-490), byteArray0, byteOrder0, (-490));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(18157, 1, fieldTypeShort0, 1, 18157, byteArray0, (ByteOrder) null, 18157);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50741, 50741, (FieldType) null, 50741, 50741, byteArray0, byteOrder0, 50741);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-511), (-511), fieldTypeRational0, (-511), (-511), byteArray0, byteOrder0, (-511));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-490), (-490), fieldTypeRational0, (-490), (-490), byteArray0, byteOrder0, (-490));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-54), 1048, fieldTypeFloat0.UNDEFINED, (byte) (-54), 1048, byteArray0, byteOrder0, (-1165));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]Vj8@9ZX&qx");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-466), (-466), fieldTypeRational0, (-2L), (-2L), byteArray0, byteOrder0, (-466));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("g}Z'ILPY@e");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (byte)87, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-485), (-485), fieldTypeShort0, (-485), (-485), byteArray0, byteOrder0, (-485));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)31, 0, fieldTypeRational0, 7584L, 0L, byteArray0, byteOrder0, (byte)31);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("... (");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(7584L, tiffField0.getCount());
      assertEquals(60672, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(31, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 2514);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2514, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1035, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37388, 0, fieldTypeShort0, 2729L, 0L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(37388, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3462), (-2146402902), fieldTypeLong0.BYTE, 974L, 2201L, byteArray0, (ByteOrder) null, 23);
      tiffField0.getByteOrder();
      assertEquals(2201, tiffField0.getOffset());
      assertEquals((-3462), tiffField0.getTag());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals((-2146402902), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2653, 2653, fieldTypeRational0, 2653, 2653, (byte[]) null, byteOrder0, (-4655));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "~HP");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 65105, fieldTypeByte0, 0, 36626L, byteArray0, byteOrder0, 214);
      tiffField0.getFieldType();
      assertEquals(65105, tiffField0.getDirectoryType());
      assertEquals(214, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(36626, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(530, 530, (FieldType) null, 530, 530, byteArray0, byteOrder0, (byte)29);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(530, int0);
      assertEquals(530, tiffField0.getTag());
      assertEquals(530, tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeShort0.RATIONAL, 53, 53, byteArray0, (ByteOrder) null, 53);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(74, 74, (FieldType) null, 74, 74, byteArray0, byteOrder0, 74);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeShort0, 28, 28, byteArray0, (ByteOrder) null, (-1));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)10, 0L, byteArray0, byteOrder0, (-2105));
      int int0 = tiffField0.getTag();
      assertEquals((-2105), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2054114792), (-2054114792), (FieldType) null, 50732, (-2054114792), byteArray0, byteOrder0, (-2054114792));
      long long0 = tiffField0.getCount();
      assertEquals((-2054114792), tiffField0.getOffset());
      assertEquals(50732L, long0);
      assertEquals((-2054114792), tiffField0.getSortHint());
      assertEquals((-2054114792), tiffField0.getDirectoryType());
      assertEquals((-2054114792), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3026), (byte) (-10), fieldTypeAscii0.SHORT, 1683L, (-1381L), byteArray0, byteOrder0, 1346);
      int int0 = tiffField0.getBytesLength();
      assertEquals(3366, int0);
      assertEquals((-3026), tiffField0.getTag());
      assertEquals(1346, tiffField0.getSortHint());
      assertEquals((-10), tiffField0.getDirectoryType());
      assertEquals((-1381), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18239, 18239, fieldTypeAscii0, 18239, 18239, byteArray0, byteOrder0, 18239);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(18239, tiffField0.getDirectoryType());
      assertEquals(18239, tiffField0.getSortHint());
      assertEquals("18239 (0x473f: Unknown Tag): ", string0);
      assertEquals(18239, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50741, 50741, fieldTypeLong0, 50741, 50741, byteArray0, byteOrder0, 50741);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeShort0, 45, 45, byteArray0, byteOrder0, 45);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50745, 50745, fieldTypeLong0, 50745, 50745, byteArray0, byteOrder0, 50745);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50745, tiffField0.getTag());
      assertEquals(50745, tiffField0.getDirectoryType());
      assertEquals(202980, tiffField0.getBytesLength());
      assertEquals(50745L, tiffField0.getCount());
      assertEquals(50745, tiffField0.getOffset());
      assertEquals(50745, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeShort0.RATIONAL, 42, 42, byteArray0, (ByteOrder) null, 42);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18249, 18249, fieldTypeAscii0, 18249, 18249, byteArray0, byteOrder0, 18249);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6d1b40d1 for: 18249 (0x4749: RatingPercent): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 1L, 14, byteArray0, byteOrder0, 14);
      tiffField0.getIntValueOrArraySum();
      assertEquals(14, tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18240, 18240, fieldTypeAscii0, 18240, 18240, byteArray0, byteOrder0, 18240);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7b25236d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[123];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeShort0.FLOAT, 27, 27, byteArray0, byteOrder0, 27);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27L, tiffField0.getCount());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, doubleArray0.length);
      assertEquals(27, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50741, 50741, fieldTypeLong0, 50741, 50741, byteArray0, byteOrder0, 50741);
      tiffField0.getDoubleArrayValue();
      assertEquals(50741L, tiffField0.getCount());
      assertEquals(50741, tiffField0.getDirectoryType());
      assertEquals(202964, tiffField0.getBytesLength());
      assertEquals(50741, tiffField0.getSortHint());
      assertEquals(50741, tiffField0.getTag());
      assertEquals(50741, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeShort0, 45, 45, byteArray0, byteOrder0, 45);
      tiffField0.getDoubleArrayValue();
      assertEquals(45L, tiffField0.getCount());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getTag());
      assertEquals(90, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeShort0.RATIONAL, 25, 25, byteArray0, (ByteOrder) null, 25);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[99];
      TiffField tiffField0 = new TiffField(18261, 18261, fieldTypeShort0.DOUBLE, 18261, 18261, byteArray0, (ByteOrder) null, 18261);
      tiffField0.getDoubleArrayValue();
      assertEquals(146088, tiffField0.getBytesLength());
      assertEquals(18261L, tiffField0.getCount());
      assertEquals(18261, tiffField0.getDirectoryType());
      assertEquals(18261, tiffField0.getSortHint());
      assertEquals(18261, tiffField0.getTag());
      assertEquals(18261, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50741, 50741, fieldTypeLong0, 50741, 50741, byteArray0, byteOrder0, 50741);
      tiffField0.getIntArrayValue();
      assertEquals(50741, tiffField0.getOffset());
      assertEquals(202964, tiffField0.getBytesLength());
      assertEquals(50741, tiffField0.getSortHint());
      assertEquals(50741, tiffField0.getTag());
      assertEquals(50741, tiffField0.getDirectoryType());
      assertEquals(50741L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeShort0, 45, 45, byteArray0, byteOrder0, 45);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(45, tiffField0.getTag());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getOffset());
      assertEquals(45L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeRational0, 42, 42, byteArray0, (ByteOrder) null, 42);
      tiffField0.getIntArrayValue();
      assertEquals(42L, tiffField0.getCount());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getTag());
      assertEquals(336, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18249, 18249, fieldTypeAscii0, 18249, 18249, byteArray0, byteOrder0, 18249);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@3f09653f for: 18249 (0x4749: RatingPercent): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeShort0, 45, 45, byteArray0, byteOrder0, 45);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@420ba82d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1038), (-1038), fieldTypeAscii0, 45, 45, byteArray0, byteOrder0, (-1038));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1038), tiffField0.getTag());
      assertEquals((-1038), tiffField0.getSortHint());
      assertEquals((-1038), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(45, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeShort0, 45, 45, byteArray0, byteOrder0, 45);
      String string0 = tiffField0.getTagName();
      assertEquals(45, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x2d)", string0);
      assertEquals(45, tiffField0.getOffset());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50741, 50741, fieldTypeLong0, 50741, 50741, byteArray0, byteOrder0, 50741);
      String string0 = tiffField0.getTagName();
      assertEquals(50741, tiffField0.getDirectoryType());
      assertEquals("MakerNoteSafety", string0);
      assertEquals(50741, tiffField0.getSortHint());
      assertEquals(50741, tiffField0.getOffset());
      assertEquals(50741, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeShort0.RATIONAL, 42, 42, byteArray0, (ByteOrder) null, 42);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "5A.OO&2#G|oQo{mxh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18313, 2264, fieldTypeShort0.FLOAT, 18313, 2264, byteArray0, byteOrder0, 18313);
      String string0 = tiffField0.getValueDescription();
      assertEquals(18313, tiffField0.getTag());
      assertEquals(18313, tiffField0.getSortHint());
      assertEquals(2264, tiffField0.getOffset());
      assertEquals(73252, tiffField0.getBytesLength());
      assertEquals(2264, tiffField0.getDirectoryType());
      assertEquals(18313L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[76];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18249, 2961, fieldTypeByte0, 2961, 2961, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(2961, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2961, tiffField0.getOffset());
      assertEquals("18249 (0x4749: RatingPercent): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (76) (2961 Undefined)", string0);
      assertEquals(2961, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[138];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeShort0.FLOAT, 17, 17, byteArray0, byteOrder0, 17);
      String string0 = tiffField0.toString();
      assertEquals(17, tiffField0.getOffset());
      assertEquals("17 (0x11: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (17 Float)", string0);
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-45), 50766, fieldTypeDouble0, 50766, (-45), byteArray0, byteOrder0, 29);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50766, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-45), tiffField0.getTag());
      assertEquals((-45), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(406128, tiffField0.getBytesLength());
      assertEquals(50766L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(167, 45, fieldTypeShort0.BYTE, 167, 45, byteArray0, byteOrder0, 167);
      String string0 = tiffField0.toString();
      assertEquals(45, tiffField0.getOffset());
      assertEquals(167, tiffField0.getBytesLength());
      assertEquals(167, tiffField0.getSortHint());
      assertEquals("167 (0xa7: Unknown Tag): 0, 0, 0 (167 Byte)", string0);
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50745, 50745, fieldTypeLong0, 50745, 50745, byteArray0, byteOrder0, 50745);
      String string0 = tiffField0.toString();
      assertEquals(50745, tiffField0.getOffset());
      assertEquals(50745, tiffField0.getSortHint());
      assertEquals(50745, tiffField0.getDirectoryType());
      assertEquals(202980, tiffField0.getBytesLength());
      assertEquals("50745 (0xc639: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (50745 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18313, 18313, fieldTypeShort0.IFD, 18313, 18313, byteArray0, byteOrder0, 18313);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(18313, tiffField0.getOffset());
      assertEquals(18313L, tiffField0.getCount());
      assertEquals(18313, tiffField0.getDirectoryType());
      assertEquals(18313, tiffField0.getSortHint());
      assertEquals(73252, tiffField0.getBytesLength());
      assertEquals(18313, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      TiffField tiffField0 = new TiffField(18244, 18244, fieldTypeShort0, 18244, 18244, byteArray0, (ByteOrder) null, 18244);
      String string0 = tiffField0.toString();
      assertEquals(18244, tiffField0.getOffset());
      assertEquals(18244, tiffField0.getSortHint());
      assertEquals(18244, tiffField0.getDirectoryType());
      assertEquals("18244 (0x4744: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (18244 SShort)", string0);
      assertEquals(36488, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[99];
      TiffField tiffField0 = new TiffField(18250, 18250, fieldTypeShort0.DOUBLE, 18250, 18250, byteArray0, (ByteOrder) null, 18250);
      String string0 = tiffField0.toString();
      assertEquals(18250, tiffField0.getSortHint());
      assertEquals("18250 (0x474a: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (18250 Double)", string0);
      assertEquals(18250, tiffField0.getDirectoryType());
      assertEquals(18250, tiffField0.getOffset());
      assertEquals(146000, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[197];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(267, 267, fieldTypeAscii0, 267, 267, byteArray0, byteOrder0, 267);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(267, tiffField0.getOffset());
      assertEquals(267, tiffField0.getTag());
      assertEquals(267, tiffField0.getDirectoryType());
      assertEquals(267, tiffField0.getSortHint());
      assertEquals(267, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18240, 18240, fieldTypeAscii0, 18240, 18240, byteArray0, byteOrder0, 18240);
      tiffField0.toString();
      assertEquals(18240L, tiffField0.getCount());
      assertEquals(18240, tiffField0.getSortHint());
      assertEquals(18240, tiffField0.getDirectoryType());
      assertEquals(18240, tiffField0.getBytesLength());
      assertEquals(18240, tiffField0.getTag());
      assertEquals(18240, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[104];
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeShort0, 55, 55, byteArray0, (ByteOrder) null, 775);
      String string0 = tiffField0.getValueDescription();
      assertEquals(110, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55L, tiffField0.getCount());
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(775, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeShort0, 13, 13, byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(26, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1513), (-1513), fieldTypeShort0, (byte)87, (-1513), (byte[]) null, byteOrder0, (-511));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65535, 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-511), tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals((-1513), tiffField0.getTag());
      assertEquals((-1513), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(174, tiffField0.getBytesLength());
      assertEquals((-1513), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeShort0, 16, 16, byteArray0, byteOrder0, 16);
      tiffField0.getFieldTypeName();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, 74, fieldTypeByte0, 50982, 50982, byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getSortHint();
      assertEquals(8, int0);
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(50982, tiffField0.getBytesLength());
      assertEquals(50982, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-356), fieldTypeShort0, 27, 27, (byte[]) null, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeShort0, 49, 49, (byte[]) null, byteOrder0, 49);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeRational0, 42, 42, byteArray0, (ByteOrder) null, 42);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeShort0, 16, 16, byteArray0, byteOrder0, 16);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(16, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16L, tiffElement0.offset);
  }
}
