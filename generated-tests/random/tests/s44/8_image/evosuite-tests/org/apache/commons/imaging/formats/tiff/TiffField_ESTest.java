/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 05:20:37 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-113), "SyG658dvXaRB");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-84);
      byteArray0[4] = (byte)87;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-214), (-113), fieldTypeRational0, 2344L, (-113), byteArray0, byteOrder0, (-291));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-113), tiffField0.getOffset());
      assertEquals((-214), tiffField0.getTag());
      assertEquals((-291), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals((-113), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50972, 50972, fieldTypeShort0, 50972, 50972, byteArray0, byteOrder0, (byte) (-118));
      int int0 = tiffField0.getSortHint();
      assertEquals(50972, tiffField0.getOffset());
      assertEquals((-118), int0);
      assertEquals(50972, tiffField0.getTag());
      assertEquals(50972, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 292, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, (-707));
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(292, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-707), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-54);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1853), (-1853), fieldTypeShort0, 2101L, 200L, byteArray0, byteOrder0, (-331));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-331), tiffField0.getSortHint());
      assertEquals((-1853), tiffField0.getTag());
      assertEquals((-13824), int0);
      assertEquals(200, tiffField0.getOffset());
      assertEquals((-1853), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0.DOUBLE, (byte)17, 200L, byteArray0, byteOrder0, 2143648855);
      tiffField0.getFieldType();
      assertEquals(200, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(2143648855, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3624), 112, fieldTypeByte0, 1L, (-3624), byteArray0, byteOrder0, 112);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(112, tiffField0.getSortHint());
      assertEquals(112, int0);
      assertEquals((-3624), tiffField0.getTag());
      assertEquals((-3624), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5868L, (-1948L), byteArray0, byteOrder0, 1904);
      tiffField0.getByteArrayValue();
      assertEquals(1904, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1948), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3829), "'q{I");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-3829), fieldTypeShort0, (-3829), (-1264L), byteArray0, byteOrder0, (byte)86);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-217), fieldTypeDouble0, 0, (-217), byteArray0, byteOrder0, (byte)16);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "I+T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1913, fieldTypeShort0, (-630L), 587L, byteArray0, byteOrder0, (byte) (-38));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Y}u");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-888), (-888), fieldTypeShort0, (-888), 6308L, byteArray0, byteOrder0, (-1736));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(6308, tiffField0.getOffset());
      assertEquals((-1736), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-888), tiffField0.getTag());
      assertEquals((-888), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(32947, "org.apache.commons.imaging.formats.tiff.constants.DngTagConstants");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeByte0, 32947, (byte) (-121), byteArray0, (ByteOrder) null, (-506));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-121), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals((-506), tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1467, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2004318071, 1357, fieldTypeFloat0, 1467, 1357, byteArray0, byteOrder0, 65535);
      tiffField0.getByteOrder();
      assertEquals(1357, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1357, tiffField0.getDirectoryType());
      assertEquals(2004318071, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(32947, "org.apache.commons.imaging.formats.tiff.constants.DngTagConstants");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeByte0, 32947, (byte) (-121), byteArray0, (ByteOrder) null, (-506));
      fieldTypeByte0.getValue(tiffField0);
      assertEquals((-121), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-506), tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2144911810), "ComponentsConfiguration");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50939, fieldTypeDouble0, (-2144911810), (-1190L), byteArray0, byteOrder0, 1152);
      tiffField0.getFieldType();
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals(1152, tiffField0.getSortHint());
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146972220, "NC!`HS1t@8j_u{D?@");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1816, 1816, fieldTypeShort0, 0L, 1816, byteArray0, byteOrder0, 115);
      int int0 = tiffField0.getOffset();
      assertEquals(1816, tiffField0.getTag());
      assertEquals(1816, tiffField0.getDirectoryType());
      assertEquals(1816, int0);
      assertEquals(115, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1306), 597, fieldTypeLong0, 597, 8568297476L, byteArray0, byteOrder0, (byte) (-4));
      tiffField0.getTagInfo();
      assertEquals(597, tiffField0.getDirectoryType());
      assertEquals((-1306), tiffField0.getTag());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals((-21637116), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5868L, (-1948L), byteArray0, byteOrder0, 1904);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1904, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1948), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5868L, (-1948L), byteArray0, byteOrder0, 1904);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1904, tiffField0.getSortHint());
      assertEquals((-1948), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 292, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, (-707));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2144911810), "ComponentsConfiguration");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50939, fieldTypeDouble0, (-2144911810), (-1190L), byteArray0, byteOrder0, 1152);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 292, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, (-707));
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(292, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-707), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(290, "l_");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2004318071, 2004318071, fieldTypeDouble0, 5361L, 5361L, byteArray0, byteOrder0, (byte) (-93));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@239e612b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3624), 112, fieldTypeByte0, 1L, (-3624), byteArray0, byteOrder0, 112);
      tiffField0.getIntValueOrArraySum();
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getSortHint());
      assertEquals((-3624), tiffField0.getTag());
      assertEquals((-3624), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2144911810), "ComponentsConfiguration");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50939, fieldTypeDouble0, (-2144911810), (-1190L), byteArray0, byteOrder0, 1152);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1152, tiffField0.getSortHint());
      assertEquals(50939, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40963, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41487, 41487, fieldTypeFloat0, 40963, 40963, byteArray0, byteOrder0, (-3892));
      tiffField0.getDoubleArrayValue();
      assertEquals(41487, tiffField0.getTag());
      assertEquals(41487, tiffField0.getDirectoryType());
      assertEquals((-3892), tiffField0.getSortHint());
      assertEquals(40963, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1306), 597, fieldTypeLong0, 597, 8568297476L, byteArray0, byteOrder0, (byte) (-4));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1306), tiffField0.getTag());
      assertEquals(597, tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals((-21637116), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3829), "'q{I");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 184L, 0L, byteArray0, (ByteOrder) null, 37439);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(37439, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-127), 1899, fieldTypeRational0, (byte)97, 2147483647L, byteArray0, (ByteOrder) null, (-1040));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-1040), tiffField0.getSortHint());
      assertEquals(1899, tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3624), 112, fieldTypeByte0, 1L, (-3624), byteArray0, byteOrder0, 112);
      tiffField0.getDoubleArrayValue();
      assertEquals(112, tiffField0.getSortHint());
      assertEquals((-3624), tiffField0.getTag());
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals((-3624), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(32947, "org.apache.commons.imaging.formats.tiff.constants.DngTagConstants");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeByte0, 32947, (byte) (-121), byteArray0, (ByteOrder) null, (-506));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@786b7760 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3036, 3036, fieldTypeByte0, 2656L, 3036, byteArray0, (ByteOrder) null, 34118);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@667e8046 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5868L, (-1948L), byteArray0, byteOrder0, 1904);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1948), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1904, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(854, "ExifImageLength");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)81;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(854, 854, fieldTypeRational0, 854, 3043L, byteArray0, byteOrder0, (byte) (-120));
      tiffField0.getIntArrayValue();
      assertEquals(854, tiffField0.getTag());
      assertEquals(3043, tiffField0.getOffset());
      assertEquals((-120), tiffField0.getSortHint());
      assertEquals(854, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2526), fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2526), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2004318071, (-1126), fieldTypeLong0, 1577L, 6464L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(2004318071, tiffField0.getTag());
      assertEquals(1577L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(6464, tiffField0.getOffset());
      assertEquals((-1126), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)86;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147300618, 48259, fieldTypeAscii0, 255L, 5220L, byteArray0, byteOrder0, (byte)86);
      String string0 = tiffField0.getStringValue();
      assertEquals(5220, tiffField0.getOffset());
      assertEquals(48259, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2147300618, tiffField0.getTag());
      assertEquals(86, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-561), (-531), fieldTypeByte0, 60L, 2339L, byteArray0, byteOrder0, 9);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@52b00304
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1467, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2004318071, 1357, fieldTypeFloat0, 1467, 1357, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals(1357, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x77777777)", string0);
      assertEquals(1357, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(340, 15, fieldTypeLong0, 15, 340, byteArray0, (ByteOrder) null, (-891));
      String string0 = tiffField0.getTagName();
      assertEquals(340, tiffField0.getOffset());
      assertEquals(340, tiffField0.getTag());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals("SMinSampleValue", string0);
      assertEquals((-891), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-561), (-531), fieldTypeByte0, 60L, 2339L, byteArray0, byteOrder0, 9);
      tiffField0.dump();
      assertEquals((-561), tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(60L, tiffField0.getCount());
      assertEquals(2339, tiffField0.getOffset());
      assertEquals((-531), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3000), "RXGDkn-CsE,g");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3000), 720, fieldTypeFloat0, 720, 0L, byteArray0, byteOrder0, (-303));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("-3000 (0xfffff448: Unknown Tag): 0.0, 0.0 (720 RXGDkn-CsE,g)\n", byteArrayOutputStream0.toString());
      assertEquals(720, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-105), (-1851), fieldTypeDouble0, 368L, (-14245L), byteArray0, byteOrder0, (byte)27);
      String string0 = tiffField0.toString();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-14245), tiffField0.getOffset());
      assertEquals("-105 (0xffffff97: Unknown Tag): 0.0, 0.0 (368 Double)", string0);
      assertEquals((-1851), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1306), 597, fieldTypeLong0, 597, 8568297476L, byteArray0, byteOrder0, (byte) (-4));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Bo`]>KYUJ");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "ColorMatrix2");
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals((-1306), tiffField0.getTag());
      assertEquals(597, tiffField0.getDirectoryType());
      assertEquals((-21637116), tiffField0.getOffset());
      assertEquals(597L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(32947, "org.apache.commons.imaging.formats.tiff.constants.DngTagConstants");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeByte0, 32947, (byte) (-121), byteArray0, (ByteOrder) null, (-506));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-121), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals(32947L, tiffField0.getCount());
      assertEquals((-506), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1853), (-1853), fieldTypeShort0, 2101L, 200L, byteArray0, byteOrder0, (-331));
      String string0 = tiffField0.toString();
      assertEquals((-331), tiffField0.getSortHint());
      assertEquals((-1853), tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getOffset());
      assertEquals("-1853 (0xfffff8c3: Unknown Tag): 0, 0 (2101 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.ASCII, 1520L, 3232L, byteArray0, byteOrder0, (byte)119);
      tiffField0.dump();
      assertEquals(3232, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1520L, tiffField0.getCount());
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-813), "Unknown: ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)42;
      byteArray0[5] = (byte)75;
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-813), (-813), fieldTypeAscii0, 400L, 247L, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(247, tiffField0.getOffset());
      assertEquals(400L, tiffField0.getCount());
      assertEquals((-813), tiffField0.getDirectoryType());
      assertEquals((-813), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "");
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-142), (-142), fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 651);
      tiffField0.dump();
      assertEquals(651, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-142), tiffField0.getDirectoryType());
      assertEquals((-142), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1467, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2004318071, 1357, fieldTypeFloat0, 1467, 1357, byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1211, 1357);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(1357, tiffField0.getOffset());
      assertEquals(1357, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(2004318071, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2144911810), "ComponentsConfiguration");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50939, fieldTypeDouble0, (-2144911810), (-1190L), byteArray0, byteOrder0, 1152);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1152, tiffField0.getSortHint());
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2004318071, (-1126), fieldTypeLong0, 1577L, 6464L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldTypeName();
      assertEquals(6464, tiffField0.getOffset());
      assertEquals((-1126), tiffField0.getDirectoryType());
      assertEquals(2004318071, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2004318071, (-1126), fieldTypeLong0, 1577L, 6464L, byteArray0, byteOrder0, (byte)1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2004318071, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1126), tiffField0.getDirectoryType());
      assertEquals(6464L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-561), (-531), fieldTypeByte0, 60L, 2339L, byteArray0, byteOrder0, 9);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-531), int0);
      assertEquals((-561), tiffField0.getTag());
      assertEquals(2339, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1467, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2004318071, 1357, fieldTypeFloat0, 1467, 1357, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(1357, tiffField0.getDirectoryType());
      assertEquals(2004318071, tiffField0.getTag());
      assertEquals(1357, tiffField0.getOffset());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(32947, "org.apache.commons.imaging.formats.tiff.constants.DngTagConstants");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeByte0, 32947, (byte) (-121), byteArray0, (ByteOrder) null, (-506));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("50 (0x32: Unknown Tag): ", string0);
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals((-121), tiffField0.getOffset());
      assertEquals((-506), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2144911810), "ComponentsConfiguration");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50939, fieldTypeDouble0, (-2144911810), (-1190L), byteArray0, byteOrder0, 1152);
      assertEquals(20574704, tiffField0.getBytesLength());
      
      tiffField0.getValue();
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2144911810L), tiffField0.getCount());
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(1152, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2144911810), "ComponentsConfiguration");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50939, fieldTypeDouble0, (-2144911810), (-1190L), byteArray0, byteOrder0, 1152);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)76, (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertNotNull(string0);
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(1152, tiffField0.getSortHint());
      assertEquals((-2144911810L), tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ComponentsConfiguration", string0);
      assertEquals(0, tiffField0.getTag());
  }
}
