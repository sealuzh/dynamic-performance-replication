/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 08:01:00 GMT 2018
 */

package org.firebirdsql.encodings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.encodings.EncodingFactory;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EncodingFactory_ESTest extends EncodingFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "Y";
      EncodingFactory.getEncoding("Y");
      String string1 = "U/`,9%*-@$ddjS";
      EncodingFactory.getJavaEncoding("U/`,9%*-@$ddjS");
      EncodingFactory.getIscEncodingSize("@y=7b#bqTUjn");
      EncodingFactory.getCharacterSetSize(0);
      EncodingFactory.getJavaEncodingForAlias("U/`,9%*-@$ddjS");
      EncodingFactory encodingFactory0 = new EncodingFactory();
      String string2 = "Wq";
      EncodingFactory.getEncoding((String) null, encodingFactory0.DEFAULT_MAPPING);
      EncodingFactory.createEncoding("U/`,9%*-@$ddjS");
      // Undeclared exception!
      EncodingFactory.getTranslator("Y");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncodingFactory encodingFactory0 = new EncodingFactory();
      EncodingFactory.getEncoding("8ncGAsg,", encodingFactory0.DEFAULT_MAPPING);
      // Undeclared exception!
      EncodingFactory.getTranslator("cf&NJ7*%?");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncodingFactory.getCharacterSetSize(1);
      // Undeclared exception!
      EncodingFactory.getTranslator("Cpf81");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EncodingFactory.getJavaEncodingForAlias((String) null);
      // Undeclared exception!
      EncodingFactory.getEncoding((String) null, "Cp863");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncodingFactory.createEncoding("tw");
      int int0 = EncodingFactory.getIscEncodingSize((String) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EncodingFactory.getJavaEncoding((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EncodingFactory.getIscEncoding((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "zUVQceU/H[EAq:L?IDR";
      EncodingFactory.getIscEncoding("zUVQceU/H[EAq:L?IDR");
      String string1 = "08007";
      // Undeclared exception!
      EncodingFactory.getEncoding((String) null, "08007");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncodingFactory encodingFactory0 = new EncodingFactory();
      String string0 = "R/Jx5dFko";
      EncodingFactory.getEncoding("isc_encodings.properties", encodingFactory0.DEFAULT_MAPPING);
      EncodingFactory.getJavaEncodingForAlias("R/Jx5dFko");
      String string1 = "Cp1255";
      EncodingFactory.getIscEncodingSize("Cp1255");
      EncodingFactory.getJavaEncodingForAlias((String) null);
      EncodingFactory.getJavaEncoding("R/Jx5dFko");
      EncodingFactory.getJavaEncoding("W[+ZfK8o=(^*2[I");
      EncodingFactory.getJavaEncoding("mIo9yN^qr[g;>");
      EncodingFactory.getIscEncoding("J4");
      EncodingFactory.getJavaEncodingForAlias("08003");
      String string2 = ":M>a.!";
      EncodingFactory.getEncoding(":M>a.!", encodingFactory0.DEFAULT_MAPPING);
      EncodingFactory.getJavaEncodingForAlias("isc_encodings.properties");
      // Undeclared exception!
      EncodingFactory.getTranslator("R/Jx5dFko");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncodingFactory encodingFactory0 = new EncodingFactory();
      int int0 = EncodingFactory.getCharacterSetSize(3836);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "ISO8859_4";
      EncodingFactory.getJavaEncoding("ISO8859_4");
      EncodingFactory.getEncoding("5Q>,>N}._y)lsU");
      EncodingFactory.getJavaEncoding("ISO8859_4");
      EncodingFactory.getJavaEncodingForAlias("5Q>,>N}._y)lsU");
      // Undeclared exception!
      EncodingFactory.getTranslator("ISO-8859-4");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EncodingFactory.getIscEncoding("ISO8859_5");
      assertEquals("ISO8859_5", string0);
      assertNotNull(string0);
      
      String string1 = EncodingFactory.getJavaEncoding("ISO8859_5");
      assertNotNull(string1);
      assertEquals("ISO-8859-5", string1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "SIQ\\<wb(RR";
      EncodingFactory.getIscEncodingSize("SIQ<wb(RR");
      EncodingFactory.getIscEncodingSize("SIQ<wb(RR");
      String string1 = "ISO8859_2";
      EncodingFactory.createEncoding("ISO8859_2");
      // Undeclared exception!
      EncodingFactory.getEncoding("ISO8859_2", "ISO8859_2");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EncodingFactory.getJavaEncodingForAlias("Cp864");
      assertEquals("Cp864", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "";
      EncodingFactory.getIscEncoding("");
      String string1 = "UNICODE_FSS";
      EncodingFactory.getIscEncodingSize("UNICODE_FSS");
      EncodingFactory.createEncoding("Incorrect mapping format. Mapped value should consist only of single character, but ");
      EncodingFactory.getJavaEncoding("");
      String string2 = "v9\"fRpe%((~`&?aLfn";
      // Undeclared exception!
      EncodingFactory.getTranslator("v9\"fRpe%((~`&?aLfn");
  }
}
