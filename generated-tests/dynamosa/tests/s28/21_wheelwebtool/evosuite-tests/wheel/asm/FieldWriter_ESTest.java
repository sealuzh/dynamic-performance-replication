/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 17:10:27 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1358), "&VGm?&dM\"xa", "&VGm?&dM\"xa", "&VGm?&dM\"xa", "&VGm?&dM\"xa");
      classWriter0.version = 53;
      ByteVector byteVector0 = new ByteVector(53);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      classWriter0.index = (-1358);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1358), "&VGm?&dM\"xa", "&VGm?&dM\"xa", "&VGm?&dM\"xa", "&VGm?&dM\"xa");
      ByteVector byteVector0 = new ByteVector(53);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      classWriter0.index = (-1358);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1358), "&VGmwO?&dB\"xa", "&VGmwO?&dB\"xa", "&VGmwO?&dB\"xa", "&VGmwO?&dB\"xa");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2540);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 593, "PRc\"4.", "PRc\"4.", "PRc\"4.", "PRc\"4.");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2576);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 593, "PRc\"4.", "PRc\"4.", "PRc\"4.", "PRc\"4.");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "k;n", "k;n", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2540);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2540, "PRc\"4.", "PRc\"4.", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65509);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "f", "f", "f", "f");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65499);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "B", "B", "B", "B");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 65499;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65620);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-656), (String) null, (String) null, (String) null, classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "`>mz|xl5#?", "`>mz|xl5#?", "`>mz|xl5#?", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2540);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 610, "PRc\"4.", "PRc\"4.", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(2540);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1836);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ";n", ";n", ";n", ";n");
      fieldWriter0.visitAnnotation(";n", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, " ", " ", " ", " ");
      fieldWriter0.visitAnnotation(" ", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1380));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1380), "&VGm?&dM\"xa", "&VGm?&dM\"xa", "&VGm?&dM\"xa", "&VGm?&dM\"xa");
      classWriter0.version = 49;
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1341));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1341), "&VGm?~&d~\"xa", "&VGm?~&d~\"xa", "&VGm?~&d~\"xa", "&VGm?~&d~\"xa");
      Attribute attribute0 = new Attribute("&VGm?~&d~\"xa");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65477);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "IDs", "IDs", "IDs", "IDs");
      fieldWriter0.visitAnnotation("IDs", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1358), "&VGm?~&d~\"xa", "&VGm?~&d~\"xa", "&VGm?~&d~\"xa", "&VGm?~&d~\"xa");
      classWriter0.version = (-1358);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65533);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "f", "f", "f", "f");
      fieldWriter0.visitAnnotation("f", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2540);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 610, "PRc\"4.", "PRc\"4.", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-2105), "org.apache.commons.io.filefilter.FileFileFilter", "=", "org.apache.commons.io.filefilter.EmptyFileFilter", "(+-");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2533);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 598, "PRc\"4.", "", "PRc\"4.", "(Ea=LwbK>");
      fieldWriter0.visitEnd();
  }
}
