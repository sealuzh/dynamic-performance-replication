/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 23:26:58 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FilterOutputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)27;
      byteArray0[4] = (byte)1;
      TiffField tiffField0 = new TiffField(1374, 1021, fieldTypeRational0, 1021, 2147483647L, byteArray0, byteOrder0, (-1384));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(27, int0);
      assertEquals((-1384), tiffField0.getSortHint());
      assertEquals(1021, tiffField0.getDirectoryType());
      assertEquals(1374, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)1;
      TiffField tiffField0 = new TiffField(1374, 1021, fieldTypeRational0, 1021, 2147483647L, byteArray0, byteOrder0, (-1384));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1384), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1374, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1021, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-8), (byte) (-8), fieldTypeByte0, (byte)1, (byte) (-8), byteArray0, byteOrder0, 41494);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(41494, tiffField0.getSortHint());
      assertEquals((-8), tiffField0.getTag());
      assertEquals((-8), tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(40092, (byte)84, fieldTypeLong0, (-1153L), 40092, byteArray0, byteOrder0, (byte)84);
      tiffField0.dump();
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(40092, tiffField0.getOffset());
      assertEquals(40092, tiffField0.getTag());
      assertEquals(84, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 264, fieldTypeLong0, 3335L, 0L, byteArray0, byteOrder0, 1065);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(264, tiffField0.getDirectoryType());
      assertEquals(1065, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1368), "null");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1472), (-1965), fieldTypeFloat0.SHORT, (byte)4, 1L, byteArray0, byteOrder0, (-123));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1472), int0);
      assertEquals((-1965), tiffField0.getDirectoryType());
      assertEquals((-123), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-3), fieldTypeAscii0, 65535, 5064L, byteArray0, byteOrder0, (byte)33);
      String string0 = tiffField0.getStringValue();
      assertEquals((-3), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(5064, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50729, 50729, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-101));
      int int0 = tiffField0.getSortHint();
      assertEquals((-101), int0);
      assertEquals(50729, tiffField0.getDirectoryType());
      assertEquals(50729, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(326, 65535, fieldTypeLong0, 326, 326, byteArray0, byteOrder0, (byte)24);
      int int0 = tiffField0.getOffset();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(326, int0);
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(326, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-4), 0, fieldTypeLong0, 3273L, (byte) (-50), byteArray0, byteOrder0, (byte)86);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-50), int0);
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1368), "null");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 176, fieldTypeFloat0.LONG, 1L, 1035, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(176, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1035, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1361), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-70);
      TiffField tiffField0 = new TiffField((-1361), 496, fieldTypeShort0, 496, (-360L), byteArray0, byteOrder0, (byte) (-70));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1361), tiffField0.getTag());
      assertEquals((-70), tiffField0.getSortHint());
      assertEquals(496, tiffField0.getDirectoryType());
      assertEquals((-17920), int0);
      assertEquals((-360), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)23;
      TiffField tiffField0 = new TiffField(65535, (byte)1, fieldTypeShort0, 1L, (-666L), byteArray0, byteOrder0, (byte)23);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-666), tiffField0.getOffset());
      assertEquals(23, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-8);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 65535, fieldTypeByte0, (byte)1, (-365L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-365), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1724, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1276), 0, fieldTypeShort0, 0, (-1276), byteArray0, byteOrder0, 1724);
      tiffField0.getFieldTypeName();
      assertEquals((-1276), tiffField0.getOffset());
      assertEquals((-1276), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1724, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50729, 50729, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-101));
      tiffField0.getFieldTypeName();
      assertEquals(50729, tiffField0.getDirectoryType());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50729, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(272, 272, (FieldType) null, 37, (-1658L), byteArray0, byteOrder0, 43);
      tiffField0.getFieldType();
      assertEquals(272, tiffField0.getTag());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals((-1658), tiffField0.getOffset());
      assertEquals(272, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "AeBdW_aBX");
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(997, 0, fieldTypeFloat0, 997, 1698L, byteArray0, byteOrder0, 2745);
      tiffField0.getFieldType();
      assertEquals(1698, tiffField0.getOffset());
      assertEquals(2745, tiffField0.getSortHint());
      assertEquals(997, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2527), "");
      TiffField tiffField0 = new TiffField(50738, (-2527), fieldTypeLong0, 2418L, (-2527), byteArray0, byteOrder0, 50738);
      tiffField0.getFieldType();
      assertEquals((-2527), tiffField0.getDirectoryType());
      assertEquals(50738, tiffField0.getTag());
      assertEquals(50738, tiffField0.getSortHint());
      assertEquals((-2527), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)26;
      TiffField tiffField0 = new TiffField(0, 1641, fieldTypeByte0, 1L, (-899L), byteArray0, byteOrder0, (byte)122);
      tiffField0.getDoubleValue();
      assertEquals((-899), tiffField0.getOffset());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(1641, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-19);
      CharBuffer charBuffer0 = CharBuffer.allocate(7);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(64, 1, fieldTypeByte0, 1L, 873L, byteArray0, byteOrder0, (byte)29);
      tiffField0.getDoubleValue();
      assertEquals(873, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getTag());
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 0, (FieldType) null, 21, 2140L, byteArray0, byteOrder0, (byte) (-122));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(21, tiffField0.getTag());
      assertEquals(2140, tiffField0.getOffset());
      assertEquals((-122), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3230, "IMy");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1341, fieldTypeShort0, 1341, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1341, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, (byte[]) null, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-938), 6, fieldTypeAscii0, 6, (-29), byteArray0, byteOrder0, 4);
      tiffField0.getCount();
      assertEquals((-29), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-938), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-764), (-764), fieldTypeLong0, 0L, (-6263L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-764), tiffField0.getTag());
      assertEquals((-764), tiffField0.getDirectoryType());
      assertEquals((-6263), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1186), (-2912), fieldTypeLong0, (-1186), (-2912), byteArray0, byteOrder0, 1586);
      tiffField0.getBytesLength();
      assertEquals((-2912), tiffField0.getOffset());
      assertEquals(1586, tiffField0.getSortHint());
      assertEquals((-1186), tiffField0.getTag());
      assertEquals((-2912), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(26, 619, fieldTypeRational0, 26, 26, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getByteOrder();
      assertEquals(619, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeShort0, 6, 176L, byteArray0, byteOrder0, 22);
      tiffField0.getByteArrayValue();
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(176, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-29), (-29), fieldTypeAscii0, (-29), (-29), (byte[]) null, byteOrder0, (-29));
      MockFile mockFile0 = new MockFile("SelfTimerMode");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65535, (-2365), fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "'java.lang.String@0000000003'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, (byte[]) null, byteOrder0, 50);
      MockFile mockFile0 = new MockFile("", "hHoNcM1I");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1724, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2089443549, 2089443549, fieldTypeShort0.SBYTE, (-1L), 2813L, byteArray0, byteOrder0, (-1168));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147341364, 2147341364, fieldTypeAscii0, (-1L), (-1L), (byte[]) null, byteOrder0, 4576);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-28), (-3166), (FieldType) null, (byte) (-4), (-360L), byteArray0, byteOrder0, 32769);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-244), 1501, fieldTypeByte0, (-2147483648L), 2343, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, (-1726L), byteArray0, byteOrder0, (byte)14);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2250, 521, fieldTypeByte0, (byte)0, (-1350L), byteArray0, byteOrder0, 373);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, 513, (FieldType) null, 0, 0L, byteArray0, byteOrder0, (byte)33);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "AeBdW_aBX");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(997, 0, fieldTypeFloat0, (-1L), 1698L, byteArray0, byteOrder0, 2745);
      MockFile mockFile0 = new MockFile((String) null, "W)UBQ~pq");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "AeBdW_aBX");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(997, 0, fieldTypeFloat0, 997, 1698L, byteArray0, byteOrder0, 2745);
      MockFile mockFile0 = new MockFile((String) null, "W)UBQ~pq");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(46L, mockFile0.length());
      assertEquals(997, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2745, tiffField0.getSortHint());
      assertEquals(1698, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-4), (byte)86, fieldTypeLong0, (-2147483648L), (byte) (-37), byteArray0, byteOrder0, (byte)86);
      tiffField0.getByteArrayValue();
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(321, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(321, 35, fieldTypeShort0, 0L, 35, byteArray0, byteOrder0, 1430);
      tiffField0.getFieldType();
      assertEquals(1430, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(321, tiffField0.getTag());
      assertEquals(35, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeDouble0, 1724, 267L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(267, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(5);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 5, 5, (byte[]) null, byteOrder0, 50834);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(50834, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147341364, 2147341364, fieldTypeAscii0, (-1L), (-1L), (byte[]) null, byteOrder0, 4576);
      int int0 = tiffField0.getTag();
      assertEquals(4576, tiffField0.getSortHint());
      assertEquals(2147341364, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2147341364, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147341364, 2147341364, fieldTypeAscii0, (-1L), (-1L), (byte[]) null, byteOrder0, 4576);
      tiffField0.getCount();
      assertEquals(2147341364, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2147341364, tiffField0.getDirectoryType());
      assertEquals(4576, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(452, 452, fieldTypeAscii0, 1L, (-1285), (byte[]) null, byteOrder0, (-2456));
      tiffField0.getBytesLength();
      assertEquals(452, tiffField0.getTag());
      assertEquals((-1285), tiffField0.getOffset());
      assertEquals((-2456), tiffField0.getSortHint());
      assertEquals(452, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2147126270, fieldTypeLong0, 1L, (-1788L), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals((-1788), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2147126270, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 2147341364, fieldTypeLong0, (byte)1, (-3108L), byteArray0, byteOrder0, 2147341364);
      tiffField0.getIntValue();
      assertEquals(2147341364, tiffField0.getDirectoryType());
      assertEquals((-3108), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2147341364, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), (byte)86, fieldTypeLong0, 3244L, (byte) (-50), byteArray0, byteOrder0, (byte)86);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-4), tiffField0.getTag());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(86, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1276), "");
      TiffField tiffField0 = new TiffField(4412, 4412, fieldTypeDouble0, 4412, (-1276), byteArray0, byteOrder0, (-2574));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@382f99ef for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1168), (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1724, 0, fieldTypeDouble0, 1724, 1724, byteArray0, byteOrder0, (byte)43);
      tiffField0.getDoubleArrayValue();
      assertEquals(1724, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(1724, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1168), (String) null);
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(433, 1769, fieldTypeFloat0, 1769, (-294L), byteArray0, byteOrder0, (-388));
      tiffField0.getDoubleArrayValue();
      assertEquals(1769, tiffField0.getDirectoryType());
      assertEquals((-388), tiffField0.getSortHint());
      assertEquals(433, tiffField0.getTag());
      assertEquals((-294), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-4), (byte)86, fieldTypeLong0, 3244L, (byte) (-50), byteArray0, byteOrder0, (byte)86);
      tiffField0.getDoubleArrayValue();
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 613, fieldTypeByte0, 2377L, (-899L), byteArray0, byteOrder0, 6);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3b887e9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1554), (-1554), fieldTypeByte0.SSHORT, 4L, 4L, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1554), tiffField0.getTag());
      assertEquals((-1554), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1083), (-580), fieldTypeRational0, 64L, 64L, byteArray0, byteOrder0, (byte) (-1));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1083), tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-580), tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2147126270, fieldTypeLong0, 1L, (-1788L), byteArray0, byteOrder0, 0);
      assertEquals(4, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-1788), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2147126270, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-19), fieldTypeByte0, (byte)29, (-1085L), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4c6f1d5 for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1276), (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, (-2655), fieldTypeShort0, 1350L, (-1276), byteArray0, byteOrder0, (byte) (-6));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2700, tiffField0.getBytesLength());
      assertEquals((-1276), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2655), tiffField0.getDirectoryType());
      assertEquals((-6), tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-50), (byte)86, fieldTypeLong0, 2223L, (byte) (-50), byteArray0, byteOrder0, 16);
      tiffField0.getIntArrayValue();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals((-50), tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(8892, tiffField0.getBytesLength());
      assertEquals((-50), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1374, 136, fieldTypeRational0, 1374, 109L, byteArray0, byteOrder0, 110);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50829, 3613, fieldTypeRational0, 0L, (-1083), byteArray0, byteOrder0, (byte)86);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(3613, tiffField0.getDirectoryType());
      assertEquals((-1083), tiffField0.getOffset());
      assertEquals(50829, tiffField0.getTag());
      assertEquals(86, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 1641, fieldTypeByte0, 1L, (-899L), byteArray0, byteOrder0, (byte)122);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-899), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(1641, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-3), fieldTypeAscii0, 65535, 5064L, byteArray0, byteOrder0, (byte)33);
      String string0 = tiffField0.getStringValue();
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(5064, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 264, fieldTypeLong0, 3335L, 0L, byteArray0, byteOrder0, 1065);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@3b89a0df
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate(7);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(64, 1, fieldTypeByte0, 1L, 873L, byteArray0, byteOrder0, (byte)29);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(873, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x40)", string0);
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[56];
      TiffField tiffField0 = new TiffField(30, (-3021), fieldTypeByte0, 3333L, 32L, byteArray0, byteOrder0, 30);
      String string0 = tiffField0.getTagName();
      assertEquals(30, tiffField0.getSortHint());
      assertEquals((-3021), tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
      assertEquals("GPSDifferential", string0);
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2250, 521, fieldTypeByte0, (byte)0, (-1350L), byteArray0, byteOrder0, 373);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "GPSTrack");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34026, 1965, fieldTypeDouble0.FLOAT, 1862L, 1965, byteArray0, byteOrder0, (-2763));
      String string0 = tiffField0.toString();
      assertEquals(7448, tiffField0.getBytesLength());
      assertEquals("34026 (0x84ea: BackgroundColorValue): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (1862 Float)", string0);
      assertEquals((-2763), tiffField0.getSortHint());
      assertEquals(1965, tiffField0.getOffset());
      assertEquals(1965, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[56];
      TiffField tiffField0 = new TiffField(30, (-3021), fieldTypeByte0, 3333L, 32L, byteArray0, byteOrder0, 30);
      tiffField0.dump();
      assertEquals((-3021), tiffField0.getDirectoryType());
      assertEquals(3333L, tiffField0.getCount());
      assertEquals(3333, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(30, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (65535 Double)", string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(38, 14, fieldTypeFloat0, 38, 38, byteArray0, byteOrder0, 14);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(38, tiffField0.getOffset());
      assertEquals(38, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(38L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-14), (-14), fieldTypeLong0, 1625L, (-14), byteArray0, byteOrder0, (-14));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-14), tiffField0.getTag());
      assertEquals((-14), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(6500, tiffField0.getBytesLength());
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(1625L, tiffField0.getCount());
      assertEquals((-14), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeLong0, 38, 38, byteArray0, byteOrder0, 38);
      String string0 = tiffField0.getValueDescription();
      assertEquals(38, tiffField0.getTag());
      assertEquals(38L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1724, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1276), 0, fieldTypeShort0, 0, (-1276), byteArray0, byteOrder0, 1724);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1276), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1276), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1724, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[119];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1070, 1070, fieldTypeLong0.SSHORT, 1070, 1070, byteArray0, byteOrder0, 9);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1070, tiffField0.getDirectoryType());
      assertEquals(1070L, tiffField0.getCount());
      assertEquals(9, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2140, tiffField0.getBytesLength());
      assertEquals(1070, tiffField0.getTag());
      assertEquals(1070, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1374, 1374, fieldTypeRational0, 1374, 1374, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(1374L, tiffField0.getCount());
      assertEquals(1374, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1374, tiffField0.getDirectoryType());
      assertEquals(1374, tiffField0.getOffset());
      assertEquals(10992, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[56];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(43, (byte)82, fieldTypeAscii0, 591L, 1908L, byteArray0, byteOrder0, (byte)82);
      tiffField0.toString();
      assertEquals(591, tiffField0.getBytesLength());
      assertEquals(82, tiffField0.getSortHint());
      assertEquals(1908, tiffField0.getOffset());
      assertEquals(43, tiffField0.getTag());
      assertEquals(82, tiffField0.getDirectoryType());
      assertEquals(591L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-3), fieldTypeAscii0, 65535, 5064L, byteArray0, byteOrder0, (byte)33);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals(5064, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40964, 1, fieldTypeShort0, 1, 40964, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50729, 50729, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-101));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(50729, tiffField0.getDirectoryType());
      assertEquals(50729, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1887, (-1610612735), fieldTypeRational0, 1887, 2628L, byteArray0, byteOrder0, (byte)50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1887, tiffField0.getTag());
      assertEquals(2628L, tiffElement0.offset);
      assertEquals(1887L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1724, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2732), 434, fieldTypeShort0, (-6904L), (-2732), byteArray0, byteOrder0, 1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2494), 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(434, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-2732), tiffField0.getTag());
      assertEquals((-13808), tiffField0.getBytesLength());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: null", string0);
      assertEquals((-2732), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(5);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 5, 5, (byte[]) null, byteOrder0, 50834);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(5, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(50834, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-676), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-676), (-1276), fieldTypeShort0, 0, (-1276), byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals((-676), tiffField0.getTag());
      assertEquals((-1276), tiffField0.getOffset());
      assertEquals((-1276), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, (byte[]) null, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1179), fieldTypeAscii0, (-1179), 4435L, (byte[]) null, byteOrder0, 6);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(4435, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1179), int0);
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(625, 102, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, 1118);
      int int0 = tiffField0.getSortHint();
      assertEquals(102, tiffField0.getDirectoryType());
      assertEquals(1118, int0);
      assertEquals(625, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeDouble0, 1724, 267L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1 (0x1: Unknown Tag): ", string0);
      assertEquals(267, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1724L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, (byte[]) null, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1374, 1374, fieldTypeRational0, 1374, 1374, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2175), 65105);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1374, tiffField0.getDirectoryType());
      assertEquals(1374, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(1374, tiffField0.getOffset());
  }
}
