/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:08:19 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.lang.reflect.Method;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 35;
      ClassWriter classWriter0 = new ClassWriter(35);
      // Undeclared exception!
      try { 
        classWriter0.newField("wheel.asm.ClassWriter", "EnclosingMethod", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(1, "wheel.asm.Frame", "wheel.asm.Frame", (String) null, (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1565);
      classWriter0.toByteArray();
      int int0 = classWriter0.newClass("fofv<");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2884));
      classWriter0.toByteArray();
      Item item0 = classWriter0.newInteger((-2884));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.visitInnerClass("*fl<", "*fl<", (String) null, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 12;
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2431));
      classWriter0.newInteger((-2431));
      classWriter0.newClassItem("n_VQB");
      classWriter0.addUninitializedType("n_VQB", 5);
      classWriter0.visitEnd();
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 871);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = Type.FLOAT;
      ClassWriter classWriter0 = new ClassWriter(45);
      classWriter0.visitInnerClass(".s.IFJDCS", ".s.IFJDCS", "Deprecated", 45);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      // Undeclared exception!
      try { 
        classWriter0.newConst(mockMinguoDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate@168424b4
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3030);
      Item item0 = classWriter0.newFloat((-2560.2822F));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      Byte byte0 = new Byte((byte)2);
      int int0 = classWriter0.newConst(byte0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item item0 = classWriter0.key;
      classWriter0.newConstItem("eSh)0OM");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Integer integer0 = new Integer(8);
      Integer.min(6, 1);
      Item item1 = classWriter0.key2;
      Type type0 = Type.BOOLEAN_TYPE;
      Long long0 = new Long(6);
      int int0 = classWriter0.newConst(long0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(50);
      classWriter0.newLong(50);
      classWriter0.visitInnerClass("FgD|Rv5B*,", "f|I?6J$y!iZD*FJ;y", "FgD|Rv5B*,", (-1836));
      Item item0 = classWriter0.newInteger((-1836));
      Item item1 = classWriter0.newLong(50);
      assertNotNull(item1);
      
      Item item2 = classWriter0.newInteger((-1836));
      assertSame(item2, item0);
      assertNotSame(item2, item1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 102;
      ClassWriter classWriter0 = new ClassWriter(102);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, "W+U", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.key;
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addType("eSh)0OM");
      Item item1 = classWriter0.key2;
      Integer.compareUnsigned(1, 1);
      classWriter0.newInteger(39);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitSource("eSh)0OM", "SD~8uYZUKI3:HG2Pa5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classWriter0.newUTF8("EnclosingMethod");
      Item item0 = classWriter0.newDouble(4);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.firstField = null;
      classWriter0.newDouble((-2595.8912965));
      classWriter0.visitOuterClass("java/lang/Throwable", "java/lang/Throwable", "");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2714);
      classWriter0.visitField(2333, "", "", "'O+dldL7QL4C", "");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(18, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      classWriter0.newMethod("0n_=)ccQ;an0#t", "", "", false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item item0 = classWriter0.key;
      Item item1 = new Item(1, item0);
      Integer integer0 = new Integer(2);
      Integer.min(967, (-3191));
      Integer.compareUnsigned((-3191), 967);
      classWriter0.newInteger(29);
      Type type0 = Type.BOOLEAN_TYPE;
      Integer integer1 = new Integer(103);
      Integer.max(8, (-3191));
      classWriter0.newConst(integer1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      Boolean boolean0 = new Boolean("");
      classWriter0.visitField(9, "", "", "", boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      String string0 = null;
      Boolean boolean0 = new Boolean(true);
      classWriter0.newConstItem(boolean0);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      classWriter0.threshold = 16;
      classWriter0.visit(16, 16, "", "", "", (String[]) null);
      classWriter0.newInteger((-778));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      String string0 = "";
      classWriter0.visitOuterClass("", "", "");
      classWriter0.addUninitializedType("", 14);
      classWriter0.addUninitializedType("", 14);
      Item item0 = new Item();
      // Undeclared exception!
      try { 
        classWriter0.newNameType("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.newDouble(0.75);
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      Float float0 = new Float((double) 8);
      classWriter0.newConstItem(float0);
      classWriter0.newDouble(0.75);
      Short short0 = new Short((short)74);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      Item item1 = new Item(8);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(43);
      classWriter0.visitSource("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", (String) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[2] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(43, 16, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.newInteger(49);
      classWriter0.newUTF8("");
      String[] stringArray0 = new String[0];
      classWriter0.visit(49, (-1958), "", "", "InnerClasses", stringArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(30);
      classWriter0.visitAnnotation("'", false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.toByteArray();
      Item item0 = classWriter0.key;
      String string0 = "j";
      classWriter0.visitInnerClass("j", "j", "j", 8);
      String string1 = "s";
      String string2 = "";
      classWriter0.visitInnerClass("s", "j", "", 8);
      String string3 = "_\\Q%/.5f0";
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-418), (-418));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -410
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      classWriter0.addUninitializedType("", (-848));
      Double double0 = new Double(306.1666807);
      classWriter0.newConst(double0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Type type0 = Type.BYTE_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      System.setCurrentTimeMillis(19L);
      Integer.compareUnsigned(0, 4);
      Class<Method> class0 = Method.class;
      Type.getDescriptor(class0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = ClassWriter.TYPE;
      int int0 = 112;
      ClassWriter classWriter0 = new ClassWriter(4);
      Character character0 = Character.valueOf('_');
      classWriter0.newConst(character0);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("Ljava/lang/reflect/Method;", "org.apache.commons.io.filefilter.EmptyFileFilter", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.newDouble(0.75);
      String string0 = "";
      item0.strVal1 = "";
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      item0.strVal1 = "";
      String string1 = "eSh)0O\\M";
      classWriter0.addType("eSh)0OM");
      classWriter0.newConstItem("eSh)0OM");
      Item item1 = classWriter0.newConstItem("eSh)0OM");
      item1.set(2);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(mockMinguoDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate@651764da
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      classWriter0.newUTF8("D");
      classWriter0.visitSource("D", (String) null);
      classWriter0.visitOuterClass("sp}[RW2W?!3+Fyzr5M", "D", (String) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2884));
      classWriter0.index = 2107;
      classWriter0.toByteArray();
      classWriter0.newInteger((-2884));
      Item item0 = new Item();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(13);
      Attribute attribute0 = new Attribute("~se_Q,\u000B");
      classWriter0.visitAttribute(attribute0);
      classWriter0.newLong(2);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(928);
      classWriter0.visitOuterClass("ZAI", "ZAI", "");
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.lastField = null;
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("ZAI", "SourceDebugExtension");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'ZAI.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.newDouble(8);
      Item item0 = classWriter0.key;
      classWriter0.version = 8;
      classWriter0.addUninitializedType("", 82);
      classWriter0.visitInnerClass("", "", "e", (-1764));
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Double.BYTES;
      classWriter0.newInteger(82);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-246));
      classWriter0.visitAnnotation("", true);
      classWriter0.newMethodItem("U<|pJIcZ2p4mSD", "org.apache.commons.io.IOCase", "eSh)0OM", true);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212681);
      classWriter0.addType("");
      classWriter0.visitSource("wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      classWriter0.toByteArray();
      classWriter0.newClassItem("");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "float");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string0 = "org.apache.commons.io.filefilter.EmptyFileFilter";
      ClassWriter classWriter0 = new ClassWriter(25);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "float";
      stringArray0[1] = null;
      stringArray0[2] = "float";
      stringArray0[3] = "org.apache.commons.io.filefilter.EmptyFileFilter";
      stringArray0[4] = "org.apache.commons.io.filefilter.DirectoryFileFilter";
      stringArray0[5] = null;
      stringArray0[6] = "org.apache.commons.io.filefilter.EmptyFileFilter";
      stringArray0[7] = "float";
      stringArray0[8] = "org.apache.commons.io.filefilter.EmptyFileFilter";
      // Undeclared exception!
      try { 
        classWriter0.visit(7, 4, "float", (String) null, "float", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      classWriter0.newNameType("wheel.asm.Frame", "wheel.asm.Frame");
      classWriter0.newMethodItem("wheel.asm.Frame", "wheel.asm.Frame", "wheel.asm.Frame", true);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      MethodVisitor methodVisitor0 = null;
      try {
        methodVisitor0 = new MethodWriter(classWriter0, 1, "wheel.asm.Frame", "wheel.asm.Frame", (String) null, (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item item0 = classWriter0.key;
      classWriter0.addType("eSh)0OM");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Item item1 = new Item(2, item0);
      classWriter0.addType("eSh)0OM");
      Integer integer0 = new Integer(38);
      Integer.min(1, 38);
      Integer.compareUnsigned(1, (-230));
      classWriter0.newInteger((-230));
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter0.visitSource(";0U*Pg", "eSh)0OM");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      classWriter0.visitSource((String) null, "D");
      classWriter0.newDouble(2);
      classWriter0.visitSource("D", (String) null);
      classWriter0.newLong(39);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("D", "RuntimeVisibleAnnotations");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'D.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Item item0 = classWriter0.key;
      Item item1 = new Item(1);
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      classWriter0.visitAnnotation("", false);
      System.setCurrentTimeMillis(0L);
      Integer.compareUnsigned(0, 4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("", 3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.toByteArray();
      String string0 = "}>Iv1&#A'u`";
      // Undeclared exception!
      try { 
        Type.getArgumentTypes("}>Iv1&#A'u`");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(23);
      classWriter0.newDouble(23);
      classWriter0.visitAnnotation(",kpYtJ#;", false);
      classWriter0.newDouble(23);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(865, 23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-16);
      ClassWriter classWriter0 = new ClassWriter((-16));
      Item item0 = classWriter0.key;
      String string0 = "";
      item0.intVal = 2;
      item0.strVal3 = "";
      item0.set((-16));
      Boolean boolean0 = new Boolean("");
      classWriter0.addType("eSh)0OM");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newLong((-16));
      Double double0 = new Double(1);
      String string1 = null;
      classWriter0.visitOuterClass("void", (String) null, "k a |ps?o2\"nECu");
      // Undeclared exception!
      try { 
        classWriter0.newField("void", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1424));
      Short short0 = new Short((short) (-705));
      classWriter0.cr = null;
      classWriter0.newConst(short0);
      classWriter0.index = (int) (short) (-705);
      classWriter0.newLong(0L);
      classWriter0.newNameType(".d4vi?BWTjV.7", ".d4vi?BWTjV.7");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      classWriter0.newFloat(871);
      classWriter0.newFloat(871);
      System.setCurrentTimeMillis(889L);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(false, false);
      classWriter0.newConst(boolean0);
      classWriter0.visitField(38, "J*8Ta{ePl8iMt,(Pp2", "J*8Ta{ePl8iMt,(Pp2", "J*8Ta{ePl8iMt,(Pp2", boolean0);
      classWriter0.newLong((-1L));
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 1891;
      ClassWriter classWriter0 = new ClassWriter(1891);
      classWriter0.visitField(2, "N6Wr]7L%^7f", "The array of suffixes must not be null", "VuNxg`,s>1ypvC17ZB", ")(]");
      classWriter0.newFloat(1891);
      String string0 = "dE6V?";
      String string1 = "Signature";
      classWriter0.visitSource("dE6V?", "Signature");
      byte[] byteArray0 = classWriter0.toByteArray();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int1 = Byte.BYTES;
      int int2 = 2353;
      String string2 = "NEud*VGQQ";
      classWriter0.visitSource(")(]", "VuNxg`,s>1ypvC17ZB");
      Attribute attribute0 = new Attribute("!");
      int int3 = 29;
      // Undeclared exception!
      try { 
        attribute0.getSize(classWriter0, byteArray0, 79, 2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(928);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "YF^$#YQ#z";
      stringArray0[1] = "3{J!oTY,yg}";
      classWriter0.visitMethod(132, "3{J!oTY,yg}", "3{J!oTY,yg}", "YF^$#YQ#z", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("YF^$#YQ#z", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'YF^$#YQ#z.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1016));
      String[] stringArray0 = new String[1];
      classWriter0.thisName = "E^V\"JUkQ[v";
      stringArray0[0] = "The array of prefixes must not be null";
      classWriter0.visit(2004, (-3266), "The array of prefixes must not be null", "The array of prefixes must not be null", "The array of prefixes must not be null", stringArray0);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.lastField = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.index = (-3266);
      classWriter0.visitSource("E^V\"JUkQ[v", "E^V\"JUkQ[v");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      classWriter0.threshold = 16;
      classWriter0.visit(16, 16, "", "", "", (String[]) null);
      classWriter0.invalidFrames = false;
      classWriter0.newMethod("hK+FKqCbn", "", "", false);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1665);
      Attribute attribute0 = new Attribute("\"LS}=u9r*r[kMl");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      Item item0 = classWriter0.key;
      Type type0 = Type.FLOAT_TYPE;
      int int0 = Type.VOID;
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = Frame.UNINITIALIZED;
      classWriter0.invalidFrames = true;
      boolean boolean0 = ClassReader.FRAMES;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.ClassWriter");
      classWriter0.newNameType("K", "wheel.asm.ClassWriter");
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1016));
      classWriter0.version = (-3275);
      classWriter0.newMethodItem("", "", "", false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "BANB#");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.thisName = "E^V\"JUkQ[v";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.newNameType("", "BANB#");
      classWriter0.visitEnd();
      classWriter0.newInteger((-3275));
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newField("BANB#", "", "The array of prefixes must not be null");
      classWriter0.visitEnd();
      classWriter0.newMethodItem("", "", "", false);
      System.setCurrentTimeMillis(11);
      classWriter0.newUTF8("The list of suffixes must not be null");
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Item item0 = new Item(1);
      Type type0 = Type.INT_TYPE;
      System.setCurrentTimeMillis(0L);
      boolean boolean0 = classWriter0.invalidFrames;
      int int0 = Type.ARRAY;
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.toByteArray();
      classWriter0.threshold = 14;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "wheel.asm.ClassWriter");
      classWriter0.visitSource("wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(4, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Type type0 = Type.SHORT_TYPE;
      classWriter0.newConst(type0);
      System.setCurrentTimeMillis(1);
      Class<Method> class0 = Method.class;
      Type.getDescriptor(class0);
      boolean boolean0 = classWriter0.invalidFrames;
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = new Boolean(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "VU~<Q8-58N\"";
      stringArray0[1] = "Ljava/lang/reflect/Method;";
      stringArray0[2] = "Ljava/lang/reflect/Method;";
      stringArray0[3] = "Ljava/lang/reflect/Method;";
      stringArray0[4] = "wheel.asm.ClassWriter";
      classWriter0.visit(8, (-3295), "Ljava/lang/reflect/Method;", "Class not found", "wheel.asm.ClassWriter", stringArray0);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitSource("mj\"[\"f.mD$~QLWVG$|j", "wheel.asm.ClassWriter");
      classWriter0.toByteArray();
      classWriter0.addType("h}-[=2`<yE;Qn");
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      Item item0 = classWriter0.key2;
      Item item1 = new Item(1);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.newConst(type0);
      Item item2 = new Item(4);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitSource("wheel.asm.ClassWriter", "1v");
      classWriter0.newFloat(9);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.ClassWriter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      classWriter0.toByteArray();
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.newNameType("wheel.asm.ClassWriter", "float");
      String string0 = "org.apache.commons.io.filefilter.EmptyFileFilter";
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "java/lang/Object");
      String string1 = "5'N|fg";
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(4, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = 499;
      ClassWriter classWriter0 = new ClassWriter(499);
      String string0 = "org.apache.commons.io.filefilter.EmptyFileFilter";
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.EmptyFileFilter");
      byte[] byteArray0 = new byte[0];
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      // Undeclared exception!
      try { 
        classWriter0.newConst(mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@769e5e29
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = 26;
      ClassWriter classWriter0 = new ClassWriter(26);
      Item item0 = new Item(1);
      Type type0 = Type.DOUBLE_TYPE;
      Class<Long> class0 = Long.class;
      Type type1 = Type.getType(class0);
      classWriter0.newConst(type1);
      System.setCurrentTimeMillis(0L);
      Class<Object> class1 = Object.class;
      Type.getDescriptor(class1);
      boolean boolean0 = classWriter0.invalidFrames;
      int int1 = Type.ARRAY;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      Boolean boolean1 = new Boolean("");
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.toByteArray();
      String string1 = "org.apache.commons.io.filefilter.EmptyFileFilter";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("wheel.asm.ClassWriter", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
