/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:03:25 GMT 2018
 */

package weka.classifiers.bayes.net.search.ci;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm;
import weka.classifiers.meta.MultiClassClassifier;
import weka.classifiers.misc.InputMappedClassifier;
import weka.core.Attribute;
import weka.core.Instances;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ICSSearchAlgorithm_ESTest extends ICSSearchAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String string0 = iCSSearchAlgorithm0.getRevision();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertEquals("8034", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ICSSearchAlgorithm.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      MultiClassClassifier multiClassClassifier0 = new MultiClassClassifier();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String string0 = iCSSearchAlgorithm0.globalInfo();
      assertEquals("This Bayes Network learning algorithm uses conditional independence tests to find a skeleton, finds V-nodes and applies a set of rules to find the directions of the remaining arrows.", string0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String[] stringArray1 = iCSSearchAlgorithm0.getOptions();
      iCSSearchAlgorithm0.setOptions(stringArray1);
      int int0 = (-693);
      iCSSearchAlgorithm0.setMaxCardinality(int0);
      assertEquals((-693), iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      Instances instances0 = new Instances("lD", arrayList0, 8003);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances("@data", arrayList0, 0);
      boolean[][] booleanArray0 = new boolean[17][6];
      booleanArray0[1] = booleanArray0[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      booleanArray0[2] = booleanArray0[1];
      boolean[] booleanArray1 = new boolean[9];
      booleanArray1[0] = true;
      booleanArray1[4] = true;
      booleanArray1[6] = true;
      booleanArray0[3] = booleanArray0[1];
      iCSSearchAlgorithm0.existsSepSet(2, 1, 1, booleanArray0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      Instances instances0 = new Instances("adaM", arrayList0, 8013);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Instances instances1 = new Instances("@data", arrayList0, 0);
      boolean[][] booleanArray0 = new boolean[27][6];
      boolean[] booleanArray1 = new boolean[10];
      booleanArray1[0] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add(attribute0);
      arrayList1.add("integer");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      iCSSearchAlgorithm0.setMaxCardinality(2);
      iCSSearchAlgorithm0.getOptions();
      iCSSearchAlgorithm0.existsSepSet(1, 10, 2, booleanArray0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("<o#&t-L{6", arrayList0, 8010);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      iCSSearchAlgorithm0.setOptions((String[]) null);
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm0.maxCardinalityTipText();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("NOV*BQW^", 8010);
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("U~G=,zz6q;9{HW", arrayList1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute1);
      boolean[][] booleanArray0 = new boolean[1][0];
      boolean[] booleanArray1 = new boolean[1];
      booleanArray1[0] = true;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("uy-haHM%55+6~p{Oe", arrayList0, 8010);
      Attribute attribute0 = new Attribute("", "");
      arrayList0.add(attribute0);
      iCSSearchAlgorithm0.setMaxCardinality(0);
      BayesNet bayesNet0 = new BayesNet();
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Locale.getISOCountries();
      InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("lD", arrayList0, 8007);
      Attribute attribute0 = new Attribute("@data", instances0, (-1115));
      arrayList0.add(attribute0);
      Attribute attribute1 = attribute0.copy("@end");
      arrayList0.add(attribute1);
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      Instances instances0 = new Instances("daM", arrayList0, 8013);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances("@data", arrayList0, 0);
      boolean[][] booleanArray0 = new boolean[17][6];
      boolean[] booleanArray1 = new boolean[10];
      booleanArray1[0] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[6] = true;
      booleanArray0[0] = booleanArray1;
      booleanArray0[1] = booleanArray1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      booleanArray0[2] = booleanArray1;
      boolean[] booleanArray2 = new boolean[9];
      arrayList0.add(attribute0);
      booleanArray2[0] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      iCSSearchAlgorithm0.setMaxCardinality(781);
      booleanArray1[9] = true;
      booleanArray2[4] = true;
      booleanArray2[6] = true;
      booleanArray0[3] = booleanArray1;
      iCSSearchAlgorithm0.getOptions();
      iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray0);
      assertEquals(781, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("lD", arrayList0, 7986);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      boolean[][] booleanArray0 = new boolean[3][6];
      boolean[] booleanArray1 = new boolean[13];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      booleanArray1[0] = true;
      booleanArray1[9] = false;
      iCSSearchAlgorithm0.listOptions();
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = true;
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      attribute0.setStringValue("D");
      Attribute attribute1 = new Attribute("@end");
      attribute1.toString();
      attribute1.addStringValue(attribute0, 69);
      arrayList1.add((String) null);
      arrayList0.add(attribute1);
      instances0.toArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray0);
      Random.setNextRandom(2598);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.name(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      Instances instances0 = new Instances("lD", arrayList0, 8003);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSet0.getRevision();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      boolean[][] booleanArray0 = new boolean[4][6];
      boolean[] booleanArray1 = new boolean[8];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = true;
      booleanArray0[0] = booleanArray1;
      booleanArray0[1] = booleanArray1;
      booleanArray0[2] = booleanArray1;
      booleanArray1[6] = true;
      booleanArray0[3] = booleanArray1;
      boolean[][] booleanArray2 = new boolean[9][3];
      booleanArray2[1] = booleanArray1;
      booleanArray2[2] = booleanArray1;
      booleanArray2[3] = booleanArray1;
      booleanArray2[4] = booleanArray1;
      booleanArray2[5] = booleanArray1;
      booleanArray2[6] = booleanArray1;
      iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray2);
      assertEquals("Set the maximum number of parents a node in the Bayes net can have. When initialized as Naive Bayes, setting this parameter to 1 results in a Naive Bayes classifier. When set to 2, a Tree Augmented Bayes Network (TAN) is learned, and when set >2, a Bayes Net Augmented Bayes Network (BAN) is learned. By setting it to a value much larger than the number of nodes in the network (the default of 100000 pretty much guarantees this), no restriction on the number of parents is enforced", iCSSearchAlgorithm0.maxNrOfParentsTipText());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList0.addAll((Collection<? extends Attribute>) arrayList1);
      Instances instances0 = new Instances("Q4", arrayList0, 8028);
      Attribute attribute0 = new Attribute("@relation", instances0, 8028);
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("@attribute");
      arrayList0.add(attribute1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setMaxCardinality((-1255));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("lD", arrayList0, 8003);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances("@data", arrayList0, 0);
      boolean[][] booleanArray0 = new boolean[4][6];
      boolean[] booleanArray1 = new boolean[10];
      booleanArray1[9] = false;
      attribute0.setStringValue("?xSlz*4");
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[6] = true;
      arrayList0.add(attribute0);
      instances1.toArray();
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.calcVeeNodes(booleanArray0, booleanArray0, (ICSSearchAlgorithm.SeparationSet[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList0.addAll((Collection<? extends Attribute>) arrayList1);
      Instances instances0 = new Instances("lD", arrayList0, 8028);
      Attribute attribute0 = new Attribute("@relation", instances0, 8028);
      Attribute attribute1 = new Attribute("@attribute");
      arrayList0.add(attribute1);
      arrayList0.add(attribute1);
      arrayList0.add(attribute1);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setMaxCardinality((-1254));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList0.addAll((Collection<? extends Attribute>) arrayList1);
      Instances instances0 = new Instances("lD", arrayList0, 8028);
      Attribute attribute0 = new Attribute("@relation", instances0, 8028);
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("@attribute");
      arrayList0.add(attribute1);
      arrayList0.add(attribute1);
      arrayList0.add(attribute1);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setMaxCardinality((-1254));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      Instances instances0 = new Instances("lD", arrayList0, 8003);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances("@data", arrayList0, 0);
      boolean[] booleanArray0 = new boolean[10];
      booleanArray0[0] = true;
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add(attribute0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      iCSSearchAlgorithm0.setMaxCardinality(781);
      iCSSearchAlgorithm0.getOptions();
      boolean[][] booleanArray1 = new boolean[1][3];
      booleanArray1[0] = booleanArray0;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(0, 2, 3, booleanArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("I(", arrayList0, 8020);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      boolean[] booleanArray0 = new boolean[7];
      Attribute attribute0 = new Attribute(".arff", (List<String>) null, 8020);
      arrayList0.add(attribute0);
      booleanArray0[1] = true;
      booleanArray0[4] = true;
      booleanArray0[0] = true;
      booleanArray0[3] = true;
      boolean[] booleanArray1 = new boolean[27];
      booleanArray1[2] = true;
      booleanArray1[11] = true;
      Attribute attribute1 = new Attribute(".arff", 8020);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean[][] booleanArray2 = new boolean[21][6];
      boolean[] booleanArray3 = new boolean[17];
      booleanArray3[7] = true;
      booleanArray2[0] = booleanArray3;
      booleanArray2[1] = booleanArray0;
      booleanArray2[2] = booleanArray0;
      arrayList0.add(attribute1);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(2, 1, 1, booleanArray2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.trimToSize();
      Instances instances0 = new Instances("lD", arrayList0, 8003);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("@relation", arrayList1);
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0);
      boolean[][] booleanArray0 = new boolean[15][6];
      boolean[] booleanArray1 = new boolean[8];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = true;
      booleanArray0[0] = booleanArray1;
      booleanArray0[1] = booleanArray1;
      booleanArray0[2] = booleanArray1;
      boolean[] booleanArray2 = new boolean[9];
      booleanArray2[0] = true;
      booleanArray1[6] = false;
      booleanArray2[4] = true;
      booleanArray0[3] = booleanArray2;
      iCSSearchAlgorithm0.existsSepSet(2, 0, 1, booleanArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("lD", arrayList0, 7986);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      instances0.deleteStringAttributes();
      Attribute attribute0 = new Attribute("lD");
      arrayList0.add(attribute0);
      Instances instances1 = new Instances("@data", arrayList0, 0);
      boolean[] booleanArray0 = new boolean[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean[][] booleanArray1 = new boolean[4][2];
      booleanArray1[0] = booleanArray0;
      booleanArray1[1] = booleanArray0;
      booleanArray1[2] = booleanArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      booleanArray1[3] = booleanArray0;
      arrayList0.add(attribute0);
      attribute0.copy("Z3-");
      iCSSearchAlgorithm0.calcDependencyGraph(booleanArray1, (ICSSearchAlgorithm.SeparationSet[][]) null);
      instances0.attribute("date");
      attribute0.indexOfValue("numeric");
      ICSSearchAlgorithm iCSSearchAlgorithm1 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm1.new SeparationSet();
      iCSSearchAlgorithm_SeparationSet0.contains(2);
      Object object0 = new Object();
      iCSSearchAlgorithm1.getOptions();
      ICSSearchAlgorithm iCSSearchAlgorithm2 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm2.setMaxCardinality(7986);
  }
}
