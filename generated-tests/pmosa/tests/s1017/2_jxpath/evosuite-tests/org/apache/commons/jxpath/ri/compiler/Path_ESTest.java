/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 12:40:23 GMT 2018
 */

package org.apache.commons.jxpath.ri.compiler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.axes.AncestorContext;
import org.apache.commons.jxpath.ri.axes.AttributeContext;
import org.apache.commons.jxpath.ri.axes.ChildContext;
import org.apache.commons.jxpath.ri.axes.DescendantContext;
import org.apache.commons.jxpath.ri.axes.NamespaceContext;
import org.apache.commons.jxpath.ri.axes.NodeSetContext;
import org.apache.commons.jxpath.ri.axes.ParentContext;
import org.apache.commons.jxpath.ri.axes.PredicateContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.apache.commons.jxpath.ri.compiler.CoreFunction;
import org.apache.commons.jxpath.ri.compiler.CoreOperationAdd;
import org.apache.commons.jxpath.ri.compiler.CoreOperationAnd;
import org.apache.commons.jxpath.ri.compiler.CoreOperationEqual;
import org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan;
import org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual;
import org.apache.commons.jxpath.ri.compiler.CoreOperationNegate;
import org.apache.commons.jxpath.ri.compiler.CoreOperationOr;
import org.apache.commons.jxpath.ri.compiler.CoreOperationUnion;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.compiler.ExpressionPath;
import org.apache.commons.jxpath.ri.compiler.LocationPath;
import org.apache.commons.jxpath.ri.compiler.NameAttributeTest;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.compiler.Step;
import org.apache.commons.jxpath.ri.compiler.VariableReference;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Path_ESTest extends Path_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Step[] stepArray0 = new Step[0];
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      Expression[] expressionArray0 = new Expression[2];
      expressionArray0[0] = (Expression) locationPath0;
      expressionArray0[1] = (Expression) locationPath0;
      locationPath0.areBasicPredicates(expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      expressionPath0.toString();
      expressionPath0.isSimpleExpressionPath();
      expressionPath0.getPredicates();
      expressionPath0.computeContextDependent();
      expressionPath0.isSimplePath();
      expressionPath0.getPredicates();
      QName qName0 = new QName(".vSC");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, true, nodeNameTest0);
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext(ancestorContext0, basicNodeSet0);
      // Undeclared exception!
      try { 
        expressionPath0.buildContextChain(nodeSetContext0, (-2762), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      Expression[] expressionArray0 = new Expression[1];
      expressionArray0[0] = (Expression) locationPath0;
      // Undeclared exception!
      try { 
        locationPath0.areBasicPredicates(expressionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocationPath locationPath0 = new LocationPath(true, (Step[]) null);
      Expression[] expressionArray0 = new Expression[1];
      expressionArray0[0] = (Expression) locationPath0;
      boolean boolean0 = locationPath0.areBasicPredicates(expressionArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Step step0 = new Step((-3105), (NodeTest) null, (Expression[]) null);
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd((Expression[]) null);
      Step[] stepArray0 = new Step[1];
      stepArray0[0] = step0;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAnd0, (Expression[]) null, stepArray0);
      boolean boolean0 = expressionPath0.computeContextDependent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Step step0 = new Step((-3120), (NodeTest) null, (Expression[]) null);
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd((Expression[]) null);
      Step[] stepArray0 = new Step[1];
      stepArray0[0] = step0;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAnd0, (Expression[]) null, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath0.getSingleNodePointerForSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      Expression[] expressionArray0 = new Expression[2];
      expressionArray0[0] = (Expression) locationPath0;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Step step0 = new Step(25, processingInstructionTest0, expressionArray0);
      Step step1 = new Step((-1237), processingInstructionTest0, expressionArray0);
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Step step2 = new Step((-1237), nodeNameTest0, expressionArray0);
      Step step3 = new Step(25, nodeNameTest0, expressionArray0);
      Step step4 = new Step(2741, processingInstructionTest0, expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
      expressionPath0.isSimpleStep(step0);
      expressionPath0.buildContextChain((EvalContext) null, (-1237), false);
      // Undeclared exception!
      try { 
        locationPath0.getSingleNodePointerForSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("aYh.']1']Qe-N");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1938);
      Step step0 = new Step(1938, nodeTypeTest0, (Expression[]) null);
      Step step1 = new Step(2374, processingInstructionTest0, (Expression[]) null);
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Step step2 = new Step((-1), nodeNameTest0, (Expression[]) null);
      Step step3 = new Step((-1593), nodeTypeTest0, (Expression[]) null);
      Step step4 = new Step(1938, processingInstructionTest0, (Expression[]) null);
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion((Expression[]) null);
      Step[] stepArray0 = new Step[4];
      stepArray0[0] = step2;
      stepArray0[1] = step4;
      stepArray0[2] = step4;
      stepArray0[3] = step1;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationUnion0, (Expression[]) null, stepArray0);
      expressionPath0.isSimpleStep(step2);
      expressionPath0.buildContextChain((EvalContext) null, 1, false);
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      // Undeclared exception!
      try { 
        locationPath0.getSingleNodePointerForSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Step step0 = new Step((-3121), (NodeTest) null, (Expression[]) null);
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd((Expression[]) null);
      Step[] stepArray0 = new Step[1];
      stepArray0[0] = step0;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAnd0, (Expression[]) null, stepArray0);
      EvalContext evalContext0 = expressionPath0.evalSteps((EvalContext) null);
      assertNull(evalContext0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Step[] stepArray0 = new Step[0];
      Expression[] expressionArray0 = new Expression[5];
      Constant constant0 = new Constant("");
      ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
      CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
      Step[] stepArray1 = new Step[9];
      EvalContext evalContext0 = null;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(12);
      expressionPath0.createContextForStep((EvalContext) null, 0, nodeTypeTest0);
      QName qName0 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        expressionPath0.createContextForStep((EvalContext) null, Integer.MIN_VALUE, nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Step[] stepArray0 = new Step[6];
      QName qName0 = new QName("", "");
      Expression[] expressionArray0 = new Expression[1];
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      expressionArray0[0] = (Expression) coreOperationUnion0;
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(1);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      EvalContext evalContext0 = expressionPath0.createContextForStep((EvalContext) null, 12, nodeTypeTest1);
      QName qName1 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      LocationPath locationPath1 = new LocationPath(true, stepArray0);
      locationPath1.createContextForStep(evalContext0, 947, nodeTypeTest1);
      AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, false, nodeTypeTest1);
      // Undeclared exception!
      try { 
        ancestorContext0.getRootContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.EvalContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Expression[] expressionArray0 = new Expression[0];
      CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
      Expression[] expressionArray1 = new Expression[6];
      expressionArray1[0] = (Expression) coreOperationAdd0;
      expressionArray1[1] = (Expression) coreOperationAdd0;
      Step[] stepArray0 = new Step[0];
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAdd0, expressionArray1, stepArray0);
      QName qName0 = new QName("SXbeg.D");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ParentContext parentContext0 = new ParentContext((EvalContext) null, nodeNameTest0);
      coreOperationAdd0.compute(parentContext0);
      ExpressionPath expressionPath1 = new ExpressionPath(expressionPath0, expressionArray1, stepArray0);
      boolean boolean0 = expressionPath1.isSimpleExpressionPath();
      expressionPath0.isSimpleExpressionPath();
      expressionPath1.getSteps();
      expressionPath0.toString();
      boolean boolean1 = expressionPath1.areBasicPredicates(expressionArray0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      Expression[] expressionArray0 = new Expression[2];
      expressionArray0[0] = (Expression) locationPath0;
      expressionArray0[1] = (Expression) locationPath0;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("uh2t^I#RL3Zp");
      Step step0 = new Step(3, processingInstructionTest0, expressionArray0);
      Step step1 = new Step(325, processingInstructionTest0, expressionArray0);
      QName qName0 = new QName("uh2t^I#RL3Zp");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Step step2 = new Step(2, processingInstructionTest0, expressionArray0);
      Step step3 = new Step(2374, nodeNameTest0, expressionArray0);
      Step step4 = new Step(325, nodeNameTest0, expressionArray0);
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
      expressionPath0.isSimpleStep(step2);
      // Undeclared exception!
      try { 
        expressionPath0.buildContextChain((EvalContext) null, 7, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Step step0 = new Step(5, (NodeTest) null, (Expression[]) null);
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd((Expression[]) null);
      Step[] stepArray0 = new Step[1];
      stepArray0[0] = step0;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAnd0, (Expression[]) null, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath0.getSingleNodePointerForSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Step[] stepArray0 = new Step[0];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      Expression[] expressionArray0 = new Expression[2];
      expressionArray0[0] = (Expression) locationPath0;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(7);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, (Expression[]) null, stepArray0);
      EvalContext evalContext0 = null;
      EvalContext evalContext1 = expressionPath0.createContextForStep((EvalContext) null, 7, nodeTypeTest0);
      QName qName0 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        expressionPath0.createContextForStep(evalContext1, 25, nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.EvalContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Expression[] expressionArray0 = new Expression[0];
      CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
      Expression[] expressionArray1 = new Expression[2];
      Constant constant0 = new Constant("=:{DqR");
      Step[] stepArray0 = new Step[6];
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      Step step0 = new Step(1047, nodeNameTest0, expressionArray0);
      stepArray0[0] = step0;
      Step step1 = new Step(1047, nodeNameTest0, expressionArray0);
      stepArray0[1] = step1;
      Step step2 = new Step(1047, nodeNameTest0, expressionArray0);
      stepArray0[2] = step2;
      Step step3 = new Step(1047, nodeNameTest0, expressionArray0);
      stepArray0[3] = step3;
      Step step4 = new Step(1047, nodeNameTest0, expressionArray1);
      stepArray0[4] = step4;
      Step step5 = new Step(1047, nodeNameTest0, expressionArray0);
      stepArray0[5] = step5;
      ExpressionPath expressionPath0 = new ExpressionPath(constant0, expressionArray0, stepArray0);
      CoreOperationAdd coreOperationAdd1 = new CoreOperationAdd(expressionArray0);
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray1);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1047);
      expressionPath0.createContextForStep((EvalContext) null, Integer.MIN_VALUE, nodeTypeTest0);
      QName qName0 = new QName("J>8#qgO[1*b.<", "J>8#qgO[1*b.<");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      expressionPath0.createContextForStep((EvalContext) null, 1, nodeTypeTest0);
      // Undeclared exception!
      try { 
        expressionPath0.evalSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Step[] stepArray0 = new Step[6];
      QName qName0 = new QName("", "");
      Expression[] expressionArray0 = new Expression[1];
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      expressionArray0[0] = (Expression) coreOperationUnion0;
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(1);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      EvalContext evalContext0 = expressionPath0.createContextForStep((EvalContext) null, 5, nodeTypeTest1);
      QName qName1 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      LocationPath locationPath1 = new LocationPath(true, stepArray0);
      locationPath1.createContextForStep(evalContext0, 942, nodeTypeTest1);
      AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, false, nodeTypeTest1);
      // Undeclared exception!
      try { 
        ancestorContext0.getRootContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.EvalContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Expression[] expressionArray0 = new Expression[9];
      expressionArray0[0] = null;
      expressionArray0[1] = null;
      expressionArray0[2] = null;
      expressionArray0[3] = null;
      expressionArray0[7] = null;
      expressionArray0[8] = null;
      Step[] stepArray0 = new Step[2];
      QName qName0 = new QName("Qn");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Step step0 = new Step(2, nodeNameTest0, expressionArray0);
      stepArray0[0] = step0;
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      Step step1 = new Step(2, nodeNameTest1, expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath((Expression) null, expressionArray0, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath0.evalSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("", "");
      Expression[] expressionArray0 = new Expression[1];
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      expressionArray0[0] = (Expression) coreOperationUnion0;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(1);
      QName qName1 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      Step[] stepArray0 = new Step[8];
      Step step0 = new Step((-2384), nodeTypeTest0, expressionArray0);
      stepArray0[0] = step0;
      Step step1 = new Step(947, nodeNameTest0, expressionArray0);
      stepArray0[1] = step1;
      Expression[] expressionArray1 = new Expression[1];
      expressionArray1[0] = (Expression) coreOperationUnion0;
      Step step2 = new Step(0, nodeTypeTest0, expressionArray1);
      stepArray0[2] = step2;
      Step step3 = new Step(12, nodeTypeTest0, expressionArray1);
      stepArray0[3] = step3;
      Step step4 = new Step(1, nodeTypeTest0, expressionArray0);
      stepArray0[4] = step4;
      Step step5 = new Step((-2486), nodeTypeTest0, expressionArray1);
      stepArray0[5] = step5;
      Step step6 = new Step(2018, nodeNameTest0, expressionArray1);
      stepArray0[6] = step6;
      Step step7 = new Step(947, nodeNameTest0, expressionArray0);
      stepArray0[7] = step7;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationUnion0, expressionArray0, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath0.evalSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.EvalContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      Expression[] expressionArray0 = new Expression[0];
      Step step0 = new Step((-1), (NodeTest) null, expressionArray0);
      stepArray0[0] = step0;
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      locationPath0.areBasicPredicates(expressionArray0);
      ChildContext childContext0 = new ChildContext((EvalContext) null, (NodeTest) null, true, true);
      AncestorContext ancestorContext0 = new AncestorContext(childContext0, false, (NodeTest) null);
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext(ancestorContext0, basicNodeSet0);
      locationPath0.evalSteps(nodeSetContext0);
      // Undeclared exception!
      try { 
        locationPath0.computeValue((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.LocationPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Step[] stepArray0 = new Step[6];
      QName qName0 = new QName("", "");
      Expression[] expressionArray0 = new Expression[1];
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      expressionArray0[0] = (Expression) coreOperationUnion0;
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      EvalContext evalContext0 = null;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest(1);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      EvalContext evalContext1 = expressionPath0.createContextForStep((EvalContext) null, 2, nodeTypeTest1);
      QName qName1 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      LocationPath locationPath1 = new LocationPath(false, stepArray0);
      locationPath0.createContextForStep(evalContext1, (-976), nodeTypeTest0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1, "");
      AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, nodeNameTest1);
      LocationPath locationPath2 = new LocationPath(false, stepArray0);
      // Undeclared exception!
      try { 
        locationPath2.searchForPath(evalContext1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocationPath locationPath0 = new LocationPath(true, (Step[]) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Expression[] expressionArray0 = new Expression[0];
      Step step0 = new Step(1, nodeTypeTest0, expressionArray0);
      locationPath0.isSimpleStep(step0);
      // Undeclared exception!
      try { 
        locationPath0.searchForPath((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Expression[] expressionArray0 = new Expression[0];
      CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
      Expression[] expressionArray1 = new Expression[2];
      expressionArray1[0] = (Expression) coreOperationAdd0;
      expressionArray1[1] = (Expression) coreOperationAdd0;
      Step[] stepArray0 = new Step[0];
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAdd0, expressionArray1, stepArray0);
      expressionPath0.areBasicPredicates(expressionArray1);
      expressionPath0.isSimpleExpressionPath();
      QName qName0 = new QName("&quot;");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      int int0 = 11;
      EvalContext evalContext0 = expressionPath0.createContextForStep((EvalContext) null, 11, nodeNameTest0);
      EvalContext evalContext1 = expressionPath0.evalSteps(evalContext0);
      boolean boolean0 = false;
      DescendantContext descendantContext0 = new DescendantContext(evalContext1, false, nodeNameTest0);
      descendantContext0.getContextNodeList();
      PredicateContext predicateContext0 = new PredicateContext(descendantContext0, coreOperationAdd0);
      expressionPath0.buildContextChain(evalContext1, int0, boolean0);
      String string0 = expressionPath0.toString();
      assertEquals("()[][]", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Step[] stepArray0 = new Step[6];
      QName qName0 = new QName("", "");
      Expression[] expressionArray0 = new Expression[1];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      EvalContext evalContext0 = expressionPath0.createContextForStep((EvalContext) null, 10, nodeTypeTest0);
      QName qName1 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      LocationPath locationPath1 = new LocationPath(true, stepArray0);
      locationPath1.createContextForStep(evalContext0, 947, nodeTypeTest0);
      AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, nodeNameTest0);
      expressionPath0.getSteps();
      Object object0 = new Object();
      boolean boolean0 = expressionPath0.computeContextDependent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      Expression[] expressionArray0 = new Expression[2];
      expressionArray0[0] = (Expression) locationPath0;
      expressionArray0[1] = (Expression) locationPath0;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("uh2t^I#RL3Zp");
      Step step0 = new Step(3, processingInstructionTest0, expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      expressionPath0.createContextForStep((EvalContext) null, 3, processingInstructionTest0);
      QName qName0 = new QName("", "");
      expressionPath0.getSteps();
      // Undeclared exception!
      try { 
        locationPath0.compute((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.LocationPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Expression[] expressionArray0 = new Expression[0];
      CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
      coreOperationAdd0.args = expressionArray0;
      Expression[] expressionArray1 = new Expression[1];
      expressionArray1[0] = (Expression) coreOperationAdd0;
      Step[] stepArray0 = new Step[0];
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAdd0, expressionArray1, stepArray0);
      expressionPath0.areBasicPredicates(expressionArray1);
      expressionPath0.isSimpleExpressionPath();
      QName qName0 = new QName("&quot;");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ExpressionPath expressionPath1 = new ExpressionPath(coreOperationAdd0, expressionArray0, stepArray0);
      expressionPath1.isSimpleExpressionPath();
      boolean boolean0 = JXPathContextReferenceImpl.USE_SOFT_CACHE;
      ExpressionPath expressionPath2 = new ExpressionPath((Expression) null, expressionArray0, stepArray0);
      Step[] stepArray1 = expressionPath1.getSteps();
      assertSame(stepArray1, stepArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(true, stepArray0);
      Expression[] expressionArray0 = new Expression[2];
      expressionArray0[0] = (Expression) locationPath0;
      expressionArray0[1] = (Expression) locationPath0;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(12);
      int int0 = Byte.SIZE;
      Constant constant0 = new Constant(8);
      ExpressionPath expressionPath0 = new ExpressionPath(constant0, expressionArray0, stepArray0);
      EvalContext evalContext0 = expressionPath0.createContextForStep((EvalContext) null, 8, nodeTypeTest0);
      QName qName0 = new QName((String) null, (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      LocationPath locationPath1 = new LocationPath(true, stepArray0);
      locationPath0.createContextForStep(evalContext0, 12, nodeTypeTest0);
      AttributeContext attributeContext0 = new AttributeContext(evalContext0, nodeNameTest0);
      expressionPath0.getSteps();
      // Undeclared exception!
      try { 
        locationPath0.compute(evalContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.EvalContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Step[] stepArray0 = new Step[7];
      QName qName0 = new QName("", "");
      Expression[] expressionArray0 = new Expression[1];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Step step0 = new Step(2, nodeNameTest0, expressionArray0);
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, expressionArray0, stepArray0);
      ExpressionPath expressionPath1 = new ExpressionPath(coreOperationUnion0, expressionArray0, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath1.isSimpleStep(step0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LocationPath locationPath0 = new LocationPath(true, (Step[]) null);
      QName qName0 = new QName("", "e");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Expression[] expressionArray0 = new Expression[0];
      Step step0 = new Step(5, nodeNameTest0, expressionArray0);
      locationPath0.isSimpleStep(step0);
      // Undeclared exception!
      try { 
        locationPath0.searchForPath((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Step[] stepArray0 = new Step[7];
      QName qName0 = new QName("java.lang.Long", "java.lang.Long");
      Expression[] expressionArray0 = new Expression[1];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1123));
      Step step0 = new Step(1, nodeTypeTest0, expressionArray0);
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationUnion0, expressionArray0, stepArray0);
      ExpressionPath expressionPath1 = new ExpressionPath(expressionPath0, expressionArray0, stepArray0);
      expressionPath1.isSimpleStep(step0);
      // Undeclared exception!
      try { 
        expressionPath1.isSimpleExpressionPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Step[] stepArray0 = new Step[0];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(13);
      ExpressionPath expressionPath0 = new ExpressionPath(locationPath0, (Expression[]) null, stepArray0);
      expressionPath0.createContextForStep((EvalContext) null, 13, nodeTypeTest0);
      expressionPath0.getSteps();
      // Undeclared exception!
      try { 
        locationPath0.compute((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      locationPath0.isContextDependent();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Expression[] expressionArray0 = new Expression[9];
      nodeTypeTest0.toString();
      expressionArray0[0] = (Expression) locationPath0;
      Step step0 = new Step(1, nodeTypeTest0, expressionArray0);
      step0.toString();
      locationPath0.isSimpleStep(step0);
      boolean boolean0 = locationPath0.areBasicPredicates(expressionArray0);
      assertFalse(boolean0);
      
      boolean boolean1 = locationPath0.isAbsolute();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Step[] stepArray0 = new Step[0];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      Expression[] expressionArray0 = new Expression[3];
      expressionArray0[0] = (Expression) locationPath0;
      expressionArray0[1] = (Expression) locationPath0;
      expressionArray0[2] = (Expression) locationPath0;
      locationPath0.areBasicPredicates(expressionArray0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      EvalContext evalContext0 = locationPath0.createContextForStep((EvalContext) null, 4, nodeTypeTest0);
      EvalContext evalContext1 = locationPath0.evalSteps(evalContext0);
      assertSame(evalContext0, evalContext1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Expression[] expressionArray0 = new Expression[7];
      CoreFunction coreFunction0 = new CoreFunction(6, expressionArray0);
      expressionArray0[0] = (Expression) coreFunction0;
      Constant constant0 = new Constant("");
      expressionArray0[1] = (Expression) constant0;
      Step[] stepArray0 = new Step[9];
      Step step0 = new Step((-3250), (NodeTest) null, expressionArray0);
      stepArray0[0] = step0;
      Step step1 = new Step((-3250), (NodeTest) null, expressionArray0);
      stepArray0[1] = step1;
      Step step2 = new Step((-3250), (NodeTest) null, expressionArray0);
      stepArray0[2] = step2;
      Step step3 = new Step(34, (NodeTest) null, expressionArray0);
      stepArray0[3] = step3;
      Step step4 = new Step((-3250), (NodeTest) null, expressionArray0);
      stepArray0[4] = step4;
      Step step5 = new Step(3217, (NodeTest) null, expressionArray0);
      stepArray0[5] = step5;
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Step step6 = new Step(20, nodeNameTest0, expressionArray0);
      stepArray0[6] = step6;
      Step step7 = new Step(20, nodeNameTest0, expressionArray0);
      stepArray0[7] = step7;
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, (String) null);
      Step step8 = new Step(6, nodeNameTest1, expressionArray0);
      stepArray0[8] = step8;
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      expressionArray0[2] = (Expression) locationPath0;
      CoreFunction coreFunction1 = new CoreFunction(4254, expressionArray0);
      Expression expression0 = coreFunction1.getArg3();
      expressionArray0[3] = expression0;
      Expression expression1 = coreFunction0.getArg2();
      expressionArray0[4] = expression1;
      CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(expressionArray0[2]);
      expressionArray0[5] = (Expression) coreOperationNegate0;
      Expression[] expressionArray1 = new Expression[4];
      expressionArray1[0] = expression1;
      expressionArray1[1] = (Expression) coreFunction1;
      expressionArray1[2] = expression0;
      expressionArray1[3] = (Expression) locationPath0;
      CoreFunction coreFunction2 = new CoreFunction(0, expressionArray1);
      expressionArray0[6] = (Expression) coreFunction2;
      CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationUnion0, expressionArray1, stepArray0);
      NamespaceContext namespaceContext0 = new NamespaceContext((EvalContext) null, nodeNameTest1);
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext(namespaceContext0, basicNodeSet0);
      DescendantContext descendantContext0 = new DescendantContext(nodeSetContext0, false, (NodeTest) null);
      EvalContext evalContext0 = expressionPath0.evalSteps(descendantContext0);
      assertEquals(0, evalContext0.getDocumentOrder());
      assertEquals(0, nodeSetContext0.getPosition());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Step[] stepArray0 = new Step[9];
      QName qName0 = new QName("FsJ.#*q|", "");
      Locale locale0 = Locale.CHINA;
      VariableReference variableReference0 = new VariableReference(qName0);
      CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(variableReference0, variableReference0);
      NameAttributeTest nameAttributeTest0 = new NameAttributeTest(variableReference0, coreOperationLessThanOrEqual0);
      CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(nameAttributeTest0, nameAttributeTest0);
      Expression[] expressionArray0 = new Expression[8];
      expressionArray0[0] = (Expression) nameAttributeTest0;
      CoreFunction coreFunction0 = new CoreFunction((-12), expressionArray0);
      coreFunction0.getArg2();
      expressionArray0[1] = null;
      expressionArray0[2] = (Expression) nameAttributeTest0;
      expressionArray0[3] = (Expression) variableReference0;
      expressionArray0[4] = (Expression) nameAttributeTest0;
      expressionArray0[5] = (Expression) coreOperationEqual0;
      expressionArray0[6] = (Expression) coreOperationLessThanOrEqual0;
      expressionArray0[7] = (Expression) variableReference0;
      CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
      CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationEqual0, coreOperationOr0);
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationGreaterThan0, expressionArray0, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath0.areBasicPredicates(expressionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Step[] stepArray0 = new Step[1];
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      Expression[] expressionArray0 = new Expression[1];
      NameAttributeTest nameAttributeTest0 = new NameAttributeTest(locationPath0, locationPath0);
      expressionArray0[0] = (Expression) nameAttributeTest0;
      boolean boolean0 = locationPath0.areBasicPredicates(expressionArray0);
      assertFalse(boolean0);
      
      Expression[] expressionArray1 = new Expression[3];
      expressionArray1[0] = (Expression) locationPath0;
      boolean boolean1 = locationPath0.areBasicPredicates(expressionArray1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Step step0 = new Step(3238, (NodeTest) null, (Expression[]) null);
      CoreOperationOr coreOperationOr0 = new CoreOperationOr((Expression[]) null);
      Step[] stepArray0 = new Step[1];
      stepArray0[0] = step0;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationOr0, (Expression[]) null, stepArray0);
      expressionPath0.isSimpleExpressionPath();
      LocationPath locationPath0 = new LocationPath(false, stepArray0);
      locationPath0.areBasicPredicates((Expression[]) null);
      locationPath0.computeContextDependent();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("\"L;#-&");
      ProcessingInstructionTest processingInstructionTest1 = new ProcessingInstructionTest("\"L;#-&");
      processingInstructionTest1.toString();
      locationPath0.toString();
      locationPath0.createContextForStep((EvalContext) null, 9, processingInstructionTest0);
      locationPath0.toString();
      // Undeclared exception!
      try { 
        locationPath0.searchForPath((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.InitialContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QName qName0 = new QName("-U#Zs9Bx')L#:t8>Y", "[bMS*zl;k");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Step step0 = new Step(2, nodeNameTest0, (Expression[]) null);
      EvalContext evalContext0 = null;
      CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd((Expression[]) null);
      Step[] stepArray0 = new Step[3];
      stepArray0[0] = step0;
      stepArray0[1] = step0;
      stepArray0[2] = step0;
      ExpressionPath expressionPath0 = new ExpressionPath(coreOperationAnd0, (Expression[]) null, stepArray0);
      // Undeclared exception!
      try { 
        expressionPath0.getSingleNodePointerForSteps((EvalContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.Path", e);
      }
  }
}
