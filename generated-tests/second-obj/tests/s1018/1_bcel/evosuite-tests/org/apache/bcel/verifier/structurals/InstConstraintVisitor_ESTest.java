/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:47:04 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.lang.reflect.Array;
import java.util.regex.Pattern;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantFieldref;
import org.apache.bcel.classfile.ConstantFloat;
import org.apache.bcel.classfile.ConstantLong;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantUtf8;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.ConversionInstruction;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFEQ;
import org.apache.bcel.generic.IFGE;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGE;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.InvokeInstruction;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.ReturnaddressType;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(0);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      assertEquals("iload_0", iLOAD0.getName());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1((IMPDEP1) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction(dUP2_X2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitALOAD((ALOAD) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FCONST fCONST0 = new FCONST(0.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      assertEquals((short)11, fCONST0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte)114);
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      assertEquals((short)16, bIPUSH0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 1;
      ICONST iCONST0 = new ICONST(1);
      instConstraintVisitor0.visitICONST(iCONST0);
      CHECKCAST cHECKCAST0 = new CHECKCAST(1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DCMPL dCMPL0 = new DCMPL();
      ISUB iSUB0 = new ISUB();
      GETSTATIC gETSTATIC0 = new GETSTATIC(512);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      assertEquals(3, gETSTATIC0.getLength());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC((INVOKEDYNAMIC) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      LMUL lMUL0 = new LMUL();
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      assertEquals(0, gOTO_W0.getIndex());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LCONST lCONST0 = new LCONST(0L);
      instConstraintVisitor0.visitLCONST(lCONST0);
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("#L'N6JNH.#W*afz");
      OperandStack operandStack0 = new OperandStack(175, objectType0);
      LocalVariables localVariables0 = new LocalVariables(175);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLALOAD(lALOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LALOAD constraint violated: The 'index' is not of type int but of type #L'N6JNH.#W*afz.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType(".");
      LocalVariables localVariables0 = new LocalVariables(29);
      OperandStack operandStack0 = new OperandStack(29, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type '.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      localVariables0.merge(localVariables0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      NOP nOP0 = new NOP();
      ConstantLong constantLong0 = new ConstantLong(2941L);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GOTO gOTO0 = new GOTO((InstructionHandle) null);
      gOTO0.updateTarget((InstructionHandle) null, (InstructionHandle) null);
      gOTO0.accept(instConstraintVisitor0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FSTORE fSTORE0 = new FSTORE(649);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(fSTORE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitInvokeInstruction((InvokeInstruction) null);
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      assertEquals(1, constantPoolGen0.getSize());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SIPUSH sIPUSH0 = new SIPUSH((short)5);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      assertEquals("sipush", sIPUSH0.getName());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      ObjectType objectType0 = new ObjectType("<init>");
      int int0 = 1700;
      OperandStack operandStack0 = new OperandStack(1700, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `init>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      localVariables0.merge(localVariables0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ObjectType.getInstance("Y{7z=w&&svP/D6");
      localVariables0.merge(localVariables0);
      instConstraintVisitor0.setFrame(frame0);
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("{IX{g,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type '{IX{g,Nj'!bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance("{IX{g,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(170, objectType0);
      LocalVariables localVariables0 = new LocalVariables(170);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      DASTORE dASTORE0 = new DASTORE();
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type '{IX{g,Nj'!bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LSHL lSHL0 = new LSHL();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(1);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      assertEquals(1, lSTORE0.getLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType(".");
      LocalVariables localVariables0 = new LocalVariables(29);
      OperandStack operandStack0 = new OperandStack(34, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      LRETURN lRETURN0 = new LRETURN();
      frame0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type '.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Y{7z=w&&svP/D6");
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.setThis((UninitializedObjectType) null);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D((I2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(2697, objectType0);
      int int0 = 64;
      LocalVariables localVariables0 = new LocalVariables(64);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      FNEG fNEG0 = new FNEG();
      FNEG fNEG1 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      JSR_W jSR_W0 = new JSR_W((InstructionHandle) null);
      jSR_W0.toString(true);
      instConstraintVisitor0.visitJSR_W(jSR_W0);
      FREM fREM0 = new FREM();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FRETURN fRETURN0 = new FRETURN();
      fRETURN0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("-:4xFD2x_<nP");
      OperandStack operandStack0 = new OperandStack(39, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1829);
      LocalVariables localVariables1 = new LocalVariables(39);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      uninitializedObjectType0.isAssignmentCompatibleWith(objectType0);
      localVariables0.toString();
      Frame.setThis(uninitializedObjectType0);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LLOAD lLOAD0 = new LLOAD(39);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV((FDIV) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L-:4xFD2x_<nP;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType0 = ObjectType.getInstance("R7");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = localVariables0.getClone();
      LocalVariables localVariables2 = localVariables1.getClone();
      Frame frame0 = new Frame(localVariables2, operandStack0);
      operandStack0.push(objectType0);
      localVariables2.merge(localVariables2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      frame0.getClone();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      I2B i2B0 = new I2B();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(38);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("-:4xF2Dmx_InP");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      OperandStack operandStack1 = new OperandStack(42, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      Frame frame2 = new Frame(42, 42);
      instConstraintVisitor0.setFrame(frame1);
      SWAP sWAP0 = new SWAP();
      LRETURN lRETURN0 = new LRETURN();
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type '-:4xF2Dmx_InP'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      ObjectType objectType0 = new ObjectType("Yf{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      LXOR lXOR0 = new LXOR();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not enough free stack slots to load a '");
      IAND iAND0 = new IAND();
      FRETURN fRETURN0 = new FRETURN();
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type 'Yf{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      ObjectType objectType0 = new ObjectType("<init>");
      OperandStack operandStack0 = new OperandStack(1700, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      String string1 = File.pathSeparator;
      POP2 pOP2_0 = new POP2();
      localVariables0.toString();
      frame0.clone();
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `init>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.ILLEGAL_TYPE;
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = ObjectType.getInstance("<illegal type>");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.getClone();
      AASTORE aASTORE0 = new AASTORE();
      aASTORE0.getExceptions();
      DRETURN dRETURN0 = new DRETURN();
      IXOR iXOR0 = new IXOR();
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP((DUP) null);
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      assertEquals(1, aRETURN0.getLength());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LDIV lDIV0 = new LDIV();
      DREM dREM0 = new DREM();
      Constant[] constantArray0 = new Constant[8];
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(4506, 4506);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IXOR iXOR0 = new IXOR();
      LocalVariables localVariables0 = new LocalVariables(162);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("uuS");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      F2D f2D0 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type 'uuS'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      ObjectType objectType0 = new ObjectType("irem[112](1)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      instConstraintVisitor0.setFrame(frame1);
      ASTORE aSTORE0 = new ASTORE(42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LXOR lXOR0 = new LXOR();
      IASTORE iASTORE0 = new IASTORE();
      FLOAD fLOAD0 = new FLOAD(42);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE((IFLE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType(".");
      LocalVariables localVariables0 = new LocalVariables(29);
      OperandStack operandStack0 = new OperandStack(34, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        lRETURN0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: Cannot consume 2 stack slots: only 1 slot(s) left on stack!
         // Stack:
         // Slots used: 1 MaxStack: 34.
         // . (Size: 1)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2002);
      ObjectType objectType0 = ObjectType.getInstance("OrM,");
      OperandStack operandStack0 = new OperandStack(2002, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(2002, (short)3424);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '3424' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(162);
      localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("u`fS");
      OperandStack operandStack0 = new OperandStack(162, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'u`fS'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Boolean boolean0 = new Boolean("Y{7z=w&&svP/D6");
      localVariables0.merge(localVariables0);
      instConstraintVisitor0.setFrame(frame0);
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE((InstructionHandle) null);
      ILOAD iLOAD0 = (ILOAD)InstructionConstants.ILOAD_0;
      instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLE(iF_ICMPLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLE constraint violated: The value at the stack top is not of type 'int', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("n~^KF%f");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      LOR lOR0 = new LOR();
      LOR lOR1 = new LOR();
      FileSystemHandling.shouldAllThrowIOExceptions();
      lOR1.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type 'n~^KF%f'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      ObjectType objectType0 = new ObjectType("q=G4?3,#FcwGy)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(localVariables0);
      objectType0.toString();
      instConstraintVisitor0.setFrame(frame0);
      ConstantLong constantLong0 = new ConstantLong(420L);
      ConstantLong constantLong1 = new ConstantLong(constantLong0);
      Frame.getThis();
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is 'q=G4?3,#FcwGy)' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = ObjectType.getInstance("<init>");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      CHECKCAST cHECKCAST0 = new CHECKCAST(227);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(86);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals("dstore", dSTORE0.getName());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(234);
      iSTORE0.toString();
      instConstraintVisitor0.visitISTORE(iSTORE0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB((DSUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      ObjectType objectType0 = new ObjectType("q=G4?3,#FcwGy)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.equals(localVariables0);
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      LXOR lXOR0 = new LXOR();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      LocalVariables localVariables1 = new LocalVariables(42);
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type 'q=G4?3,#FcwGy)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      String string0 = Constants.CONSTRUCTOR_NAME;
      ObjectType objectType0 = new ObjectType("<init>");
      OperandStack operandStack0 = new OperandStack(1700, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      String string1 = File.pathSeparator;
      POP2 pOP2_0 = new POP2();
      localVariables0.toString();
      frame0.clone();
      INEG iNEG0 = new INEG();
      LDC_W lDC_W0 = new LDC_W(5);
      // Undeclared exception!
      try { 
        lDC_W0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("IX{g,j'!bXH!");
      OperandStack operandStack0 = new OperandStack(14);
      LocalVariables localVariables0 = new LocalVariables(14);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      localVariables1.toString();
      operandStack0.initializeObject(uninitializedObjectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type 'IX{g,j'!bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("-:4xF2Dmx_<nP");
      int int0 = 42;
      LocalVariables localVariables0 = new LocalVariables(42);
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      LRETURN lRETURN0 = new LRETURN();
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L-:4xF2Dmx_<nP;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      ObjectType objectType0 = new ObjectType("<init>");
      OperandStack operandStack0 = new OperandStack(1700, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      assertEquals("monitorenter", mONITORENTER0.getName());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame.setThis((UninitializedObjectType) null);
      InstructionList instructionList0 = new InstructionList();
      byte[] byteArray0 = new byte[1];
      InstructionList instructionList1 = new InstructionList(byteArray0);
      instructionList1.append(instructionList0);
      JSR jSR0 = new JSR((InstructionHandle) null);
      instConstraintVisitor0.visitJSR(jSR0);
      assertEquals(0, jSR0.getIndex());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("{IXgg,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      localVariables0.merge(localVariables0);
      BasicType basicType0 = Type.FLOAT;
      operandStack0.push(basicType0);
      LocalVariables localVariables1 = new LocalVariables(38);
      localVariables1.clone();
      frame0.getClone();
      FASTORE fASTORE0 = new FASTORE();
      localVariables0.clone();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      LDC2_W lDC2_W0 = new LDC2_W(38);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT((IFGT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      ObjectType objectType0 = new ObjectType("Yf{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(2125, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2125);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      LXOR lXOR0 = new LXOR();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not enough free stack slots to load a '");
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type 'Yf{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Boolean boolean0 = new Boolean("Y{7z=w&&svP/D6");
      frame0.clone();
      localVariables0.merge(localVariables0);
      instConstraintVisitor0.setFrame(frame0);
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE((InstructionHandle) null);
      ILOAD iLOAD0 = new ILOAD(42);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ILOAD constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("-:4xF2Dmx_InP");
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      OperandStack operandStack1 = new OperandStack(42, objectType0);
      ISUB iSUB0 = new ISUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB(iSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISUB constraint violated: The value at the stack top is not of type 'int', but of type '-:4xF2Dmx_InP'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("physicalSuccessor() called on a shared JsrInstruction.");
      OperandStack operandStack0 = new OperandStack(84, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(84);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame frame2 = frame0.getClone();
      Frame frame3 = new Frame(localVariables0, operandStack0);
      Frame frame4 = frame2.getClone();
      ObjectType objectType1 = ObjectType.getInstance("physicalSuccessor() called on a shared JsrInstruction.");
      operandStack0.push(objectType1);
      ILOAD iLOAD0 = new ILOAD(84);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      IMUL iMUL0 = new IMUL();
      NOP nOP0 = new NOP();
      frame1.equals(objectType1);
      Frame frame5 = new Frame(5, 84);
      instConstraintVisitor0.setFrame(frame4);
      byte[] byteArray0 = new byte[0];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionList instructionList1 = instructionList0.copy();
      InstructionList instructionList2 = new InstructionList(iLOAD0);
      instructionList2.append(instructionList1);
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ(iF_ACMPEQ0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IMUL iMUL0 = new IMUL();
      LALOAD lALOAD0 = new LALOAD();
      localVariables1.merge(localVariables0);
      localVariables0.getClone();
      localVariables0.clone();
      Class<FCMPL> class0 = FCMPL.class;
      Type.getType(class0);
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE((FASTORE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SWAP sWAP0 = new SWAP();
      sWAP0.toString(true);
      int int0 = 222;
      LocalVariables localVariables0 = new LocalVariables(222);
      LocalVariables localVariables1 = new LocalVariables(222);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(222, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      operandStack0.push(objectType0);
      instConstraintVisitor0.setFrame(frame0);
      FALOAD fALOAD0 = new FALOAD();
      LRETURN lRETURN0 = new LRETURN();
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame frame2 = frame1.getClone();
      instConstraintVisitor0.setFrame(frame2);
      IMUL iMUL0 = new IMUL();
      LALOAD lALOAD0 = new LALOAD();
      instConstraintVisitor0.visitFSTORE((FSTORE) null);
      DUP dUP0 = new DUP();
      InstructionList instructionList1 = instructionList0.copy();
      InstructionHandle instructionHandle0 = instructionList1.insert(instructionList0);
      GOTO gOTO0 = new GOTO(instructionHandle0);
      instConstraintVisitor0.visitGOTO(gOTO0);
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ(iF_ICMPEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPEQ constraint violated: The value at the stack top is not of type 'int', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(2697, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(64);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      FNEG fNEG0 = new FNEG();
      LocalVariables localVariables1 = new LocalVariables(355);
      FLOAD fLOAD0 = new FLOAD(64);
      localVariables0.getClone();
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType0 = ObjectType.getInstance("{Ig,Nj'bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(38);
      operandStack0.push(objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{Ig,Nj'bXH!");
      instConstraintVisitor0.setFrame(frame0);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type '{Ig,Nj'bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame2.getClone();
      Frame frame3 = new Frame(42, 42);
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      instConstraintVisitor0.setFrame(frame1);
      operandStack0.clone();
      DUP dUP0 = new DUP();
      frame1.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      F2I f2I0 = new F2I();
      D2L d2L0 = new D2L();
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      LRETURN lRETURN0 = new LRETURN();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Byte code error: ");
      ObjectType objectType0 = new ObjectType("Byte code error: ");
      int int0 = 42;
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      LocalVariables localVariables0 = new LocalVariables(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Byte code error: ");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.getClone();
      instConstraintVisitor0.visitDLOAD((DLOAD) null);
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type 'Byte code error: '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("n~^KF%f");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(38);
      operandStack0.push(objectType0);
      localVariables2.merge(localVariables1);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      ILOAD iLOAD0 = new ILOAD(38);
      frame0.getClone();
      frame1.equals(operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      I2D i2D0 = new I2D();
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type 'n~^KF%f'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Boolean boolean0 = new Boolean("Referenced constant should be a CONSTANT_Integer, a CONSTANT_Float or a CONSTANT_String, but is '");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = new ObjectType("irem[112](1)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      LALOAD lALOAD0 = new LALOAD();
      localVariables1.merge(localVariables0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      instructionHandle0.toString();
      IREM iREM1 = new IREM();
      iREM1.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type 'irem[112](1)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      ObjectType objectType0 = new ObjectType("q=G4?3,#FcwGy)");
      Boolean boolean0 = new Boolean("q=G4?3,#FcwGy)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      LocalVariables localVariables1 = new LocalVariables(42);
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables2 = new LocalVariables(42);
      FADD fADD0 = new FADD();
      CALOAD cALOAD0 = new CALOAD();
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type 'q=G4?3,#FcwGy)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.ILLEGAL_TYPE;
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = ObjectType.getInstance("<illegal type>");
      int int0 = 42;
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `illegal type>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y{7z=w&&svP/D6");
      localVariables1.clone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      uninitializedObjectType0.toString();
      Frame.setThis(uninitializedObjectType0);
      localVariables1.merge(localVariables0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      NOP nOP0 = new NOP();
      ASTORE aSTORE0 = new ASTORE(42);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      assertEquals((short)195, mONITOREXIT0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      ObjectType objectType0 = new ObjectType("Yf{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(2125, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2125);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      LXOR lXOR0 = new LXOR();
      String string0 = frame0.toString();
      POP2 pOP2_0 = new POP2();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.lookupFieldref("Yf{7z=w&&svP/D6", "Yf{7z=w&&svP/D6", string0);
      ISHR iSHR0 = new ISHR();
      InstructionList instructionList0 = new InstructionList();
      instructionList0.findHandle(1);
      IFNE iFNE0 = new IFNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFNE(iFNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFNE constraint violated: The value at the stack top is not of type 'int', but of type 'Yf{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("java.lang.Throwable");
      OperandStack operandStack0 = new OperandStack(1800, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1158);
      localVariables0.toString();
      LocalVariables localVariables1 = new LocalVariables(592);
      localVariables1.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'java.lang.Throwable'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      ObjectType objectType0 = ObjectType.getInstance("q=4?3,#FcwGy#)");
      OperandStack operandStack0 = new OperandStack(123, objectType0);
      LocalVariables localVariables0 = new LocalVariables(123);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(123, objectType0);
      operandStack0.getClone();
      frame0.getClone();
      operandStack0.getClone();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type 'q=4?3,#FcwGy#)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType0 = ObjectType.getInstance("{IXgg,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      operandStack0.push(objectType0);
      localVariables0.merge(localVariables0);
      Frame frame1 = new Frame(2520, 38);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType objectType1 = new ObjectType("{IXgg,Nj'!bXH!");
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      ASTORE aSTORE0 = new ASTORE(2520);
      D2L d2L0 = new D2L();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2L constraint violated: The value at the stack top is not of type 'double', but of type '{IXgg,Nj'!bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("{IX{g,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(38, 77);
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      int int0 = Character.MAX_RADIX;
      I2L i2L0 = new I2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2L constraint violated: The value at the stack top is not of type 'int', but of type '{IX{g,Nj'!bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType.getInstance("q=4?3,#FcwGy#)");
      ObjectType objectType0 = ObjectType.getInstance("q=4?3,#FcwGy#)");
      OperandStack operandStack0 = new OperandStack(2317, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      Pattern.quote("q=4?3,#FcwGy#)");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      DSUB dSUB0 = new DSUB();
      dSUB0.toString();
      frame0.equals(dSUB0);
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type 'q=4?3,#FcwGy#)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(4);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BasicType basicType0 = Type.DOUBLE;
      objectType0.isAssignmentCompatibleWith(basicType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      localVariables0.getClone();
      frame0.getClone();
      Frame.setThis((UninitializedObjectType) null);
      FLOAD fLOAD0 = new FLOAD(4);
      IINC iINC0 = new IINC(38, 38);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      InstructionList instructionList0 = new InstructionList();
      LocalVariables localVariables0 = new LocalVariables(38);
      localVariables0.getClone();
      LALOAD lALOAD0 = new LALOAD();
      Frame frame0 = new Frame(38, 1);
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      ASTORE aSTORE0 = new ASTORE(1);
      IINC iINC0 = new IINC(1, 38);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 177;
      IINC iINC1 = new IINC(38, 1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Throwable");
      OperandStack operandStack0 = new OperandStack(10, objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(179);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG((LNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DCONST dCONST0 = new DCONST(0.0);
      DCONST dCONST1 = new DCONST(0.0);
      instConstraintVisitor0.visitDCONST(dCONST1);
      assertEquals((short)14, dCONST1.getOpcode());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = File.separator;
      InstructionList instructionList0 = new InstructionList();
      ObjectType objectType0 = new ObjectType("Cannot STORE: Stack to read from is empty.");
      OperandStack operandStack0 = new OperandStack(1246, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1246);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      ARETURN aRETURN0 = new ARETURN();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      I2L i2L0 = new I2L();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LRETURN lRETURN0 = new LRETURN();
      LRETURN lRETURN1 = new LRETURN();
      LRETURN lRETURN2 = new LRETURN();
      SASTORE sASTORE0 = new SASTORE();
      SASTORE sASTORE1 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'Cannot STORE: Stack to read from is empty.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("{IX{g,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(38, 77);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      DASTORE dASTORE0 = new DASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGT((IF_ICMPGT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IXOR iXOR0 = new IXOR();
      LocalVariables localVariables0 = new LocalVariables(162);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("u`ufS");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT((InstructionHandle) null);
      IF_ICMPLT iF_ICMPLT1 = new IF_ICMPLT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT(iF_ICMPLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLT constraint violated: The value at the stack top is not of type 'int', but of type 'u`ufS'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      String string0 = Constants.CONSTRUCTOR_NAME;
      ObjectType objectType0 = new ObjectType("<init>");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      int int0 = Pattern.COMMENTS;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantPool0);
      L2D l2D0 = new L2D();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `init>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("q=G4?3,#FcwGy)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(localVariables0);
      objectType0.toString();
      instConstraintVisitor0.setFrame(frame0);
      ConstantLong constantLong0 = new ConstantLong(443L);
      ConstantLong constantLong1 = new ConstantLong(constantLong0);
      Frame.getThis();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD((FADD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2002);
      ObjectType objectType0 = ObjectType.getInstance("r,");
      OperandStack operandStack0 = new OperandStack(2002, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type 'r,'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=lw&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = new LocalVariables(42);
      localVariables0.merge(localVariables1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      objectType0.toString();
      Frame frame1 = new Frame(42, 42);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      FRETURN fRETURN0 = new FRETURN();
      fRETURN0.toString(false);
      IAND iAND0 = new IAND();
      iAND0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type 'Y{7z=lw&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("n#^hF%f");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      LOR lOR0 = new LOR();
      LOR lOR1 = new LOR();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2325);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type 'n#^hF%f'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.clone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.merge(localVariables0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      NOP nOP0 = new NOP();
      FNEG fNEG0 = new FNEG();
      fNEG0.toString();
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType0 = ObjectType.getInstance("w).*m?c[fcQ#o%F(=");
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      LocalVariables localVariables0 = new LocalVariables(49);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      LocalVariables localVariables2 = localVariables1.getClone();
      Frame frame1 = new Frame(localVariables2, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      ASTORE aSTORE0 = new ASTORE(1893);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I((D2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SWAP sWAP0 = new SWAP();
      Class<BASTORE> class0 = BASTORE.class;
      Type type0 = Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(42);
      OperandStack operandStack0 = new OperandStack(5, type0.STRINGBUFFER);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type 'java.lang.StringBuffer'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2002);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("OrM,");
      OperandStack operandStack0 = new OperandStack(2002, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL((DMUL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(93, objectType0);
      LocalVariables localVariables0 = new LocalVariables(93);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.merge(localVariables0);
      instConstraintVisitor0.setFrame(frame0);
      ILOAD iLOAD0 = (ILOAD)InstructionConstants.ILOAD_0;
      instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("n~^KF%f");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      frame0.getClone();
      frame0.equals(operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
      LocalVariables localVariables1 = localVariables0.getClone();
      assertNotSame(localVariables1, localVariables0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("{IX{g,Nj'!bXH!");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(87, objectType0);
      LocalVariables localVariables0 = new LocalVariables(87);
      int int0 = 181;
      LocalVariables localVariables1 = new LocalVariables(181);
      LocalVariables localVariables2 = new LocalVariables(87);
      LocalVariables localVariables3 = localVariables2.getClone();
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.clone();
      Frame frame0 = new Frame(localVariables3, operandStack0);
      Frame.getThis();
      LocalVariables localVariables4 = new LocalVariables(87);
      frame0.getClone();
      OperandStack operandStack2 = new OperandStack(3);
      operandStack1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LOR lOR0 = new LOR();
      LNEG lNEG0 = new LNEG();
      instConstraintVisitor0.visitPOP((POP) null);
      DRETURN dRETURN0 = (DRETURN)InstructionConstants.DRETURN;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitReturnInstruction(dRETURN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";,-VCu^So9$,(fIlNLA");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      localVariables0.merge(localVariables0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      objectType0.toString();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      frame0.toString();
      operandStack0.initializeObject(uninitializedObjectType0);
      Frame frame1 = new Frame(42, 42);
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      IFNONNULL iFNONNULL0 = new IFNONNULL((InstructionHandle) null);
      instConstraintVisitor0.visitIFNONNULL(iFNONNULL0);
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ((InstructionHandle) null);
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("java.lang.Throwable");
      OperandStack operandStack0 = new OperandStack(84, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(179);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      frame0.getClone();
      LocalVariables localVariables1 = new LocalVariables(2769);
      OperandStack operandStack1 = new OperandStack(2770);
      frame0.toString();
      Frame frame1 = new Frame(179, 2770);
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type 'java.lang.Throwable'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType(".");
      LocalVariables localVariables0 = new LocalVariables(29);
      OperandStack operandStack0 = new OperandStack(29, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      LRETURN lRETURN0 = new LRETURN();
      lRETURN0.toString();
      operandStack0.clone();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      Frame.getThis();
      localVariables0.merge(localVariables0);
      ObjectType.getInstance("SO0Lp?L/RYkq:I`%(=[");
      FADD fADD0 = new FADD();
      CALOAD cALOAD0 = new CALOAD();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      CALOAD cALOAD1 = new CALOAD();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type '.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = ObjectType.getInstance("<init>");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      CHECKCAST cHECKCAST0 = new CHECKCAST(227);
      cHECKCAST0.setIndex(227);
      NEWARRAY nEWARRAY0 = new NEWARRAY(uninitializedObjectType0.DOUBLE);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `init>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      LRETURN lRETURN0 = new LRETURN();
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(0);
      localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      F2L f2L0 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("vB397Z{J");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      frame1.equals("vB397Z{J");
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      instConstraintVisitor0.setFrame(frame1);
      DUP dUP0 = new DUP();
      frame1.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      F2I f2I0 = new F2I();
      D2L d2L0 = new D2L();
      DSUB dSUB0 = new DSUB();
      DSTORE dSTORE0 = new DSTORE(42);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: 'vB397Z{J'; Instruction type: 'double'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.CONSTRUCTOR_NAME;
      ObjectType objectType0 = new ObjectType("<init>");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack0 = new OperandStack(1700, objectType0);
      int int0 = 6;
      LocalVariables localVariables0 = new LocalVariables(6);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      String string1 = File.pathSeparator;
      POP2 pOP2_0 = new POP2();
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `init>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("{IX{g,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(87, objectType0);
      LocalVariables localVariables0 = new LocalVariables(87);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(87, 77);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      I2S i2S0 = null;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S((I2S) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("q=G4?3,#FcwGy)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      LocalVariables localVariables1 = new LocalVariables(42);
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables2 = new LocalVariables(42);
      FADD fADD0 = new FADD();
      CALOAD cALOAD0 = new CALOAD();
      CALOAD cALOAD1 = new CALOAD();
      FRETURN fRETURN0 = new FRETURN();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type 'q=G4?3,#FcwGy)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType0 = new ObjectType("{IXgg,Nj'!bXH!");
      OperandStack operandStack0 = new OperandStack(105);
      LocalVariables localVariables0 = new LocalVariables(105);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.merge(operandStack1);
      BasicType basicType0 = Type.LONG;
      basicType0.toString();
      operandStack0.push(basicType0);
      LocalVariables localVariables1 = new LocalVariables(105);
      localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame1 = new Frame(105, 105);
      FASTORE fASTORE0 = new FASTORE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      LALOAD lALOAD1 = new LALOAD();
      localVariables1.merge(localVariables0);
      LocalVariables localVariables2 = new LocalVariables(105);
      Frame frame2 = new Frame(localVariables2, operandStack0);
      instConstraintVisitor0.setFrame(frame2);
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF((INSTANCEOF) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(39, objectType0);
      LocalVariables localVariables0 = new LocalVariables(39);
      int int0 = 4;
      LocalVariables localVariables1 = new LocalVariables(4);
      LocalVariables localVariables2 = new LocalVariables(1817);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LALOAD lALOAD0 = new LALOAD();
      Frame frame0 = new Frame(1817, (-797));
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = new OperandStack(1);
      FLOAD fLOAD0 = new FLOAD(27);
      fLOAD0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(fLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FLOAD constraint violated: Read-Access on local variable 27 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      ObjectType objectType0 = new ObjectType("irem[112](1)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      instConstraintVisitor0.setFrame(frame1);
      ASTORE aSTORE0 = new ASTORE(42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IASTORE iASTORE0 = new IASTORE();
      localVariables0.clone();
      localVariables0.clone();
      localVariables0.getClone();
      IXOR iXOR0 = new IXOR();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type irem[112](1).
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      ObjectType objectType0 = new ObjectType("irem[112](1)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(42, 42);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      IMUL iMUL0 = new IMUL();
      LALOAD lALOAD0 = new LALOAD();
      localVariables0.merge(localVariables0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'irem[112](1)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ATHROW aTHROW1 = new ATHROW();
      ObjectType objectType0 = ObjectType.getInstance("{IXgg,Nj'bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables2.merge(localVariables0);
      Frame.setThis((UninitializedObjectType) null);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type '{IXgg,Nj'bXH!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      OperandStack operandStack0 = new OperandStack(105);
      LocalVariables localVariables0 = new LocalVariables(105);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.merge(localVariables0);
      BasicType basicType0 = Type.DOUBLE;
      basicType0.toString();
      operandStack0.push(basicType0);
      localVariables0.getClone();
      LocalVariables localVariables1 = new LocalVariables(105);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables0.toString();
      frame1.toString();
      localVariables0.clone();
      frame1.getClone();
      localVariables0.clone();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance("{iXgg,N!'!bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      localVariables0.merge(localVariables0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = new Frame(1705, 2);
      PUTFIELD pUTFIELD0 = new PUTFIELD(1705);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ISHL iSHL0 = new ISHL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ATHROW aTHROW1 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class {iXgg,N!'!bXH!: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: {iXgg,N!'!bXH!.class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Boolean boolean0 = new Boolean("Y{7z=w&&svP/D6");
      LocalVariables localVariables1 = new LocalVariables(42);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(42);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = new Frame(42, 42);
      frame2.getClone();
      instConstraintVisitor0.setFrame(frame0);
      ALOAD aLOAD0 = new ALOAD(42);
      InstructionList instructionList0 = new InstructionList(aLOAD0);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) aLOAD0, (Instruction) aLOAD0);
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE(iF_ICMPNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPNE constraint violated: The value at the stack top is not of type 'int', but of type 'Y{7z=w&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Y{7zw&&svP/D6");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      frame1.equals("Y{7zw&&svP/D6");
      Frame.getThis();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y{7zw&&svP/D6");
      DUP dUP0 = new DUP();
      frame1.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      F2I f2I0 = new F2I();
      D2L d2L0 = new D2L();
      DSUB dSUB0 = new DSUB();
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type 'Y{7zw&&svP.D6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = new ObjectType(" stack slots: only ");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      Frame.setThis(uninitializedObjectType0);
      localVariables0.merge(localVariables0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      FSTORE fSTORE0 = new FSTORE(1943);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      instConstraintVisitor0.setMethodGen((MethodGen) null);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      String string0 = Constants.ILLEGAL_TYPE;
      ObjectType objectType0 = ObjectType.getInstance("<illegal type>");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      FLOAD fLOAD0 = new FLOAD(42);
      byte[] byteArray0 = new byte[0];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionList instructionList1 = new InstructionList(byteArray0);
      Constant[] constantArray0 = new Constant[1];
      ConstantFloat constantFloat0 = new ConstantFloat((-1.0F));
      constantArray0[0] = (Constant) constantFloat0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      POP pOP0 = new POP();
      GETFIELD gETFIELD0 = new GETFIELD(42);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Throwable");
      OperandStack operandStack0 = new OperandStack(84, objectType0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Class<BASTORE>[] classArray0 = (Class<BASTORE>[]) Array.newInstance(Class.class, 1);
      Class<BASTORE> class0 = BASTORE.class;
      classArray0[0] = class0;
      Type.getTypes(classArray0);
      operandStack0.initializeObject(uninitializedObjectType0);
      LocalVariables localVariables0 = new LocalVariables(179);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.merge(operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type 'java.lang.Throwable'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = new ObjectType("irem[112](1)");
      OperandStack operandStack0 = new OperandStack(75, objectType0);
      LocalVariables localVariables0 = new LocalVariables(75);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type 'irem[112](1)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("n~^KF%f");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = new LocalVariables(38);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(38);
      operandStack0.push(objectType0);
      localVariables2.merge(localVariables1);
      OperandStack operandStack1 = new OperandStack(223);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      operandStack1.initializeObject(uninitializedObjectType0);
      Frame frame1 = new Frame(0, 0);
      int int0 = 1873;
      int int1 = 0;
      Frame frame2 = new Frame(1873, 0);
      instConstraintVisitor0.setFrame(frame2);
      DCONST dCONST0 = new DCONST(0.0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackProducer(dCONST0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCONST constraint violated: Cannot produce 2 stack slots: only 0 free stack slot(s) left.
         // Stack:
         // Slots used: 0 MaxStack: 0.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      OperandStack operandStack0 = new OperandStack((byte)5);
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LRETURN lRETURN0 = new LRETURN();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables((byte)5);
      F2D f2D0 = new F2D();
      D2F d2F0 = new D2F();
      FSTORE fSTORE0 = new FSTORE((byte)14);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SWAP sWAP0 = new SWAP();
      sWAP0.toString(true);
      LocalVariables localVariables0 = new LocalVariables(222);
      LocalVariables localVariables1 = new LocalVariables(222);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(222, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      instConstraintVisitor0.setFrame(frame0);
      sWAP0.toString(true);
      instConstraintVisitor0.visitSWAP(sWAP0);
      DSTORE dSTORE0 = new DSTORE(222);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      InstructionList instructionList0 = new InstructionList();
      ObjectType objectType0 = new ObjectType("irem[112](1)");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(42, 42);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      instConstraintVisitor0.setFrame(frame1);
      IMUL iMUL0 = new IMUL();
      LALOAD lALOAD0 = new LALOAD();
      localVariables0.merge(localVariables0);
      frame1.getClone();
      frame0.equals(localVariables0);
      ObjectType.getInstance("");
      InstructionList instructionList1 = instructionList0.copy();
      int int0 = 106;
      instructionList1.findHandle(106);
      IFEQ iFEQ0 = new IFEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFEQ(iFEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFEQ constraint violated: The value at the stack top is not of type 'int', but of type 'irem[112](1)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1104);
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1104);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(42);
      RET rET1 = new RET(42);
      // Undeclared exception!
      try { 
        rET1.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 42.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      String string0 = Constants.ILLEGAL_TYPE;
      ObjectType objectType0 = new ObjectType("<illegal type>");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.equals(objectType0);
      frame0.getClone();
      frame0.equals(operandStack0);
      Frame.getThis();
      frame0.getClone();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT((IFLT) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `illegal type>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      InstructionList instructionList0 = new InstructionList(iREM0);
      ObjectType objectType0 = new ObjectType("/");
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack0 = new OperandStack(620, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = localVariables0.getClone();
      LocalVariables localVariables2 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables2.getClone();
      localVariables2.merge(localVariables1);
      DUP_X1 dUP_X1_0 = new DUP_X1();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, true);
      InstructionList instructionList1 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList1.insert((CompoundInstruction) pUSH0);
      IFNULL iFNULL0 = new IFNULL(instructionHandle0);
      IFNULL iFNULL1 = new IFNULL(instructionHandle0);
      instConstraintVisitor0.visitIFNULL(iFNULL1);
      FNEG fNEG0 = new FNEG();
      IFGE iFGE0 = new IFGE(instructionHandle0);
      IFGE iFGE1 = new IFGE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGE(iFGE1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGE constraint violated: The value at the stack top is not of type 'int', but of type '.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IXOR iXOR0 = new IXOR();
      LocalVariables localVariables0 = new LocalVariables(162);
      LocalVariables localVariables1 = new LocalVariables(162);
      ObjectType objectType0 = new ObjectType("u`ufS");
      OperandStack operandStack0 = new OperandStack(162, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT((InstructionHandle) null);
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type 'u`ufS'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("w).*m?c[fcQo%F(=");
      OperandStack operandStack0 = new OperandStack(113, objectType0);
      LocalVariables localVariables0 = new LocalVariables(113);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      localVariables1.merge(localVariables1);
      OperandStack operandStack1 = new OperandStack(49, objectType0);
      OperandStack operandStack2 = operandStack1.getClone();
      operandStack2.equals(localVariables1);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      LSTORE lSTORE0 = new LSTORE(298);
      PUTFIELD pUTFIELD0 = new PUTFIELD(49);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPUTFIELD(pUTFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("w).*m?c[fcQ#o%F(=");
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      LocalVariables localVariables0 = new LocalVariables(49);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(objectType0);
      boolean boolean0 = new Boolean("");
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables2.merge(localVariables1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack1 = new OperandStack(49, objectType0);
      OperandStack operandStack2 = operandStack1.getClone();
      operandStack2.clear();
      operandStack2.equals(localVariables1);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      LOR lOR0 = new LOR();
      LNEG lNEG0 = new LNEG();
      LNEG lNEG1 = new LNEG();
      operandStack2.toString();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType.getInstance("q=4?3,#FcwGy#)");
      ObjectType objectType0 = ObjectType.getInstance("q=4?3,#FcwGy#)");
      OperandStack operandStack0 = new OperandStack(2317, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      Pattern.quote("q=4?3,#FcwGy#)");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      DSUB dSUB0 = new DSUB();
      dSUB0.toString();
      frame0.equals(dSUB0);
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      I2C i2C0 = new I2C();
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type 'q=4?3,#FcwGy#)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType0 = ObjectType.getInstance("{IXgg,Nj'bXH!");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables0.getClone();
      operandStack0.push(objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{IXgg,Nj'bXH!");
      frame0.getClone();
      localVariables1.clone();
      frame0.getClone();
      Frame frame1 = new Frame(38, 38);
      instConstraintVisitor0.setFrame(frame0);
      I2B i2B0 = new I2B();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(38);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      F2D f2D0 = new F2D();
      DUP2 dUP2_0 = new DUP2();
      instConstraintVisitor0.visitDUP2(dUP2_0);
      assertEquals("dup2", dUP2_0.getName());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("Cannot STORE: Stack to read from is empty.");
      OperandStack operandStack0 = new OperandStack(42, objectType0);
      LocalVariables localVariables0 = new LocalVariables(42);
      LocalVariables localVariables1 = localVariables0.getClone();
      Boolean boolean0 = new Boolean("Cannot STORE: Stack to read from is empty.");
      localVariables1.clone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      Frame.getThis();
      localVariables1.merge(localVariables0);
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      LAND lAND0 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type 'Cannot STORE: Stack to read from is empty.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      String string0 = "Y{7z=w&&svP/D6";
      ObjectType.getInstance("Y{7z=w&&svP/D6");
      ObjectType objectType0 = new ObjectType("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(1700, objectType0);
      LocalVariables localVariables0 = new LocalVariables(6);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      BasicType basicType0 = Type.FLOAT;
      operandStack0.push(basicType0);
      int int0 = 165;
      Frame frame1 = new Frame(149, 165);
      ASTORE aSTORE0 = new ASTORE(165);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitASTORE(aSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ASTORE constraint violated: The 'objectref' is not of a ReferenceType or of ReturnaddressType but of float.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("xnp&w(~'rRxl,L");
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack0 = new OperandStack(387);
      LocalVariables localVariables0 = new LocalVariables(38);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      operandStack0.push(returnaddressType0);
      Frame frame1 = frame0.getClone();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LOR lOR0 = new LOR();
      LNEG lNEG0 = new LNEG();
      operandStack0.toString();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(returnaddressType0.CLASS);
      ASTORE aSTORE0 = new ASTORE(2141);
      ASTORE aSTORE1 = new ASTORE(2141);
      instConstraintVisitor0.visitASTORE(aSTORE1);
      DASTORE dASTORE0 = new DASTORE();
      L2F l2F0 = new L2F();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      assertFalse(instConstraintVisitor1.equals((Object)instConstraintVisitor0));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      iREM0.toString(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4}h%/Qf$");
      LocalVariables localVariables0 = new LocalVariables(194);
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(2);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      BasicType basicType0 = Type.FLOAT;
      operandStack0.push(basicType0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(basicType0.OBJECT);
      localVariables1.toString();
      operandStack0.initializeObject((UninitializedObjectType) null);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DASTORE dASTORE0 = new DASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      frame1.clone();
      frame1.getClone();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      D2L d2L0 = new D2L();
      DALOAD dALOAD0 = new DALOAD();
      ConstantPoolGen constantPoolGen2 = new ConstantPoolGen();
      LLOAD lLOAD0 = new LLOAD(200);
      FNEG fNEG0 = new FNEG();
      FNEG fNEG1 = new FNEG();
      instConstraintVisitor0.visitFNEG(fNEG1);
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ACONST_NULL aCONST_NULL1 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL1);
      assertEquals((short)1, aCONST_NULL1.getOpcode());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("xnp&w(~'rRxl,L");
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack0 = new OperandStack(387, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      objectType0.toString();
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      frame0.toString();
      operandStack0.push(returnaddressType0);
      Frame frame1 = frame0.getClone();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LOR lOR0 = new LOR();
      LNEG lNEG0 = new LNEG();
      operandStack0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      operandStack0.toString();
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.merge(operandStack1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      D2L d2L0 = new D2L();
      D2L d2L1 = new D2L();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      MONITOREXIT mONITOREXIT1 = new MONITOREXIT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MONITOREXIT constraint violated: The stack top should be of a ReferenceType, but is '<return address>'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      OperandStack operandStack0 = new OperandStack(105);
      LocalVariables localVariables0 = new LocalVariables(105);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.merge(localVariables0);
      BasicType basicType0 = Type.DOUBLE;
      basicType0.toString();
      operandStack0.push(basicType0);
      localVariables0.getClone();
      LocalVariables localVariables1 = new LocalVariables(105);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables0.toString();
      frame1.toString();
      localVariables0.clone();
      frame1.getClone();
      localVariables0.clone();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      CHECKCAST cHECKCAST0 = new CHECKCAST(42);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction CHECKCAST constraint violated: The 'objectref' is not of a ReferenceType but of type double.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      OperandStack operandStack0 = new OperandStack(105);
      LocalVariables localVariables0 = new LocalVariables(105);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BasicType basicType0 = Type.DOUBLE;
      basicType0.toString();
      operandStack0.push(basicType0);
      localVariables0.getClone();
      LocalVariables localVariables1 = new LocalVariables(105);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = localVariables0.toString();
      frame1.toString();
      localVariables0.clone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      instConstraintVisitor0.setFrame(frame1);
      LRETURN lRETURN0 = new LRETURN();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DUP_X2 constraint violated: Stack top type must be of size 1, but is 'double' of size '2'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("q=4?3,#FcwGy#)");
      OperandStack operandStack0 = new OperandStack(123, objectType0);
      LocalVariables localVariables0 = new LocalVariables(123);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      OperandStack operandStack1 = new OperandStack(123, objectType0);
      operandStack0.push(objectType0);
      Boolean boolean0 = new Boolean("");
      OperandStack operandStack2 = new OperandStack(123, objectType0);
      operandStack2.clone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor1.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IMUL iMUL0 = new IMUL();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      OperandStack operandStack3 = new OperandStack(123, objectType0);
      POP2 pOP2_0 = new POP2();
      ARETURN aRETURN0 = new ARETURN();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type 'q=4?3,#FcwGy#)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      ObjectType objectType1 = ObjectType.getInstance("Y{7z=w&&svP/D6");
      OperandStack operandStack0 = new OperandStack(38, objectType1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.toString();
      operandStack0.push(objectType0);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      localVariables1.merge(localVariables0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType objectType2 = new ObjectType("Cu");
      UninitializedObjectType uninitializedObjectType1 = new UninitializedObjectType(uninitializedObjectType0.STRING);
      ASTORE aSTORE0 = new ASTORE(2858);
      instConstraintVisitor0.visitIF_ACMPNE((IF_ACMPNE) null);
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(2069);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      PUTFIELD pUTFIELD0 = new PUTFIELD(38);
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitFieldInstruction(pUTFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("q=4?3,#FcwGy#)");
      OperandStack operandStack0 = new OperandStack(123, objectType0);
      LocalVariables localVariables0 = new LocalVariables(123);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      operandStack0.push(objectType0);
      Boolean boolean0 = Boolean.TRUE;
      OperandStack operandStack1 = new OperandStack(123, objectType0);
      operandStack1.clone();
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q=4?3,#FcwGy#)");
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q=4?3,#FcwGy#)");
      IMUL iMUL0 = new IMUL();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q=4?3,#FcwGy#)");
      OperandStack operandStack2 = new OperandStack(1674);
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      LocalVariables localVariables1 = new LocalVariables(4);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      BasicType basicType0 = Type.DOUBLE;
      objectType0.isAssignmentCompatibleWith(basicType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LALOAD lALOAD0 = new LALOAD();
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      localVariables1.toString();
      localVariables1.getClone();
      LocalVariables localVariables2 = new LocalVariables(38);
      Frame frame1 = new Frame(localVariables2, operandStack0);
      frame0.getClone();
      Frame.setThis((UninitializedObjectType) null);
      Frame.setThis((UninitializedObjectType) null);
      Frame frame2 = new Frame(1829, 38);
      ISHR iSHR0 = new ISHR();
      DUP dUP0 = new DUP();
      Constant[] constantArray0 = new Constant[3];
      ConstantFieldref constantFieldref0 = new ConstantFieldref(0, 38);
      ConstantFieldref constantFieldref1 = new ConstantFieldref(constantFieldref0);
      constantArray0[0] = (Constant) constantFieldref1;
      ConstantUtf8 constantUtf8_0 = new ConstantUtf8("");
      ConstantUtf8 constantUtf8_1 = new ConstantUtf8(constantUtf8_0);
      constantArray0[2] = (Constant) constantUtf8_1;
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantPool constantPool1 = constantPool0.copy();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantPool1);
      PUSH pUSH0 = new PUSH(constantPoolGen0, 2.0F);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.insert((CompoundInstruction) pUSH0);
      IF_ICMPGE iF_ICMPGE0 = new IF_ICMPGE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGE(iF_ICMPGE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPGE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
