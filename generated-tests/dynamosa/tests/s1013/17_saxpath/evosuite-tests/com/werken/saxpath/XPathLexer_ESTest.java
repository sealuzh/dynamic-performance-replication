/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 19:21:14 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n. 6Z");
      Token token0 = xPathLexer0.dots();
      assertEquals("n.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath(";<^S3DZ");
      Token token0 = xPathLexer0.star();
      assertEquals(";", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oF&O>+mivZEOfd:]");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aXNVoef]a");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0!x^g5~IN");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#II{xdt\"XQq84");
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+*%>Z+");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</#}=lF,C*!At");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|!8nAN4p$h");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:QZ~");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("996~`Iw;5E)oByaO<B");
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      assertNotNull(token0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X>8bkq/}<(");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pLjPRNXB04p i8p=cfV");
      String string0 = xPathLexer0.getXPath();
      assertEquals("pLjPRNXB04p i8p=cfV", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|!N4~$th");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("87KsUof9ns");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("87", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("KsUof9ns", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9)DtKq<02");
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X>8bkq/}<(");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Uf|C");
      xPathLexer0.consume((-160));
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-160), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|!AN4p$th");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("!A", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("4", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      char char0 = xPathLexer0.LA(3);
      assertEquals('V', char0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals("hM^iIuMb", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ vn");
      Token token0 = new Token(0, "[ vn", 112, 0);
      xPathLexer0.setPreviousToken(token0);
      assertEquals("[ vn", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('@');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('3');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('\"');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('2');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'bkq/}<");
      boolean boolean0 = xPathLexer0.isIdentifierChar('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(0);
      assertNull(xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|!AN4p$th");
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("? 2'");
      xPathLexer0.consume((-2209));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1023));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><e4");
      xPathLexer0.consume((-2030));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1308));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]]lx}'`vY6y0'{46;)");
      xPathLexer0.consume((-3057));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2643));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oF&O>+mivZEOfd:]");
      xPathLexer0.consume((-131));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-4750));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-357));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-105));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:QZ~");
      xPathLexer0.consume((-928));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-3053));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":96~`Iw;5E)EByaO<BT");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1355));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexr");
      xPathLexer0.consume((-711));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1952));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K>Hk>mpi");
      xPathLexer0.consume((-4071));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-4750));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("><Ub`");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-669));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<?3f");
      xPathLexer0.consume((-112));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1308));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QG$OfVL~?n}");
      xPathLexer0.consume((-1553));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-910));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6$D/<xV;La");
      xPathLexer0.consume((-909));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-440));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#II{xdt\"cQq84");
      xPathLexer0.consume((-493));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1023));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RrU#wA'&6:-hr");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1097));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1544));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("qfB", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("To-9A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("To-9A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (23) ()");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("]poz.`");
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K?kJk>mpi");
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dRvq25+lf8#S/^+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("dRvq25", token0.getTokenText());
      
      xPathLexer0.setXPath("dRvq25+lf8#S/^+");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("dRvq25+lf8#S/^+", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.setXPath("n>rxOJH|*lWQ3");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("rxOJH|*lWQ3", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".9)DtKq<02");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dRvq25+lf8#S/^+");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Rvq25", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.star();
      assertEquals("h", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("M^", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("iIuMb", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:QZ~");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K>!k>mpf\"J");
      Token token0 = new Token(8, "K>!k>mpf\"J", 8, 8);
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("K", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("2", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("qfB*N<9{ZbP':w9/", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".8(:QE~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".8", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2_ZZ~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|!AN4p$h");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{GE{NcqPs<[fe|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{GE{NcqPs<[fe|", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yRKD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("yRKD", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wjTrIwz,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("wjTrIwz", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uc3<EwI>Yrj9xN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("uc3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tv");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("tv", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(".", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("e", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dRvq25+lf8#S/^+");
      Token token0 = xPathLexer0.star();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("q25", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pVH>;g900VvuhQ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("pVH", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nF|@p<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("nF", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("l", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(".", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("e", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jvsr5)AGa");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("jvsr5", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("hM", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0!x^g5~IN");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("x", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("^", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("g5", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f$/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ef8rljgOvz\u0003zTS");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ef8rljgOvz\u0003zTS", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkeG.saxpath.X@ath:exer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werkeG.saxpath.X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ath:exer", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JmUl`V{`-M");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("JmUl", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`V{`-M", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("__W{.i|HXKne)f");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("__W", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("hM", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("^iIuMb", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("K+]yW[BUk'RSH");
      Token token0 = xPathLexer0.star();
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("]", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Yoe*[?j(}WKS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Yoe", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z[F}[lv;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Z", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Xbkq/}<(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Xbkq", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WFfHZ:I~., ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("WFfHZ", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("V", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JmUl`V{`-M");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Ul", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ScO7@|mDG@dpU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ScO7", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#&Q7E%[-STo ");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("#&", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Q7E", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("q", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("f", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("9", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
      
      xPathLexer0.at();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("b", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("P", token8.getTokenText());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ow8`'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ow8", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+b85.`P+NY");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("+", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("b85.", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("`P", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("NY", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JmUl`V{`-M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("JmUl", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("`", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("V", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.star();
      assertEquals("`", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("-", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("M", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Lf|w^;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Lf", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wjTrIwz,");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("wj", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("T", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("r", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Iwz", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ha]x/R>3+`[ AJjz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ha", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G9.&b evbGp'Z=i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("G9.", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Filq?rDdiygA/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Filq", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" E7T[5Fd>G54?Xp");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("E7T", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D~q,4nTGsCCI$B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.setXPath("C_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("C_", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B><e4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@/fIMinEHR`UVpYAZ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?o~5(Yj@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?o~5(Yj@", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("e", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")+huF&K7R=");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(")", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.star();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals("F", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("=", token4.getTokenText());
      
      xPathLexer0.setXPath(")+huF&K7R=");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("+", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("huF", token7.getTokenText());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<:6l");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";.FRmUI0uj<wq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";.FRmUI0uj<wq", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":96~`Iw;5E)EByaO<BT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("96", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("87KsUof9ns");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6yLg|y6\"vN<d,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dRvq25+lf8#S/^+");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("R", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("vq", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4/3W<{M");
      Token token0 = xPathLexer0.slashes();
      assertEquals("4/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1*m<nXyZ]G_6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0!x^g5~IN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("x^g5~IN", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals("X", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.at();
      assertEquals("q", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("/", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-T`-5r~}T)O@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("T", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",AN4$h");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dRvq25+lf8#S/^+");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("R", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals("v", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("q2", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("+", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("lf8", token6.getTokenText());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*RZAAUo}y(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("RZAAUo", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(9+4x]&GP1YlXu|q*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals("9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'=Oi:&KI;'^qyIOAz|");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&#UWl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&#UWl", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%~&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%~&", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$@KP}n");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#II{xdt\"XQq84");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#II{xdt\"XQq84", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" \"eQf8m&Z6'AJ%9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!AN4$h");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("AN4$h", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ vn");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("vn", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(2614);
      assertEquals("", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("q", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("B*", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.relationalOperator();
      assertNotNull(token4);
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("ZbP", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("'", token7.getTokenText());
      
      xPathLexer0.at();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(30, token9.getTokenType());
      assertEquals("9", token9.getTokenText());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Uf|C");
      Token token0 = xPathLexer0.equals();
      assertEquals("-", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }
}
