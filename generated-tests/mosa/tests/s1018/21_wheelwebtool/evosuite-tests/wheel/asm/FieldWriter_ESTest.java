/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:52:44 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3877);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12(1, 2);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1852);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "s", "s", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1852);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-747), "org.apache.commons.io.IOCase", "[<YTO3&D#", "F#", "org.apache.commons.io.IOCase");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putUTF8("org.apache.commons.io.IOCase");
      fieldWriter0.getSize();
      byteVector0.putByte(1);
      byteVector0.putShort(3562);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3877);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3139), "LocalVariableTypeTable", "", "LocalVariableTypeTable", "LocalVariableTypeTable");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(2, 3877);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3877);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 3877, "s", "", "s", "s");
      fieldWriter1.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("s", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3886);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      Attribute attribute0 = new Attribute("s");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3886);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      fieldWriter0.visitAnnotation("s", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.putInt(2205);
      ByteVector byteVector2 = byteVector1.put11(2205, 0);
      fieldWriter0.put(byteVector2);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777219);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64, "s", "s", (String) null, "s");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3886);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      fieldWriter0.visitAnnotation("ix\"ocV~R<-fu@[WQLfK", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3877);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12(1, 2);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("s", false);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1852);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "wheel.asm.Label", "wheel.asm.Label");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("[<YTO3&D&#", true);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(1);
      fieldWriter0.put(byteVector1);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("s", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1852);
      Item item0 = classWriter0.newClassItem("org.apache.commons.io.IOCase");
      item0.set((-191.61156F));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-695), "lq]d6V!", "hE!M~w", "F#", "org.apache.commons.io.IOCase");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("org.apache.commons.io.IOCase");
      classWriter0.addType("lq]d6V!");
      ByteVector byteVector2 = byteVector1.putInt(1852);
      byteVector2.putInt(877);
      ByteVector byteVector3 = byteVector2.putLong(1852);
      classWriter0.version = 877;
      byteVector2.putByte(1);
      byteVector2.putShort(3562);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector3);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "", "]~=", "", "]~=");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putShort(1);
      Item item0 = classWriter0.newMethodItem("u4+", "", "]~=", true);
      item0.set((-2272));
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-2689), "java/lang/Object", "java/lang/Object", "", "");
      fieldWriter1.visitEnd();
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.putByte(2);
      byteVector1.putShort((-2272));
      fieldWriter0.put(byteVector1);
      fieldWriter1.visitEnd();
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
