/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 20:48:06 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.Locale;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(sequenceInputStream0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      charArray0[1] = 'H';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 126, 115);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = null;
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      xPathParserTokenManager0.curChar = '>';
      xPathParserTokenManager0.curLexState = 1499;
      xPathParserTokenManager0.ReInit((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("-fp:{sNaDNLVo");
      Locale locale0 = Locale.ITALIAN;
      xPathParserTokenManager0.jjround = 0;
      xPathParserTokenManager0.SwitchTo(0);
      PrintStream printStream0 = mockPrintStream0.format(locale0, "*Gt#L9", (Object[]) xPathParserTokenManager0.jjstrLiteralImages);
      xPathParserTokenManager0.debugStream = printStream0;
      MockPrintStream mockPrintStream1 = new MockPrintStream(xPathParserTokenManager0.debugStream, true);
      mockPrintStream1.flush();
      xPathParserTokenManager0.setDebugStream(mockPrintStream1);
      mockPrintStream0.printf("q.;", (Object[]) xPathParserTokenManager0.lexStateNames);
      // Undeclared exception!
      try { 
        xPathParserTokenManager0.SwitchTo(2640);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2640. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[1] = 'H';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 126, 115);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-433), 37);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      charArray0[1] = 'H';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("b3u:;aw=t");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      bufferedReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1), 1989, 1989);
      char[] charArray1 = new char[0];
      stringReader0.read(charArray1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[1];
      charArray0[0] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 126, 115);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      charArray0[1] = 'H';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"and\"");
      StringReader stringReader0 = new StringReader("\"and\"");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-295), 3221);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("4<eh7:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("4<eh7:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".4I!d");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 28, 28);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      charArray0[1] = 'H';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("! J!v4>^Kx#");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = 'm';
      charArray0[1] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 119, 37);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Charset.defaultCharset();
      char[] charArray0 = new char[20];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("namespace::");
      StringReader stringReader1 = new StringReader("namespace::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      simpleCharStream0.GetImage();
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("4<eh7:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'S';
      charArray0[3] = 'S';
      charArray0[4] = 'T';
      charArray0[5] = 'S';
      charArray0[6] = 'W';
      charArray0[7] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader1 = new BufferedReader(charArrayReader0, 1734);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader1);
      simpleCharStream0.ReInit((Reader) bufferedReader1, 58, (-1447), 4);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[1] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("4<eh7:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'W';
      charArray0[1] = 'B';
      charArray0[2] = 'W';
      charArray0[3] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 37, 37);
      simpleCharStream0.GetImage();
      charArrayReader0.ready();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("b3u:;aw=t");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1), 1989, 1989);
      simpleCharStream1.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[1] = 'C';
      StringReader stringReader0 = new StringReader("null");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.mark(36);
      StringReader stringReader1 = new StringReader("round");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("round");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1, 108, (-1));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[1];
      charArray0[0] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("-aMo=O&2 ;");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1), 4391);
      simpleCharStream1.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = '$';
      charArray0[1] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 119, 37);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = 'g';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader1 = new StringReader("b3u:;aw=t");
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedReader1, 1989, (-1), 1989);
      simpleCharStream1.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("b3u:;aw=t");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      bufferedReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1), 1989, 1989);
      char[] charArray1 = new char[0];
      stringReader0.read(charArray1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[1];
      charArray0[0] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.markSupported();
      StringReader stringReader0 = new StringReader("");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pipedInputStream0, (-1), 363);
      simpleCharStream1.GetImage();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 561;
      char[] charArray0 = new char[6];
      charArray0[0] = 'q';
      charArray0[1] = '(';
      charArray0[2] = 'd';
      charArray0[3] = 'P';
      charArray0[4] = 'm';
      charArray0[5] = '4';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("Znp^YKR\rf$");
      StringReader stringReader1 = new StringReader("Znp^YKR\rf$");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      charArray0[1] = 'r';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("true");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader1);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      charArray0[5] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 60;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0, 60, 561);
      char[] charArray0 = new char[7];
      charArray0[0] = '+';
      charArray0[1] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, 2165, 60);
      simpleCharStream1.GetImage();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[10];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-2378), 142);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = 'g';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader1 = new StringReader("b3u:;aw=t");
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedReader1, 1989, (-1), 1989);
      simpleCharStream1.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      charArray0[5] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("HW5`VtJB?z@|u4RT");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 60;
      char[] charArray0 = new char[8];
      charArray0[0] = 'm';
      charArray0[1] = 'd';
      charArray0[2] = '(';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      charArray0[5] = 'd';
      charArray0[6] = '4';
      charArray0[7] = '4';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("!=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      StringReader stringReader0 = new StringReader(".4I!d");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[0] = '2';
      charArray0[1] = '%';
      charArray0[2] = '2';
      charArray0[3] = 'q';
      bufferedReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0, (-750), (-779));
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Charset.defaultCharset();
      char[] charArray0 = new char[20];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("L_qY?}R{");
      StringReader stringReader1 = new StringReader("L_qY?}R{");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[6];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'd';
      charArray0[3] = 'P';
      charArray0[4] = 'm';
      charArray0[5] = '4';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("Znp^YKR\rf$");
      StringReader stringReader1 = new StringReader("Znp^YKR\rf$");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      charArray0[5] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("HW5`VtJB?z@|u4RT");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.adjustBeginLineColumn(607, 2645);
      String string0 = simpleCharStream0.GetImage();
      StringReader stringReader1 = new StringReader(string0);
      StringReader stringReader2 = new StringReader(string0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(bufferedReader0, (-296), (-1), 2);
      simpleCharStream2.GetImage();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[10];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.markSupported();
      StringReader stringReader0 = new StringReader("v");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 119, 37);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("4<eh7:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'S';
      charArray0[3] = 'W';
      charArray0[4] = 'T';
      charArray0[5] = 'S';
      charArray0[6] = 'W';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, 1734, (-1), 75);
      simpleCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("9xQ>");
      stringReader1.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = 'g';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader1 = new StringReader("ancestor::");
      BufferedReader bufferedReader1 = new BufferedReader(stringReader0);
      PushbackReader pushbackReader0 = new PushbackReader(stringReader1, 958);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 1989, 958, 958);
      simpleCharStream0.GetImage();
      stringReader1.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0, 3641);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, 1394, (-1), 1734);
      StringReader stringReader0 = new StringReader("contains");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("ancestor::");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader1);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0, 1075);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader1, 1989, (-1945), 91);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      charArray0[1] = 'Z';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("mod");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("s]npy}vn66^");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = 'g';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader1 = new StringReader("ancestor::");
      BufferedReader bufferedReader1 = new BufferedReader(stringReader0);
      PushbackReader pushbackReader0 = new PushbackReader(stringReader1, 958);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 1989, 958, 958);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[5];
      charArray0[0] = 'F';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-2252), (-2252));
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      StringReader stringReader0 = new StringReader("\"id\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      charArray0[2] = 'O';
      charArray0[3] = 'Z';
      charArray0[4] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("mod");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("or");
      StringReader stringReader2 = new StringReader("L_qY?}R{");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
      simpleCharStream0.ReInit((Reader) stringReader1, 92, 99, 92);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("HW5`VtJB?z@|u4RT");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.adjustBeginLineColumn(607, 2645);
      String string0 = simpleCharStream0.GetImage();
      StringReader stringReader1 = new StringReader(string0);
      StringReader stringReader2 = new StringReader(string0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(stringReader0);
      simpleCharStream2.GetImage();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Charset.defaultCharset();
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 119, 119);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      StringReader stringReader0 = new StringReader("");
      String string0 = ".1{=,V](A$TCEY";
      StringReader stringReader1 = new StringReader(".1{=,V](A$TCEY");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("//");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("descendant::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("L_qY?}R{");
      StringReader stringReader2 = new StringReader("XUkt,jX@O@{)D^");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader2);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("node");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 114, (byte) (-1));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (byte)20);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("null");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("vC ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("following-sibling::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      StringReader stringReader0 = new StringReader("fAn4S9308F},N4");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0, 'O', 'O');
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("substring-after");
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("starts-with");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'l';
      charArray0[1] = '.';
      charArray0[2] = 'B';
      charArray0[3] = 'n';
      charArray0[4] = 'h';
      charArray0[5] = '4';
      charArray0[6] = 'A';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader1 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedReader0, (-1), 28, 36);
      simpleCharStream0.GetImage();
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = '|';
      charArray0[2] = 'P';
      charArray0[3] = 'J';
      charArray0[4] = '?';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      charArray0[1] = '~';
      charArray0[2] = 'd';
      charArray0[3] = 'R';
      charArray0[4] = 'T';
      charArray0[5] = '(';
      charArray0[6] = '8';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[3];
      charArray0[0] = 'I';
      charArray0[1] = '-';
      charArray0[2] = 'X';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("L_qY?}R{");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.readChar();
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[17];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      charArray0[5] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("U.pDDNEsU2Y\"3{RdjKx");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'a';
      charArray0[2] = 'm';
      charArray0[3] = ' ';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 122, 122);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, 1302, 226, 75);
      StringReader stringReader0 = new StringReader("C:%Cbt");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0, 1257, 79);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 'P', 122);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '\u0081';
      charArray0[2] = '\u0081';
      charArray0[4] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 1065, 1065);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '\u0081';
      charArray0[1] = ')';
      charArray0[2] = '*';
      charArray0[4] = 's';
      charArray0[5] = 's';
      charArray0[6] = '+';
      charArray0[7] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-534), 79);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("! J!v4>^Kx#");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 79, 79);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
      simpleCharStream1.GetImage();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i(g!&7");
      stringReader0.ready();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte)117;
      byteArray0[6] = (byte)26;
      byteArray0[7] = (byte) (-74);
      byteArray0[8] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte)7;
      byteArray0[3] = (byte)62;
      byteArray0[3] = (byte) (-49);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<=");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0, 2147352583, (-2630));
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("h@<=@Rtm[I");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-779), 97);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("5+AYMH");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("5+AYMH");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      charArray0[2] = 'T';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, 112, (-1), 112);
      StringReader stringReader0 = new StringReader("");
      char[] charArray1 = new char[0];
      stringReader0.read(charArray1);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[10];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-2378), 142);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[3];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 1065, 1065);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g3c..!mu_`=['");
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 18, (-3240));
      StringReader stringReader0 = new StringReader("self::");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 18, (-3240));
      StringReader stringReader0 = new StringReader("self::");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B<e57:X");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = 'g';
      charArray0[2] = 'm';
      charArray0[3] = 'W';
      charArray0[4] = 'm';
      charArray0[5] = 'm';
      charArray0[6] = 'm';
      charArray0[7] = 'g';
      charArray0[8] = 'W';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 860, (-441));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("following-sibling::");
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charArray0[1] = 'l';
      charArray0[2] = 'm';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 762, (-774));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Charset.defaultCharset();
      char[] charArray0 = new char[2];
      charArray0[0] = '7';
      charArray0[1] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 66, 66);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[10];
      charArray0[0] = '7';
      charArray0[1] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-2378), 142);
      simpleCharStream0.inBuf = (-2378);
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("1i1/{^O^8");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("following-sibling::");
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charArray0[1] = 'l';
      charArray0[2] = 'm';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 762, (-774));
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("following-sibling::");
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 101, 4246, 101);
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("substring-after");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 119, 922);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("<EOF>7");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 77, (-4706));
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[4];
      charArray0[0] = 't';
      charArray0[1] = '{';
      charArray0[2] = 'U';
      charArray0[3] = 'j';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 18, 18);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 'W', 122);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("[:rtx%");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("null");
      StringReader stringReader2 = new StringReader(".:");
      stringReader2.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 225, 400);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("S;,iA(\"g^K1SDC");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedReader0);
      simpleCharStream0.ReInit((Reader) bufferedReader0, 128, 128);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedReader0, 3, 2147479552);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("YB");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("or");
      StringReader stringReader1 = new StringReader("processing-instruction");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, (-1750), 5);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("local-name");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 756, (-1679));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("local-name");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 756, (-1679));
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '8';
      charArray0[3] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1), 756);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("follo^ing-sibling::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("V!OC=d~sCG?<g");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 18, (-1));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("ze4,wg]Yh s");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 119, 119);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = 'S';
      charArray0[3] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 65, 18);
      StringReader stringReader0 = new StringReader("self::");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 119, 1);
      StringReader stringReader0 = new StringReader("M0KVGJ8");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-1022), (-1022));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 'k';
      charArray0[2] = '4';
      charArray0[3] = '@';
      charArray0[4] = 'L';
      charArray0[5] = 'R';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, (-3672), (-3672));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pipedInputStream0);
      simpleCharStream1.GetImage();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '\u0081';
      charArray0[2] = '\u0081';
      charArray0[4] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 1065, 1065);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
      StringReader stringReader0 = new StringReader("key");
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descedant::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("'neEc");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
  }
}
