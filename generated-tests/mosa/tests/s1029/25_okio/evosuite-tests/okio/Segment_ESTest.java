/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 20:06:58 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split(1958);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8195);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      segment1.prev = segment0;
      segment0.writeTo(segment1, 2433);
      // Undeclared exception!
      try { 
        segment1.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      Segment segment0 = new Segment(byteArray0, (byte) (-85), (byte)109, true, true);
      Segment segment1 = new Segment(byteArray0, (byte)109, 795, true, false);
      segment0.unsharedCopy();
      Segment segment2 = new Segment(byteArray0, (byte) (-85), (byte)109, true, true);
      segment0.prev = segment2;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split((-224));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      Segment segment2 = segment1.sharedCopy();
      Segment segment3 = new Segment();
      // Undeclared exception!
      try { 
        segment1.writeTo(segment2, 8195);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.prev = segment0;
      segment0.sharedCopy();
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)124;
      Segment segment0 = new Segment(byteArray0, (byte) (-104), (byte)124, true, true);
      Segment segment1 = new Segment(byteArray0, (byte)31, 805, true, false);
      segment0.next = segment1;
      segment0.prev = segment0.next;
      segment0.compact();
      assertNotSame(segment0, segment1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.prev = segment0;
      Segment segment1 = segment0.sharedCopy();
      segment1.pos = (-2735);
      // Undeclared exception!
      try { 
        segment1.split(51);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment(byteArray0, (byte)0, 4947, true, true);
      segment0.sharedCopy();
      int int0 = 4109;
      // Undeclared exception!
      try { 
        segment0.split(4109);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment1.pos = 8195;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 8195);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-43);
      Segment segment1 = new Segment(byteArray0, (-884), 8195, true, true);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 3696);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)109;
      byteArray0[1] = (byte)109;
      Segment segment0 = new Segment(byteArray0, (byte) (-104), (byte)0, false, false);
      segment0.next = segment0;
      segment0.prev = segment0.next;
      segment0.next.pop();
      segment0.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)109;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)109;
      Segment segment0 = new Segment();
      int int0 = 4304;
      Segment segment1 = new Segment(byteArray0, (byte) (-104), 4304, false, false);
      segment0.next = segment0;
      segment0.next = segment0;
      segment0.next.pos = (int) (byte)109;
      Segment segment2 = new Segment();
      segment0.next.push(segment0.next);
      segment1.prev = segment2;
      segment0.prev = segment2;
      Segment segment3 = new Segment();
      segment1.prev.limit = (int) (byte)109;
      segment0.prev.limit = 4517;
      segment1.compact();
      segment1.compact();
      Segment segment4 = new Segment();
      // Undeclared exception!
      try { 
        segment4.push(segment2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
