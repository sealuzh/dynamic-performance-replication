/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 20:31:15 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-1));
      fBProcedureParam0.setIndex((-1));
      fBProcedureParam0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      fBProcedureCall0.setName("");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam((-1));
      fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      int int0 = 0;
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getSQL(false);
      int int1 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "/#xBA;");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(/#xBA;)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "bwa");
      fBProcedureCall0.registerOutParam((-1), 0);
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParams();
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "/#xBA;");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "ZK4)1");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(0, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(595, "-mIZ,IH$mq");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName(" ");
      fBProcedureCall0.hashCode();
      String string0 = fBProcedureCall0.getName();
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addParam(0, "OUT");
      fBProcedureCall0.mapOutParamIndexToPosition((-403), true);
      int int1 = 63;
      boolean boolean0 = false;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(63, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      String string0 = "";
      fBProcedureCall0.setName("");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-3131), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3131
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam((-2952));
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1718, "@Ucc(");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam0);
      assertFalse(boolean0);
      assertEquals(1718, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.equals("SELECT * FROM null");
      fBProcedureCall0.mapOutParamIndexToPosition(178);
      int int0 = 0;
      fBProcedureCall0.clone();
      fBProcedureCall0.addParam(0, "SELECT * FROM null");
      int int1 = (-1022);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-1022), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(95);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(191);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.mapOutParamIndexToPosition(191);
      fBProcedureCall0.equals(fBProcedureParam0);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.equals("EXECUTE PROCEDURE null(null)");
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getInputParam(191);
      fBProcedureCall0.getOutputParam((-3257));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getOutputParam(191);
      assertNull(fBProcedureParam3.getParamValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("");
      fBProcedureCall0.getName();
      fBProcedureCall0.getName();
      fBProcedureCall0.mapOutParamIndexToPosition((-602), true);
      fBProcedureCall0.clone();
      fBProcedureCall0.getInputParam(1);
      try { 
        fBProcedureCall0.registerOutParam(1, (-4326));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.addParam(3506, "Pvt7rNP+V}x");
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertFalse(boolean0);
      assertFalse(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.getSQL(true);
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall1.mapOutParamIndexToPosition((-2052));
      fBProcedureCall0.setName("SELECT * FROM null");
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall1.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 887;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(887);
      int int1 = 0;
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      try { 
        fBProcedureParam0.setValue(fBProcedureCall1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("EXECUTE PROCEDURE");
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM EXECUTE PROCEDURE", string0);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(0);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-208));
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.addParam(2542, "MH$c");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParams();
      int int0 = 18;
      try { 
        fBProcedureCall0.registerOutParam(711, 18);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2, "or");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1794);
      int int1 = fBProcedureCall0.hashCode();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.getSQL(true);
      fBProcedureCall1.setName("EXECUTE PROCEDURE");
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall0.getSQL(false);
      assertFalse(fBProcedureCall0.equals((Object)fBProcedureCall1));
      
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition((-618));
      assertEquals((-618), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3, "iNgy5");
      assertEquals("iNgy5", fBProcedureParam0.getParamValue());
      assertEquals(3, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-835));
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.clone();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition((-1366));
      assertEquals((-1366), int0);
      
      fBProcedureCall1.hashCode();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(17, "iNgy5");
      assertEquals(17, fBProcedureParam1.getPosition());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(4, "l3p)9=}&)D?2u@(/#1");
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(3, "no");
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "l3p)9=}&)D?2u@(/#1");
      assertEquals(0, fBProcedureParam1.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(l3p)9=}&)D?2u@(/#1)", string0);
      
      String string1 = fBProcedureCall1.getSQL(true);
      assertEquals("SELECT * FROM null", string1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1840, "Specified parameter does not exist.");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), (-1523));
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(63, "?n");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(63, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(4, "l3p)9=}&)D?2u@(/#1");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      assertEquals(4, fBProcedureParam1.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(l3p)9=}&)D?2u@(/#1)", string0);
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "l3p)9=}&)D?2u@(/#1");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      assertEquals(0, fBProcedureParam1.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(l3p)9=}&)D?2u@(/#1)", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 37;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(37, "?N_P-t");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(37, "?N_P-t");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("?N_P-t");
      fBProcedureCall1.mapOutParamIndexToPosition(814);
      fBProcedureParam1.clone();
      fBProcedureParam1.setValue(fBProcedureCall1);
      fBProcedureParam0.setType(37);
      fBProcedureParam1.setIndex(681);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParam(232);
      fBProcedureCall0.addParam(681, "?N_P-t");
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 681
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(37, "?N_P-t");
      fBProcedureParam0.setValue((Object) null);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(37);
      fBProcedureParam0.setIndex(37);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(37, 37);
      fBProcedureCall0.mapOutParamIndexToPosition(681, true);
      fBProcedureCall0.getInputParam(213);
      fBProcedureCall0.addParam(681, "}x");
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }
}
