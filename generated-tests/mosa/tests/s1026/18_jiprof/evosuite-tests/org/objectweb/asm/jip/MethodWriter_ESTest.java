/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 17:34:25 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0rk@A7CCbw");
      // Undeclared exception!
      try { 
        MethodWriter.writeShort((byte[]) null, 21, (-2569));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-606));
      int int0 = 231;
      String string0 = "|O=pS9pGC";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 231, "<init>", "|O=pS9pGC", "<init>", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 191, "s3AdMuOH4_crVW;`uv", "s3AdMuOH4_crVW;`uv", "fi7R,,#If }.)\u0003", (String[]) null, false, false);
      methodWriter0.visitInsn(252);
      methodWriter0.visitInsn((-268435456));
      methodWriter0.visitVarInsn(256, 1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 191, "s3AdMuOH4_crVW;`uv", "s3AdMuOH4_crVW;`uv", "fi7R,,#If }.)\u0003", (String[]) null, false, false);
      methodWriter0.visitInsn(252);
      methodWriter0.visitVarInsn((-1954383274), 59);
      methodWriter0.visitMethodInsn((-128), "fi7R,,#If }.)\u0003", "fi7R,,#If }.)\u0003", "fi7R,,#If }.)\u0003");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 156, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      methodWriter0.visitInsn(156);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(1, "\"68jAg", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 156, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "|O=pS9pGC", "|O=pS9pGC", "<init>", stringArray0, false, false);
      methodWriter1.getSize();
      methodWriter0.visitIincInsn(156, 41);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = Frame.CHAR;
      ClassWriter classWriter0 = new ClassWriter(16777227);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[] intArray0 = new int[0];
      ClassWriter classWriter0 = new ClassWriter(1509950721);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 231, "<i[nit>", "|O=pS9pGC", "<i[nit>", stringArray0, false, false);
      methodWriter0.visitFieldInsn(231, "|O=pS9pGC", "LocalVariableTable", "|O=pS9pGC");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 156, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      methodWriter0.visitInsn(156);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitIincInsn(156, 156);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(51, (String) null, "|O=pS9pGC", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 156, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      methodWriter0.visitInsn(156);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitIincInsn(156, 156);
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(185, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, true);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "OpS9pGC", "OpS9pGC");
      methodWriter1.getSize();
      methodWriter1.visitMethodInsn(183, "OpS9pGC", "OpS9pGC", "OpS9pGC");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      methodWriter0.visitInsn(183);
      methodWriter0.visitMultiANewArrayInsn("|O=pS9pGC", 7);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitIincInsn(7, 7);
      methodWriter0.visitTypeInsn((-3527), "|O=pS9pGC");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      classWriter0.index = 183;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|O=pS9pGC", "8OmclE*VI$F#l:ACDve", "|O=pS9pGC", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, 1496);
      Frame frame0 = new Frame();
      Label label0 = new Label();
      methodWriter0.visitMethodInsn(183, "void", "8OmclE*VI$F#l:ACDve", "'-&)M?ZW<O");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int[] intArray0 = new int[7];
      intArray0[0] = (-32768);
      intArray0[1] = 2;
      intArray0[2] = 66;
      intArray0[3] = (-992);
      intArray0[4] = 127;
      intArray0[5] = 12;
      intArray0[6] = 46;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 127, (-992));
      assertEquals((-1372), int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 191, "s3AdMuOH4_crVW;`uv", "s3AdMuOH4_crVW;`uv", "fi7R,,#If }.)\u0003", (String[]) null, false, false);
      methodWriter0.visitInsn(252);
      methodWriter0.visitMethodInsn((-128), "fi7R,,#If }.)\u0003", "fi7R,,#If }.)\u0003", "fi7R,,#If }.)\u0003");
      methodWriter0.visitVarInsn(0, 0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = Frame.CHAR;
      ClassWriter classWriter0 = new ClassWriter(16777227);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, false, false);
      methodWriter0.visitLdcInsn("Oi&)M?Zh<O");
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      classWriter0.firstMethod = methodWriter0;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(16777227, ".JAR", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = Frame.CHAR;
      ClassWriter classWriter0 = new ClassWriter(16777227);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Exceptions", "Oi&)M?Zh<O", stringArray0, false, false);
      methodWriter0.visitLdcInsn("Exceptions");
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      classWriter0.firstMethod = methodWriter0;
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitParameterAnnotation((-2255), "Exceptions", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1236), "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      methodWriter0.visitTypeInsn(2, "LineNumberTable");
      Attribute attribute0 = new Attribute("LineNumberTable");
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(1, 168);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|O=pS9pGC", "]?wV|)MK", "|O=pS9pGC", stringArray0, true, false);
      methodWriter0.visitInsn(1);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1236), "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      ByteVector byteVector0 = new ByteVector(183);
      ByteVector byteVector1 = byteVector0.putLong(1);
      byteVector1.putUTF8("|O=pS9pGC");
      byteVector1.putLong(2);
      methodWriter0.put(byteVector0);
      methodWriter0.visitFrame((-1993), (-1993), (Object[]) null, 183, (Object[]) null);
      methodWriter0.visitInsn(1107297537);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 156, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      methodWriter0.visitInsn(156);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      ByteVector byteVector0 = new ByteVector();
      Item item0 = classWriter0.key2;
      methodWriter1.visitFieldInsn(16777216, "|O=pS9pGC", "45*woM@fjT8Sa7U?;kg", "45*woM@fjT8Sa7U?;kg");
      methodWriter1.visitMaxs(267386880, 267386880);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(199);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "OpS9pGC", "OpS9pGC");
      methodWriter0.visitIntInsn(2, 2);
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      int int0 = Frame.DOUBLE;
      String string0 = "Oi&)M?Zh<O";
      boolean boolean0 = true;
      classWriter0.addType("{d'FE_Mu8e'A{ull\"T");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3492, "Oi&)M?Zh<O", "Oi&)M?Zh<O", "{d'FE_Mu8e'A{ull\"T", stringArray0, true, true);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(1850, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      int int0 = Frame.DOUBLE;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "9qDb#!u~K+Y", "{d'FE_Mu8e'A{ull\"T", "j]0L'e", (String[]) null, false, false);
      methodWriter0.getSize();
      Attribute attribute0 = new Attribute("9qDb#!u~K+Y");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("9qDb#!u~K+Y", "9qDb#!u~K+Y", "|O=pS9p1C", label0, label0, 1);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = Frame.DIM;
      ClassWriter classWriter0 = new ClassWriter((-268435456));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 231, "fJ0?AT-lv", "fJ0?AT-lv", "fJ0?AT-lv", stringArray0, false, false);
      methodWriter0.visitAnnotation("fJ0?AT-lv", false);
      Frame frame0 = new Frame();
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(21, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "fJ0?AT-lv", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = Frame.CHAR;
      ClassWriter classWriter0 = new ClassWriter(16777227);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, false);
      methodWriter0.visitVarInsn(65, 16777227);
      int int1 = methodWriter0.getSize();
      assertEquals(38, int1);
      
      int int2 = MethodWriter.readUnsignedShort(byteArray0, 2);
      assertEquals(47806, int2);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = Frame.CHAR;
      ClassWriter classWriter0 = new ClassWriter(16777227);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Exceptions", "Oi&)M?Zh<O", stringArray0, false, false);
      methodWriter0.visitLdcInsn("Exceptions");
      classWriter0.firstMethod = methodWriter0;
      classWriter0.firstMethod.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 501, "|O=pS9pGC", "|O=pS9pGC", "{4\":DxJ", stringArray0, false, false);
      methodWriter0.getSize();
      Attribute attribute0 = new Attribute("|O=pS9pGC");
      methodWriter0.visitAttribute(attribute0);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(322, label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "|O=pS9pGC");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1236), "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      ByteVector byteVector0 = new ByteVector(183);
      ByteVector byteVector1 = byteVector0.putLong(1);
      byteVector1.putUTF8("|O=pS9pGC");
      byteVector1.putLong(2);
      methodWriter0.put(byteVector0);
      methodWriter0.visitMultiANewArrayInsn("|O=pS9pGC", 2);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "Oi&)M?Zh<O";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2516), "Oi&)M?Zh<O", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1223, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      methodWriter0.visitInsn(183);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "|O=pS9pGC", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, false, false);
      methodWriter0.getSize();
      classWriter0.newClassItem("OpS9pGC");
      methodWriter0.visitFieldInsn(183, "|O=pS9pGC", "RuntimeVisibleAnnotations", "Oi&)M?Zh<O");
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitMethodInsn((-992), "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "");
      methodWriter1.visitFieldInsn((-578), "Ce_yKy2rJP", "{d'FE_Mu8e'A{ull\"T", "ConstantValue");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1223, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "Oi&)M?Zh<O", "Oi&)M?Zh<O", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitLdcInsn("OpS9pGC");
      methodWriter0.visitFrame((-2154), (-2154), stringArray0, 1223, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(2, "RuntimeInvisibleAnnotations", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-65), "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", (String) null, stringArray0, false, true);
      methodWriter0.visitVarInsn(1, 1);
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3634), (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      methodWriter0.visitInsn(183);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(8, 817);
      Frame frame0 = new Frame();
      Label label0 = new Label();
      methodWriter1.visitMethodInsn(183, "Oi&)M?Zh<O", "java/lang/dyn/Dynamic", "Oi&)M?Zh<O");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "java/lang/Class", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(26, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("java/lang/Class");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|O=pS9pGC", "", "|O=pS9pGC", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(183);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putUTF8("");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      ByteVector byteVector3 = byteVector1.putLong(0L);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("|O=pS9pGC", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMethodInsn(459, "", "*k.&99TKhP~EdvoY?=z", "Deprecated");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)64;
      byteArray0[6] = (byte)0;
      short short0 = MethodWriter.readShort(byteArray0, (byte)0);
      assertEquals((short) (-11389), short0);
      assertArrayEquals(new byte[] {(byte) (-45), (byte) (-125), (byte)59, (byte)40, (byte)12, (byte)64, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(183);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "|O=pS9pGC", "|O=pS9pGC", "T>Alskr", stringArray0, false, false);
      assertNotNull(methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter1.visitTryCatchBlock(label1, label1, label1, "|O=pS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter1, methodWriter0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      methodWriter0.visitLabel(label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter0, methodWriter1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label1;
      labelArray0[1] = label0;
      labelArray0[2] = label1;
      labelArray0[3] = label1;
      labelArray0[4] = label0;
      methodWriter0.visitTableSwitchInsn(2, 1016, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter0, methodWriter1);
      assertSame(label0, label1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertSame(label0, label1);
      assertSame(label0, label2);
      assertSame(label2, label0);
      assertSame(label2, label1);
      
      int[] intArray0 = new int[5];
      intArray0[0] = (-1039);
      intArray0[2] = (-1039);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label2, intArray0, labelArray0);
      assertArrayEquals(new int[] {(-1039), 0, (-1039), 0, 0}, intArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label0, label2);
      assertSame(label2, label0);
      assertSame(label2, label1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1223, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(183);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(183);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitLdcInsn("OpS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitTypeInsn(1223, "K<X\"6bx~md6lN:|G");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("`bM%kN2", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitJumpInsn(79, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1236), "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("|U}<V[SjF6", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(2, (-2054));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-2054), " v[%;)@M?", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "{d'FE_Mu8e'A{ull\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(2, 3, label1, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitMultiANewArrayInsn("RuntimeVisibleAnnotations", 191);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newNameType("V6`", "V6`");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-375), "c0t", "", "g~^-2", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = classWriter0.addType("c0t");
      assertEquals(1, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[7];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|O=pS9pGC", "]?wV|)MK", "|O=pS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "]?wV|)MK");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      
      methodWriter0.visitTryCatchBlock(label2, label1, label2, "|O=pS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertNotSame(label0, label2);
      assertSame(label1, label0);
      assertNotSame(label1, label2);
      assertNotSame(label2, label0);
      assertNotSame(label2, label1);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      
      methodWriter0.visitLabel(label2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label2, label0);
      assertNotSame(label2, label1);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Object[] objectArray0 = new Object[6];
      Object object0 = label0.info;
      assertNull(object0);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 255;
      intArray0[1] = 471;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {255, 471, 0, 0, 0, 0, 0, 0}, intArray0);
      assertSame(label0, label1);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {255, 471, 0, 0, 0, 0, 0, 0}, intArray0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "{d'FE_Mu8e'A{ull\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(0L);
      assertNotNull(byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector0, byteVector1);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector0, byteVector1);
      
      methodWriter0.visitMultiANewArrayInsn("\"jr", (-992));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "{d'FE_Mue'A{ullkT";
      stringArray0[1] = "fJ0?AT-lv";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "fJ0?AT-lv";
      stringArray0[4] = "fJ0?AT-lv";
      stringArray0[5] = "fJ0?AT-lv";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2218), "fJ0?AT-lv", "fJ0?AT-lv", "{d'FE_Mue'A{ullkT", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(48, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      methodWriter0.visitIincInsn(48, (-2803));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 231, "84[Xw{", "84[Xw{", "84[Xw{", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16777227, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      assertNotNull(methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      methodWriter1.visitInsn((-1131));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      ByteVector byteVector0 = new ByteVector(231);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((-2510));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      
      ByteVector byteVector2 = byteVector0.putLong(0L);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertNotSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertFalse(methodWriter2.equals((Object)methodWriter0));
      
      methodWriter1.visitMethodInsn(59, "RuntimeInvisibleAnnotations", "84[Xw{", "84[Xw{");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      methodWriter1.visitVarInsn(231, (-1131));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(231, "RuntimeInvisibleAnnotations", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "s3AdMuOH4_crVW;`uv", "s3AdMuOH4_crVW;`uv", "fi7R,,#If }.)\u0003", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("fi7R,,#If }.)\u0003", (String) null, "fi7R,,#If }.)\u0003", (-335));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("wh56+]d/c0VU9zzXg/f", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8(":Ku:");
      assertNotNull(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.putByte((-1353));
      assertNotNull(byteVector2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      methodWriter0.put(byteVector2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "Oi&)M?Zh<O";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "{d'FE_Mu8e'A{ull\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter1.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitIincInsn(1174536705, 16777228);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "Oi&)M?Zh<O";
      stringArray0[4] = "Oi&)M?Zh<O";
      stringArray0[5] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[6] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[8] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1039), "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "{d'FE_Mu8e'A{ull\"T", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(54, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      
      Attribute attribute0 = new Attribute("{d'FE_Mu8e'A{ull\"T");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", (String) null, (Label) null, (Label) null, 1904);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\bxVjyY7OOapoQL", "\bxVjyY7OOapoQL", "\bxVjyY7OOapoQL", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("\bxVjyY7OOapoQL");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      classWriter0.firstMethod.visitFrame(2, 86, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 512, "\bxVjyY7OOapoQL", "b^p&\"j!d ", "\bxVjyY7OOapoQL", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "b,ICy+o";
      stringArray0[1] = "b,ICy+o";
      stringArray0[2] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[3] = "b,ICy+o";
      stringArray0[4] = "b,ICy+o";
      stringArray0[5] = "b,ICy+o";
      stringArray0[6] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1121), "{d'FE_Mu8e'A{ull\"T", "b,ICy+o", "{d'FE_Mu8e'A{ull\"T", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("LineNumberTable");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putLong(32L);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(69, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(22, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector3 = byteVector1.putLong(1703L);
      assertNotNull(byteVector3);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      
      methodWriter0.visitIntInsn(17, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "OpS9pGC", "OpS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      int int0 = methodWriter0.getSize();
      assertEquals(26, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitIincInsn(26, 16777216);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      int int1 = classWriter0.addType("Oi&)M?Zh<O");
      assertEquals(1, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "z4zYk)JM%cCG";
      stringArray0[2] = "z4zYk)JM%cCG";
      stringArray0[3] = "Oi&)M?Zh<O";
      stringArray0[4] = "Oi&)M?Zh<O";
      stringArray0[5] = "z4zYk)JM%cCG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-649), "Oi&)M?Zh<O", "z4zYk)JM%cCG", "z4zYk)JM%cCG", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = methodWriter0.getSize();
      assertEquals(48, int2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      Attribute attribute0 = new Attribute("Oi&)M?Zh<O");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitIincInsn(1, 132);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 156, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(156);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIincInsn(156, 156);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("|O=pS9pGC", 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label1, "|O=pS9pGC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      
      methodWriter1.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(190);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1238), "|O=pS9pGC", "", "|O=pS9pGC", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("|U}<V[SjF6", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-56);
      boolean boolean1 = label0.resolve(methodWriter0, 1791, byteArray0);
      assertFalse(boolean1);
      assertArrayEquals(new byte[] {(byte)13, (byte) (-56)}, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertTrue(boolean1 == boolean0);
      
      methodWriter0.visitJumpInsn(190, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Oi&)M?Zh<O");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(16777227, ".JAR", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newConst("{d'FE_Mu8e'A{ull\"T");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      Item item0 = classWriter0.newNameTypeItem(".m5_] <", "{d'FE_Mu8e'A{ull\"T");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(40, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      
      Attribute attribute0 = new Attribute("te_/SWxt[akA:7qO-");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Attribute attribute1 = new Attribute("{d'FE_Mu8e'A{ull\"T");
      assertNotNull(attribute1);
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      assertFalse(attribute1.equals((Object)attribute0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLineNumber(79, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "oxjv", "OpS9pGC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Attribute attribute0 = new Attribute("ad'FE_Mu8e'A{ull\"T");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter1.visitIincInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1062, "OpS9pGC", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("OpS9pGC");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("OpS9pGC", "int", "JUM/W6[<g;8\\d#e", label0, label0, 185);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9p GC";
      String string0 = "]?wV|)MK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|O=pS9p GC", "]?wV|)MK", "|O=pS9p GC", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "]?wV|)MK");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      String string1 = "StackMapTable";
      methodWriter0.visitLocalVariable("StackMapTable", "]?wV|)MK", "]?wV|)MK", label1, label0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1851, 183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(183);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(75, 251658240);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter1.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter1.visitIincInsn(75, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "|O=pS9pGC";
      stringArray0[1] = "Oi&)M?Zh<O";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "|O=pS9pGC";
      stringArray0[4] = "|O=pS9pGC";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "|O=pS9pGC";
      stringArray0[7] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9pGC", "Oi&)M?Zh<O", "|O=pS9pGC", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("@");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitVarInsn(1, 1274);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      frame0.owner = label0;
      Label label1 = frame0.owner;
      assertNotNull(label1);
      assertSame(label1, label0);
      
      methodWriter0.visitJumpInsn(1, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label1, label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation(1, "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Exceptions", "Oi&)M?Zh<O", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("Exceptions");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      int int1 = classWriter0.firstMethod.getSize();
      assertEquals(47, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(classWriter0.firstMethod, methodWriter0);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9p GC";
      String string0 = "]?wV|)MK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|O=pS9p GC", "]?wV|)MK", "|O=pS9p GC", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMultiANewArrayInsn("]?wV|)MK", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "]?wV|)MK");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLocalVariable("StackMapTable", "]?wV|)MK", "]?wV|)MK", label1, label0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-445), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(183);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "oxjv", "OpS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitFrame(1, 1, stringArray0, 168, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter1.visitInsn(186);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Exceptions", "Oi&)M?Zh<O", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Exceptions");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "OpS9pGC", "OpS9pGC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      int int0 = methodWriter1.getSize();
      assertEquals(26, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter1.visitMethodInsn(183, "OpS9pGC", "OpS9pGC", "`)2D[$``f");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{d'F_Mu8'A{ull\"T";
      stringArray0[1] = "_s>;8f{Fi\\fGf8>*y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 197, "{d'F_Mu8'A{ull\"T", "{d'F_Mu8'A{ull\"T", "_s>;8f{Fi\\fGf8>*y", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2001);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("_s>;8f{Fi\\fGf8>*y", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, (-1217), stringArray0, 951, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn((-1217));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(71, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2286));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Oi&)M?Zh<O", "Oi&)?Zh<O", "Oi&)M?Zh<O", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(184);
      assertEquals(184, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn("Oi&)M?Zh<O");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(2, "{d'FE_Mue'A{ullkT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("Oi&)?Zh<O");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newConst("{d'FE_Mu8e'A{ull\"T");
      assertEquals(2, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      Item item0 = classWriter0.newNameTypeItem(".m5_] <", "{d'FE_Mu8e'A{ull\"T");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(40, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      Attribute attribute0 = new Attribute("te_/SWxt[akA:7qO-");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Attribute attribute1 = new Attribute("{d'FE_Mu8e'A{ull\"T");
      assertNotNull(attribute1);
      assertTrue(attribute1.isUnknown());
      assertFalse(attribute1.isCodeAttribute());
      assertFalse(attribute1.equals((Object)attribute0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put11((-786), 16777220);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putShort((-1188216609));
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector2.putInt(1);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      
      ByteVector byteVector4 = byteVector3.putByte((-2890));
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector2, byteVector4);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
      
      methodWriter0.put(byteVector4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector2, byteVector4);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1236), "|O=pS9pGC", "", "|O=pS9pGC", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(183);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putUTF8("");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("|O=pS9pGC", ")", "Code", label0, label0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, 26);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector3 = new ByteVector();
      assertNotNull(byteVector3);
      assertFalse(byteVector3.equals((Object)byteVector2));
      assertFalse(byteVector3.equals((Object)byteVector0));
      assertFalse(byteVector3.equals((Object)byteVector1));
      
      ByteVector byteVector4 = byteVector0.putLong(183);
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector2);
      assertNotSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector3));
      assertFalse(byteVector4.equals((Object)byteVector3));
      
      int int0 = methodWriter0.getSize();
      assertEquals(85, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9p GC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|O=pS9p GC", "]?wV|)MK", "|O=pS9p GC", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("]?wV|)MK");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLocalVariable("int", "RuntimeInvisibleAnnotations", "EnclosingMethod", label1, label1, 5);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      
      methodWriter0.visitVarInsn(22, 183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2047, 183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9pGC", "_'42fS>d9[)QpDbvKX", "`qjv.oda(3U?)]Eyt", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(26, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(2939, "|O=pS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("|O=pS9pGC");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      ClassWriter classWriter1 = new ClassWriter((-65));
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1264, "Ljava/lang/Synthetic;", "float", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(8, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "OpS9pGC";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "EnclosingMethod";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Oi&)M?Zh<O", "Oi&)M?Zh<O", "EnclosingMethod", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label0.visitSubroutine(label1, (-879L), 544);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "E<{9RWI]=*-r");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1223, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("OpS9pGC", (-2060));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFrame(183, 183, stringArray0, 459, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(179);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(57, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(3, 1223, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "OGmux=$_h)Aw>?4");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitVarInsn(2, 53);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("{d'FE_Mu8e'A{ull\"T", "J^\"<<4S,f", "{d'FE_Mu8e'A{ull\"T", label1, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      methodWriter0.visitTypeInsn(1, "Label offset position has not been resolved yet");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("{d'FE_Mu8e'A{ull\"T");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIincInsn(1, (-1469));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "{d'FE_Mu8e'A{ull\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Integer integer0 = new Integer((-992));
      assertEquals((-992), (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn("{d'FE_Mu8e'A{ull\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-38), "{d'FE_Mu8e'A{ull\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("TfD");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter1.firstMethod;
      assertNull(methodWriter1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(label0, label1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitInsn(191);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "OpS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1223, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassWriter classWriter1 = new ClassWriter(183);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitLdcInsn("OpS9pGC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitTypeInsn(1223, "K<X\"6bx~md6lN:|G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(2, "OpS9pGC", "K<X\"6bx~md6lN:|G", "OpS9pGC");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2845), "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(83);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(183, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Frame frame1 = new Frame();
      assertNotNull(frame1);
      assertFalse(frame1.equals((Object)frame0));
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(83);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putShort((-1048576));
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      ByteVector byteVector3 = byteVector2.putByte(1);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      
      methodWriter1.visitIntInsn(83, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(62, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = Frame.BASE_KIND;
      assertEquals(267386880, int0);
      
      methodWriter0.visitLdcInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitFrame(267386880, 1, stringArray0, (-1281), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = methodWriter1.next;
      assertNull(methodWriter2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn((-1281), label1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1281
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`>Vq`V_*");
      assertFalse(boolean0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "vQTedO# =";
      stringArray0[1] = "`>Vq`V_*";
      stringArray0[2] = "@";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "s", "@", "`>Vq`V_*", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitLdcInsn("s");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitMultiANewArrayInsn("|O=;rIpm9p8HGC", (-3215));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitFrame(0, 2, stringArray0, (-1969), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitInsn(7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      int int0 = methodWriter0.getSize();
      assertEquals(76, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitLineNumber(156, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitTypeInsn(188, "vQTedO# =");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      int int1 = methodWriter0.getSize();
      assertEquals(91, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(int1 == int0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitMethodInsn(2195, "`>Vq`V_*", "`>Vq`V_*", "n*Qz'G`,,`0)C58m=r");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\bxVjyY7OOapoQL", "\bxVjyY7OOapoQL", "\bxVjyY7OOapoQL", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("\bxVjyY7OOapoQL");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitFrame(2, 86, stringArray0, 1, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9p8HGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9p8HGC", "|O=pS9p8HGC", "|O=pS9p8HGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(183);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("CET'a6LE8AT", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("|O=pS9p8HGC", "T>Alskr", "CET'a6LE8AT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(8, "CET'a6LE8AT", "V%q6kw2@|2LrS5m'4T", "|O=pS9p8HGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 1223, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(83);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(183, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Frame frame1 = new Frame();
      assertNotNull(frame1);
      assertFalse(frame1.equals((Object)frame0));
      
      Label label0 = frame1.owner;
      assertNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("Oi&)M?Zh<O", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2865), "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(172, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = Integer.remainderUnsigned((-1941625418), 183);
      assertEquals(125, int0);
      
      methodWriter0.visitLdcInsn("OpS9pGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitTypeInsn(59, "Oi&)M?Zh<O");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1236), "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte) (-82);
      classWriter0.visit((byte)85, 1479, "|O=pS9pGC", "|O=pS9pGC", "?Ie$:yDO'>At", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byteArray0[3] = (byte) (-67);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)85, (byte)68, (byte) (-82), (byte) (-67)}, byteArray0);
      
      ByteVector byteVector0 = new ByteVector(183);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putUTF8("|O=pS9pGC");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(183, "<init>", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(54, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(54);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(60, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|O=pS9p8HGC");
      assertFalse(boolean0);
      
      stringArray0[0] = "|O=pS9p8HGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9p8HGC", "|O=pS9p8HGC", "|O=pS9p8HGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("T>Alskr", 22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      classWriter0.visitOuterClass("|O=pS9p8HGC", "T>Alskr", "CET'a6LE8AT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = (-1);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 2, stringArray0, 22, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Oi&)M?Zh<O");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.firstMethod.visitJumpInsn(410, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter0);
      
      methodWriter0.visitFrame(196, 2, stringArray0, 196, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS8p8HGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS8p8HGC", "|O=pS8p8HGC", "|O=pS8p8HGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 183;
      intArray0[1] = 1;
      intArray0[2] = 3;
      intArray0[3] = 1;
      intArray0[5] = 183;
      intArray0[6] = 183;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {183, 1, 3, 1, 0, 183, 183}, intArray0);
      
      methodWriter0.visitMultiANewArrayInsn("|O=pS8p8HGC", 22);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      classWriter0.visitOuterClass("|O=pS8p8HGC", "|O=pS8p8HGC", "|O=pS8p8HGC");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = (-1);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 1, stringArray0, 22, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Oi&)M?Zh<O";
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[1] = "{d'FE_Pu8ehA{Zll\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Pu8ehA{Zll\"T";
      stringArray0[4] = "Oi&)M?Zh<O";
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Pu8ehA{Zll\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Pu8ehA{Zll\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 1;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "{d'FE_Pu8ehA{Zll\"T");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`>Vq`V_*");
      assertFalse(boolean0);
      
      stringArray0[0] = "|O=pS9p8HGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9p8HGC", "|O=pS9p8HGC", "|O=pS9p8HGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 183;
      methodWriter0.classReaderOffset = 1;
      intArray0[1] = 1;
      intArray0[6] = 3;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[0] = 183;
      intArray0[6] = 183;
      methodWriter0.visitMultiANewArrayInsn("|O=pS9p8HGC", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitFrame(3, 3, stringArray0, 1927, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`>Vq`V_*");
      assertFalse(boolean0);
      
      stringArray0[0] = "|O=pS9p8HGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9p8HGC", "|O=pS9p8HGC", "|O=pS9p8HGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 183;
      intArray0[1] = 1;
      intArray0[2] = 3;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[0] = 183;
      intArray0[6] = 183;
      methodWriter0.visitMultiANewArrayInsn("|O=pS9p8HGC", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitFrame(3, 3, stringArray0, 1927, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(58, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = true;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Oi&)M?Zh<O");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 16777220);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("y-\"@)yQ:e");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-992));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "Oi&)M?Zh<O";
      stringArray0[3] = "{d'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "{d'FE_Mu8e'A{ull\"T";
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[5] = "Oi&)M?Zh<O";
      stringArray0[6] = "Oi&)M?Zh<O";
      stringArray0[7] = "{d'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(54, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, (-1945));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(67, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "|O=pS9p8HGC", "|O=pS9p8HGC", "|O=pS9p8HGC", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn((-753));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("QKL", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      classWriter0.visitOuterClass("CET'a6LE8AT", "RuntimeVisibleAnnotations", "QKL");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(8, "5W2dr[~e{=2E", "QKL", "T>Alskr");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 2675, (Object[]) null, 4191, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      ClassWriter classWriter0 = new ClassWriter(16777227);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{d'FE_Mue'A{ullkT", "Oi&)M?Zh<O", "Oi&)M?Zh<O", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Oi&)M?Zh<O");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-2255), stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      classWriter0.firstMethod.classReaderOffset = 256;
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-347), "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "{d'FE_Mu8e'A{ull\"T", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(28, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      Attribute attribute0 = new Attribute("ThSmbKN0o@s},;");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("1oX~UAcABn", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("Oi&)M?Zh<O", "*PpqKz^Xu[y4tLP0", "{Y:Y5/bAbq");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(186, "Oi&)M?Zh<O", "*PpqKz^Xu[y4tLP0", "{Y:Y5/bAbq");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(156);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`>Vq`V_*");
      assertFalse(boolean0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "vQTedO# =";
      stringArray0[1] = "`>Vq`V_*";
      stringArray0[2] = "s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "s", "s", "`>Vq`V_*", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitLdcInsn("s");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitMultiANewArrayInsn("|O=;rIpm9p8HGC", (-3215));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFrame(0, 2, stringArray0, (-1969), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitLocalVariable("java/lang/String", "s", "vQTedO# =", label0, label0, 156);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-1709), (String) null, "vQTedO# =", "s");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Oi&)M?Zh<O";
      stringArray0[1] = "Oi&)M?Zh<O";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "OpS9pGC", "Oi&)M?Zh<O", "OpS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(1945);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame(86, 2, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = methodWriter0.next;
      assertNull(methodWriter2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitJumpInsn(54, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(label0, label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|O=pS9pGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9pGC", "|O=pS9pGC", "|O=pS9pGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "|O=pS9pGC", "]?wV<|)MK", "|O=pS9pGC", stringArray0, true, false);
      assertNotNull(methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter1.visitTryCatchBlock(label0, label1, label0, "]?wV<|)MK");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter1, methodWriter0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      methodWriter1.visitLocalVariable("]?wV<|)MK", "|O=pS9pGC", "]?wV<|)MK", label1, label0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter1, methodWriter0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      
      methodWriter1.visitLocalVariable("|O=pS9pGC", "|O=pS9p8HGC", "EnclosingMethod", label1, label1, 167);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter1, methodWriter0);
      assertSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label1, label2);
      assertSame(label1, label0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label2));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-347), "{d'FE_Mu8e'A{ull\"T", "Oi&)M?Zh<O", "{d'FE_Mu8e'A{ull\"T", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(28, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      Attribute attribute0 = new Attribute("ThSmbKN0o@s},;");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLocalVariable("EnclosingMethod", "float", "int", label0, label1, 247);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      classWriter0.lastMethod = methodWriter0;
      methodWriter0.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitVarInsn(178, 247);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(28, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.lastMethod.visitVarInsn(28, 16777219);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(2, 3442);
      assertNotNull(byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector0, byteVector1);
      
      ByteVector byteVector2 = byteVector1.putByte(247);
      assertNotNull(byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      
      ByteVector byteVector3 = byteVector2.putLong(28);
      assertNotNull(byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      
      ByteVector byteVector4 = byteVector3.putUTF8("RuntimeInvisibleParameterAnnotations");
      assertNotNull(byteVector4);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector4);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      
      classWriter0.lastMethod.put(byteVector4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector4);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector4);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector0);
      assertSame(classWriter0.lastMethod, methodWriter0);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x.L.?<(]CLj@");
      assertFalse(boolean0);
      
      stringArray0[0] = "|O=pS9p8HGC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 183, "|O=pS9p8HGC", "|O=pS9p8HGC", "|O=pS9p8HGC", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 183;
      methodWriter0.visitLdcInsn("|O=pS9p8HGC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      intArray0[6] = 3;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[0] = 183;
      intArray0[6] = 183;
      methodWriter0.visitMultiANewArrayInsn("|O=pS9p8HGC", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) methodWriter0;
      objectArray0[2] = (Object) methodWriter0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) methodWriter0;
      objectArray0[6] = (Object) "x.L.?<(]CLj@";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1, objectArray0, 183, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      classWriter0.version = 16777219;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[1] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[2] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[3] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[4] = "ad'FE_Mu8e'A{ull\"T";
      classWriter0.thisName = null;
      classWriter0.version = (-1039);
      stringArray0[5] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[6] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[7] = "ad'FE_Mu8e'A{ull\"T";
      stringArray0[8] = "ad'FE_Mu8e'A{ull\"T";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1039), "ad'FE_Mu8e'A{ull\"T", "ad'FE_Mu8e'A{ull\"T", "ad'FE_Mu8e'A{ull\"T", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(48, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
  }
}
