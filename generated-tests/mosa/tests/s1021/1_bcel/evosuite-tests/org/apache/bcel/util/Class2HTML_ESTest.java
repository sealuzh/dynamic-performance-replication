/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:39:32 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.time.chrono.ChronoLocalDate;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<HTML>\n<HEAD><TITLE>Documentation for ";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = Class2HTML.toHTML("<HTML>\n<HEAD><TITLE>Documentation for ");
      assertEquals("&lt;HTML&gt;\\n&lt;HEAD&gt;&lt;TITLE&gt;Documentation for ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Class2HTML.referenceType("7sadUa$w[<T+LBE-L");
      assertEquals("<A HREF=\"7sadUa$w.html\" TARGET=_top>7sadUa$w[<T+LBE-L</A>", string0);
      
      String string1 = Class2HTML.referenceType("<A HREF=\"7sadUa$w.html\" TARGET=_top>7sadUa$w[<T+LBE-L</A>");
      assertEquals("<A HREF=\"<A HREF=\"7sadUa$w.html\" TARGET=_top>7sadUa$w.html\" TARGET=_top><A HREF=\"7sadUa$w.html\" TARGET=_top>7sadUa$w[<T+LBE-L<.A></A>", string1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "<HTML>\n<HEAD><TITLE>Documentationor ");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-?K";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "i`void";
      stringArray0[1] = "tm @{4F";
      stringArray0[2] = "-zip";
      stringArray0[3] = "java.time.chrono.HijrahDate";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // java.time.chrono.HijrahDate (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "<HTL>\n<HEAD><TILE>Documenttion for";
      stringArray0[2] = "-d";
      stringArray0[3] = "<HTL>\n<HEAD><TILE>Documenttion for";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "n?U_z");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SyntheticRepository.getInstance();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "q:N~B\"bWR.:$`n[h.i";
      stringArray0[1] = "_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"";
      stringArray0[2] = "java.lang.Class";
      stringArray0[3] = "-d";
      stringArray0[4] = "<HpML>\n<HEAD><TITLE>Do'umentaaionor /";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
