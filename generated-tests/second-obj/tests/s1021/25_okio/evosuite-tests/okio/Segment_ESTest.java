/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:26:29 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-62);
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte)121;
      Segment segment0 = new Segment(byteArray0, (-1456), (byte)121, false, false);
      // Undeclared exception!
      try { 
        segment0.split(1024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-117);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-81);
      byteArray0[7] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (byte) (-117), 617, false, false);
      // Undeclared exception!
      try { 
        segment0.split(26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split((-948));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[8];
      Segment segment1 = new Segment(byteArray0, 9772, 394, false, false);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, (-165));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.sharedCopy();
      segment0.prev = segment1;
      segment0.compact();
      assertFalse(segment0.equals((Object)segment1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentPool.next = segment0;
      Segment segment1 = segment0.unsharedCopy();
      SegmentPool.byteCount = (-1364L);
      SegmentPool.next.limit = 1581;
      segment1.prev = SegmentPool.next;
      // Undeclared exception!
      try { 
        segment1.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      Segment segment1 = new Segment(byteArray0, (-3172), 0, true, false);
      segment0.prev = segment1;
      segment0.pos = (int) (byte) (-106);
      segment0.prev = segment1;
      segment1.owner = true;
      SegmentPool.byteCount = 1854L;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[6] = (byte)83;
      byteArray0[7] = (byte) (-1);
      segment0.prev = segment0;
      segment0.pos = (int) (byte) (-106);
      // Undeclared exception!
      try { 
        segment0.prev.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentPool.next = segment0;
      Segment segment1 = segment0.unsharedCopy();
      SegmentPool.next.limit = 1581;
      segment1.prev = segment0;
      segment1.prev.pos = 1581;
      byte byte0 = (byte)0;
      segment0.writeTo(SegmentPool.next, 8191);
      // Undeclared exception!
      try { 
        segment1.prev.push(segment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentPool.next = segment0;
      Segment segment1 = segment0.unsharedCopy();
      long long0 = (-1364L);
      // Undeclared exception!
      try { 
        segment1.writeTo(SegmentPool.next, 8209);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[23];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      segment0.next = segment0;
      Segment segment1 = new Segment(byteArray0, (byte)0, 0, false, true);
      segment0.prev = segment1;
      segment1.owner = true;
      SegmentPool.byteCount = 1839L;
      segment0.compact();
      segment1.sharedCopy();
      Segment segment2 = segment1.sharedCopy();
      // Undeclared exception!
      try { 
        segment2.split(26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentPool.next = segment0;
      SegmentPool.next.sharedCopy();
      Segment segment1 = segment0.unsharedCopy();
      int int0 = 1581;
      SegmentPool.next.limit = 1581;
      segment1.prev = segment0;
      segment1.prev.pos = 1581;
      byte byte0 = (byte)0;
      int int1 = 8191;
      // Undeclared exception!
      try { 
        segment0.writeTo(SegmentPool.next, 8191);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)83;
      byteArray0[1] = (byte) (-106);
      segment0.limit = 6737;
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-32);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      Segment segment1 = new Segment(byteArray0, (-3184), 1686, false, false);
      segment0.prev = segment1;
      byteArray0[4] = (byte) (-106);
      segment1.owner = true;
      segment0.compact();
      // Undeclared exception!
      try { 
        segment0.prev.writeTo(segment1, (-3184));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
