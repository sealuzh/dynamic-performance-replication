/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 16:24:55 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, 1911);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)103;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 4096);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4096
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 20, stringArray0, 1, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "Cxde", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "StaMQap", stringArray0, false, false);
      methodWriter0.visitIincInsn((-1399), 2);
      methodWriter0.visitLdcInsn("StaMQap");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "-", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 57);
      methodWriter0.visitIincInsn(57, 2);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 18, stringArray0, 1, stringArray0);
      Label label0 = new Label();
      methodWriter0.visitIincInsn((-1660), (-1388));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      intArray0[0] = 20;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {20}, intArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1107);
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray0, (int[]) null, (-1131), (-34));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 20, stringArray0, 1, stringArray0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTypeInsn(2, "ConstantValue");
      // Undeclared exception!
      try { 
        methodWriter1.visitLdcInsn(methodWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.MethodWriter@9
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-4465);
      intArray0[1] = 4890;
      intArray0[2] = (-385);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-385), (-4019));
      assertEquals((-3249), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      classWriter0.toByteArray();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "aCHSC/ *}*[Ck]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]", stringArray0, false, false);
      methodWriter0.classReaderOffset = 2;
      methodWriter0.visitAnnotation("aCHSC/ *}*[Ck]", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      Attribute attribute0 = new Attribute("cX)Z YA1(o[t$Rh");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitMethodInsn(19, "Cxde", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "]d", "|cX)Z YA1cd[(t$Rh", "|cX)Z YA1cd[(t$Rh", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, 57);
      methodWriter0.visitIincInsn(57, 2);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "StaMQap", stringArray0, false, false);
      methodWriter0.visitLdcInsn("StaMQap");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      boolean boolean0 = true;
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 20, "@;", "`jwC| f=q{4=)", "Cxde", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "aCH[!SC/ *}*[Ck]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "aCH[!SC/ *}*[Ck]", "aCH[!SC/ *}*[Ck]", "aCH[!SC/ *}*[Ck]", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLocalVariable("aCH[!SC/ *}*[Ck]", "aCH[!SC/ *}*[Ck]", "qA", label0, label0, (-1437847809));
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "7zn^x.W6", "7zn^x.W6", "Fn", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(73, "LineNumberTable", "LineNumberTable", "Fn");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S@#qA^9%1V5~Y.Km";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "S@#qA^9%1V5~Y.Km", "S@#qA^9%1V5~Y.Km", "S@#qA^9%1V5~Y.Km", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter0.visitMultiANewArrayInsn("<init>", (-771));
      assertSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "aCH[!SC/ *}*[Ck]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "aCH[!SC/ *}*[Ck]", "aCH[!SC/ *}*[Ck]", "aCH[!SC/ *}*[Ck]", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "aCH[!SC/ *}*[Ck]", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(75);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, true, true);
      Label label0 = new Label();
      label0.info = (Object) methodWriter0;
      methodWriter0.visitJumpInsn(172, label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "|cX)Z YA1(o[t$Rh");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847823));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", stringArray0, false, false);
      methodWriter0.visitIincInsn(2638, 166);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "RuntimeInvisibleParameterAnnotations", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 36
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3463), "&JIK,Q+\"9", "&JIK,Q+\"9", "LocalVariableTable", (String[]) null, false, false);
      methodWriter0.visitMaxs(16, 16);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3320);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LocalVariableTypeTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YaA+31(o[t$Rh", "cX)Z YaA+31(o[t$Rh", "LocalVariableTypeTable", stringArray0, true, true);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, false, true);
      methodWriter0.visitCode();
      methodWriter0.visitMultiANewArrayInsn("]K{[RDN.AV,cPPG`HC", 2);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "I-", "cPX)Z YaA+31(o[t$Rh", "cPX)Z YaA+31(o[t$Rh", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(1, 1);
      methodWriter0.visitMethodInsn(2, "I-", ">L?II$c:", "cPX)Z YaA+31(o[t$Rh");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(71);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "ml!YpS6=", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, false, false);
      methodWriter0.visitVarInsn(74, 71);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, false, true);
      methodWriter0.visitVarInsn(82, 57);
      methodWriter0.visitVarInsn(2, 82);
      methodWriter0.visitIincInsn(170, 1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "StaMQap", stringArray0, false, false);
      methodWriter0.visitIincInsn((-1399), 218);
      methodWriter0.visitLdcInsn("StaMQap");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S@#qA^9%1V5~Y.Km";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "S@#qA^9%1V5~Y.Km", "S@#qA^9%1V5~Y.Km", "S@#qA^9%1V5~Y.Km", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      classWriter0.newClassItem("org.objectweb.asm.jip.MethodWriter");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^s] vY";
      stringArray0[1] = "siGY+g`QYf";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "siGY+g`QYf", "^s] vY", "siGY+g`QYf", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, 1);
      classWriter0.newClassItem("siGY+g`QYf");
      ByteVector byteVector0 = new ByteVector(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 20, stringArray0, 1, stringArray0);
      methodWriter0.visitVarInsn(2217, 2602);
      methodWriter0.visitMaxs(2, 1);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "-", "|cX)Z,A1(o[t$Rh", "|cX)Z,A1(o[t$Rh", stringArray0, true, false);
      methodWriter0.visitVarInsn(2, 57);
      methodWriter0.visitIincInsn(57, 2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitIntInsn(2, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-315), 19);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^s] vY";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, 1);
      methodWriter0.visitAnnotationDefault();
      classWriter0.newClassItem("-");
      methodWriter0.visitIincInsn(2, (-404));
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, false, false);
      methodWriter0.visitIntInsn(2, 2);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, false, false);
      methodWriter0.visitInsn(19);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      classWriter0.newUTF8("cX)Z YaA1(o[t$Rh");
      methodWriter0.visitVarInsn(166, 644);
      methodWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("RuntimeInvisibleAnnotations", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847789));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CH[!SC/ }*[Ck]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "CH[!SC/ }*[Ck]", "CH[!SC/ }*[Ck]", "CH[!SC/ }*[Ck]", stringArray0, false, false);
      methodWriter0.visitVarInsn((-1437847789), (-1437847789));
      methodWriter0.getSize();
      int int0 = methodWriter0.getSize();
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2005));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2349), "RuntimeInvisibleParameterAnnotations", "G", "RuntimeInvisibleParameterAnnotations", stringArray0, false, false);
      methodWriter0.visitAnnotation("RuntimeInvisibleParameterAnnotations", false);
      methodWriter0.getSize();
      methodWriter0.visitVarInsn((-2005), 17);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CPxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "CPxde", "CPxde", "CPxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 24117248, stringArray0, 1, stringArray0);
      methodWriter0.visitLdcInsn("CPxde");
      methodWriter0.visitMethodInsn(2, "CPxde", "CPxde", "CPxde");
      methodWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      classWriter0.index = 20;
      methodWriter0.visitAnnotation("rne1m", false);
      methodWriter0.visitFrame(20, 2, stringArray0, 1, stringArray0);
      methodWriter0.visitMaxs(2, 21);
      methodWriter0.getSize();
      Integer integer0 = new Integer(20);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "I-", "cX)Z YaA1(o[t$Rh", "", stringArray0, false, true);
      methodWriter0.visitFieldInsn(10, "", "I-", "");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "hx/e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "hx/e", "hx/e", "hx/e", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber((-1285), label0);
      int int0 = methodWriter0.getSize();
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 3;
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[1];
      classWriter0.index = 3;
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "StackMap", stringArray0, false, false);
      methodWriter0.visitLdcInsn("StackMap");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "I-", "cX)Z YaA1(o[t$Rh", "cX)Z YaA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitLdcInsn("I-");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      methodWriter1.visitLocalVariable("I-", "E$bl", "I-", label0, label0, 8);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      classWriter0.newLong(19);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitIntInsn(2, 2);
      methodWriter0.visitFrame(765, 1, stringArray0, 1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, false);
      methodWriter0.visitInsn(19);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 57;
      ClassWriter classWriter0 = new ClassWriter(57);
      int int1 = 82;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(610, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2072));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-22), "nss{p[\">", "cX)Z YaA1(o[t$Rh", "nss{p[\">", stringArray0, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-22), (-2072));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      classWriter0.newMethod("nss{p[\">", "c4d?}$HBJ8kv)qcs", "nss{p[\">", true);
      methodWriter0.visitVarInsn(166, 644);
      methodWriter0.getSize();
      methodWriter0.getSize();
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("RuntimeInvisibleAnnotations", "cX)Z YaA1(o[t$Rh", (String) null, label0, label0, 115);
      methodWriter0.visitLineNumber(4, label0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "I-", "cX)Z YaA1(o[t$Rh", "cX)Z YaA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitVarInsn(8, 8);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      label0.getFirst();
      methodWriter1.visitLocalVariable("f", "E$bl", "eS@0y,b'm`Jr?", label0, label0, 8);
      methodWriter0.visitLocalVariable("I-", "long", "Cxde", label0, label0, 82);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^s] vY";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitFrame(1, (-1732), stringArray0, (-500), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 2561, stringArray0, (-466), stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, false);
      methodWriter0.visitIntInsn(82, 2);
      methodWriter0.visitTypeInsn((-490), "cX)Z YA1(o[t$Rh");
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ClassWriter@5
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "hx/e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "hx/e", "hx/e", "hx/e", stringArray0, false, false);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(2, 20, label0, labelArray0);
      classWriter0.version = 20;
      label0.frame = frame0;
      methodWriter0.visitLdcInsn("hx/e");
      methodWriter0.visitLineNumber((-1285), label0);
      int int0 = methodWriter0.getSize();
      assertEquals(74, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "-", "cX)Z YA1(o[t$Rh", "7!U> .q7S", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label0 = new Label();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 8;
      intArray0[2] = 82;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {1, 8, 82, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
      methodWriter0.visitVarInsn(20, 20);
      int int0 = methodWriter0.getSize();
      assertEquals(38, int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "I-", "cX)Z YaA1(o[t$Rh", "cX)Z YaA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitVarInsn(8, 8);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      label0.getFirst();
      methodWriter1.visitLocalVariable("f", "E$bl", "I-", label0, label0, 8);
      int int0 = methodWriter1.getSize();
      assertEquals(72, int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "StackMap", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      methodWriter0.visitTableSwitchInsn(3, (-408), label0, labelArray0);
      methodWriter0.visitLdcInsn("StackMap");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3, "SourceDebugExtension", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "StackMap", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      methodWriter0.visitLabel(label0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "-", "cX)Z YA1(o[t$Rh", "7!U> .q7S", stringArray0, false, true);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitFrame(22, (-950), stringArray0, 6, stringArray0);
      Label label0 = new Label();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      methodWriter0.visitLabel(label0);
      assertSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitVarInsn(20, 20);
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      ClassWriter classWriter1 = new ClassWriter(1657);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "-";
      stringArray0[2] = "LocalVariableTable";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "-", "cX)Z YaA1(o[t$Rh", "-", stringArray0, true, false);
      methodWriter0.visitVarInsn(82, 2);
      Label label0 = new Label();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitVarInsn(73, 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      methodWriter1.visitLdcInsn("Cxde");
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "Cxde");
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "Cxde");
      methodWriter1.visitLineNumber((-1292), label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 20, stringArray0, 1, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(20, 2602, stringArray0, 20, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitFrame(2, 20, stringArray0, 1, stringArray0);
      methodWriter0.visitVarInsn(14, 2711);
      methodWriter0.visitFrame(2, (-29), stringArray0, 2602, stringArray0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S@#qA^9%1V5~Y.Km";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "S@#qA^9%1V5~Y.Km", "S@#qA^9%1V5~Y.Km", "S@#qA^9%1V5~Y.Km", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1533, label0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "-", "cX)Z YaA1(o[t$Rh", "cX)Z YaA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitVarInsn(8, 8);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter1.visitLocalVariable("cX)Z YaA1(o[t$Rh", "-", "", label1, label0, 8);
      Edge edge0 = label1.successors;
      label0.successors = null;
      methodWriter1.visitLocalVariable("f", "E$bl", "eS@0y,b'm`Jr?", label0, label0, 8);
      methodWriter0.visitMethodInsn(8, "LineNumberTable", "~B0D{G", "");
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putShort(1921);
      methodWriter1.put(byteVector1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      int int0 = methodWriter0.getSize();
      assertEquals(16, int0);
      
      methodWriter0.visitMultiANewArrayInsn("cX)Z YaA1(o[t$Rh", 1226);
      methodWriter0.visitVarInsn(20, 20);
      int int1 = methodWriter0.getSize();
      assertEquals(40, int1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(2, "bB$zmm", "bB$zmm", "CT]\"PA2nbt<+&LV");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 108, "Synthetic", "cX)Z YaA1(o[t$Rh", "Synthetic", stringArray0, true, false);
      classWriter0.addUninitializedType("Synthetic", 108);
      methodWriter0.visitVarInsn(108, 2);
      methodWriter0.visitLdcInsn("Synthetic");
      methodWriter0.visitInsn(108);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "-cX)Z YA1(o[t$Rh", "-cX)Z YA1(o[t$Rh", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, false);
      methodWriter0.visitIntInsn(82, 2);
      methodWriter0.visitFieldInsn((-1721063920), "3M~jN9.RO<dBC-p;s!", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "3M~jN9.RO<dBC-p;s!");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, false);
      ClassWriter classWriter1 = new ClassWriter(2);
      methodWriter0.visitInsn(89);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      methodWriter0.classReaderOffset = 218;
      classWriter0.typeTable = null;
      methodWriter0.visitVarInsn(20, 20);
      methodWriter0.getSize();
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "Synthetic";
      classWriter0.newConstItem("cX)Z YaA1(o[t$Rh");
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 108, "Synthetic", "cX)Z YaA1(o[t$Rh", "Synthetic", stringArray0, true, false);
      methodWriter0.visitVarInsn(37, 2);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "RuntimeInvisibleAnnotations";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(37, "Deprecated", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray1);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(108, 37);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 37;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitTypeInsn(2, "cX)Z YaA1(o[t$Rh");
      assertNotSame(methodWriter0, methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "StackMapTable";
      stringArray0[2] = "StackMapTable";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 18, "StackMapTable", "cX)Z YaA1(o[t$Rh", "StackMapTable", stringArray0, true, false);
      classWriter0.addUninitializedType("StackMapTable", 18);
      methodWriter0.visitVarInsn(18, 2);
      methodWriter0.visitMethodInsn(66, "cX)Z YaA1(o[t$Rh", "mF{D\"OZE2l[ ,C", "cX)Z YaA1(o[t$Rh");
      methodWriter0.getSize();
      methodWriter0.visitInsn(191);
      methodWriter0.visitIincInsn(1, 54);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "-", "cX)Z YA1(o[t$Rh", "7!U> .q7S", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label0 = new Label();
      label0.status = 2;
      methodWriter0.visitIntInsn(2, 2);
      methodWriter0.exceptionCount = 8;
      methodWriter0.visitInsn(8);
      methodWriter0.visitMethodInsn(8, "7!U> .q7S", "float", "-");
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "-", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, true);
      methodWriter0.visitLdcInsn("cX)Z YA1(o[t$Rh");
      methodWriter0.visitVarInsn(8, 8);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      Frame frame0 = new Frame();
      label0.frame = frame0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      methodWriter1.visitInsn(1);
      methodWriter0.visitLabel(label0);
      methodWriter1.visitLocalVariable("cX)Z YA1(o[t$Rh", "lV", "cX)Z YA1(o[t$Rh", label0, label0, 8);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimenvisiblAnnotations", stringArray0, true, false);
      methodWriter0.visitParameterAnnotation(64, "Ljava/lang/Synthetic;", true);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "I-", "cX)Z YaA1(o[t$Rh", "", stringArray0, false, true);
      methodWriter0.visitVarInsn(57, 19);
      MethodWriter methodWriter1 = methodWriter0.next;
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh", stringArray0, true, false);
      methodWriter0.visitIntInsn(82, 2);
      methodWriter0.visitMaxs((-315), 19);
      methodWriter0.visitMethodInsn(1, "Exceptions", "cX)Z YA1(o[t$Rh", "cX)Z YA1(o[t$Rh");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      classWriter0.toByteArray();
      String string0 = "aCHSC/ *}*[Ck]";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "aCHSC/ *}*[Ck]";
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]", stringArray0, false, false);
      methodWriter0.visitMethodInsn((-65), "Sig~natur(", "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]");
      methodWriter0.classReaderOffset = 2;
      methodWriter0.visitIntInsn(17, (-65));
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = null;
      labelArray0[1] = null;
      labelArray0[2] = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn((-1437847809), 83, (Label) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[6];
      ClassWriter classWriter0 = new ClassWriter(8);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "r,", "X)Z YA1(o[t$R", stringArray0[0], stringArray1, true, true);
      methodWriter0.visitInsn(172);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, (String) null);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 108, "Synthetic", "cX)Z YaA1(o[t$Rh", "Synthetic", stringArray0, true, false);
      classWriter0.addUninitializedType("Synthetic", 108);
      methodWriter0.visitVarInsn(108, 2);
      methodWriter0.visitIntInsn((-2772), 65535);
      methodWriter0.visitMaxs(65535, 2);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String string0 = "Cxde";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 20, "<init>", "Cxde", "LocalVariableTypeTable", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 68, "-", "cX)Z YA1(o[t$Rh", "l*nL-Y", stringArray0, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitVarInsn(9, (-1181));
      methodWriter0.visitAnnotationDefault();
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "1e+QSMBN-+SGZK6lUu:", "o}b~Jm)`c2O", "Code", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2, "Code", "", "hc7c|B");
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "");
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.put11(2, 184);
      ByteVector byteVector2 = byteVector1.putLong(4294967295L);
      methodWriter0.put(byteVector2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitIntInsn(2, 70);
      methodWriter0.visitFrame(2, 18, stringArray0, 1, stringArray0);
      methodWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      Attribute attribute0 = new Attribute("cX)Z YA1(o[t$Rh");
      methodWriter0.visitAttribute(attribute0);
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort((-694));
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute("Ljava/lang/Synthetic;");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "hx/e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "hx/e", "hx/e", "hx/e", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLdcInsn("hx/e");
      methodWriter0.visitLineNumber((-1285), label0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Label label0 = new Label();
      label0.status = 101;
      MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "StackMapTable";
      stringArray0[2] = "StackMapTable";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "}1+ TW!N";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "!!;k}GMhs%L2e", "RuntimeVisibleAnnotations", (String) null, stringArray1, false, false);
      classWriter0.addUninitializedType("StackMapTable", 82);
      methodWriter0.visitVarInsn(40, (-982));
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitMethodInsn(2, "j2_;B(f|#%]IzK!", "LineNumberTable", "!!;k}GMhs%L2e");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(49);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter0.put(byteVector1);
      methodWriter2.visitTypeInsn(49, ".@A(O@/9: =O!v'Cg");
      methodWriter1.visitVarInsn(17, 25165824);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitCode();
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(17, label0);
      methodWriter0.visitIincInsn(172, 1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      classWriter0.visit((-5), 20, "T0paQIaX(ed10qF", "T0paQIaX(ed10qF", "Cxde", stringArray0);
      methodWriter0.visitVarInsn(2, 2);
      classWriter0.index = 20;
      methodWriter0.visitAnnotation("rne1m", false);
      methodWriter0.visitFrame(20, 2, stringArray0, 1, stringArray0);
      methodWriter0.visitMaxs(2, 21);
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 20;
      methodWriter0.exceptions = intArray0;
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "T0paQIaX(ed10qF", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^s] vY";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, 1);
      classWriter0.newInteger(2);
      methodWriter0.visitIincInsn(2, (-404));
      Item item0 = new Item(2);
      methodWriter0.visitMethodInsn(186, "b", "-", "-");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      classWriter0.toByteArray();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "aCHSC/ *}*[Ck]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]", "aCHSC/ *}*[Ck]", stringArray0, false, false);
      methodWriter0.classReaderOffset = 2;
      methodWriter0.visitTypeInsn(2, "aCHSC/ *}*[Ck]");
      methodWriter0.visitIincInsn((-1437847809), 4);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte) (-1), 4, stringArray0, (-3201), stringArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847789));
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "CH[!SC/ }*[Ck]";
      stringArray1[1] = "LocalVariableTable";
      stringArray1[2] = "EnclosingMethod";
      stringArray1[3] = "LocalVariableTable";
      stringArray1[4] = "LocalVariableTable";
      stringArray1[5] = "LocalVariableTable";
      stringArray1[6] = "EnclosingMethod";
      stringArray1[7] = "EnclosingMethod";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "CH[!SC/ }*[Ck]", "EnclosingMethod", "LocalVariableTable", stringArray1, false, false);
      methodWriter0.visitFrame(57, 188, stringArray1, 57, stringArray0);
      methodWriter0.visitMethodInsn((-1437847789), "EnclosingMethod", "", "CH[!SC/ }*[Ck]");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 188, stringArray1, 57, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.version = (-404);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^s] vY";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, 1);
      methodWriter0.visitIincInsn(2, (-404));
      Item item0 = new Item(2);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cxde";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Cxde", "Cxde", "Cxde", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      methodWriter0.visitAnnotation("rne1m", false);
      methodWriter0.visitFrame(3, 54, stringArray0, 54, stringArray0);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 54, "rne1m", "qC[8w|yH*3NXMt@D<#", "Cxde", stringArray0, false, false);
      methodWriter1.classReaderLength = (-1983274760);
      methodWriter1.visitIntInsn(2, 184);
      MethodWriter methodWriter2 = methodWriter0.next;
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) methodWriter2;
      objectArray0[1] = (Object) "Cxde";
      objectArray0[2] = (Object) methodWriter1;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) methodWriter0;
      methodWriter0.visitFrame(3, (-1983274760), objectArray0, 83, objectArray0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "hx/e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "hx/e", "hx/e", (String) null, stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(251658240, label0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 82, "", "|cX)Z YA1(o[t$Rh", "|cX)Z YA1(o[t$Rh", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(2, 57);
      methodWriter0.visitCode();
      methodWriter0.visitVarInsn(55, 2);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1437847789));
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "CH[!SC/ }*[Ck]";
      stringArray1[1] = "LocalVari4bleTable";
      stringArray1[2] = "EnclosingMethod";
      stringArray1[3] = "LocalVari4bleTable";
      stringArray1[4] = "LocalVari4bleTable";
      stringArray1[5] = "LocalVari4bleTable";
      stringArray1[6] = "LocalVari4bleTable";
      stringArray1[7] = "EnclosingMethod";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "CH[!SC/ }*[Ck]", "EnclosingMethod", "LocalVari4bleTable", stringArray1, false, false);
      methodWriter0.visitFrame(57, 188, stringArray1, 57, stringArray0);
      Object[] objectArray0 = new Object[3];
      objectArray0[1] = (Object) "CH[!SC/ }*[Ck]";
      methodWriter0.visitMethodInsn((-1437847789), "LocalVari4bleTable", "", "CH[!SC/ }*[Ck]");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 188, objectArray0, 57, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "nss{p[\">";
      stringArray1[1] = "RuntimeInvisibleAnnotations";
      methodWriter0.visitFieldInsn(4096, "2PXLk.wMt7kwfD4CL", "RuntimeInvisibleAnnotations", "Deprecated");
      stringArray1[2] = "nss{p[\">";
      stringArray1[3] = "nss{p[\">";
      stringArray1[4] = "nss{p[\">";
      methodWriter0.visitVarInsn(20, 20);
      methodWriter0.getSize();
      methodWriter0.getSize();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-83);
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte) (-53);
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte) (-53));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -53
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 108, "Synthetic", "cX)Z YaA1(o[t$Rh", "Synthetic", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "cX)Z YaA1(o[t$Rh", "Synthetic", "Synthetic", stringArray0, false, false);
      methodWriter0.visitAnnotation("Synthetic", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-305), stringArray0, 16777216, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 108, "Synthetic", "cX)Z YaA1(o[t$Rh", "Synthetic", stringArray0, true, false);
      int int0 = Member.PUBLIC;
      classWriter0.newFloat(0.0F);
      classWriter0.toByteArray();
      classWriter0.newFieldItem("Synthetic", "cX)Z YaA1(o[t$Rh", "Q_B&0?>kyXU/_4");
      classWriter0.newClass("Synthetic");
      Integer integer0 = new Integer(1);
      methodWriter0.visitLdcInsn(integer0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIntInsn(108, 4);
      methodWriter0.visitMethodInsn(1, "Gqha$", "Q2;Zx%%e", "jhy,@)lE3T");
      methodWriter1.visitFrame(0, 2, stringArray0, 2, stringArray0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 108, "Synthetic", "cX)Z YaA1(o[t$Rh", "Synthetic", stringArray0, true, false);
      int int0 = Member.PUBLIC;
      classWriter0.newFloat(0.0F);
      classWriter0.newFieldItem("Synthetic", "cX)Z YaA1(o[t$Rh", "Q_B&0?>kyXU/_4");
      classWriter0.newClass("Synthetic");
      Integer integer0 = new Integer(1);
      methodWriter0.visitLdcInsn(integer0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIntInsn(108, 4);
      byte[] byteArray0 = new byte[4];
      methodWriter1.visitTypeInsn(108, "");
      methodWriter1.visitIincInsn(2, 4);
      methodWriter0.visitFrame((byte) (-1), 0, stringArray0, 4, stringArray0);
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 42);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 42
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "cX)Z YaA1(o[t$Rh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "I-", "cX)Z YaA1(o[t$Rh", "-", stringArray0, false, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Label label0 = new Label();
      methodWriter1.visitLabel(label0);
      methodWriter0.visitMethodInsn((-1360), "Ljava/lang/Synthetic;", "cX)Z YaA1(o[t$Rh", "<5m)Mpd7$\"x<h");
      methodWriter1.visitInsn(8);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label1 = new Label();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitAnnotation("Bbj6Vsyho0}4^v", true);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putShort(2);
      methodWriter2.put(byteVector0);
      methodWriter0.visitLineNumber(1, label1);
      methodWriter2.visitVarInsn(24, 597);
      methodWriter0.visitAnnotation("cX)Z YaA1(o[t$Rh", true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte) (-74);
      byteArray0[4] = (byte)126;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte)67;
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 148, 148);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "nss{p[\">", "cX)Z YaA1(o[t$Rh", "RuntimeInvisibleAnnotations", stringArray0, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 1, stringArray0, 20, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }
}
