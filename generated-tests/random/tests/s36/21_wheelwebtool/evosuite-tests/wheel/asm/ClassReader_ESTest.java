/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:33:50 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AgeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(3089);
      classReader0.accept((ClassVisitor) classWriter0, 9);
      classReader0.getSuperName();
      classReader0.getItem(1);
      int int0 = (-7);
      Label[] labelArray0 = new Label[2];
      // Undeclared exception!
      try { 
        classReader0.readLabel(3089, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      classReader0.getAccess();
      char[] charArray0 = new char[7];
      charArray0[0] = '6';
      charArray0[1] = 'R';
      charArray0[2] = '%';
      charArray0[3] = 'E';
      charArray0[4] = 'f';
      charArray0[5] = '4';
      charArray0[6] = '2';
      // Undeclared exception!
      try { 
        classReader0.readClass(938, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 623);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-1547));
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader1, 1349);
      classReader0.copyPool(classWriter1);
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = 'R';
      charArray0[3] = 'M';
      charArray0[4] = 'L';
      charArray0[5] = 'T';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-911), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)87;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      int int0 = (-2049);
      String[] stringArray0 = classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter((-5358));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visit(573, (-5358), "java/lang/Class", "java/lang/Class", "java/lang/Class", stringArray0);
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classAdapter0, 2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "java/lang/Class";
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte) (-49);
      byteArray0[5] = (byte) (-8);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-8), 162);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)101;
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      charArray0[1] = '8';
      charArray0[2] = '$';
      charArray0[3] = '.';
      charArray0[4] = '0';
      // Undeclared exception!
      try { 
        classReader0.readConst((byte)101, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-8);
      byte byte0 = (byte) (-74);
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte) (-58);
      int int0 = 145;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-8), 145);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("/@a{7)KB");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte)16;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-45), (byte)16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-88);
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-66);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("The list of suffixes must not be null");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      int int0 = (-2049);
      ClassWriter classWriter0 = new ClassWriter(22049);
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, 16032);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.readLong(5);
      classReader0.readLong(5);
      classReader0.readByte(5);
      short short0 = classReader0.readShort(5);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)78;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)81;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 2330, 449);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-92);
      byte byte0 = (byte) (-105);
      byteArray0[1] = (byte) (-105);
      byte byte1 = (byte)46;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte) (-95);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-399), (byte)46);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1623);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1349);
      classReader0.copyPool(classWriter0);
      int int0 = (-911);
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = 'R';
      charArray0[3] = 'R';
      classReader0.copyPool(classWriter0);
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("org/apache/commons/io/filefilter/AbstractFileFilter");
      attribute0.value = classReader0.b;
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("org/apache/commons/io/filefilter/AbstractFileFilter");
      attributeArray0[1] = attribute1;
      Attribute attribute2 = attribute1.next;
      attributeArray0[2] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 623);
      charArray0[4] = 'L';
      charArray0[3] = 'T';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-911), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
