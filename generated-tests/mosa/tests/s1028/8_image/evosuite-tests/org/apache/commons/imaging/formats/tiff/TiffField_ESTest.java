/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 19:19:54 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50761, 50761, fieldTypeFloat0, 50761, 50761, byteArray0, byteOrder0, 50761);
      tiffField0.dump();
      assertEquals(50761, tiffField0.getOffset());
      assertEquals(50761, tiffField0.getTag());
      assertEquals(203044, tiffField0.getBytesLength());
      assertEquals(50761, tiffField0.getDirectoryType());
      assertEquals(50761, tiffField0.getSortHint());
      assertEquals(50761L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1245, 1245, fieldTypeFloat0, 1245, 1245, byteArray0, byteOrder0, 1245);
      String string0 = tiffField0.toString();
      assertEquals(1245, tiffField0.getOffset());
      assertEquals(4980, tiffField0.getBytesLength());
      assertEquals(1245, tiffField0.getSortHint());
      assertEquals(1245, tiffField0.getDirectoryType());
      assertEquals("1245 (0x4dd: Unknown Tag): 0.0, 0.0, 0.0 (1245 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37122, 2265, fieldTypeDouble0, 37122, 37122, (byte[]) null, byteOrder0, 2265);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "~,E!2eZI4LPZ]*v9I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50779, 50779, fieldTypeFloat0, 50779, 50779, byteArray0, byteOrder0, 50779);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[262];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3180, 3180, fieldTypeFloat0.DOUBLE, 3180, 3180, byteArray0, byteOrder0, 3180);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(3180, tiffField0.getTag());
      assertEquals(3180, tiffField0.getSortHint());
      assertEquals(3180, tiffField0.getDirectoryType());
      assertEquals(3180L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50770, 50770, fieldTypeAscii0.DOUBLE, 50770, 50770, byteArray0, byteOrder0, 50770);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50770, 50770);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      
      tiffField0.getTagInfo();
      assertEquals(50770, tiffField0.getTag());
      assertEquals(50770, tiffField0.getDirectoryType());
      assertEquals(50770, tiffField0.getSortHint());
      assertEquals(50770, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1051, 1051, fieldTypeAscii0, 1051, 1051, byteArray0, byteOrder0, 1051);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1051, tiffField0.getOffset());
      assertEquals(1051, tiffField0.getDirectoryType());
      assertEquals(1051, tiffField0.getSortHint());
      assertEquals("1051 (0x41b: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1018, 1018, fieldTypeAscii0, 1018, 1018, byteArray0, byteOrder0, 1018);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@35b84058 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(50781, 50781, fieldTypeRational0, 50781, (-5668L), byteArray0, byteOrder0, 451);
      String string0 = tiffField0.getTagName();
      assertEquals("RawDataUniqueID", string0);
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50781L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals((-5668), tiffField0.getOffset());
      assertEquals(406248, tiffField0.getBytesLength());
      assertEquals(50781, tiffField0.getDirectoryType());
      assertEquals(451, tiffField0.getSortHint());
      assertEquals(50781, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[322];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(105, 105, fieldTypeFloat0.DOUBLE, 105, 105, byteArray0, byteOrder0, 105);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1a1b7f81 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeLong0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50761, 50761, fieldTypeFloat0, 50761, 50761, byteArray0, byteOrder0, 50761);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50761, int0);
      assertEquals(50761, tiffField0.getOffset());
      assertEquals(50761, tiffField0.getTag());
      assertEquals(50761, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1051, 1051, fieldTypeAscii0, 1051, 1051, byteArray0, byteOrder0, 1051);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1245, 1245, fieldTypeFloat0, 1245, 1245, byteArray0, byteOrder0, 1245);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(4980, tiffField0.getBytesLength());
      assertEquals(1245, int0);
      assertEquals(1245, tiffField0.getOffset());
      assertEquals(1245, tiffField0.getDirectoryType());
      assertEquals(1245, tiffField0.getTag());
      assertEquals(1245L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1986, 1986, fieldTypeLong0, 1986, 1986, byteArray0, byteOrder0, 1986);
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      assertEquals(1986L, tiffField0.getCount());
      assertEquals(7944, tiffField0.getBytesLength());
      assertEquals(1986, tiffField0.getSortHint());
      assertEquals(1986, tiffField0.getDirectoryType());
      assertEquals(1986, tiffField0.getTag());
      assertEquals(1986, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1051, 1051, fieldTypeAscii0, 1051, 1051, byteArray0, byteOrder0, 1051);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x41b)", string0);
      assertEquals(1051, tiffField0.getSortHint());
      assertEquals(1051, tiffField0.getOffset());
      assertEquals(1051, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2073432486), (-2073432486), fieldTypeFloat0, (-2073432486), (-2073432486), byteArray0, byteOrder0, (-2073432486));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2073432486), tiffField0.getSortHint());
      assertEquals((-2073432486), tiffField0.getTag());
      assertEquals((-2073432486), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-2073432486), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50734, 50734, fieldTypeFloat0, 50734, 50734, byteArray0, byteOrder0, 50734);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5ed62834 for: 50734 (0xc62e: LinearResponseLimit): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1241, 1241, fieldTypeRational0, 1241, 1241, byteArray0, byteOrder0, 1241);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1241, 45, fieldTypeRational0, 1241, 45, byteArray0, byteOrder0, 1241);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(45, tiffField0.getOffset());
      assertEquals(1241, tiffField0.getTag());
      assertEquals(1241, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(9928, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(50761, 50761, fieldTypeRational0, 50761, 50761, byteArray0, byteOrder0, 50761);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1245, 1245, fieldTypeFloat0, 1245, 1245, byteArray0, byteOrder0, 1245);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1245, 1245);
      tiffField_OversizeValueElement0.getElementDescription(true);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@7b66112d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[281];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 89, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 37);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(89, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1245, 1245, fieldTypeAscii0, 1245, 1245, byteArray0, byteOrder0, 1245);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1245, tiffField0.getDirectoryType());
      assertEquals(1245, tiffField0.getOffset());
      assertEquals(1245, tiffField0.getTag());
      assertEquals(1245, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50701, 50701, fieldTypeFloat0.LONG, 50701, 50701, byteArray0, byteOrder0, 50701);
      String string0 = tiffField0.toString();
      assertEquals(50701, tiffField0.getDirectoryType());
      assertEquals(50701, tiffField0.getSortHint());
      assertEquals(50701, tiffField0.getOffset());
      assertEquals("50701 (0xc60d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (50701 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[45];
      TiffField tiffField0 = new TiffField(2443, 2443, fieldTypeByte0, 2443, 2443, byteArray0, byteOrder0, 2443);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2443, tiffField0.getTag());
      assertEquals(2443, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2443, tiffField0.getOffset());
      assertEquals(2443, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeLong0, 33, 33, byteArray0, byteOrder0, 33);
      tiffField0.getIntValueOrArraySum();
      int int0 = tiffField0.getOffset();
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, int0);
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2987, 1212, fieldTypeShort0, 1212, 1212, byteArray0, byteOrder0, 2987);
      tiffField0.getDoubleArrayValue();
      assertEquals(1212, tiffField0.getOffset());
      assertEquals(1212, tiffField0.getDirectoryType());
      assertEquals(2987, tiffField0.getSortHint());
      assertEquals(2987, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50794, 50794, fieldTypeAscii0.DOUBLE, 50794, 50794, byteArray0, byteOrder0, 50794);
      String string0 = tiffField0.toString();
      assertEquals("50794 (0xc66a: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (50794 Double)", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(50794, tiffField0.getOffset());
      assertEquals(50794, tiffField0.getSortHint());
      assertEquals(50794, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(69, 69, fieldTypeFloat0, 69, 69, byteArray0, byteOrder0, 69);
      tiffField0.getDoubleArrayValue();
      assertEquals(69, tiffField0.getOffset());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(69, tiffField0.getTag());
      assertEquals(69, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42026, 42026, fieldTypeAscii0.SSHORT, 42026, 42026, byteArray0, byteOrder0, 42026);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.toString();
      assertEquals("42026 (0xa42a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (42026 SShort)", string0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(42026, tiffField0.getDirectoryType());
      assertEquals(42026, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(42026, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[344];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0.DOUBLE, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(18, 71, fieldTypeShort0, 58816L, 58816L, byteArray0, byteOrder0, 18);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@45d993c9
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 1L, 50, byteArray0, byteOrder0, 50);
      tiffField0.toString();
      String string0 = tiffField0.getStringValue();
      assertEquals(50, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50770, 50770, fieldTypeAscii0, 50770, 50770, byteArray0, byteOrder0, 50770);
      tiffField0.toString();
      assertEquals(50770, tiffField0.getTag());
      assertEquals(50770, tiffField0.getOffset());
      assertEquals(50770, tiffField0.getSortHint());
      assertEquals(50770, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[204];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1245, 1245, fieldTypeByte0, 1245, 1245, byteArray0, byteOrder0, 1245);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1245, tiffField0.getOffset());
      assertEquals(1245, tiffField0.getSortHint());
      assertEquals(1245, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1245, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[204];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(3180, 3180, fieldTypeShort0, 3180, 3180, byteArray0, byteOrder0, 3180);
      tiffField0.dump();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@27304096
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2029, 2029, fieldTypeFloat0, 2029, 2029, byteArray0, byteOrder0, 2029);
      String string0 = tiffField0.toString();
      assertEquals(2029, tiffField0.getSortHint());
      assertEquals(2029, tiffField0.getDirectoryType());
      assertEquals("2029 (0x7ed: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (2029 Float)", string0);
      assertEquals(2029, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[424];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeFloat0.DOUBLE, 83, 83, byteArray0, byteOrder0, 83);
      FieldTypeFloat fieldTypeFloat1 = FieldType.FLOAT;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffField tiffField1 = new TiffField(83, 81, fieldTypeFloat0, 736L, 83, byteArray0, byteOrder0, 36);
      tiffField0.getValueDescription();
      String string0 = tiffField1.toString();
      assertEquals("83 (0x53: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (106) (736 Float)", string0);
      
      tiffField1.getValueDescription();
      assertEquals(36, tiffField1.getSortHint());
      assertEquals(83, tiffField1.getOffset());
      assertEquals(81, tiffField1.getDirectoryType());
      
      int int0 = Byte.SIZE;
      tiffField0.getFieldTypeName();
      assertEquals(83, tiffField0.getDirectoryType());
  }
}
