/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 03:39:32 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)98;
      byteArray0[4] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, (-389), fieldTypeLong0.SRATIONAL, 107, 205L, byteArray0, byteOrder0, 50830);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, int0);
      assertEquals(50830, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getTag());
      assertEquals((-389), tiffField0.getDirectoryType());
      assertEquals(205, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1710), "!_wy JT.gaF");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0.SBYTE, 4L, (-584L), byteArray0, byteOrder0, 226);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(226, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-584), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(40091, 34377, fieldTypeLong0, (-1L), 50745, byteArray0, byteOrder0, (-577));
      String string0 = tiffField0.getValueDescription();
      assertEquals(34377, tiffField0.getDirectoryType());
      assertEquals(40091, tiffField0.getTag());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals((-577), tiffField0.getSortHint());
      assertEquals(50745, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34853, 3437, fieldTypeDouble0, 34853, 50, byteArray0, byteOrder0, 630);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34853, tiffField0.getTag());
      assertEquals(630, tiffField0.getSortHint());
      assertEquals(3437, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-5258), fieldTypeDouble0.LONG, 6752L, (-195), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-5258), tiffField0.getDirectoryType());
      assertEquals((-195), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1242, 1699, fieldTypeLong0.FLOAT, 1680L, (byte)0, byteArray0, byteOrder0, (-689));
      int int0 = tiffField0.getTag();
      assertEquals(1242, int0);
      assertEquals(1699, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-689), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, "LinearResponseLimit");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeAscii0, 2147483647L, 1769, byteArray0, byteOrder0, 70);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getTag());
      assertEquals(1769, tiffField0.getOffset());
      assertEquals(70, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65557, 65557, fieldTypeLong0, 65557, 65557, byteArray0, byteOrder0, 45);
      int int0 = tiffField0.getSortHint();
      assertEquals(65557, tiffField0.getDirectoryType());
      assertEquals(65557, tiffField0.getTag());
      assertEquals(45, int0);
      assertEquals(65557, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeLong0, 1858L, 1858L, byteArray0, byteOrder0, (-783));
      int int0 = tiffField0.getSortHint();
      assertEquals(1858, tiffField0.getOffset());
      assertEquals(700, tiffField0.getTag());
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals((-783), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 53, fieldTypeRational0, 258L, 0L, byteArray0, byteOrder0, 34857);
      int int0 = tiffField0.getOffset();
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(34857, tiffField0.getSortHint());
      assertEquals(53, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 2345, fieldTypeLong0, 14, 2147483647L, byteArray0, byteOrder0, (-2143837664));
      int int0 = tiffField0.getOffset();
      assertEquals((-2143837664), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(2345, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)51;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-676), fieldTypeLong0, (byte)93, (byte)93, byteArray0, byteOrder0, (byte)77);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-676), tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(93, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-9);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1085, (-2036), fieldTypeShort0, 5042L, 1085, byteArray0, byteOrder0, 1085);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1085, tiffField0.getOffset());
      assertEquals((-2036), tiffField0.getDirectoryType());
      assertEquals(1085, tiffField0.getTag());
      assertEquals(1085, tiffField0.getSortHint());
      assertEquals((-2304), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)99;
      TiffField tiffField0 = new TiffField(1, 2706, fieldTypeLong0, 1, 2706, byteArray0, (ByteOrder) null, (byte)99);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2706, tiffField0.getOffset());
      assertEquals(2706, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-106);
      TiffField tiffField0 = new TiffField(45, 221, fieldTypeLong0, 1L, 10768L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getIntValue();
      assertEquals(45, tiffField0.getTag());
      assertEquals(10768, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(221, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2529), (String) null);
      TiffField tiffField0 = new TiffField((-1), (-644), fieldTypeRational0, 663L, 0L, byteArray0, byteOrder0, (-644));
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-644), tiffField0.getSortHint());
      assertEquals((-644), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3849), (-1), fieldTypeDouble0, (byte)41, 4L, byteArray0, byteOrder0, 73);
      tiffField0.getFieldTypeName();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-3849), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-133), (-2103), (FieldType) null, (-133), (-4186L), byteArray0, byteOrder0, (byte)20);
      tiffField0.getFieldType();
      assertEquals((-133), tiffField0.getTag());
      assertEquals((-2103), tiffField0.getDirectoryType());
      assertEquals((-4186), tiffField0.getOffset());
      assertEquals(20, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "WH[n");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-736), fieldTypeLong0, 0L, (-736), byteArray0, byteOrder0, (byte) (-56));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-736), tiffField0.getDirectoryType());
      assertEquals((-56), tiffField0.getSortHint());
      assertEquals((-736), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      TiffField tiffField0 = new TiffField(65557, (-1), fieldTypeByte0, 4L, 2147483647L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(65557, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)44;
      TiffField tiffField0 = new TiffField(1, 4980, fieldTypeByte0, 1, 4980, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals(4980, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4980, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(48, 65102, fieldTypeByte0, 1L, (-424L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getTag());
      assertEquals((-424), tiffField0.getOffset());
      assertEquals(65102, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeLong0, 1858L, 1858L, byteArray0, byteOrder0, (-783));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(700, int0);
      assertEquals((-783), tiffField0.getSortHint());
      assertEquals(700, tiffField0.getTag());
      assertEquals(1858, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1085, (-2036), fieldTypeShort0, 5042L, 1085, byteArray0, byteOrder0, 1085);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2036), int0);
      assertEquals(1085, tiffField0.getSortHint());
      assertEquals(1085, tiffField0.getOffset());
      assertEquals(1085, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1791, 0, fieldTypeRational0, (-584L), (-712L), byteArray0, byteOrder0, (byte) (-117));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1791, tiffField0.getTag());
      assertEquals((-117), tiffField0.getSortHint());
      assertEquals((-712), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2147179514, (-389), fieldTypeRational0, (byte)0, (-18), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getBytesLength();
      assertEquals((-389), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-18), tiffField0.getOffset());
      assertEquals(2147179514, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-282), "CalibrationIlluminant2");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-282), (-282), fieldTypeShort0, (-282), (-282), byteArray0, byteOrder0, (byte)14);
      tiffField0.getBytesLength();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-282), tiffField0.getDirectoryType());
      assertEquals((-282), tiffField0.getTag());
      assertEquals((-282), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3949), "WmTd^LWpC[>");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2596, 5941, fieldTypeLong0, 2596, (-3634L), byteArray0, (ByteOrder) null, (byte) (-35));
      tiffField0.getByteOrder();
      assertEquals((-35), tiffField0.getSortHint());
      assertEquals(2596, tiffField0.getTag());
      assertEquals((-3634), tiffField0.getOffset());
      assertEquals(5941, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65557, 65557, fieldTypeLong0, 65557, 65557, byteArray0, byteOrder0, 65557);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" (");
      tiffField0.dump((PrintWriter) mockPrintWriter0, " (");
      assertEquals(65557, tiffField0.getSortHint());
      assertEquals(65557, tiffField0.getDirectoryType());
      assertEquals(65557, tiffField0.getTag());
      assertEquals(65557, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-899), (-899), fieldTypeByte0, 1744L, 1744L, byteArray0, (ByteOrder) null, 254);
      MockFile mockFile0 = new MockFile("w^_>,4~_(ZM", "w^_>,4~_(ZM");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(67L, mockFile0.length());
      assertEquals((-899), tiffField0.getTag());
      assertEquals(1744, tiffField0.getOffset());
      assertEquals(254, tiffField0.getSortHint());
      assertEquals((-899), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, (-1405), (FieldType) null, 0L, 312L, byteArray0, (ByteOrder) null, 1314);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1356), (-1356), fieldTypeLong0, 415L, (-1356), (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40093, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-113), fieldTypeFloat0, (byte) (-28), (byte)0, byteArray0, byteOrder0, 1837);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-128), (byte) (-59), fieldTypeShort0, (byte)0, 1719L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1889), (-1889), fieldTypeShort0, (-1889), 280L, (byte[]) null, byteOrder0, (-1889));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-833), (-833), fieldTypeLong0, (-833), (-2150L), byteArray0, byteOrder0, 50737);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1710), "!_wy JT.gaF");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1710), (-1710), fieldTypeShort0, 0L, 4L, byteArray0, byteOrder0, (byte)90);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1710), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1710), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(90, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65557, 65557, fieldTypeLong0, 65557, 65557, byteArray0, byteOrder0, 45);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65557, tiffField0.getOffset());
      assertEquals(45, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(65557, tiffField0.getDirectoryType());
      assertEquals(65557, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1356), (-1356), fieldTypeLong0, 415L, (-1356), (byte[]) null, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals((-1356), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1356), tiffField0.getOffset());
      assertEquals((-1356), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, (-1717986917), fieldTypeLong0, 255L, 255L, byteArray0, byteOrder0, (-1));
      tiffField0.getByteArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(42, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1238), fieldTypeByte0, (-1472L), (-1427L), byteArray0, byteOrder0, 28);
      tiffField0.getFieldType();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1427), tiffField0.getOffset());
      assertEquals((-1238), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 840, 840, byteArray0, byteOrder0, (byte) (-8));
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(840, tiffField0.getOffset());
      assertEquals((-8), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1238), fieldTypeByte0, (-1472L), (-1427L), byteArray0, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-1427), tiffField0.getOffset());
      assertEquals((-1238), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2982), (byte) (-101), fieldTypeShort0, (-2982), (byte) (-101), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals((-101), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-2982), int0);
      assertEquals((-101), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65575, 2704, fieldTypeShort0, 3624L, 0L, byteArray0, byteOrder0, 65575);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2704, tiffField0.getDirectoryType());
      assertEquals(65575, tiffField0.getTag());
      assertEquals(65575, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      TiffField tiffField0 = new TiffField(65557, (-1), fieldTypeByte0, 4L, 2147483647L, byteArray0, byteOrder0, (-1));
      tiffField0.getBytesLength();
      assertEquals(65557, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2763, 1, fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 2763);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2763, tiffField0.getSortHint());
      assertEquals(2763, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 42016);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(7, tiffField0.getTag());
      assertEquals(42016, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34853, 3437, fieldTypeDouble0, 34853, 50, byteArray0, byteOrder0, 630);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@55bdd96c for: 34853 (0x8825: GPSInfo): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0.SHORT, 2736L, (-1L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2736L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-389), 50933, fieldTypeRational0, 262140L, (byte)0, byteArray0, byteOrder0, (byte) (-38));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-371), 34910, fieldTypeLong0.SHORT, 1L, 842L, byteArray0, byteOrder0, (-742));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-742), tiffField0.getSortHint());
      assertEquals((-371), tiffField0.getTag());
      assertEquals(842, tiffField0.getOffset());
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1343, (byte)49, fieldTypeDouble0, 1343, (byte)49, byteArray0, byteOrder0, 554);
      tiffField0.getDoubleArrayValue();
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(554, tiffField0.getSortHint());
      assertEquals(1343L, tiffField0.getCount());
      assertEquals(1343, tiffField0.getTag());
      assertEquals(49, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1356), (-1356), fieldTypeLong0, 334L, 334L, byteArray0, byteOrder0, (byte)88);
      tiffField0.getDoubleArrayValue();
      assertEquals(334L, tiffField0.getCount());
      assertEquals((-1356), tiffField0.getTag());
      assertEquals(88, tiffField0.getSortHint());
      assertEquals((-1356), tiffField0.getDirectoryType());
      assertEquals(334, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "='h`L+cA9r");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1908874352), 0, fieldTypeShort0, 3472L, 6L, byteArray0, (ByteOrder) null, (-1908874352));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3472L, tiffField0.getCount());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "g2x/YARQ+j()-");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0, 2, 1L, byteArray0, byteOrder0, (-1566));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2L, tiffField0.getCount());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-1566), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 2706, fieldTypeLong0, 1, 2706, byteArray0, (ByteOrder) null, (byte)99);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2706, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2706, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-48), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      TiffField tiffField0 = new TiffField(2147179514, 2147179514, fieldTypeFloat0, 65535, (-48), byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(2147179514, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-48), tiffField0.getOffset());
      assertEquals(2147179514, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      TiffField tiffField0 = new TiffField(65557, (-1), fieldTypeByte0, 4L, 2147483647L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7ad8cc83 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1085, (-2036), fieldTypeShort0, 5042L, 1085, byteArray0, byteOrder0, 1085);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1085, tiffField0.getOffset());
      assertEquals(5042L, tiffField0.getCount());
      assertEquals((-2036), tiffField0.getDirectoryType());
      assertEquals(1085, tiffField0.getTag());
      assertEquals(1085, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1197, 50737, fieldTypeLong0.SRATIONAL, 1660L, 1430L, byteArray0, byteOrder0, (-1367));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-473), 554, fieldTypeLong0.RATIONAL, 554, 65557, byteArray0, byteOrder0, 554);
      tiffField0.getIntArrayValue();
      assertEquals(554, tiffField0.getSortHint());
      assertEquals(65557, tiffField0.getOffset());
      assertEquals((-473), tiffField0.getTag());
      assertEquals(554L, tiffField0.getCount());
      assertEquals(554, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(14, 65535, fieldTypeRational0, 1L, 740L, byteArray0, byteOrder0, (byte)95);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 14, fieldTypeLong0, 14, (-3172L), byteArray0, byteOrder0, 7);
      tiffField0.getIntArrayValue();
      assertEquals(7, tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals((-3172), tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      TiffField tiffField0 = new TiffField((-1143), 896, fieldTypeAscii0, 3489L, 40964, byteArray0, byteOrder0, 59);
      String string0 = tiffField0.getStringValue();
      assertEquals(40964, tiffField0.getOffset());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals((-1143), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(896, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeByte0, 24, 24, byteArray0, byteOrder0, 24);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@5a92ca9b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 158L, (-3751L), byteArray0, byteOrder0, (byte)30);
      String string0 = tiffField0.getTagName();
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3751), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffff)", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(519, 519, fieldTypeLong0, 1126L, 1126L, byteArray0, byteOrder0, 519);
      String string0 = tiffField0.getTagName();
      assertEquals(1126, tiffField0.getOffset());
      assertEquals(519, tiffField0.getDirectoryType());
      assertEquals(519, tiffField0.getTag());
      assertEquals("JPEGQTables", string0);
      assertEquals(519, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2468), 438, fieldTypeLong0, 415L, (-2900L), (byte[]) null, byteOrder0, (-1356));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986872), (-1717986872), fieldTypeFloat0, (-1717986872), 0L, byteArray0, byteOrder0, (-1717986872));
      assertEquals(1717987104, tiffField0.getBytesLength());
      
      String string0 = tiffField0.toString();
      assertEquals((-1717986872), tiffField0.getDirectoryType());
      assertEquals((-1717986872), tiffField0.getSortHint());
      assertEquals("-1717986872 (0x999999c8: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (-1717986872 Float)", string0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 1200, fieldTypeByte0, 427L, 427L, byteArray0, byteOrder0, 1200);
      tiffField0.dump();
      assertEquals(427, tiffField0.getBytesLength());
      assertEquals(427, tiffField0.getOffset());
      assertEquals(36, tiffField0.getTag());
      assertEquals(1200, tiffField0.getSortHint());
      assertEquals(1200, tiffField0.getDirectoryType());
      assertEquals(427L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2951, 349, fieldTypeByte0.DOUBLE, 2951, 3066, byteArray0, byteOrder0, 349);
      String string0 = tiffField0.toString();
      assertEquals("2951 (0xb87: Unknown Tag): 0.0, 0.0, 0.0 (2951 Double)", string0);
      assertEquals(3066, tiffField0.getOffset());
      assertEquals(349, tiffField0.getSortHint());
      assertEquals(349, tiffField0.getDirectoryType());
      assertEquals(23608, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1330, 115, fieldTypeLong0, 115, 115, byteArray0, byteOrder0, 1330);
      String string0 = tiffField0.getValueDescription();
      assertEquals(115L, tiffField0.getCount());
      assertEquals(1330, tiffField0.getSortHint());
      assertEquals(1330, tiffField0.getTag());
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getOffset());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52)", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 14, fieldTypeLong0, 14, (-3172L), byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3172), tiffField0.getOffset());
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals(14L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(14, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(518, 518, fieldTypeShort0, 9208L, (-2147483648L), byteArray0, byteOrder0, 144);
      tiffField0.dump();
      assertEquals(9208L, tiffField0.getCount());
      assertEquals(518, tiffField0.getDirectoryType());
      assertEquals(18416, tiffField0.getBytesLength());
      assertEquals(518, tiffField0.getTag());
      assertEquals(144, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-48), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      TiffField tiffField0 = new TiffField(2147179514, 2147179514, fieldTypeFloat0, 65535, (-48), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-48), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(2147179514, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2147179514, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeByte0.SHORT, 47, 47, byteArray0, byteOrder0, 47);
      String string0 = tiffField0.getValueDescription();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(94, tiffField0.getBytesLength());
      assertEquals(47L, tiffField0.getCount());
      assertEquals(47, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.toString();
      assertEquals(68, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-305), fieldTypeLong0, 1L, 14, byteArray0, byteOrder0, (-4011));
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-4011), tiffField0.getSortHint());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)34, (-908), fieldTypeDouble0, (-469L), (byte)50, byteArray0, byteOrder0, 37389);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)55, 189);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(34, tiffField0.getTag());
      assertEquals((-908), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(37389, tiffField0.getSortHint());
      assertEquals((-469L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, (-1L), 65535, byteArray0, byteOrder0, (-406));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-406), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1346, "[m$Pi2#<e70");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1346, 1346, fieldTypeDouble0, 1346, 1346, byteArray0, byteOrder0, (byte)116);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(116, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(1346L, tiffElement0.offset);
      assertEquals(1346, tiffField0.getTag());
      assertEquals(1346, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Unknown: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4096, 0, fieldTypeByte0, 0L, 1L, byteArray0, byteOrder0, 4096);
      tiffField0.getFieldTypeName();
      assertEquals(0L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4096, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4096, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1489), 0, fieldTypeLong0.SRATIONAL, (-2L), (-2147483647L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1489), tiffField0.getTag());
      assertEquals((-2L), tiffField0.getCount());
      assertEquals((-2147483647), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "='h`L+cA9r");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1908874352), 0, fieldTypeShort0, 3472L, 6L, byteArray0, (ByteOrder) null, (-1908874352));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(6, tiffField0.getOffset());
      assertEquals(6944, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(529, 24, fieldTypeAscii0, 467L, 24, byteArray0, byteOrder0, 529);
      tiffField0.dump();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(529, tiffField0.getTag());
      assertEquals(529, tiffField0.getSortHint());
      assertEquals(467, tiffField0.getBytesLength());
      assertEquals(467L, tiffField0.getCount());
      assertEquals(24, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65557, 32809, fieldTypeLong0, 1149L, (-1L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(65557, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(0, int0);
      assertEquals(32809, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-473), 554, fieldTypeLong0.RATIONAL, 554, 65557, byteArray0, byteOrder0, 554);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-473 (0xfffffe27: Unknown Tag): ", string0);
      assertEquals(65557, tiffField0.getOffset());
      assertEquals(554, tiffField0.getDirectoryType());
      assertEquals(554, tiffField0.getSortHint());
      assertEquals(554L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1356), fieldTypeLong0, 415L, (-1356), (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(7, 1085, fieldTypeRational0, 1085, 14, byteArray0, byteOrder0, 3437);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3437, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(1085, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(1085L, tiffField0.getCount());
      assertEquals(8680, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(73, (byte)49);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(73, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
  }
}
