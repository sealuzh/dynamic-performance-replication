/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 04:02:12 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.time.chrono.ChronoLocalDate;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "int";
      String string0 = "Rs";
      stringArray0[1] = "Rs";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class2HTML.toHTML("Visiting non-standard PMGClass object");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Visiting non-standard PMGClass object";
      stringArray0[1] = "Visiting non-standard PMGClass object";
      stringArray0[2] = "Visiting non-standard PMGClass object";
      stringArray0[3] = "fadd";
      stringArray0[4] = "Visiting non-standard PMGClass object";
      stringArray0[5] = "Visiting non-standard PMGClass object";
      stringArray0[6] = "Visiting non-standard PMGClass object";
      stringArray0[7] = "Visiting non-standard PMGClass object";
      stringArray0[8] = "Visiting non-standard PMGClass object";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class2HTML.referenceType("D.");
      Class2HTML.referenceType("f2d");
      Class2HTML.toHTML("</A>");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(254);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class2HTML.toHTML("_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"");
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("</TT><BR>\n<UL><LI><A HREF=\"#cp");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass("java.lang.reflect.Type");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "java.lang.reflect.Type");
      String string0 = Pattern.quote("java.lang.reflect.Type");
      assertEquals("\\Qjava.lang.reflect.Type\\E", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "fmul";
      ClassPath classPath0 = new ClassPath("fmul");
      ClassPath classPath1 = new ClassPath(classPath0, "fmul");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath1);
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "fmul");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass((byte)3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected class `CONSTANT_Class' at index 3 and got CONSTANT_Methodref[10](class_index = 17, name_and_type_index = 51)
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "R";
      stringArray0[1] = "</FONT> ";
      stringArray0[2] = "FM;oKj6])XD~;0";
      stringArray0[3] = "-d";
      stringArray0[4] = "N0&u#C:pL[E";
      stringArray0[5] = "[\b[eN$E/`w5BHl#";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "_cp.html\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\"FRAMEBORDER=v1\" SCROLLING=\"AUTO\">\n<FRAME NAME=3Attributes\" SRC=\"";
      stringArray0[1] = "-d";
      stringArray0[2] = "_cp.html\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\"FRAMEBORDER=v1\" SCROLLING=\"AUTO\">\n<FRAME NAME=3Attributes\" SRC=\"";
      stringArray0[3] = "_cp.html\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\"FRAMEBORDER=v1\" SCROLLING=\"AUTO\">\n<FRAME NAME=3Attributes\" SRC=\"";
      stringArray0[4] = "-d";
      stringArray0[5] = "_cp.html\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\"FRAMEBORDER=v1\" SCROLLING=\"AUTO\">\n<FRAME NAME=3Attributes\" SRC=\"";
      stringArray0[6] = "float";
      stringArray0[7] = "_cp.html\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\"FRAMEBORDER=v1\" SCROLLING=\"AUTO\">\n<FRAME NAME=3Attributes\" SRC=\"";
      stringArray0[8] = "yvE6mMqbzC0?H=I4";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class2HTML.toHTML("invokeinterface");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-/";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      classLoaderRepository0.getClassPath();
      classLoaderRepository0.getClassPath();
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      // Undeclared exception!
      try { 
        javaClass0.getSuperClass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "R";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-zip";
      stringArray1[1] = "R";
      stringArray1[2] = "</FONT> ";
      stringArray1[3] = "</FONT> ";
      try { 
        Class2HTML.main(stringArray1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // R (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "N0&_+Cu#C:pL[E";
      stringArray0[1] = "N0&_+Cu#C:pL[E";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[2] = "-d";
      stringArray0[3] = "[\b[eN$E/`w5BHl#/";
      stringArray0[4] = "long";
      stringArray0[5] = "N0&_+Cu#C:pL[E";
      stringArray0[6] = "<HTML>\n<HEAD><TITLE>Documentation for ";
      stringArray0[7] = "-d";
      stringArray0[8] = "N0&_+Cu#C:pL[E";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
