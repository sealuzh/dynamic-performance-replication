/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:02:27 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Label;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-44), "8onL`_f[jJ{cMK!", "E?R]P6VJTVC", "?", "E?R]P6VJTVC");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("E?R]P6VJTVC", true);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4455, "", "E?R]P6VJTVC", "", "");
      Attribute attribute0 = new Attribute("ryd7dZhD&ONc");
      classWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAnnotation("", false);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      fieldWriter1.getSize();
      System.setCurrentTimeMillis(8);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "@E?R]P6VJTVC", "@E?R]P6VJTVC", "");
      Attribute attribute0 = new Attribute("ryd7dZhD&ONc");
      classWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3170));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "nhSkh@F*&W", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-3170), "CubkT>^Cj", "nhSkh@F*&W", "UnPj?-1", "");
      fieldWriter1.visitEnd();
      fieldWriter1.visitEnd();
      fieldWriter0.getSize();
      fieldWriter1.visitEnd();
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 1842;
      ClassWriter classWriter0 = new ClassWriter(1842);
      int int1 = 65489;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65489, "The suffix must not be null", "y3]VIdgN)", "y3]VIdgN)", (Object) null);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("|)zbmfPUf0");
      ClassReader classReader0 = null;
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter((ClassReader) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4455, "", "E?R]P6VJTVC", "", "");
      classWriter0.version = 1842;
      Attribute attribute0 = new Attribute("E?R]P6VJTVC");
      classWriter0.visitAttribute(attribute0);
      System.setCurrentTimeMillis(0L);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11((-2838), 1842);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4455, "", "E?R]P6VJTVC", "", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[3];
      fieldWriter0.visitAnnotation("", false);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.put(byteVector0);
      // Undeclared exception!
      try { 
        byteVector0.putByteArray(byteArray0, 4, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-1872));
      classWriter0.version = (-45);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1872), "&|HFc['o r =BPD]ppj", "&|HFc['o r =BPD]ppj", "[]", "[]");
      fieldWriter0.visitEnd();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteVector byteVector0 = new ByteVector(1);
      classWriter0.newFloat((-45));
      Attribute attribute0 = new Attribute("&|HFc['o r =BPD]ppj");
      classWriter0.visitAttribute(attribute0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("StackMap", false);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4470, "", "E?R]P6VJTVC", "", "");
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11(8, 1);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", true);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      int int0 = Type.VOID;
      fieldWriter1.next = fieldWriter0;
      fieldWriter0.put(byteVector0);
      int int1 = fieldWriter1.getSize();
      assertEquals(42, int1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "LineNumberTable", "E?R]P6VJTVC");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11((-2326), (-143));
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", true);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "E?R]P6VJTVC", "", "");
      Attribute attribute0 = new Attribute("ryd7dZhD&ONc");
      classWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.put11(8, 1);
      byteVector0.putByte((-423));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1842);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 15, "", "E?R]P6VJTVC", "", (Object) null);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("?Qq h(_?DlOkz");
      Attribute attribute1 = new Attribute("?Qq h(_?DlOkz");
      classWriter0.visitAttribute(attribute1);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(2, 4465);
      fieldWriter0.put(byteVector0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteVector byteVector2 = byteVector1.putLong(1842);
      fieldWriter0.put(byteVector2);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1842);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WeBloXn/n |c%Om");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4455, "", "", (String) null, "^v,*0~!#-Tp\"W]1/");
      Attribute attribute0 = new Attribute((String) null);
      classWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11(4455, 4455);
      ByteVector byteVector1 = byteVector0.put11(1844, 298);
      fieldWriter0.put(byteVector1);
      byteVector0.putUTF8("WeBloXn/n |c%Om");
      byteVector1.putInt(298);
      System.setCurrentTimeMillis(656L);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1842);
      String string0 = "hL,va83";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int int0 = (-1106);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1106), "", "?X[?P-i`\":yF8XpxFV[", (String) null, "");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("jR;<Z.R");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
