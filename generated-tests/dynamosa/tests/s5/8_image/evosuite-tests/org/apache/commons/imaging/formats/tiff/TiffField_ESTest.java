/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 14:30:06 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)20;
      TiffField tiffField0 = new TiffField((byte)20, 65535, fieldTypeShort0, 2353L, 4L, byteArray0, byteOrder0, 50834);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50834, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4706, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, fieldTypeLong0, 1L, 3187L, byteArray0, byteOrder0, (byte)117);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(117, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(29, tiffField0.getTag());
      assertEquals(3187, tiffField0.getOffset());
      assertEquals(29, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-2045), fieldTypeFloat0, 28, 255L, byteArray0, byteOrder0, 2145428639);
      String string0 = tiffField0.toString();
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (28 Float)", string0);
      assertEquals((-2045), tiffField0.getDirectoryType());
      assertEquals(2145428639, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, byteArray0, (ByteOrder) null, 1579);
      tiffField0.dump();
      assertEquals(1579, tiffField0.getTag());
      assertEquals(1579, tiffField0.getSortHint());
      assertEquals(1579, tiffField0.getDirectoryType());
      assertEquals(1579, tiffField0.getOffset());
      assertEquals(3158, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-250), "aKSC1Xme2");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1622), (-250), fieldTypeFloat0, 2655L, 2655L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1622), tiffField0.getTag());
      assertEquals((-250), tiffField0.getDirectoryType());
      assertEquals(10620, tiffField0.getBytesLength());
      assertEquals(2655, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2553, 32998, fieldTypeFloat0.RATIONAL, 184L, 2553, byteArray0, byteOrder0, 65535);
      tiffField0.getValue();
      assertEquals(2553, tiffField0.getTag());
      assertEquals(1472, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(2553, tiffField0.getOffset());
      assertEquals(32998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeByte0, 2568L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(56, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, (byte)42, fieldTypeShort0, 0, 262140L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getTag();
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(262140, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-38), (byte)0, fieldTypeLong0.UNDEFINED, 277L, 379L, byteArray0, byteOrder0, 2152);
      int int0 = tiffField0.getTag();
      assertEquals((-38), int0);
      assertEquals(2152, tiffField0.getSortHint());
      assertEquals(379, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      TiffField tiffField0 = new TiffField((-1598), 50779, fieldTypeAscii0, 1020L, 52L, byteArray0, byteOrder0, (byte) (-15));
      String string0 = tiffField0.getStringValue();
      assertEquals(50779, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getOffset());
      assertEquals(1020, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals((-1598), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, (FieldType) null, 42, 604L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(604, tiffField0.getOffset());
      assertEquals(42, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-38), (byte)0, fieldTypeLong0.BYTE, 277L, 379L, byteArray0, byteOrder0, 2152);
      int int0 = tiffField0.getOffset();
      assertEquals(2152, tiffField0.getSortHint());
      assertEquals(379, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-38), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-601), 858, fieldTypeShort0, 767L, (-1L), byteArray0, byteOrder0, 2903);
      int int0 = tiffField0.getOffset();
      assertEquals(2903, tiffField0.getSortHint());
      assertEquals((-601), tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals(858, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)22;
      TiffField tiffField0 = new TiffField(2146038504, 403, fieldTypeFloat0.SSHORT, 1L, (-33), byteArray0, byteOrder0, (-1245));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-33), tiffField0.getOffset());
      assertEquals((-1245), tiffField0.getSortHint());
      assertEquals(2146038504, tiffField0.getTag());
      assertEquals(403, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)120;
      byteArray0[7] = (byte) (-77);
      TiffField tiffField0 = new TiffField(2146038504, (-1431655764), fieldTypeRational0, 124, 0, byteArray0, (ByteOrder) null, (byte)120);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2146038504, tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals(992, tiffField0.getBytesLength());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1156, 1156, fieldTypeShort0, 1L, (-3703L), byteArray0, byteOrder0, (-1181));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1181), tiffField0.getSortHint());
      assertEquals(1156, tiffField0.getTag());
      assertEquals((-3703), tiffField0.getOffset());
      assertEquals(1156, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(24, (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(855, 1189, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, (byte)18);
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(855, tiffField0.getTag());
      assertEquals(1189, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-104);
      TiffField tiffField0 = new TiffField(1706, (-1756), fieldTypeFloat0.SHORT, 1, (-2147483648L), byteArray0, (ByteOrder) null, 312);
      tiffField0.getIntValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1756), tiffField0.getDirectoryType());
      assertEquals(1706, tiffField0.getTag());
      assertEquals(312, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1685), 22, fieldTypeByte0, (-1685), (-1491L), byteArray0, byteOrder0, (byte) (-77));
      tiffField0.getFieldTypeName();
      assertEquals((-1685), tiffField0.getTag());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals((-77), tiffField0.getSortHint());
      assertEquals((-1491), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, byteArray0, (ByteOrder) null, 1579);
      tiffField0.getFieldTypeName();
      assertEquals(1579, tiffField0.getDirectoryType());
      assertEquals(1579, tiffField0.getTag());
      assertEquals(1579, tiffField0.getSortHint());
      assertEquals(1579, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-714), "");
      TiffField tiffField0 = new TiffField((-919), 398, fieldTypeDouble0, (byte)32, (byte)32, byteArray0, byteOrder0, 2147479551);
      tiffField0.getFieldTypeName();
      assertEquals((-919), tiffField0.getTag());
      assertEquals(398, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(2147479551, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(24, 24, (FieldType) null, 94L, 24, byteArray0, (ByteOrder) null, (byte)78);
      tiffField0.getFieldType();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Expected String value(");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-2146847732), fieldTypeFloat0, 2634L, (-2146847732), byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals((-2146847732), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2146847732), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2276), "");
      TiffField tiffField0 = new TiffField((byte)20, 1, fieldTypeLong0, (byte)32, (-2146847732), byteArray0, byteOrder0, (byte)20);
      tiffField0.getFieldType();
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2146847732), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[69];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 1L, 1528L, byteArray0, (ByteOrder) null, 20);
      tiffField0.getDoubleValue();
      assertEquals(1528, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)29;
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, fieldTypeLong0, 1L, 3187L, byteArray0, byteOrder0, (byte)117);
      tiffField0.getDoubleValue();
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(3187, tiffField0.getOffset());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-116);
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3904, 3904, fieldTypeLong0, 1L, 234L, byteArray0, byteOrder0, (byte) (-116));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(3904, tiffField0.getDirectoryType());
      assertEquals(3904, tiffField0.getTag());
      assertEquals(234, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-116), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeFloat0.SRATIONAL, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      tiffField0.getDoubleArrayValue();
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getOffset());
      assertEquals(416, tiffField0.getBytesLength());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getTag());
      assertEquals(52L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3338, 0, fieldTypeLong0, 3338, 3338, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(3338, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3338, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1380), (-1380), fieldTypeFloat0, 0L, (-2190L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2190), tiffField0.getOffset());
      assertEquals((-1380), tiffField0.getTag());
      assertEquals((-1380), int0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1380), (-1380), fieldTypeFloat0, 0L, (-2190L), byteArray0, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals((-2190), tiffField0.getOffset());
      assertEquals((-1380), tiffField0.getDirectoryType());
      assertEquals((-1380), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(398, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1900, 286, fieldTypeByte0, 65535L, 262140L, byteArray0, byteOrder0, (byte) (-92));
      long long0 = tiffField0.getCount();
      assertEquals(1900, tiffField0.getTag());
      assertEquals(262140, tiffField0.getOffset());
      assertEquals(286, tiffField0.getDirectoryType());
      assertEquals((-92), tiffField0.getSortHint());
      assertEquals(65535L, long0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1717986917), 2152, fieldTypeByte0, (byte)0, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2152, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1532), fieldTypeLong0, 2178L, 773L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(773, tiffField0.getOffset());
      assertEquals(8712, int0);
      assertEquals((-1532), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(7, 154, fieldTypeFloat0.SRATIONAL, (-1268L), 15L, byteArray0, (ByteOrder) null, 45);
      int int0 = tiffField0.getBytesLength();
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(154, tiffField0.getDirectoryType());
      assertEquals((-10144), int0);
      assertEquals(7, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3338, 0, fieldTypeLong0, 3338, 3338, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(3338, tiffField0.getTag());
      assertEquals(3338, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-460), (-460), (FieldType) null, (-1819L), (-1819L), byteArray0, byteOrder0, 1);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-460), tiffField0.getDirectoryType());
      assertEquals((-460), tiffField0.getTag());
      assertEquals((-1819), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-266), 1522, fieldTypeShort0, (byte)28, 65535L, byteArray0, byteOrder0, 37391);
      tiffField0.getByteArrayValue();
      assertEquals((-266), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(1522, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals(37391, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, (byte)42, fieldTypeShort0, 0, (byte)42, byteArray0, (ByteOrder) null, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(42, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50713, fieldTypeDouble0, 1L, (-2168L), byteArray0, byteOrder0, (byte) (-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(61, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)44, (byte)44, fieldTypeFloat0, (byte)44, (byte)44, (byte[]) null, byteOrder0, (byte)44);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-10), (-10), fieldTypeShort0, (-10), (-10), byteArray0, (ByteOrder) null, (-10));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (byte)92);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3867), (-3867), fieldTypeFloat0, (-3867), (-3867), (byte[]) null, byteOrder0, (-3867));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-52), (byte) (-52), fieldTypeFloat0.SRATIONAL, (byte) (-52), (byte) (-52), byteArray0, byteOrder0, (byte) (-52));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeFloat0.SRATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (byte) (-48), fieldTypeShort0, (-1308L), 72L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[15];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-93), (byte)22, fieldTypeLong0, (-93), (byte)22, byteArray0, byteOrder0, (byte)22);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 50962);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3867), (-3867), fieldTypeFloat0, (-3867), (-3867), (byte[]) null, byteOrder0, (-3867));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((byte) (-15), (byte) (-15), fieldTypeFloat0.SRATIONAL, (byte) (-15), (byte) (-15), byteArray0, byteOrder0, (byte) (-15));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)71, (byte)71, (FieldType) null, (byte)71, 13592L, byteArray0, byteOrder0, 1462);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)48, (byte)48, fieldTypeFloat0, (byte)48, (byte)48, (byte[]) null, byteOrder0, (byte)48);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2237), (-2237), fieldTypeShort0, (-2237), (-2237), byteArray0, byteOrder0, (-2237));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0, 1L, (byte)56, byteArray0, byteOrder0, (byte)56);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, (byte[]) null, (ByteOrder) null, 1579);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-68), (byte) (-68), fieldTypeFloat0.SRATIONAL, (byte) (-68), (byte) (-68), byteArray0, byteOrder0, (byte) (-68));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 50937);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(98, (-3233), fieldTypeRational0, 1L, 98, byteArray0, byteOrder0, 866);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeFloat0, 1579, 1579, (byte[]) null, (ByteOrder) null, 1579);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, (-7), (-7), byteArray0, (ByteOrder) null, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(40092, 1289, fieldTypeShort0, 1289, 1289, byteArray0, (ByteOrder) null, 1289);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1584, 1584, fieldTypeShort0, 1584, 1584, (byte[]) null, (ByteOrder) null, 1584);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-2068), (-2068), fieldTypeShort0, (-2068), (-2068), byteArray0, (ByteOrder) null, (-2068));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-413), (-413), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (-413));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1563, 1563, fieldTypeFloat0, 1563, 1563, (byte[]) null, byteOrder0, 1563);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-36), (byte) (-36), fieldTypeFloat0.SRATIONAL, (byte) (-36), (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeFloat0.SRATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte) (-36), (byte) (-36), fieldTypeLong0, (byte) (-36), (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-3), (byte) (-3), fieldTypeFloat0.SRATIONAL, (byte) (-3), (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7dkNqK7P:ST5M7|lBOA");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "\"XL>b>Ql(e\",.y");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0, 1L, (byte)56, byteArray0, byteOrder0, (byte)56);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("5us0J\"A");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeFloat0.RATIONAL, 1L, (-2147483648L), byteArray0, byteOrder0, (byte)36);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-36), (byte) (-36), fieldTypeFloat0.SRATIONAL, (byte) (-36), (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(98, 98, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 98);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1278, 1093, (FieldType) null, (-1L), (-1L), (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1167), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2204), fieldTypeRational0, (-2667L), 2366L, byteArray0, byteOrder0, 1070);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(1070, tiffField0.getSortHint());
      assertEquals((-2204), tiffField0.getDirectoryType());
      assertEquals(2366, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37379, "CellLength");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3405), 37379, fieldTypeByte0, 277L, 277L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(277, tiffField0.getOffset());
      assertEquals(37379, tiffField0.getDirectoryType());
      assertEquals((-3405), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1543, 1543, fieldTypeShort0, 1543, 1543, (byte[]) null, (ByteOrder) null, 1543);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-2146847732), fieldTypeShort0.FLOAT, 2634L, (-2146847732), byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2146847732), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2146847732), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50828, 2147475455, (FieldType) null, 4L, 50828, byteArray0, byteOrder0, 2643);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50828, tiffField0.getOffset());
      assertEquals(50828, tiffField0.getTag());
      assertEquals(2147475455, int0);
      assertEquals(2643, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1606, 1606, fieldTypeShort0, 1606, 1606, byteArray0, (ByteOrder) null, 1606);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-1), (-1), (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-2045), fieldTypeFloat0, 28, 255L, byteArray0, byteOrder0, 2145428639);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-2045), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(2145428639, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2553, 32998, fieldTypeFloat0.RATIONAL, 184L, 2553, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(2553, int0);
      assertEquals(2553, tiffField0.getOffset());
      assertEquals(32998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146818998, 2146818998, fieldTypeByte0, (-1L), (-1177L), byteArray0, byteOrder0, 1954);
      long long0 = tiffField0.getCount();
      assertEquals((-1177), tiffField0.getOffset());
      assertEquals(2146818998, tiffField0.getDirectoryType());
      assertEquals((-1L), long0);
      assertEquals(2146818998, tiffField0.getTag());
      assertEquals(1954, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)20, 21, (FieldType) null, 21, 262163L, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, (ByteOrder) null, 20);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, byteArray0, (ByteOrder) null, 1579);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(262, 262, fieldTypeFloat0, 262, 262, byteArray0, byteOrder0, 262);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@177cee1e for: 262 (0x106: PhotometricInterpretation): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeLong0, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      tiffField0.getIntValueOrArraySum();
      assertEquals(52, tiffField0.getTag());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52L, tiffField0.getCount());
      assertEquals(52, tiffField0.getOffset());
      assertEquals(208, tiffField0.getBytesLength());
      assertEquals(52, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0.SRATIONAL, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1619, 1619, fieldTypeShort0.UNDEFINED, 1619, 1619, byteArray0, (ByteOrder) null, 1619);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@41f3b426 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[358];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeDouble0, (byte)60, (byte)60, byteArray0, byteOrder0, (byte)60);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(44, doubleArray0.length);
      assertEquals(60, tiffField0.getOffset());
      assertEquals(60L, tiffField0.getCount());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1578, 1578, fieldTypeLong0, 1578, 1578, byteArray0, byteOrder0, 1578);
      tiffField0.getDoubleArrayValue();
      assertEquals(1578L, tiffField0.getCount());
      assertEquals(1578, tiffField0.getTag());
      assertEquals(1578, tiffField0.getSortHint());
      assertEquals(1578, tiffField0.getOffset());
      assertEquals(6312, tiffField0.getBytesLength());
      assertEquals(1578, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(262, 262, fieldTypeFloat0, 262, 262, byteArray0, byteOrder0, 262);
      tiffField0.getDoubleArrayValue();
      assertEquals(262, tiffField0.getTag());
      assertEquals(262, tiffField0.getSortHint());
      assertEquals(262, tiffField0.getOffset());
      assertEquals(262L, tiffField0.getCount());
      assertEquals(1048, tiffField0.getBytesLength());
      assertEquals(262, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeFloat0.SRATIONAL, (byte)19, (byte)19, byteArray0, byteOrder0, (byte)19);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1568, 1568, fieldTypeShort0, 1568, 1568, byteArray0, (ByteOrder) null, 1568);
      tiffField0.getDoubleArrayValue();
      assertEquals(3136, tiffField0.getBytesLength());
      assertEquals(1568L, tiffField0.getCount());
      assertEquals(1568, tiffField0.getSortHint());
      assertEquals(1568, tiffField0.getTag());
      assertEquals(1568, tiffField0.getOffset());
      assertEquals(1568, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeLong0, (byte)95, (byte)95, byteArray0, byteOrder0, (byte)95);
      tiffField0.getIntArrayValue();
      assertEquals(95, tiffField0.getOffset());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(95L, tiffField0.getCount());
      assertEquals(95, tiffField0.getTag());
      assertEquals(380, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeFloat0, 20, 20, byteArray0, byteOrder0, 20);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3e54f8da for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0.SRATIONAL, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeFloat0.SRATIONAL, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      tiffField0.getIntArrayValue();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52L, tiffField0.getCount());
      assertEquals(52, tiffField0.getTag());
      assertEquals(416, tiffField0.getBytesLength());
      assertEquals(52, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, (ByteOrder) null, 20);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20L, tiffField0.getCount());
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1700), (-1700), fieldTypeAscii0, (byte)52, (-1700), byteArray0, byteOrder0, (-2167));
      String string0 = tiffField0.getStringValue();
      assertEquals(52, tiffField0.getBytesLength());
      assertEquals((-1700), tiffField0.getOffset());
      assertEquals((-1700), tiffField0.getTag());
      assertEquals((-2167), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1700), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, (ByteOrder) null, 20);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@71451281
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, byteArray0, (ByteOrder) null, 1579);
      String string0 = tiffField0.getTagName();
      assertEquals(1579, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x62b)", string0);
      assertEquals(1579, tiffField0.getSortHint());
      assertEquals(1579, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, fieldTypeFloat0.SRATIONAL, (byte)11, (byte)11, byteArray0, byteOrder0, (byte)11);
      String string0 = tiffField0.getTagName();
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, byteArray0, (ByteOrder) null, 1579);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), (-470), fieldTypeFloat0, 1779L, 1779L, byteArray0, byteOrder0, (-470));
      String string0 = tiffField0.toString();
      assertEquals(1779, tiffField0.getOffset());
      assertEquals((-470), tiffField0.getDirectoryType());
      assertEquals("-470 (0xfffffe2a: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55) (1779 Float)", string0);
      assertEquals(7116, tiffField0.getBytesLength());
      assertEquals((-470), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag):  (0 SByte)", string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[226];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2516, 2516, fieldTypeByte0, 2516, 1664L, byteArray0, byteOrder0, 3558);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2516, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2516, tiffField0.getBytesLength());
      assertEquals(2516, tiffField0.getTag());
      assertEquals(3558, tiffField0.getSortHint());
      assertEquals(2516L, tiffField0.getCount());
      assertEquals(1664, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)81, (byte)81, fieldTypeDouble0, (byte)81, (byte)81, byteArray0, byteOrder0, (byte)81);
      String string0 = tiffField0.toString();
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(81, tiffField0.getOffset());
      assertEquals("81 (0x51: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (81 Double)", string0);
      assertEquals(81, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeDouble0, (byte)32, (byte)32, byteArray0, byteOrder0, (byte)32);
      String string0 = tiffField0.toString();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals("32 (0x20: Unknown Tag): 0.0, 0.0 (32 Double)", string0);
      assertEquals(32, tiffField0.getOffset());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeLong0, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      String string0 = tiffField0.getValueDescription();
      assertEquals(52, tiffField0.getOffset());
      assertEquals(52, tiffField0.getTag());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52)", string0);
      assertNotNull(string0);
      assertEquals(52L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1578, 1578, fieldTypeLong0, 1578, 1578, byteArray0, byteOrder0, 1578);
      String string0 = tiffField0.toString();
      assertEquals(6312, tiffField0.getBytesLength());
      assertEquals(1578, tiffField0.getSortHint());
      assertEquals("1578 (0x62a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1578 SLong)", string0);
      assertEquals(1578, tiffField0.getOffset());
      assertEquals(1578, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeShort0, 56, 56, byteArray0, byteOrder0, 56);
      String string0 = tiffField0.toString();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals("56 (0x38: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (56 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[111];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2390, 9, fieldTypeShort0.ASCII, 2390, 2390, byteArray0, byteOrder0, 2390);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2390, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(2390, tiffField0.getTag());
      assertEquals(2390, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2390, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeFloat0.SRATIONAL, (byte)40, (byte)40, byteArray0, byteOrder0, (byte)40);
      String string0 = tiffField0.getValueDescription();
      assertEquals(320, tiffField0.getBytesLength());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(40L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, (byte)48, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4650), 37390, fieldTypeByte0, (-4650), 37390, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 37390);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(37390, tiffField0.getOffset());
      assertEquals((-4650), tiffField0.getBytesLength());
      assertEquals(37390, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-4650), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1588), fieldTypeFloat0, 1582L, 352L, byteArray0, byteOrder0, (-494));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-1780));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: GPSVersionID, fieldType: Float", string0);
      assertEquals((-494), tiffField0.getSortHint());
      assertEquals((-1588), tiffField0.getDirectoryType());
      assertEquals(352, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(6328, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1579, 1579, fieldTypeShort0, 1579, 1579, byteArray0, (ByteOrder) null, 1579);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(1579L, tiffElement0.offset);
      assertEquals(1579, tiffField0.getSortHint());
      assertEquals(1579, tiffField0.getTag());
      assertEquals(1579, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-15), (byte) (-15), (FieldType) null, 1854L, (byte) (-15), (byte[]) null, byteOrder0, (byte) (-15));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(28, (-1470), fieldTypeFloat0, 66L, 0L, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-820), fieldTypeAscii0, (-1272), (-820), (byte[]) null, byteOrder0, (-1272));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1272), tiffField0.getTag());
      assertEquals((-1272L), tiffField0.getCount());
      assertEquals((-820), tiffField0.getOffset());
      assertEquals((-1272), int0);
      assertEquals((-820), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(59961, 59961, fieldTypeShort0, 59961, 59961, byteArray0, (ByteOrder) null, 59961);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(59961, tiffField0.getSortHint());
      assertEquals(59961, tiffField0.getDirectoryType());
      assertEquals("59961 (0xea39: Unknown Tag): ", string0);
      assertEquals(59961, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)44, (byte)44, (FieldType) null, (byte)44, (byte)44, byteArray0, byteOrder0, (byte)44);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }
}
