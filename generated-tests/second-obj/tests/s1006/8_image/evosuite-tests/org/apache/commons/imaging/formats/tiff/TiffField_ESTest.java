/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:42:38 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2311, 82, fieldTypeRational0, 2311, 2311, byteArray0, byteOrder0, 289);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-435), 31, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, (byte) (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-435), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(51022, "<&]1}0Z7V");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51022, 51022, fieldTypeAscii0, 51022, 51022, byteArray0, byteOrder0, (-1937));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(51022L, tiffElement0.offset);
      assertEquals((-1937), tiffField0.getSortHint());
      assertEquals(51022, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(51022, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2311, 50, fieldTypeRational0, 2311, 2311, byteArray0, byteOrder0, 289);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-64);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, 58);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 16L, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(289, "LFc'Uxv$j");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(289, (-1431655764), fieldTypeAscii0, 200L, 289, byteArray0, byteOrder0, (-827));
      String string0 = tiffField0.getValueDescription();
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-827), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(289, tiffField0.getTag());
      assertEquals(289, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-107);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[3] = (byte)20;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeByte0, 19, 19, byteArray0, (ByteOrder) null, (byte) (-107));
      String string0 = tiffField0.getValueDescription();
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(19, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(19, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, (byte[]) null, byteOrder0, 0);
      FieldTypeLong fieldTypeLong1 = FieldType.IFD;
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-687), 34, fieldTypeRational0, (-687), (-687), byteArray0, byteOrder0, (-687));
      int int0 = tiffField0.getSortHint();
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals((-687), tiffField0.getTag());
      assertEquals((-687), tiffField0.getOffset());
      assertEquals((-687), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte) (-43);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-291), (byte) (-43), fieldTypeByte0, 1L, (byte) (-43), byteArray0, byteOrder0, (byte) (-43));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals((-43), int0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-43), tiffField0.getSortHint());
      assertEquals((-43), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-291), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = (-1365);
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1365), "a`4l=g@a(n!");
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1365), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      long long0 = 1L;
      TiffField tiffField0 = new TiffField((-1365), 2, fieldTypeLong0, 1L, (-1365), byteArray0, byteOrder0, 3754);
      PrintWriter printWriter0 = null;
      tiffField0.getIntArrayValue();
      try { 
        FieldType.getFieldType(3754);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 3754 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4067), (-4067), (FieldType) null, (-4067), 728L, (byte[]) null, byteOrder0, (-4067));
      String string0 = tiffField0.getTagName();
      assertEquals(728, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffff01d)", string0);
      assertEquals((-4067), tiffField0.getDirectoryType());
      assertEquals((-4067), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(129, 129, fieldTypeShort0, 129, 1963L, byteArray0, byteOrder0, 908);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(129L, tiffField0.getCount());
      assertEquals(129, tiffField0.getTag());
      assertEquals(129, tiffField0.getDirectoryType());
      assertEquals(258, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {2313.0}, doubleArray0, 0.01);
      assertEquals(1963, tiffField0.getOffset());
      assertEquals(908, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)86;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-94), 0, fieldTypeDouble0, 218L, (byte) (-94), byteArray0, byteOrder0, (byte)99);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-94), tiffField0.getOffset());
      assertEquals(1744, tiffField0.getBytesLength());
      assertEquals(218L, tiffField0.getCount());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals((-94), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1365), "a`4l=g@a(n!");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-32);
      byteArray0[4] = (byte)3;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-32), fieldTypeLong0, (byte)3, (byte)0, byteArray0, byteOrder0, (-1340));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-32), tiffField0.getDirectoryType());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("-522190848, 50331648", string0);
      assertEquals((-1340), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[11];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, (byte)2, 691L, byteArray0, byteOrder0, 2);
      tiffField0.getIntArrayValue();
      long long0 = new Byte((byte)2);
      assertEquals((byte)2, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 92, fieldTypeRational0, 1121, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1121L, tiffField0.getCount());
      assertEquals(8968, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte) (-42);
      byteArray0[6] = (byte)111;
      byteArray0[2] = (byte) (-44);
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeShort0, 13, 13, byteArray0, (ByteOrder) null, (byte) (-42));
      String string0 = tiffField0.getValueDescription();
      assertEquals(26, tiffField0.getBytesLength());
      assertEquals(13L, tiffField0.getCount());
      assertEquals((-42), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(289, "1Rx6/&d`");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(289, (-1431655764), fieldTypeAscii0, 200L, 289, byteArray0, byteOrder0, (-827));
      String string0 = tiffField0.getValueDescription();
      assertEquals(289, tiffField0.getTag());
      assertEquals(289, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-827), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2862, 2862, fieldTypeByte0, 2862, (-2806L), byteArray0, byteOrder0, 2862);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@68df962a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[27];
      byteArray0[1] = (byte)10;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = Pattern.DOTALL;
      TiffField tiffField0 = new TiffField((byte)10, (byte)10, fieldTypeByte0, 32, (byte)10, byteArray0, byteOrder0, (byte)10);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@354c58c8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)36;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-52), 0, fieldTypeDouble0, 218L, (byte) (-52), byteArray0, byteOrder0, (byte)99);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)36, (byte)36);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-52), tiffField0.getTag());
      assertEquals((-52), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-61);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 137, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, 317);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(669, 20);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(20, tiffField0.getTag());
      assertEquals(317, tiffField0.getSortHint());
      assertEquals(137, tiffField0.getDirectoryType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50975, "|=z&|K{mbd=5");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50975, 2147441556, fieldTypeByte0, 50975, 2147441556, (byte[]) null, byteOrder0, 50975);
      String string0 = tiffField0.getTagName();
      assertEquals(2147441556, tiffField0.getDirectoryType());
      assertEquals("RowInterleaveFactor", string0);
      assertEquals(2147441556, tiffField0.getOffset());
      assertEquals(50975, tiffField0.getSortHint());
      assertEquals(50975, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-421), (-421), fieldTypeByte0, 12L, (-491L), byteArray0, byteOrder0, (-421));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@55e512e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1423), 5, fieldTypeLong0, 1181L, 51022L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(4724, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1423), tiffField0.getTag());
      assertEquals(51022, tiffField0.getOffset());
      assertEquals(1181L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(7, 6959, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 6959);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@659621c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1562), (-1562), fieldTypeLong0, 839L, (-3542L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3542), tiffField0.getOffset());
      assertEquals(839L, tiffField0.getCount());
      assertEquals(3356, tiffField0.getBytesLength());
      assertEquals((-1562), tiffField0.getDirectoryType());
      assertEquals((-1562), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[205];
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3279, "HostComputer");
      TiffField tiffField0 = new TiffField((-1859), 300, fieldTypeRational0, 300, 3279, byteArray0, byteOrder0, 300);
      tiffField0.getDoubleArrayValue();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      assertSame(byteOrder1, byteOrder0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[8] = (byte) (-62);
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = Pattern.LITERAL;
      TiffField tiffField0 = new TiffField(1650, (-1), fieldTypeRational0, 248832L, 4294956772L, byteArray0, byteOrder0, 2089443549);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int int0 = 1209;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1610612735), 1209, fieldTypeRational0, 51022L, 1209, byteArray0, byteOrder0, 1209);
      int int1 = 3064;
      tiffField0.getIntValueOrArraySum();
      try { 
        FieldType.getFieldType((-587));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type -587 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(21, (-1514), fieldTypeLong0, (-1056), (-2863311484L), byteArray0, byteOrder0, 21);
      tiffField0.getDirectoryType();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "X,']L2%l\"p2X_o~e]&!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)3, "{6))qyW TKte(_a;");
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)3, (-1927), fieldTypeLong0, (byte)3, 823L, byteArray0, byteOrder0, (-1927));
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getDoubleArrayValue();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-1676), (-1676), fieldTypeByte0.DOUBLE, 619L, (-1676), byteArray0, byteOrder0, (-1676));
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType((-1676));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type -1676 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-571), (-571), fieldTypeFloat0, 4081L, (-571), byteArray0, byteOrder0, 65488);
      tiffField0.getValueDescription();
      System.setCurrentTimeMillis((-1426L));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, 1, (-866L), byteArray0, byteOrder0, (-1));
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tiffField0.getIntValue();
      System.setCurrentTimeMillis((-1));
      tiffField0.getIntValueOrArraySum();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("\"#gG%`7&PCtN{S:Y", "\"#gG%`7&PCtN{S:Y");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // \"#gG%`7&PCtN{S:Y
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2234, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte) (-40);
      byteArray0[3] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2234, 2234, fieldTypeShort0, 2064L, 2064L, byteArray0, byteOrder0, (byte)42);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(36056, int0);
      assertEquals(2064L, tiffField0.getCount());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(4128, tiffField0.getBytesLength());
      assertEquals(2234, tiffField0.getTag());
      assertEquals(2234, tiffField0.getDirectoryType());
      assertEquals(2064, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = Pattern.DOTALL;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32, 2, fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder1, 32);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      tiffField0.getDoubleArrayValue();
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      Integer integer0 = new Integer(32);
      assertEquals(32, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(486, 271, fieldTypeFloat0, 1759, 1759, byteArray0, byteOrder0, 486);
      tiffField0.getDoubleArrayValue();
      int int0 = Double.MAX_EXPONENT;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getCount();
      assertEquals(7036, tiffField0.getBytesLength());
      assertEquals(271, tiffField0.getDirectoryType());
      assertEquals(486, tiffField0.getTag());
      assertEquals(486, tiffField0.getSortHint());
      assertEquals(1759, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[13];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FieldTypeAscii fieldTypeAscii1 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(601, 1702, fieldTypeAscii1, 0L, (-275L), byteArray0, byteOrder1, (-795));
      tiffField0.getStringValue();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-636));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -636
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[352];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeRational0, 845L, 443L, byteArray0, byteOrder0, 92);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(263, (-1518), fieldTypeByte0, 873L, (-2460L), byteArray0, byteOrder0, (-1703));
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType((-2317));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type -2317 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[94];
      int int0 = 48321;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      long long0 = 831L;
      int int1 = (-1051);
      long long1 = (-290L);
      TiffField tiffField0 = new TiffField((-1051), (-1051), fieldTypeAscii0, 831L, (-290L), byteArray0, byteOrder0, 48321);
      tiffField0.getValueDescription();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      int int2 = 5022;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        charset0.decode((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(99, (String) null);
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeShort0, 99, 99, byteArray0, byteOrder0, 99);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(99, 99);
      tiffField0.getValueDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        FieldType.getFieldType(429);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 429 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      int int0 = (-593);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteOrder1.toString();
      ByteOrder.nativeOrder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      TiffField tiffField0 = new TiffField(33919, 33919, fieldTypeLong0, 3352L, (-593), byteArray0, byteOrder0, (-1767));
      tiffField0.getValueDescription();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55)", "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55)");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 11672L, 18, byteArray0, byteOrder0, (-828));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      int int0 = tiffField0.getTag();
      assertEquals(18, tiffField0.getOffset());
      assertEquals(18, int0);
      assertEquals((-828), tiffField0.getSortHint());
      assertEquals(46688, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-29), (byte)71, fieldTypeDouble0, (byte)71, (byte) (-29), byteArray0, byteOrder0, (byte) (-29));
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      tiffField0.getValueDescription();
      Object object0 = new Object();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      fieldTypeDouble0.getValue(tiffField0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = File.pathSeparator;
      try { 
        fieldTypeDouble0.writeData(byteOrder2, byteOrder1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: LITTLE_ENDIAN (java.nio.ByteOrder)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble", e);
      }
  }
}
