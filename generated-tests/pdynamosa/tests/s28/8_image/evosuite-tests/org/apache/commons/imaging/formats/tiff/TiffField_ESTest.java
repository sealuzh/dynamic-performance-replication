/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 15:33:21 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-39);
      byteArray0[4] = (byte)126;
      TiffField tiffField0 = new TiffField(1447, (byte) (-68), fieldTypeRational0, 12L, (byte)37, byteArray0, byteOrder0, (byte) (-68));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals((-68), tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(1447, tiffField0.getTag());
      assertEquals(37, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)126;
      TiffField tiffField0 = new TiffField(1447, (byte) (-68), fieldTypeRational0, 12L, (byte)37, byteArray0, byteOrder0, (byte) (-68));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1447, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-68), tiffField0.getDirectoryType());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals(37, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-94), fieldTypeFloat0, (-914L), (byte)27, byteArray0, byteOrder0, (byte) (-27));
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (-914 Float)", string0);
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-94), tiffField0.getDirectoryType());
      assertEquals((-27), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(33405, " hn1~.ZvV|&uC!");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " hn1~.ZvV|&uC!", (int) (byte)1, (int) (byte)1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-63), 48324, fieldTypeByte0.DOUBLE, 0L, 255L, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getValueDescription();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(48324, tiffField0.getDirectoryType());
      assertEquals((-63), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 50831, fieldTypeAscii0, (byte)0, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(50831, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-582), (-3247), fieldTypeLong0, (byte) (-13), (-3247), byteArray0, byteOrder0, (byte)0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3247), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3247), tiffField0.getOffset());
      assertEquals((-1), tagInfo0.length);
      assertEquals((-582), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-333), fieldTypeByte0, (-1285L), (-333), byteArray0, byteOrder0, (-333));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-333), tiffField0.getSortHint());
      assertEquals((-333), tiffField0.getDirectoryType());
      assertEquals((-333), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-4695), 0, fieldTypeByte0.SHORT, (-4695), (-1865L), byteArray0, byteOrder0, (-2171));
      int int0 = tiffField0.getTag();
      assertEquals((-2171), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1865), tiffField0.getOffset());
      assertEquals((-4695), int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      TiffField tiffField0 = new TiffField(3536, 170, fieldTypeShort0.ASCII, 1L, 2227L, byteArray0, byteOrder0, 2820);
      String string0 = tiffField0.getStringValue();
      assertEquals(170, tiffField0.getDirectoryType());
      assertEquals(3536, tiffField0.getTag());
      assertEquals(2227, tiffField0.getOffset());
      assertEquals(2820, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3735, 3735, fieldTypeLong0, (-67L), (-67L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(3735, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-67), tiffField0.getOffset());
      assertEquals(3735, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeLong0, 450L, (byte)0, byteArray0, byteOrder0, (-1575));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1575), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(33405, " hn1~.ZvV|&uC!");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " hn1~.ZvV|&uC!", (int) (byte)1, (int) (byte)1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 50, fieldTypeByte0.DOUBLE, 1L, 3178L, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(3178L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeShort0, 3227L, 2L, byteArray0, byteOrder0, 1921);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1921, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeFloat0, (byte)9, (-20L), byteArray0, byteOrder0, (-825));
      int int0 = tiffField0.getOffset();
      assertEquals((-825), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-20), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)68;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, (-3347), fieldTypeByte0, 1L, (-3347), byteArray0, byteOrder0, (byte)68);
      tiffField0.getIntValueOrArraySum();
      assertEquals(8, tiffField0.getTag());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals((-3347), tiffField0.getDirectoryType());
      assertEquals((-3347), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeShort0, 3227L, 2L, byteArray0, byteOrder0, 1921);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-256), int0);
      assertEquals(1921, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1614, "h`7");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-430), (-430), fieldTypeFloat0, 1L, 1614, byteArray0, byteOrder0, (-353));
      tiffField0.getIntValue();
      assertEquals((-353), tiffField0.getSortHint());
      assertEquals((-430), tiffField0.getDirectoryType());
      assertEquals(1614, tiffField0.getOffset());
      assertEquals((-430), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-32);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5815), 1, fieldTypeLong0, 1L, (byte)0, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-5815), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(106, 50, fieldTypeShort0, 1L, 4035, byteArray0, byteOrder0, (byte) (-39));
      tiffField0.getIntValue();
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals(106, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4035, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(510, (String) null);
      TiffField tiffField0 = new TiffField((-1168), 510, fieldTypeLong0, 8L, 510, byteArray0, byteOrder0, (-2412));
      tiffField0.getFieldTypeName();
      assertEquals(510, tiffField0.getOffset());
      assertEquals((-2412), tiffField0.getSortHint());
      assertEquals(510, tiffField0.getDirectoryType());
      assertEquals((-1168), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2, "");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(11, 2, fieldTypeLong0, 11, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1490), (-599), (FieldType) null, 2420L, (-1781L), byteArray0, byteOrder0, 1751);
      tiffField0.getFieldType();
      assertEquals(1751, tiffField0.getSortHint());
      assertEquals((-599), tiffField0.getDirectoryType());
      assertEquals((-1781), tiffField0.getOffset());
      assertEquals((-1490), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "aLd,QslxjL2a");
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate(17);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 3068L, 3068L, byteArray0, byteOrder0, 37384);
      tiffField0.getFieldType();
      assertEquals(3068, tiffField0.getOffset());
      assertEquals(37384, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "DateTime");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeAscii0, 0, 0L, byteArray0, byteOrder0, (byte)126);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-51), 2, fieldTypeShort0, 1L, 317L, byteArray0, byteOrder0, 726);
      tiffField0.getDoubleValue();
      assertEquals(317, tiffField0.getOffset());
      assertEquals(726, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-51), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)6;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(985, 985, fieldTypeFloat0, 1L, (-894L), byteArray0, byteOrder0, 33423);
      tiffField0.getDoubleValue();
      assertEquals(985, tiffField0.getTag());
      assertEquals((-894), tiffField0.getOffset());
      assertEquals(985, tiffField0.getDirectoryType());
      assertEquals(33423, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-128);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(445, 445, fieldTypeShort0, 1L, (-4191L), byteArray0, byteOrder0, 349);
      tiffField0.getDoubleValue();
      assertEquals(349, tiffField0.getSortHint());
      assertEquals(445, tiffField0.getTag());
      assertEquals(445, tiffField0.getDirectoryType());
      assertEquals((-4191), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)0, (-20L), byteArray0, byteOrder0, (-825));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-825), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-20), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)85, 3, fieldTypeRational0, (-1336L), 2003L, byteArray0, (ByteOrder) null, (byte)71);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(85, tiffField0.getTag());
      assertEquals(3, int0);
      assertEquals(2003, tiffField0.getOffset());
      assertEquals(71, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 182);
      tiffField0.getCount();
      assertEquals(182, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1789569705), 50, fieldTypeRational0, (-1789569705), (-1789569705), byteArray0, (ByteOrder) null, (byte)16);
      tiffField0.getCount();
      assertEquals((-1789569705), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals((-1789569705), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeFloat0, 605, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-941), 910, fieldTypeLong0, (-2272L), (-2272L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-941), tiffField0.getTag());
      assertEquals(910, tiffField0.getDirectoryType());
      assertEquals((-2272), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(0, (byte)1, fieldTypeByte0, 4L, 0L, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-403), "Lp*");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(52, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(52, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeByte0, (-1982292597L), 2, byteArray0, byteOrder0, 401);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeLong0, 450L, (byte)0, byteArray0, byteOrder0, (-1575));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Expected String value(");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1575), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50831, 48324, fieldTypeAscii0, (byte) (-63), 50831, byteArray0, (ByteOrder) null, 48324);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1490), (-599), (FieldType) null, 2420L, (-1781L), byteArray0, byteOrder0, 1751);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(916, (-1), fieldTypeFloat0, (byte) (-63), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, (-1L), (-2147483648L), byteArray0, byteOrder0, (byte)40);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)0, (-3646), fieldTypeFloat0.ASCII, (-1456L), (byte) (-1), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1512, 1512, fieldTypeByte0, 1512, 1512, (byte[]) null, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(37380, "Y3AnK\"");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(519, 1358, fieldTypeAscii0, (-64L), 37380, byteArray0, byteOrder0, 1358);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)72, 50831, fieldTypeAscii0.SBYTE, (-821L), (byte)72, byteArray0, (ByteOrder) null, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-160), (-160), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-160));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1589, 1589, fieldTypeShort0, 2147483647L, 1589, byteArray0, byteOrder0, (byte) (-65));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0.RATIONAL, 8, 8, byteArray0, byteOrder0, 8);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(95, (-2758), fieldTypeLong0, 2900L, (-198L), byteArray0, byteOrder0, (byte)104);
      tiffField0.getByteArrayValue();
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(95, tiffField0.getTag());
      assertEquals((-2758), tiffField0.getDirectoryType());
      assertEquals((-198), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34853, 1418, fieldTypeFloat0, 255L, (-545L), byteArray0, byteOrder0, (-169));
      tiffField0.getFieldType();
      assertEquals(34853, tiffField0.getTag());
      assertEquals((-545), tiffField0.getOffset());
      assertEquals((-169), tiffField0.getSortHint());
      assertEquals(1418, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 6, (FieldType) null, 2, 6, byteArray0, byteOrder0, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-4695), 0, fieldTypeByte0.SHORT, (-4695), (-1865L), byteArray0, byteOrder0, (-2171));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-366), (byte)0, fieldTypeLong0, 3227L, 0, byteArray0, byteOrder0, (byte) (-55));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals((-366), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34853, 1418, fieldTypeFloat0, 255L, (-545L), byteArray0, byteOrder0, (-169));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34853, tiffField0.getTag());
      assertEquals((-545), tiffField0.getOffset());
      assertEquals(1418, tiffField0.getDirectoryType());
      assertEquals((-169), tiffField0.getSortHint());
      assertEquals(34853, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getTag();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeLong0, 65535, (-1L), (byte[]) null, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4212, "");
      TiffField tiffField0 = new TiffField(4212, (-889), fieldTypeAscii0, 0L, (-889), byteArray0, byteOrder0, (-2147181056));
      tiffField0.getBytesLength();
      assertEquals((-889), tiffField0.getDirectoryType());
      assertEquals((-889), tiffField0.getOffset());
      assertEquals(4212, tiffField0.getTag());
      assertEquals((-2147181056), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 2147483647L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(8, 1908874353, fieldTypeByte0, 4L, (-1L), byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeLong0, 450L, (byte)0, byteArray0, byteOrder0, (-1575));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1575), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeDouble0, 4, (-610L), byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4dd7dbdc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 1473L, (byte) (-55), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(807, "'!O_+Bz");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(807, 807, fieldTypeDouble0, 807, 807, byteArray0, byteOrder0, 2883);
      tiffField0.getDoubleArrayValue();
      assertEquals(807, tiffField0.getDirectoryType());
      assertEquals(807, tiffField0.getTag());
      assertEquals(807, tiffField0.getOffset());
      assertEquals(2883, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(0, (byte)1, fieldTypeByte0, 4L, 0L, byteArray0, (ByteOrder) null, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@61e52d91 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(510, (String) null);
      TiffField tiffField0 = new TiffField((-1168), 510, fieldTypeLong0, 8L, 510, byteArray0, byteOrder0, (-2412));
      tiffField0.getDoubleArrayValue();
      assertEquals(510, tiffField0.getOffset());
      assertEquals((-2412), tiffField0.getSortHint());
      assertEquals(510, tiffField0.getDirectoryType());
      assertEquals((-1168), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 0, fieldTypeLong0, (byte)0, 5872L, byteArray0, byteOrder0, 13);
      tiffField0.getDoubleArrayValue();
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(5872, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(605, 4, fieldTypeFloat0, 605, 1L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(605, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)59, fieldTypeShort0, 1589, 333L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(333, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, (-1509), fieldTypeByte0, 1, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1509), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 2147483647L, byteArray0, byteOrder0, 2);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(11, 2, fieldTypeByte0.IFD, 11, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(4, (byte)26, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).ASCII).SHORT, (byte)26, 4, byteArray0, byteOrder0, 1403);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1403, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 2147483647L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(523, 3, fieldTypeByte0, 523, 3, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@67897a49 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0, 1L, 11040L, byteArray0, byteOrder0, 8);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(11040, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0.RATIONAL, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-547), 4, fieldTypeRational0, 4868L, 4868L, byteArray0, byteOrder0, (byte)36);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@299ac897
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1127, 4, fieldTypeRational0.ASCII, 4, 4, byteArray0, byteOrder0, 1052);
      String string0 = tiffField0.getStringValue();
      assertEquals(1052, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1127, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-51), 2, fieldTypeShort0, 1L, 317L, byteArray0, byteOrder0, 726);
      String string0 = tiffField0.getTagName();
      assertEquals(726, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(317, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffffffcd)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1377), fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, (byte)65);
      String string0 = tiffField0.getTagName();
      assertEquals((-1377), tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50324, 50324, fieldTypeFloat0, 50324, 1711L, byteArray0, byteOrder0, 50324);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(50324, tiffField0.getSortHint());
      assertEquals(50324, tiffField0.getDirectoryType());
      assertEquals(50324, tiffField0.getTag());
      assertEquals(1711, tiffField0.getOffset());
      assertEquals(50324L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[54];
      TiffField tiffField0 = new TiffField((-1099), (-1521), fieldTypeShort0.SBYTE, 2122L, (-3183), byteArray0, (ByteOrder) null, (-3183));
      tiffField0.dump();
      assertEquals((-3183), tiffField0.getOffset());
      assertEquals(2122L, tiffField0.getCount());
      assertEquals((-1099), tiffField0.getTag());
      assertEquals((-3183), tiffField0.getSortHint());
      assertEquals((-1521), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(605, 4, fieldTypeFloat0, 605, 1L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals("605 (0x25d: Unknown Tag): 0.0 (605 Float)", string0);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeDouble0, 4, (-610L), byteArray0, byteOrder0, 4);
      tiffField0.dump();
      assertEquals((-610), tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50317, 33451, fieldTypeLong0, 402584L, 402584L, byteArray0, byteOrder0, 12);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50317, tiffField0.getTag());
      assertEquals(33451, tiffField0.getDirectoryType());
      assertEquals(402584L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(402584, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37379, (String) null);
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(37379, 37379, fieldTypeByte0, 37379, 37379, byteArray0, (ByteOrder) null, 48324);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37379, tiffField0.getOffset());
      assertEquals(48324, tiffField0.getSortHint());
      assertEquals(37379, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(37379L, tiffField0.getCount());
      assertEquals(37379, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 32895, fieldTypeShort0, 32895, (byte)0, byteArray0, byteOrder0, 2);
      tiffField0.dump();
      assertEquals(32895L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(32895, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1161, 27, fieldTypeShort0, 1161, 1161, byteArray0, byteOrder0, 15);
      String string0 = tiffField0.toString();
      assertEquals("1161 (0x489: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (1161 SShort)", string0);
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(1161, tiffField0.getOffset());
      assertEquals(27, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34736, "EXIF_DIRECTORY_SUB_IFD1");
      TiffField tiffField0 = new TiffField(65535, 34736, fieldTypeAscii0, 2147483647L, (-1963L), byteArray0, byteOrder0, 65535);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      tiffField0.dump();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1963), tiffField0.getOffset());
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(34736, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4212, "");
      TiffField tiffField0 = new TiffField(4212, (-889), fieldTypeAscii0, 0L, (-889), byteArray0, byteOrder0, (-2147181056));
      tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-889), tiffField0.getOffset());
      assertEquals(4212, tiffField0.getTag());
      assertEquals((-2147181056), tiffField0.getSortHint());
      assertEquals((-889), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5815), 1, fieldTypeLong0, 1L, (byte)0, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals((-5815), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, (-1L), (-2147483648L), byteArray0, byteOrder0, (byte)40);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-1L), tiffField0.getCount());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50936, 1131, fieldTypeByte0, 0L, 680L, byteArray0, byteOrder0, (byte) (-65));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50936, (byte) (-97));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-65), tiffField0.getSortHint());
      assertEquals(1131, tiffField0.getDirectoryType());
      assertEquals(50936, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(680, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(8, 1908874353, fieldTypeByte0, 4L, (-1L), byteArray0, byteOrder0, 8);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1908874353, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0.RATIONAL, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.getFieldTypeName();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeLong0, 65535, (-1L), (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1168), (-1168), fieldTypeByte0, (-1168), 1097L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1097, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1168), tiffField0.getTag());
      assertEquals((-1168), int0);
      assertEquals((-1168L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(56, "~^So5!g730");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(340, 340, fieldTypeLong0, 4, 1314L, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getSortHint();
      assertEquals(340, tiffField0.getDirectoryType());
      assertEquals(340, tiffField0.getTag());
      assertEquals(2, int0);
      assertEquals(1314, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(8, 1908874353, fieldTypeByte0, 4L, (-1L), byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("8 (0x8: Unknown Tag): ", string0);
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(1908874353, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[51];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeShort0.ASCII, 80, 80, byteArray0, byteOrder0, 80);
      tiffField0.dump();
      assertEquals(80L, tiffField0.getCount());
      assertEquals(80, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getTag());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(80, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34853, 1418, fieldTypeFloat0, 255L, (-545L), byteArray0, byteOrder0, (-169));
      tiffField0.getByteOrder();
      assertEquals((-545), tiffField0.getOffset());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(1418, tiffField0.getDirectoryType());
      assertEquals((-169), tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-582), (-3247), fieldTypeLong0, (byte) (-13), (-3247), byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1798), 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3247), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
      assertEquals((-3247), tiffField0.getDirectoryType());
      assertEquals((-52), tiffField0.getBytesLength());
      assertEquals((-582), tiffField0.getTag());
  }
}
