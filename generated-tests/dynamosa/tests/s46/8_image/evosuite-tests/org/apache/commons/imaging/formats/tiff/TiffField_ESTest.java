/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 13:45:31 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[11];
      byteArray0[4] = (byte) (-99);
      byteArray0[3] = (byte) (-99);
      TiffField tiffField0 = new TiffField((byte) (-99), (byte)0, fieldTypeRational0, 13, 478, byteArray0, byteOrder0, 478);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(478, tiffField0.getSortHint());
      assertEquals((-10579263), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-99), tiffField0.getTag());
      assertEquals(478, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[11];
      byteArray0[4] = (byte) (-99);
      TiffField tiffField0 = new TiffField((byte) (-99), (byte)0, fieldTypeRational0, 13, 478, byteArray0, byteOrder0, 478);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-99), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(478, tiffField0.getSortHint());
      assertEquals(478, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-400), 3770, fieldTypeLong0, (byte)1, 704L, byteArray0, (ByteOrder) null, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(704, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-400), tiffField0.getTag());
      assertEquals(3770, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeRational0, 40095, (-1305L), byteArray0, byteOrder0, 40095);
      String string0 = tiffField0.getValueDescription();
      assertEquals(40095, tiffField0.getSortHint());
      assertEquals(40095, tiffField0.getTag());
      assertEquals(40095, tiffField0.getDirectoryType());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals((-1305), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 1431655765, fieldTypeShort0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.dump();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1431655765, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, 3755, fieldTypeByte0.SHORT, 0L, 114L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3755, tiffField0.getDirectoryType());
      assertEquals(51, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(114, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2147348322, (-1060), fieldTypeFloat0, 22016L, 1L, byteArray0, (ByteOrder) null, 1766);
      tiffField0.getValue();
      assertEquals(2147348322, tiffField0.getTag());
      assertEquals(1766, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1060), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(28, (-1261), fieldTypeRational0, (byte)1, (byte)114, byteArray0, byteOrder0, 2139841357);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(114, tiffField0.getOffset());
      assertEquals((-1261), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(2139841357, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(400, 34737, fieldTypeDouble0, (-3386L), 34737, byteArray0, byteOrder0, (-1924));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34737, tiffField0.getOffset());
      assertEquals(34737, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
      assertEquals((-1924), tiffField0.getSortHint());
      assertEquals(400, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 3486, fieldTypeFloat0.ASCII, (-2147483648L), 1666L, byteArray0, (ByteOrder) null, (-3888));
      int int0 = tiffField0.getTag();
      assertEquals((-3888), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(3486, tiffField0.getDirectoryType());
      assertEquals(1666, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2194), 63, fieldTypeFloat0, 8L, (byte)0, byteArray0, (ByteOrder) null, 2668);
      int int0 = tiffField0.getTag();
      assertEquals((-2194), int0);
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(2668, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeByte0.ASCII, (byte)0, (-2147235009), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-2147235009), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2147348322, (-1060), fieldTypeFloat0, 22016L, 1L, byteArray0, (ByteOrder) null, 1766);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1766, int0);
      assertEquals((-1060), tiffField0.getDirectoryType());
      assertEquals(2147348322, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "+!,>odsXn~g!\"");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1577), 1133, fieldTypeLong0, (-2147483648L), (byte) (-65), byteArray0, byteOrder0, (byte) (-65));
      int int0 = tiffField0.getSortHint();
      assertEquals((-65), int0);
      assertEquals(1133, tiffField0.getDirectoryType());
      assertEquals((-1577), tiffField0.getTag());
      assertEquals((-65), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(65535L, tiffElement0.offset);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), 63, fieldTypeFloat0, (-996L), 1953L, byteArray0, (ByteOrder) null, (-791));
      int int0 = tiffField0.getOffset();
      assertEquals(1953, int0);
      assertEquals((-791), tiffField0.getSortHint());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1577), (byte)49, fieldTypeShort0, 1856L, (byte) (-75), byteArray0, byteOrder0, 1133);
      int int0 = tiffField0.getOffset();
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals((-1577), tiffField0.getTag());
      assertEquals((-75), int0);
      assertEquals(1133, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "+!,>odsXn~g!\"");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-61);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-57), (byte)0, fieldTypeLong0, 1, 2173L, byteArray0, byteOrder0, (byte) (-61));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2173, tiffField0.getOffset());
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals((-57), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-456), "ZTy(-GOC!2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-57);
      TiffField tiffField0 = new TiffField((-1165), 0, fieldTypeShort0, 1500L, (-1840), byteArray0, byteOrder0, (byte) (-57));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1840), tiffField0.getOffset());
      assertEquals((-1165), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-14592), int0);
      assertEquals((-57), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1840), "ZTy(-GOC!2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-894), (-894), fieldTypeShort0, 1L, (-1165), byteArray0, byteOrder0, (-1840));
      tiffField0.getIntValue();
      assertEquals((-894), tiffField0.getTag());
      assertEquals((-894), tiffField0.getDirectoryType());
      assertEquals((-1165), tiffField0.getOffset());
      assertEquals((-1840), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "+!,>odsXn~g!\"");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-61);
      TiffField tiffField0 = new TiffField((byte)0, (-3215), fieldTypeLong0, 1L, (byte)16, byteArray0, (ByteOrder) null, (byte)16);
      tiffField0.getIntValue();
      assertEquals(16, tiffField0.getOffset());
      assertEquals((-3215), tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-32);
      TiffField tiffField0 = new TiffField((-5385), (byte) (-62), fieldTypeShort0.UNDEFINED, 1L, (-2118L), byteArray0, byteOrder0, 3741);
      tiffField0.getIntValue();
      assertEquals(3741, tiffField0.getSortHint());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals((-5385), tiffField0.getTag());
      assertEquals((-2118), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[120];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1650, (String) null);
      TiffField tiffField0 = new TiffField(47, 2127781963, fieldTypeDouble0, 47, 1107L, byteArray0, byteOrder0, 14);
      tiffField0.getFieldTypeName();
      assertEquals(2127781963, tiffField0.getDirectoryType());
      assertEquals(1107, tiffField0.getOffset());
      assertEquals(47, tiffField0.getTag());
      assertEquals(14, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(3971, 3971, fieldTypeRational0.SHORT, 3971, 3971, byteArray0, byteOrder0, 3971);
      tiffField0.getFieldTypeName();
      assertEquals(3971, tiffField0.getOffset());
      assertEquals(3971, tiffField0.getSortHint());
      assertEquals(3971, tiffField0.getTag());
      assertEquals(3971, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "");
      TiffField tiffField0 = new TiffField((byte)70, (byte)70, fieldTypeRational0, 148L, 3971, byteArray0, (ByteOrder) null, 2146982718);
      tiffField0.getFieldTypeName();
      assertEquals(3971, tiffField0.getOffset());
      assertEquals(70, tiffField0.getTag());
      assertEquals(2146982718, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-359), (-359), fieldTypeLong0, (-359), (-359), byteArray0, byteOrder0, (-518));
      tiffField0.getFieldType();
      assertEquals((-518), tiffField0.getSortHint());
      assertEquals((-359), tiffField0.getDirectoryType());
      assertEquals((-359), tiffField0.getOffset());
      assertEquals((-359), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-456), "ZTy(-GOC!2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1165), 0, fieldTypeShort0, 1500L, (-1840), byteArray0, byteOrder0, (byte) (-57));
      tiffField0.getFieldType();
      assertEquals((-1840), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1165), tiffField0.getTag());
      assertEquals((-57), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "+!,codsX~g!\"");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "+!,codsX~g!\"");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147212329, 0, fieldTypeLong0, 71L, 2147212329, byteArray0, byteOrder0, (-317));
      tiffField0.getFieldType();
      assertEquals((-317), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2147212329, tiffField0.getOffset());
      assertEquals(2147212329, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[23];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "+!,codsX~g!\"");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-65), 2146774661, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 37382);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-65), tiffField0.getTag());
      assertEquals(2146774661, tiffField0.getDirectoryType());
      assertEquals(37382, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte) (-99);
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 1L, (-791L), byteArray0, byteOrder0, (-3282));
      tiffField0.getDoubleValue();
      assertEquals((-791), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3282), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      byteArray0[3] = (byte) (-99);
      TiffField tiffField0 = new TiffField((byte) (-99), (byte) (-99), fieldTypeRational0, 1L, (-791L), byteArray0, byteOrder0, (-3282));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-791), tiffField0.getOffset());
      assertEquals((-99), tiffField0.getDirectoryType());
      assertEquals((-3282), tiffField0.getSortHint());
      assertEquals((-99), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-456), "ZTy(-GOC!2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1165), 0, fieldTypeShort0, 1500L, (-1840), byteArray0, byteOrder0, (byte) (-57));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1840), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1165), tiffField0.getTag());
      assertEquals((-57), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1840), "ZTy(-GOC!2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1165), (-1840), fieldTypeShort0, 255L, (-1165), byteArray0, byteOrder0, (-1165));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1165), tiffField0.getTag());
      assertEquals((-1840), int0);
      assertEquals((-1165), tiffField0.getOffset());
      assertEquals((-1165), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3074), 65535, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, 50721);
      tiffField0.getCount();
      assertEquals((-3074), tiffField0.getTag());
      assertEquals(50721, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2147348322, (-1060), fieldTypeFloat0, 22016L, 1L, byteArray0, (ByteOrder) null, 1766);
      long long0 = tiffField0.getCount();
      assertEquals(22016L, long0);
      assertEquals(2147348322, tiffField0.getTag());
      assertEquals(1766, tiffField0.getSortHint());
      assertEquals((-1060), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1526, 1591, fieldTypeRational0, (-2147483648L), (-608L), byteArray0, byteOrder0, 1591);
      tiffField0.getBytesLength();
      assertEquals((-608), tiffField0.getOffset());
      assertEquals(1591, tiffField0.getDirectoryType());
      assertEquals(1591, tiffField0.getSortHint());
      assertEquals(1526, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1591, 2255, fieldTypeRational0, 2255, 2255, byteArray0, byteOrder0, 1591);
      tiffField0.getBytesLength();
      assertEquals(1591, tiffField0.getTag());
      assertEquals(2255, tiffField0.getOffset());
      assertEquals(2255, tiffField0.getDirectoryType());
      assertEquals(1591, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3959, 749, fieldTypeShort0, 3959, (-1520L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(3959, tiffField0.getTag());
      assertEquals(749, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1520), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)70, (byte)70, fieldTypeShort0.RATIONAL, 148L, 3971, byteArray0, (ByteOrder) null, 2146982718);
      tiffField0.getByteArrayValue();
      assertEquals(2146982718, tiffField0.getSortHint());
      assertEquals(3971, tiffField0.getOffset());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1526, 1591, fieldTypeRational0, (-2147483648L), (-608L), byteArray0, byteOrder0, 1591);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getByteArrayValue();
      assertEquals(1591, tiffField0.getSortHint());
      assertEquals(1591, tiffField0.getDirectoryType());
      assertEquals(1526, tiffField0.getTag());
      assertEquals((-608), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MockFile mockFile0 = new MockFile("1k\"w+BnR3F");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      TiffField tiffField0 = new TiffField((-3074), 65535, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, 50721);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-3074), tiffField0.getTag());
      assertEquals(44L, mockFile0.length());
      assertEquals(50721, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[203];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4057, 4057, (FieldType) null, 4057, 4057, byteArray0, byteOrder0, 4057);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0.IFD, 1, 1, byteArray0, byteOrder0, (-25));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65540, 65540, fieldTypeByte0, 65540, 65540, (byte[]) null, byteOrder0, 65540);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-832), (-832), fieldTypeShort0, (-832), (-832), byteArray0, byteOrder0, (-832));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0.IFD, 1, 1, byteArray0, byteOrder0, (-25));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeRational0, 40095, (-1305L), byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(4043, (-2094), fieldTypeRational0, (-2094), (-2094), byteArray0, byteOrder0, (-2094));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(301, 301, fieldTypeShort0, 1L, (-663L), byteArray0, byteOrder0, 301);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32947, 32947, fieldTypeRational0, 32947, 32947, (byte[]) null, byteOrder0, 32947);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[114];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2147031050, 2147031050, fieldTypeRational0, 2147031050, 2147031050, byteArray0, byteOrder0, 2147031050);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(225, 225, fieldTypeRational0, 1L, 225, byteArray0, byteOrder0, 225);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, (byte[]) null, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-74), (byte) (-74), fieldTypeShort0, (byte) (-74), (byte) (-74), byteArray0, (ByteOrder) null, (byte) (-74));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(3957, 3957, (FieldType) null, 3957, 3957, byteArray0, byteOrder0, 3957);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-800), (-800), fieldTypeByte0, (-800), (-800), byteArray0, byteOrder0, (-800));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField(3977, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 50734);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4028, 4028, fieldTypeRational0, 4028, 4028, (byte[]) null, byteOrder0, 4028);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-13), (byte) (-13), fieldTypeShort0, (byte) (-13), (byte) (-13), byteArray0, (ByteOrder) null, (byte) (-13));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(27, (-2511), fieldTypeRational0, 0L, 27, byteArray0, byteOrder0, (-2511));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4035, 4035, fieldTypeRational0, 4035, 4035, (byte[]) null, byteOrder0, 4035);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-25), (-25), fieldTypeRational0, (-25), (-25), byteArray0, byteOrder0, (-25));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[184];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1134, 1134, (FieldType) null, 1134, 1134, byteArray0, byteOrder0, 1134);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-30), (byte) (-30), fieldTypeShort0, (byte) (-30), (byte) (-30), byteArray0, (ByteOrder) null, (byte) (-30));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-384), (-384), fieldTypeFloat0, (-384), (-384), byteArray0, byteOrder0, (-384));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3440, Integer.MAX_VALUE, fieldTypeRational0, Integer.MAX_VALUE, (-1742L), byteArray0, byteOrder0, Integer.MAX_VALUE);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeDouble0, (-1L), (-558L), byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(181, 1, fieldTypeRational0, 1, (-3861L), byteArray0, byteOrder0, (-1485));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1995), (-1995), fieldTypeDouble0.FLOAT, (-1995), (-1995), byteArray0, byteOrder0, (-1995));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-11136L), byteArray0, byteOrder0, (-132));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 1431655765, fieldTypeShort0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("mV");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1431655765, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, (-1), (-1), byteArray0, (ByteOrder) null, (-79));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 1L, (-791L), byteArray0, byteOrder0, (-3282));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3282), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-791), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(12, "_YRMHG0U?mJ.<");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 7L, 0L, byteArray0, byteOrder0, 121);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(257, 257, fieldTypeRational0, 524280L, 524280L, (byte[]) null, byteOrder0, 257);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[73];
      TiffField tiffField0 = new TiffField(2433, 65535, (FieldType) null, 255L, 255L, byteArray0, byteOrder0, 480);
      tiffField0.getFieldType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2433, tiffField0.getTag());
      assertEquals(480, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65528, 65528, fieldTypeByte0, 65528, 65528, byteArray0, byteOrder0, 65528);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65528, int0);
      assertEquals(65528, tiffField0.getOffset());
      assertEquals(65528, tiffField0.getSortHint());
      assertEquals(65528, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65537, 65537, fieldTypeByte0, 65537, 65537, byteArray0, byteOrder0, 65537);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeRational0, 17, 17, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "$v;#ybAHckTSyol");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 28, fieldTypeRational0, 28, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-761), "='FCqMz(MqpL");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "='FCqMz(MqpL");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeDouble0, (-761), (-143L), byteArray0, byteOrder0, 338);
      int int0 = tiffField0.getTag();
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals(338, tiffField0.getSortHint());
      assertEquals((-143), tiffField0.getOffset());
      assertEquals(338, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(1197);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34027, 0, (FieldType) null, (-1L), 34027, byteArray0, byteOrder0, 34027);
      long long0 = tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(34027, tiffField0.getSortHint());
      assertEquals(34027, tiffField0.getTag());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(459, 2147137447, fieldTypeFloat0, (-1079L), (-343L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-4316), int0);
      assertEquals(2147137447, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(459, tiffField0.getTag());
      assertEquals((-343), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-12), (-12), fieldTypeRational0, (-12), (-12), byteArray0, byteOrder0, (-12));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-12), tiffField0.getDirectoryType());
      assertEquals((-12), tiffField0.getSortHint());
      assertEquals("-12 (0xfffffff4: Unknown Tag): ", string0);
      assertEquals((-12), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65540, 65540, fieldTypeByte0, 65540, 65540, byteArray0, byteOrder0, 65540);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4038, 4038, fieldTypeLong0, 4038, 4038, byteArray0, byteOrder0, 4038);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4038, tiffField0.getOffset());
      assertEquals(16152, tiffField0.getBytesLength());
      assertEquals(4038, tiffField0.getDirectoryType());
      assertEquals(4038, tiffField0.getSortHint());
      assertEquals(4038, tiffField0.getTag());
      assertEquals(4038L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65540, 65540, fieldTypeByte0, 65540, 65540, byteArray0, byteOrder0, 65540);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@54be59c9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 12, 12, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[143];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeDouble0, 34, 34, byteArray0, byteOrder0, 34);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34L, tiffField0.getCount());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getTag());
      assertEquals(17, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeFloat0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)17);
      tiffField0.getDoubleArrayValue();
      assertEquals(17L, tiffField0.getCount());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getTag());
      assertEquals(17, tiffField0.getOffset());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147031050, 71, fieldTypeLong0, 71, 2147031050, byteArray0, byteOrder0, 71);
      tiffField0.getDoubleArrayValue();
      assertEquals(284, tiffField0.getBytesLength());
      assertEquals(2147031050, tiffField0.getOffset());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(2147031050, tiffField0.getTag());
      assertEquals(71L, tiffField0.getCount());
      assertEquals(71, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@bbf5a1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeLong0, 27, 27, byteArray0, byteOrder0, 27);
      tiffField0.getDoubleArrayValue();
      assertEquals(27, tiffField0.getOffset());
      assertEquals(108, tiffField0.getBytesLength());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(13, tiffField0.getTag());
      assertEquals(13L, tiffField0.getCount());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[379];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeShort0, (byte)6, (byte)6, byteArray0, (ByteOrder) null, (byte)6);
      tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(6L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeLong0, 26, 26, byteArray0, byteOrder0, 26);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(26L, tiffField0.getCount());
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, intArray0.length);
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5c52a78e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      tiffField0.getIntArrayValue();
      assertEquals(13, tiffField0.getTag());
      assertEquals(13L, tiffField0.getCount());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField(2679, 2679, fieldTypeRational0, 2679, 2679, byteArray0, byteOrder0, 2679);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeShort0, (byte)6, (byte)6, byteArray0, (ByteOrder) null, (byte)6);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals(6L, tiffField0.getCount());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeByte0, 0, 3423L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@796d1510
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(27, (-2844), fieldTypeByte0, 3009L, 4L, byteArray0, byteOrder0, (-2844));
      String string0 = tiffField0.getStringValue();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-2844), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-2844), tiffField0.getSortHint());
      assertEquals(3009, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xffff)", string0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeFloat0, 338, 338, byteArray0, byteOrder0, 338);
      String string0 = tiffField0.getTagName();
      assertEquals(338, tiffField0.getSortHint());
      assertEquals(338, tiffField0.getOffset());
      assertEquals("ExtraSamples", string0);
      assertEquals(338, tiffField0.getTag());
      assertEquals(338, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(1629, 1629, fieldTypeRational0.SHORT, 1629, 1629, byteArray0, byteOrder0, 1629);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "WF{E{3^v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[412];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(331, 331, fieldTypeDouble0.FLOAT, 419L, 419L, byteArray0, byteOrder0, 331);
      String string0 = tiffField0.toString();
      assertEquals(331, tiffField0.getSortHint());
      assertEquals(419, tiffField0.getOffset());
      assertEquals(1676, tiffField0.getBytesLength());
      assertEquals(331, tiffField0.getDirectoryType());
      assertEquals("331 (0x14b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (103) (419 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeFloat0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)17);
      String string0 = tiffField0.getValueDescription();
      assertEquals(17L, tiffField0.getCount());
      assertEquals(17, tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[428];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(334, 334, fieldTypeDouble0, 334, 334, byteArray0, byteOrder0, 334);
      String string0 = tiffField0.toString();
      assertEquals(334, tiffField0.getOffset());
      assertEquals("334 (0x14e: NumberOfInks): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (334 Double)", string0);
      assertEquals(334, tiffField0.getDirectoryType());
      assertEquals(334, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeDouble0, 34, 34, byteArray0, byteOrder0, 34);
      String string0 = tiffField0.toString();
      assertEquals("34 (0x22: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (34 Double)", string0);
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1134, 1134, fieldTypeLong0, 135631L, 1134, byteArray0, byteOrder0, 1134);
      String string0 = tiffField0.toString();
      assertEquals(1134, tiffField0.getOffset());
      assertEquals(542524, tiffField0.getBytesLength());
      assertEquals(1134, tiffField0.getSortHint());
      assertEquals("1134 (0x46e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (135631 Long)", string0);
      assertEquals(1134, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2122, 2122, fieldTypeLong0, 2122, 2122, byteArray0, byteOrder0, 2122);
      String string0 = tiffField0.toString();
      assertEquals(2122, tiffField0.getDirectoryType());
      assertEquals(2122, tiffField0.getSortHint());
      assertEquals("2122 (0x84a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (2122 IFD)", string0);
      assertEquals(2122, tiffField0.getOffset());
      assertEquals(8488, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, (-391), fieldTypeShort0, 2126L, 2126L, byteArray0, byteOrder0, (-391));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4252, tiffField0.getBytesLength());
      assertEquals((-391), tiffField0.getDirectoryType());
      assertEquals(2126, tiffField0.getOffset());
      assertEquals((-391), tiffField0.getSortHint());
      assertEquals(2126L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[61];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2345, 2147031069, fieldTypeByte0, 7918L, 0L, byteArray0, byteOrder0, 2345);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7918, tiffField0.getBytesLength());
      assertEquals(7918L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2147031069, tiffField0.getDirectoryType());
      assertEquals(2345, tiffField0.getSortHint());
      assertEquals(2345, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65535, 973, fieldTypeAscii0, 255L, 65535, byteArray0, byteOrder0, (-456));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(973, tiffField0.getDirectoryType());
      assertEquals((-456), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      String string0 = tiffField0.getValueDescription();
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(104, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(13, tiffField0.getTag());
      assertEquals(13L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[34];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 3971, fieldTypeAscii0, 1, 3999, byteArray0, byteOrder0, (-3016));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3971, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-3016), tiffField0.getSortHint());
      assertEquals(3999, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), (String) null);
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, (-1), (-1), byteArray0, (ByteOrder) null, (byte) (-31));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: null", string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, (FieldType) null, 1L, 37, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(278, 278, fieldTypeRational0, 517L, 517L, (byte[]) null, byteOrder0, 278);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5785, (-854), (FieldType) null, 0L, 20, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-854), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0L, tiffField0.getCount());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(5785, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1958), fieldTypeRational0, 1L, (-192L), (byte[]) null, byteOrder0, 2);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1210, 1210, fieldTypeFloat0, 1210, 1210, (byte[]) null, byteOrder0, 1210);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeShort0, 1L, (byte)6, byteArray0, (ByteOrder) null, (byte)6);
      tiffField0.getIntArrayValue();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, (-1), (-1), byteArray0, (ByteOrder) null, (-79));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1L), tiffField0.getCount());
      assertNull(string0);
  }
}
