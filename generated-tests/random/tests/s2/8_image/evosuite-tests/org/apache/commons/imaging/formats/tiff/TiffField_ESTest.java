/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 10:39:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2970, 2970, fieldTypeByte0, 2147483647L, (-27487790672L), byteArray0, byteOrder0, 2970);
      int int0 = tiffField0.getSortHint();
      assertEquals(2970, int0);
      assertEquals(2970, tiffField0.getDirectoryType());
      assertEquals((-1717986896), tiffField0.getOffset());
      assertEquals(2970, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 57, fieldTypeShort0, 57, 57, byteArray0, byteOrder0, (-1728));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1728), int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(256, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(830, tiffField0.getOffset());
      assertEquals((-1570), tiffField0.getTag());
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(105L, tiffField0.getCount());
      assertEquals(210, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)86;
      byteArray0[7] = (byte)42;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131), 4257, fieldTypeLong0, 4257, 2040L, byteArray0, byteOrder0, (-1763));
      tiffField0.getIntValueOrArraySum();
      assertEquals(4257L, tiffField0.getCount());
      assertEquals(2040, tiffField0.getOffset());
      assertEquals(4257, tiffField0.getDirectoryType());
      assertEquals((-1763), tiffField0.getSortHint());
      assertEquals((-2131), tiffField0.getTag());
      assertEquals(17028, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2, "-+jF>LA");
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-2146264178), fieldTypeRational0, 2233L, 2, byteArray0, byteOrder0, (byte)125);
      long long0 = tiffField0.getCount();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2233L, long0);
      assertEquals(2, tiffField0.getTag());
      assertEquals((-2146264178), tiffField0.getDirectoryType());
      assertEquals(125, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeDouble0, 1717986918, 1991L, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(1991, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "1!9jmI4wSKO72");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "1!9jmI4wSKO72");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(772, 772, fieldTypeFloat0, 1, 16352L, byteArray0, byteOrder0, (byte) (-122));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(4, byteArray1.length);
      assertEquals(772, tiffField0.getTag());
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(16352, tiffField0.getOffset());
      assertEquals(772, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(550, (-1789569705), fieldTypeByte0, (-1789569705), 550L, byteArray0, byteOrder0, (byte)77);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-432), fieldTypeFloat0, (-439L), (-439L), byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2091), (-2091), (FieldType) null, (-2091), 0L, byteArray0, byteOrder0, (-3909));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, 48323, fieldTypeLong0, (-2219L), (-3963L), byteArray0, byteOrder0, 2147441522);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2970, 2970, fieldTypeByte0, 2147483647L, (-27487790672L), byteArray0, byteOrder0, 2970);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1717986896), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(2970, tiffField0.getSortHint());
      assertEquals(2970, tiffField0.getTag());
      assertEquals(2970, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeDouble0, 1717986918, 1991L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(1991, tiffField0.getOffset());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(858993456, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1904), "JU?ZoqLKL\"A*k.q8");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1904), 1718, fieldTypeFloat0, 1718, 2636L, byteArray0, byteOrder0, 0);
      tiffField0.getTagInfo();
      assertEquals(2636, tiffField0.getOffset());
      assertEquals((-1904), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1718, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2970, 2970, fieldTypeByte0, 2147483647L, (-27487790672L), byteArray0, byteOrder0, 2970);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2131), 4257, fieldTypeLong0, 4257, 2040L, byteArray0, byteOrder0, (-1763));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2131), tiffField0.getTag());
      assertEquals(17028, tiffField0.getBytesLength());
      assertEquals((-1763), tiffField0.getSortHint());
      assertEquals(2040, tiffField0.getOffset());
      assertEquals(4257L, tiffField0.getCount());
      assertEquals(4257, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1038, 923, fieldTypeDouble0, 1038, (-739L), byteArray0, byteOrder0, (-2141518414));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@597433cf for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2146264178), "-+jF>LA");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-34);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-2146264178), fieldTypeRational0, 2233L, 2, byteArray0, byteOrder0, (byte)125);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2233L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals((-2146264178), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(17864, tiffField0.getBytesLength());
      assertEquals(125, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeShort0, 1L, 59, byteArray0, byteOrder0, (byte) (-69));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getOffset());
      assertEquals((-69), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(341, (-141), fieldTypeByte0, 4L, (byte) (-43), byteArray0, byteOrder0, (-2146264178));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2ede033 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(804, (-2147163747), fieldTypeFloat0, 7L, 1L, byteArray0, byteOrder0, (byte) (-95));
      tiffField0.getDoubleArrayValue();
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals(804, tiffField0.getTag());
      assertEquals(7L, tiffField0.getCount());
      assertEquals((-2147163747), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(519, 519, fieldTypeLong0, 519, (-16L), byteArray0, byteOrder0, (-767));
      tiffField0.getDoubleArrayValue();
      assertEquals(2076, tiffField0.getBytesLength());
      assertEquals(519, tiffField0.getTag());
      assertEquals((-767), tiffField0.getSortHint());
      assertEquals((-16), tiffField0.getOffset());
      assertEquals(519, tiffField0.getDirectoryType());
      assertEquals(519L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(830, tiffField0.getOffset());
      assertEquals(210, tiffField0.getBytesLength());
      assertEquals((-1570), tiffField0.getTag());
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(105L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2145, 2145, fieldTypeRational0, 2145, (-3688L), byteArray0, byteOrder0, 2188);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2145, tiffField0.getDirectoryType());
      assertEquals(2145, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2188, tiffField0.getSortHint());
      assertEquals((-3688), tiffField0.getOffset());
      assertEquals(17160, tiffField0.getBytesLength());
      assertEquals(2145L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 9248L, byteArray0, byteOrder0, 2347);
      tiffField0.getDoubleArrayValue();
      assertEquals(2347, tiffField0.getSortHint());
      assertEquals(9248, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 481L, 54L, byteArray0, byteOrder0, 4);
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(481L, tiffField0.getCount());
      assertEquals(1924, tiffField0.getBytesLength());
      assertEquals(54, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(105L, tiffField0.getCount());
      assertEquals(830, tiffField0.getOffset());
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals((-1570), tiffField0.getTag());
      assertEquals(210, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(915, "jW~$C]4UX()(n9J-]");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1263, 1263, fieldTypeRational0, 1542L, 0L, byteArray0, byteOrder0, 2734);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(275, "u<8m'^");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(336, 275, fieldTypeRational0, 275, (-1505L), byteArray0, byteOrder0, (byte)71);
      tiffField0.getIntArrayValue();
      assertEquals(2200, tiffField0.getBytesLength());
      assertEquals(336, tiffField0.getTag());
      assertEquals((-1505), tiffField0.getOffset());
      assertEquals(275L, tiffField0.getCount());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(275, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 9248L, byteArray0, byteOrder0, 2347);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(9248, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2347, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeDouble0, 1717986918, 1991L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@429b564f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147483646, "~o");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-114);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147483646, 2125344641, fieldTypeAscii0, 557L, 557L, byteArray0, byteOrder0, 50737);
      String string0 = tiffField0.getStringValue();
      assertEquals(557, tiffField0.getBytesLength());
      assertEquals(50737, tiffField0.getSortHint());
      assertEquals(557, tiffField0.getOffset());
      assertEquals(2147483646, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2125344641, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(218, "FlashpixVersion");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(218, 218, fieldTypeLong0, 570L, 218, byteArray0, byteOrder0, 136);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@7fd963c2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffff9de)", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(830, tiffField0.getOffset());
      assertEquals(105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50981, 1323, fieldTypeRational0, 1323, 50981, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(1323, tiffField0.getDirectoryType());
      assertEquals("ProfileLookTableDims", string0);
      assertEquals(50981, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50981, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(885, 0, fieldTypeDouble0, 1L, 0, (byte[]) null, byteOrder0, 885);
      StringWriter stringWriter0 = new StringWriter(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(131, "}p0Av2");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(131, 131, fieldTypeByte0, 8304L, 131, byteArray0, byteOrder0, 433);
      tiffField0.dump();
      assertEquals(433, tiffField0.getSortHint());
      assertEquals(8304, tiffField0.getBytesLength());
      assertEquals(131, tiffField0.getTag());
      assertEquals(8304L, tiffField0.getCount());
      assertEquals(131, tiffField0.getOffset());
      assertEquals(131, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte) (-110), "");
      TiffField tiffField0 = new TiffField(1701, 50, fieldTypeFloat0, 880L, (-1756L), byteArray0, (ByteOrder) null, 1701);
      String string0 = tiffField0.toString();
      assertEquals((-1756), tiffField0.getOffset());
      assertEquals(3520, tiffField0.getBytesLength());
      assertEquals("1701 (0x6a5: Unknown Tag): 0.0, 0.0 (880 )", string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1701, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): 0.0, 0.0 (50 Double)", string0);
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50711, 65535, fieldTypeLong0, 2783L, 2783L, byteArray0, byteOrder0, (-2203));
      String string0 = tiffField0.getValueDescription();
      assertEquals(50711, tiffField0.getTag());
      assertEquals(2783L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(11132, tiffField0.getBytesLength());
      assertEquals(2783, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2203), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 1027, fieldTypeShort0, 1027, 0, byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): 0, 0 (1027 Short)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1027, tiffField0.getDirectoryType());
      assertEquals(2054, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2, "-+jF>LA");
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-2146264178), fieldTypeRational0, 2233L, 2, byteArray0, byteOrder0, (byte)125);
      tiffField0.toString();
      assertEquals((-2146264178), tiffField0.getDirectoryType());
      assertEquals(2233L, tiffField0.getCount());
      assertEquals(125, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(17864, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(275, "u<8m'^");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(336, 275, fieldTypeRational0, 275, (-1505L), byteArray0, byteOrder0, (byte)71);
      String string0 = tiffField0.getValueDescription();
      assertEquals(336, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(275L, tiffField0.getCount());
      assertEquals((-1505), tiffField0.getOffset());
      assertEquals(2200, tiffField0.getBytesLength());
      assertEquals(275, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4960, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-114);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-78);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)50;
      byteArray0[7] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4960, 4960, fieldTypeAscii0, 4960, 4960, byteArray0, byteOrder0, 4960);
      tiffField0.toString();
      assertEquals(4960L, tiffField0.getCount());
      assertEquals(4960, tiffField0.getBytesLength());
      assertEquals(4960, tiffField0.getDirectoryType());
      assertEquals(4960, tiffField0.getSortHint());
      assertEquals(4960, tiffField0.getTag());
      assertEquals(4960, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte) (-11));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-432), fieldTypeFloat0, (-439L), (-439L), byteArray0, byteOrder0, 2);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-432), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-439), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1224), (-1224), fieldTypeLong0, 0L, (-264L), byteArray0, byteOrder0, (-384));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50710, 50710);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-384), tiffField0.getSortHint());
      assertEquals((-1224), tiffField0.getTag());
      assertEquals((-1224), tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-264), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeDouble0, 1717986918, 1991L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)1, (byte) (-11));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1991, tiffField0.getOffset());
      assertEquals(1717986918, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(1717986918L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-432), fieldTypeFloat0, (-439L), (-439L), byteArray0, byteOrder0, 2);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-432), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-439), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 9248L, byteArray0, byteOrder0, 2347);
      tiffField0.getFieldTypeName();
      assertEquals(9248, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2347, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(830L, tiffElement0.offset);
      assertEquals((-1570), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(105L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2970, 2970, fieldTypeByte0, 2147483647L, (-27487790672L), byteArray0, byteOrder0, 2970);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2970, int0);
      assertEquals((-1717986896), tiffField0.getOffset());
      assertEquals(2970, tiffField0.getTag());
      assertEquals(2970, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeDouble0, 1717986918, 1991L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(1991, tiffField0.getOffset());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1570), 105, fieldTypeShort0, 105, 830L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(210, tiffField0.getBytesLength());
      assertEquals("-1570 (0xfffff9de: Unknown Tag): ", string0);
      assertEquals(830, tiffField0.getOffset());
      assertEquals(105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeDouble0, 1717986918, 1991L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(858993456, tiffField0.getBytesLength());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(1991, tiffField0.getOffset());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals(1717986918, tiffField0.getTag());
  }
}
