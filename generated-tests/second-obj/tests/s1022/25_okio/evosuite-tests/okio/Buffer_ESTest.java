/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:18:00 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamConstants;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.util.LinkedList;
import java.util.Locale;
import java.util.zip.Deflater;
import java.util.zip.Inflater;
import okio.Buffer;
import okio.BufferedSink;
import okio.BufferedSource;
import okio.ByteString;
import okio.DeflaterSink;
import okio.GzipSink;
import okio.GzipSource;
import okio.HashingSink;
import okio.HashingSource;
import okio.InflaterSource;
import okio.Options;
import okio.Pipe;
import okio.RealBufferedSink;
import okio.RealBufferedSource;
import okio.Segment;
import okio.SegmentPool;
import okio.Sink;
import okio.Source;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.nio.cs.US_ASCII;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Buffer_ESTest extends Buffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.next();
      HashingSource.sha1(buffer_UnsafeCursor0.buffer);
      buffer_UnsafeCursor1.buffer.inputStream();
      assertEquals(0L, buffer_UnsafeCursor0.offset);
      
      buffer_UnsafeCursor1.close();
      assertEquals((-1L), buffer_UnsafeCursor1.offset);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      int int0 = (-5827);
      buffer1.writeHexadecimalUnsignedLong((-1L));
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.writeUtf8("myQyXL`w", 13, 534);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex > string.length: 534 > 8
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = 9;
      Buffer buffer1 = buffer0.writeByte(9);
      buffer1.writeShortLe(9);
      // Undeclared exception!
      try { 
        buffer0.readLongLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 8: 3
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Deflater deflater0 = new Deflater(6);
      DeflaterSink deflaterSink0 = new DeflaterSink((BufferedSink) buffer0, deflater0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(deflaterSink0);
      Buffer buffer1 = realBufferedSink0.buffer();
      long long0 = buffer1.indexOf((byte)16, 255L);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.readUtf8CodePoint();
      Locale locale0 = Locale.GERMAN;
      // Undeclared exception!
      try { 
        buffer0.indexOf((byte) (-65), (-631L), (-631L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size=0 fromIndex=-631 toIndex=-631
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      buffer0.readByteString();
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.readUtf8CodePoint();
      Locale locale0 = Locale.TAIWAN;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      try { 
        buffer_UnsafeCursor0.buffer.write((Source) buffer0, 1L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.sha256();
      // Undeclared exception!
      try { 
        buffer0.readHexadecimalUnsignedLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      long long0 = 19L;
      Pipe pipe0 = new Pipe(19L);
      Buffer buffer0 = pipe0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readByteString(19L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=19
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Pipe pipe0 = new Pipe(65536L);
      Buffer buffer0 = pipe0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      // Undeclared exception!
      try { 
        buffer0.readFully(buffer_UnsafeCursor0.buffer, (long) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer1.write((Source) buffer0, 3558L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Pipe pipe0 = new Pipe(4049L);
      Buffer buffer0 = pipe0.buffer;
      buffer0.indexOf((byte) (-81));
      // Undeclared exception!
      try { 
        buffer0.readByteArray((-3615L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-3615
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.readShortLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.clone();
      buffer1.timeout();
      // Undeclared exception!
      try { 
        buffer0.write((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      try { 
        buffer0.readUtf8LineStrict();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.close();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not attached to a buffer
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.size = 15L;
      buffer0.readAndWriteUnsafe();
      HashingSink hashingSink0 = HashingSink.sha256(buffer0);
      ByteString byteString0 = hashingSink0.hash();
      buffer0.rangeEquals(10L, byteString0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(999992L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Charset.defaultCharset();
      buffer0.readDecimalLong();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.close();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.sha256();
      HashingSink.hmacSha256(buffer0, byteString0);
      Charset.defaultCharset();
      Charset.defaultCharset();
      buffer0.rangeEquals((-2017L), byteString0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      buffer0.readAll(buffer_UnsafeCursor1.buffer);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.snapshot((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer0.readLongLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 8: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer0.readString((Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // charset == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)110);
      buffer0.readFrom((InputStream) bufferedInputStream0);
      // Undeclared exception!
      try { 
        buffer0.readFully((Buffer) null, (long) (byte)110);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Inflater inflater0 = new Inflater();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Charset charset0 = Charset.defaultCharset();
      buffer0.readString(charset0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      InputStream inputStream0 = realBufferedSource0.inputStream();
      realBufferedSource0.timeout();
      buffer0.sha1();
      try { 
        buffer0.readFrom(inputStream0, 3L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = (Buffer)buffer0.emit();
      // Undeclared exception!
      try { 
        buffer1.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Pipe pipe0 = new Pipe(109L);
      Buffer buffer0 = pipe0.buffer;
      HashingSource hashingSource0 = HashingSource.sha1(buffer0);
      ByteString byteString0 = hashingSource0.hash();
      HashingSink hashingSink0 = HashingSink.hmacSha512(buffer0, byteString0);
      ByteString byteString1 = hashingSink0.hash();
      buffer0.hmacSha1(byteString1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      // Undeclared exception!
      try { 
        buffer0.readUnsafe(buffer_UnsafeCursor1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffe
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.snapshot();
      // Undeclared exception!
      try { 
        buffer0.indexOf(byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bytes is empty
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.readUtf8CodePoint();
      buffer0.emit();
      buffer1.sha512();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2X^-{\"Z8(Wj");
      Object object0 = new Object();
      buffer0.snapshot();
      // Undeclared exception!
      try { 
        buffer0.readIntLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer0.writeDecimalLong(91808L);
      buffer1.flush();
      buffer_UnsafeCursor0.buffer.require(1L);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer0.snapshot();
      buffer0.indexOf(byteString0);
      // Undeclared exception!
      try { 
        buffer1.readLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 8: 1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      Buffer buffer2 = realBufferedSource0.buffer;
      buffer2.readUtf8Line();
      HashingSource hashingSource0 = HashingSource.sha256(buffer_UnsafeCursor0.buffer);
      HashingSource.sha1(hashingSource0);
      ByteString byteString0 = hashingSource0.hash();
      buffer0.indexOf(byteString0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      try { 
        buffer0.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer0.writeDecimalLong(91808L);
      buffer1.readIntLe();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      // Undeclared exception!
      try { 
        buffer0.hmacSha512((ByteString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer0.sha256();
      buffer1.writeUtf8CodePoint((byte)0);
      // Undeclared exception!
      try { 
        buffer1.readAll(buffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeDecimalLong(1000000L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.buffer.equals(realBufferedSink0);
      realBufferedSink0.buffer.snapshot();
      try { 
        realBufferedSink0.buffer.write((Source) buffer1, 972L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      buffer0.inputStream();
      byteArray0[0] = (byte)0;
      try { 
        buffer0.readFully(byteArray0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readUtf8Line();
      Charset.defaultCharset();
      int int0 = (-2114);
      Integer integer0 = new Integer((-2114));
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        buffer0.readFrom((InputStream) pipedInputStream0, (long) (-2114));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2114
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      buffer0.segmentSizes();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.next();
      Buffer buffer1 = buffer_UnsafeCursor1.buffer;
      // Undeclared exception!
      try { 
        buffer1.readByteArray((long) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer1.sha256();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      Charset charset0 = Charset.defaultCharset();
      buffer_UnsafeCursor0.buffer.readString(charset0);
      buffer_UnsafeCursor0.buffer.indexOfElement(byteString0);
      // Undeclared exception!
      try { 
        buffer1.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.next();
      HashingSource hashingSource0 = HashingSource.sha1(buffer_UnsafeCursor0.buffer);
      ByteString byteString0 = hashingSource0.hash();
      HashingSource hashingSource1 = HashingSource.hmacSha256(buffer0, byteString0);
      hashingSource1.hash();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.buffer.indexOfElement(byteString0, (long) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex < 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.seek((byte)0);
      // Undeclared exception!
      try { 
        buffer0.indexOf((byte)0, (long) (byte)0, (long) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size=0 fromIndex=0 toIndex=-1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      buffer0.sha256();
      BufferedSink bufferedSink0 = buffer0.emit();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(bufferedSink0);
      realBufferedSink0.writeInt((byte)0);
      Integer integer0 = new Integer(2145527834);
      buffer0.writeShortLe(1879048192);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte byte0 = ObjectStreamConstants.TC_ENDBLOCKDATA;
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      int int0 = ObjectStreamConstants.baseWireHandle;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer0.exhausted();
      buffer0.writeTo((OutputStream) pipedOutputStream0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Deflater deflater0 = new Deflater();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-8);
      Charset.defaultCharset();
      ByteString byteString0 = new ByteString(byteArray0);
      byteString0.md5();
      buffer0.hmacSha512(byteString0);
      // Undeclared exception!
      try { 
        buffer0.snapshot((int) (byte) (-8));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-8
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[7];
      Buffer buffer1 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Buffer buffer2 = buffer1.copyTo((OutputStream) pipedOutputStream0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readFully(buffer2, 8192L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.writableSegment((-2033));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Pipe pipe0 = new Pipe(6L);
      Buffer buffer0 = pipe0.buffer;
      try { 
        buffer0.require(9L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.seek((byte)0);
      buffer1.indexOf((byte)0, (long) (byte)0, (long) 1);
      // Undeclared exception!
      try { 
        buffer1.readFully(buffer0, (long) (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha256();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      buffer_UnsafeCursor0.buffer.readByte();
      buffer1.writeUtf8CodePoint((-1));
      buffer_UnsafeCursor0.buffer.segmentSizes();
      int int0 = ObjectStreamConstants.baseWireHandle;
      Buffer buffer2 = (Buffer)buffer0.emit();
      // Undeclared exception!
      try { 
        buffer0.write((Source) buffer2, (long) 8257536);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Pipe pipe0 = new Pipe(10L);
      Pipe.PipeSink pipe_PipeSink0 = pipe0.new PipeSink();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-122);
      pipe0.sourceClosed = true;
      byteArray0[3] = (byte) (-104);
      ByteString byteString0 = new ByteString(byteArray0);
      HashingSink hashingSink0 = HashingSink.hmacSha512(pipe_PipeSink0, byteString0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink0);
      Buffer buffer0 = realBufferedSink0.buffer;
      buffer0.inputStream();
      buffer0.writableSegment(2843);
      ByteString[] byteStringArray0 = new ByteString[0];
      Options options0 = Options.of(byteStringArray0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      realBufferedSource0.select(options0);
      buffer0.writeLongLe((byte)0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Pipe pipe0 = new Pipe(18L);
      Pipe.PipeSource pipe_PipeSource0 = pipe0.new PipeSource();
      GzipSource gzipSource0 = new GzipSource(pipe_PipeSource0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(gzipSource0);
      Buffer buffer0 = realBufferedSource0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      buffer1.emitCompleteSegments();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Pipe pipe0 = new Pipe(64L);
      Buffer buffer0 = pipe0.buffer;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte) (-92);
      buffer0.read(byteArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-49);
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer((-1976L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newSize < 0: -1976
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Charset.defaultCharset();
      Buffer buffer1 = buffer0.writeUtf8("ohRH");
      buffer0.readByteArray();
      // Undeclared exception!
      try { 
        buffer1.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[18];
      buffer0.write(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xU1W[xZm)9T.$");
      buffer0.sha1();
      buffer0.readUtf8CodePoint();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[11];
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer0.snapshot();
      buffer0.indexOfElement(byteString0);
      buffer1.readByte();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      buffer0.sha1();
      Charset.defaultCharset();
      byte byte0 = ObjectStreamConstants.TC_ARRAY;
      // Undeclared exception!
      try { 
        buffer1.writeUtf8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readUtf8Line(62L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=61 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[18];
      Buffer buffer1 = buffer0.write(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      ByteString byteString0 = buffer_UnsafeCursor0.buffer.sha1();
      Buffer buffer3 = buffer0.writeUtf8CodePoint((-1));
      buffer3.hmacSha512(byteString0);
      buffer1.readUtf8CodePoint();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(3);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      buffer0.sha256();
      try { 
        buffer0.readUtf8LineStrict(1307L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[13];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = buffer0.writeUtf8("");
      buffer2.readByte();
      Integer.getInteger("");
      ByteString byteString0 = new ByteString(byteArray0);
      try { 
        buffer1.readUtf8LineStrict((long) (byte)0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=120000000000000000000000\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha256();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer1.readByte();
      Buffer buffer2 = buffer1.writeUtf8CodePoint((byte)0);
      MockFile mockFile0 = new MockFile("sink == null");
      PipedInputStream pipedInputStream0 = new PipedInputStream(8230);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Buffer buffer3 = buffer0.copyTo((OutputStream) pipedOutputStream0);
      Charset.defaultCharset();
      buffer_UnsafeCursor0.buffer.sha256();
      buffer2.readByteArray();
      buffer3.hashCode();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.require((-834L));
      // Undeclared exception!
      try { 
        buffer0.readLongLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 8: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Pipe pipe0 = new Pipe(4048L);
      Buffer buffer1 = pipe0.buffer;
      Buffer buffer2 = buffer1.writeLongLe(1200L);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer1.readShort();
      Charset.defaultCharset();
      realBufferedSource0.buffer.hashCode();
      Buffer buffer3 = realBufferedSource0.buffer.writeDecimalLong(100000L);
      Integer integer0 = new Integer((short) (-20476));
      buffer0.readAndWriteUnsafe();
      try { 
        buffer3.write((Source) buffer2, 731L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      ByteString byteString0 = new ByteString((byte[]) null);
      ByteString[] byteStringArray0 = new ByteString[3];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString0;
      byteStringArray0[2] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      Buffer buffer3 = buffer_UnsafeCursor0.buffer;
      options0.indexOf(buffer3);
      // Undeclared exception!
      try { 
        buffer1.selectPrefix(options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteString byteString0 = buffer0.sha256();
      BufferedSink bufferedSink0 = buffer0.emit();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(bufferedSink0);
      ByteString[] byteStringArray0 = new ByteString[1];
      byteStringArray0[0] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      realBufferedSink0.buffer.selectPrefix(options0);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer0);
      Pipe pipe0 = new Pipe(100000L);
      Charset.defaultCharset();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.sha256();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.buffer.indexOf(byteString0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer1.readByte();
      buffer1.writeUtf8CodePoint((byte)0);
      buffer1.readUtf8CodePoint();
      // Undeclared exception!
      try { 
        Charset.forName("sink == null");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // sink == null
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteString[] byteStringArray0 = new ByteString[9];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      int int0 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer0 = new Buffer();
      buffer0.emit();
      buffer0.readUtf8Line();
      // Undeclared exception!
      try { 
        buffer0.readDecimalLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      buffer0.size = 15L;
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      ByteString byteString0 = hashingSource0.hash();
      buffer_UnsafeCursor1.buffer.indexOf(byteString0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.buffer.readUtf8Line();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Pipe pipe0 = new Pipe(2147483647L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.writeLongLe(2147483647L);
      buffer1.readShort();
      buffer1.sha512();
      Buffer buffer2 = new Buffer();
      HashingSink hashingSink0 = HashingSink.sha512(buffer2);
      hashingSink0.hash();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.readByteString();
      Buffer buffer3 = realBufferedSource0.buffer;
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      ByteString byteString0 = new ByteString((byte[]) null);
      buffer_UnsafeCursor0.buffer.rangeEquals(16711680L, byteString0, (int) (byte)0, (-1));
      buffer_UnsafeCursor0.resizeBuffer(1051L);
      buffer_UnsafeCursor0.buffer.sha256();
      Buffer buffer1 = new Buffer();
      // Undeclared exception!
      try { 
        buffer1.getByte(3285L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=3285 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Integer integer0 = new Integer(2121294821);
      Integer integer1 = new Integer(2121294821);
      Pipe pipe0 = new Pipe(1646L);
      Buffer buffer0 = pipe0.buffer;
      Charset.defaultCharset();
      buffer0.md5();
      buffer0.writeIntLe(2121294821);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")&.?");
      Buffer buffer0 = new Buffer();
      Deflater deflater0 = new Deflater();
      Integer integer0 = new Integer(70);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.resizeBuffer(1956L);
      buffer_UnsafeCursor0.buffer.readShort();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.writeString("&?YfymCIWncYR{Wrx%(", (-1073741823), 1908, (Charset) null);
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // beginIndex < 0: -1073741823
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Pipe pipe0 = new Pipe(2147483647L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.writeLongLe(1200L);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer1.readShort();
      Charset.defaultCharset();
      buffer0.hashCode();
      Buffer buffer2 = buffer0.writeDecimalLong(2147483647L);
      buffer2.size();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSource0.buffer.readAndWriteUnsafe();
      buffer_UnsafeCursor0.resizeBuffer(100000L);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor0.offset = 27L;
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=27 > size=0
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.sha256();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(8d+");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer1.readByte();
      buffer_UnsafeCursor0.resizeBuffer(131648L);
      Buffer buffer2 = buffer1.writeUtf8CodePoint((byte)0);
      Integer integer0 = new Integer((byte)0);
      MockFile mockFile0 = new MockFile("sink == null");
      mockFile0.setLastModified(98880L);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Locale locale0 = Locale.TAIWAN;
      buffer1.hmacSha256(byteString0);
      buffer0.clone();
      buffer1.segmentSizes();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sink == null");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer2.readFully(buffer1, 255L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      ByteString byteString0 = buffer1.sha256();
      Buffer buffer2 = buffer1.writeLongLe(1488L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      Segment segment0 = new Segment();
      buffer2.head = segment0;
      Deflater deflater0 = new Deflater();
      byte[] byteArray0 = new byte[10];
      byteArray0[9] = (byte)115;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer2);
      buffer1.readAndWriteUnsafe();
      Integer integer0 = new Integer((byte)115);
      realBufferedSource0.buffer.writeUtf8("");
      realBufferedSource0.buffer();
      // Undeclared exception!
      try { 
        buffer1.hmacSha512(byteString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      // Undeclared exception!
      try { 
        buffer1.writeTo((OutputStream) null, (-1965L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte((byte)45);
      buffer1.sha256();
      // Undeclared exception!
      try { 
        buffer0.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x2d
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.buffer.write((Source) buffer1, (long) (-5827));
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readUtf8LineStrict((-2034L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limit < 0: -2034
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.write((byte[]) null, (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("byteString == null");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      buffer0.readAndWriteUnsafe();
      buffer1.outputStream();
      byte[] byteArray0 = new byte[1];
      buffer1.read(byteArray0);
      buffer1.segmentSizes();
      buffer1.clone();
      buffer0.readShortLe();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.sha256();
      ByteString byteString0 = new ByteString(byteArray0);
      // Undeclared exception!
      try { 
        buffer1.readDecimalLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9] or '-' character but was 0x0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("byteString == null");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      buffer0.readAndWriteUnsafe();
      buffer1.outputStream();
      byte[] byteArray0 = new byte[1];
      buffer1.read(byteArray0);
      buffer1.segmentSizes();
      Buffer buffer2 = buffer1.clone();
      buffer2.hashCode();
      buffer2.writeIntLe((byte) (-10));
      buffer2.readByteString((long) 2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer0.snapshot();
      buffer0.indexOfElement(byteString0);
      buffer1.readByte();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      buffer0.sha1();
      Charset.defaultCharset();
      byte byte0 = ObjectStreamConstants.TC_ARRAY;
      // Undeclared exception!
      try { 
        buffer1.writeUtf8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte)3;
      byteArray0[4] = (byte)113;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = buffer1.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer1.sha256();
      buffer1.indexOf((byte)6, (long) (byte)8, (long) (byte)56);
      buffer1.writeUtf8CodePoint((byte)0);
      buffer0.indexOf(byteString0);
      Integer integer0 = new Integer((byte)113);
      buffer2.indexOfElement(byteString0, (long) (byte)56);
      ByteString byteString1 = new ByteString(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer1.rangeEquals(14L, byteString1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.sha256();
      buffer1.readByte();
      buffer1.indexOf((byte)8, (long) (byte)0, 70L);
      Buffer buffer2 = buffer1.writeUtf8CodePoint((byte)0);
      buffer2.indexOf(byteString0);
      Integer integer0 = new Integer((byte)0);
      buffer2.indexOfElement(byteString0, (long) (byte)0);
      ByteString byteString1 = new ByteString(byteArray0);
      ByteString[] byteStringArray0 = new ByteString[0];
      Options options0 = Options.of(byteStringArray0);
      // Undeclared exception!
      try { 
        options0.get(128);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 128
         //
         verifyException("okio.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Pipe pipe0 = new Pipe(2147483647L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.writeLongLe(1200L);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer1.readShort();
      Charset.defaultCharset();
      buffer0.hashCode();
      Buffer buffer2 = buffer0.writeDecimalLong(2147483647L);
      Integer integer0 = new Integer((short) (-20476));
      buffer2.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer0.write((Source) buffer1, 1L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      HashingSink hashingSink0 = HashingSink.sha256(buffer0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.writableSegment(65225);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Pipe pipe0 = new Pipe(1582L);
      Sink sink0 = pipe0.sink();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(sink0);
      realBufferedSink0.writeLong(32L);
      Buffer buffer0 = realBufferedSink0.buffer;
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byteArray0[0] = (byte)106;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteString byteString0 = new ByteString(byteArray0);
      buffer0.indexOf(byteString0, (long) (byte)106);
      realBufferedSink0.buffer.indexOf(byteString0);
      realBufferedSink0.buffer.timeout();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte) (-39);
      ByteString byteString0 = new ByteString(byteArray0);
      HashingSink hashingSink0 = HashingSink.hmacSha1(buffer0, byteString0);
      ByteString byteString1 = hashingSink0.hash();
      HashingSource hashingSource0 = HashingSource.hmacSha1(buffer0, byteString1);
      ByteString byteString2 = hashingSource0.hash();
      // Undeclared exception!
      try { 
        buffer0.indexOf(byteString2, (long) (byte) (-39));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex < 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      long long0 = 2147483647L;
      Pipe pipe0 = new Pipe(2147483647L);
      Buffer buffer0 = pipe0.buffer;
      buffer0.writeLongLe(1189L);
      buffer0.readUtf8CodePoint();
      // Undeclared exception!
      try { 
        Charset.forName("");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8CodePoint(65225);
      // Undeclared exception!
      try { 
        buffer0.readByteArray(10L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=3 offset=0 byteCount=10
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Charset.defaultCharset();
      buffer0.writeUtf8CodePoint(8192);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-29);
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.sha256();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.seek((byte) (-29));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=-29 > size=1
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      Integer integer0 = new Integer((-1));
      HashingSource.sha1(buffer_UnsafeCursor0.buffer);
      buffer_UnsafeCursor1.seek((-1));
      buffer_UnsafeCursor1.buffer.inputStream();
      buffer_UnsafeCursor1.close();
      // Undeclared exception!
      try { 
        buffer0.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      buffer0.write(byteArray0);
      ByteString byteString0 = buffer0.snapshot();
      ByteString[] byteStringArray0 = new ByteString[7];
      byteStringArray0[0] = byteString0;
      byteStringArray0[3] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[6] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer0.select(options0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.size = 420L;
      buffer0.writeByte(53);
      buffer0.readHexadecimalUnsignedLong();
      // Undeclared exception!
      try { 
        buffer0.copyTo((OutputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(1189L);
      Buffer buffer1 = new Buffer();
      buffer1.writeUtf8("@iGQ^K@gaA~");
      Charset.defaultCharset();
      buffer0.request(10L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer((-208L));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resizeBuffer() only permitted for read/write buffers
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.readUtf8Line();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      int int0 = 1705;
      // Undeclared exception!
      try { 
        realBufferedSink0.writeUtf8((String) null, 1705, 1705);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // string == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer0.sha256();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Charset charset0 = Charset.defaultCharset();
      buffer1.readString(charset0);
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      boolean boolean0 = realBufferedSource0.closed;
      MockFile mockFile0 = new MockFile("\u0000", "ELC| e[v~SD!");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer buffer2 = realBufferedSource0.buffer();
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(buffer2);
      // Undeclared exception!
      try { 
        realBufferedSource1.buffer.copyTo((Buffer) null, 71776119061217280L, 71776119061217280L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer0.writeString("A:@JNR@d", 621, 621, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex > string.length: 621 > 8
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.next();
      buffer0.readAll(buffer_UnsafeCursor1.buffer);
      HashingSource hashingSource0 = HashingSource.sha1(buffer_UnsafeCursor0.buffer);
      hashingSource0.hash();
      HashingSink.sha1(buffer0);
      buffer_UnsafeCursor1.buffer.segmentSizes();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Charset.defaultCharset();
      buffer0.sha256();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.resizeBuffer(8192L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resizeBuffer() only permitted for read/write buffers
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)113;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = buffer1.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer1.sha256();
      buffer1.indexOf((byte)40, (long) (byte)8, (long) (byte)56);
      buffer1.writeUtf8CodePoint((byte)0);
      buffer0.indexOf(byteString0);
      Integer integer0 = new Integer((byte)113);
      buffer2.indexOfElement(byteString0, (long) (byte)56);
      ByteString byteString1 = new ByteString(byteArray0);
      buffer1.request(3L);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[8];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = buffer1.writeLongLe(999984L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      Buffer buffer3 = (Buffer)realBufferedSink0.buffer.write((Source) buffer2, 1L);
      buffer3.writeShort(15);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",x%@b}Gqu3-/pCfDo3x");
      // Undeclared exception!
      try { 
        Charset.forName("");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = buffer0.clone();
      Buffer buffer3 = buffer2.writeLongLe(1488L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer3);
      Deflater deflater0 = new Deflater();
      Buffer buffer4 = (Buffer)realBufferedSink0.buffer.write((Source) buffer3, 3L);
      DeflaterSink deflaterSink0 = new DeflaterSink((BufferedSink) realBufferedSink0, deflater0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer2.readAndWriteUnsafe();
      buffer_UnsafeCursor0.seek(0L);
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      MockFile mockFile0 = new MockFile("ATKnvHhqy[6h", "s9~");
      buffer4.md5();
      realBufferedSink0.buffer.sha512();
      buffer_UnsafeCursor0.buffer.exhausted();
      buffer1.writeDecimalLong(3L);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      HashingSource.sha1(buffer1);
      buffer1.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer2 = buffer1.writeDecimalLong(100000000000L);
      buffer2.inputStream();
      Charset.defaultCharset();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor1.resizeBuffer((byte)0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource((BufferedSource) buffer0, inflater0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(inflaterSource0);
      realBufferedSource0.buffer.clear();
      buffer0.readAll(realBufferedSource0.buffer);
      buffer0.buffer();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      ByteString[] byteStringArray0 = new ByteString[0];
      Options options0 = Options.of(byteStringArray0);
      buffer1.select(options0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      Buffer buffer2 = realBufferedSource0.buffer;
      buffer2.md5();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer0.readAll(buffer_UnsafeCursor0.buffer);
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      Buffer buffer2 = buffer1.writeDecimalLong((-1072L));
      // Undeclared exception!
      try { 
        buffer1.copyTo(buffer2, (-123L), (-1L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=5 offset=-123 byteCount=-1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer0.sha256();
      HashingSource.md5(buffer0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@p4N>Zg&,");
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.toString();
      buffer1.skip((-104L));
      buffer1.rangeEquals(1755L, byteString0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      BufferedSink bufferedSink0 = buffer0.emit();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(bufferedSink0);
      Buffer buffer1 = realBufferedSink0.buffer();
      buffer1.writeDecimalLong(6L);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      HashingSink.sha512(buffer0);
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      Charset.defaultCharset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio/bytes is empty");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      buffer0.writeDecimalLong((byte)34);
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      buffer0.equals(buffer1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(338);
      buffer1.sha256();
      // Undeclared exception!
      try { 
        buffer0.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x52
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeByte(108);
      buffer0.sha256();
      // Undeclared exception!
      try { 
        buffer0.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x6c
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Charset.defaultCharset();
      Buffer buffer1 = buffer0.writeUtf8("ohRH");
      buffer1.readByte();
      int int0 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer2 = buffer1.clone();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer2);
      byte byte0 = ObjectStreamConstants.TC_PROXYCLASSDESC;
      Buffer buffer3 = realBufferedSource0.buffer;
      buffer0.exhausted();
      // Undeclared exception!
      try { 
        buffer1.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x68
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha256();
      buffer1.readAndWriteUnsafe();
      buffer1.readByte();
      Integer integer0 = new Integer((byte)0);
      Locale locale0 = Locale.TAIWAN;
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[1] = object0;
      Object object1 = new Object();
      Charset charset0 = Charset.defaultCharset();
      buffer0.writeString("sink == null", charset0);
      // Undeclared exception!
      try { 
        buffer1.readFrom((InputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // in == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = new Buffer();
      long long0 = 1000000L;
      Buffer buffer2 = buffer0.writeLongLe(1000000L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      Buffer buffer3 = realBufferedSink0.buffer.write(byteArray0);
      Buffer buffer4 = (Buffer)realBufferedSink0.buffer.write((Source) buffer2, 3L);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer3);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      RealBufferedSink realBufferedSink2 = new RealBufferedSink(buffer1);
      HashingSource.sha1(buffer1);
      realBufferedSink2.buffer.clear();
      realBufferedSource0.buffer.writeInt(1431655765);
      ByteString byteString0 = buffer0.md5();
      realBufferedSink0.buffer.indexOf(byteString0, 3L);
      Object object0 = new Object();
      buffer4.readIntLe();
      buffer2.writeDecimalLong(698L);
      MockPrintStream mockPrintStream0 = new MockPrintStream(")3ZH<~rDKE#Gq4 4c");
      // Undeclared exception!
      try { 
        realBufferedSink1.buffer.writeTo((OutputStream) mockPrintStream0, 1000000L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=1000000
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer0.readUtf8Line();
      Buffer buffer1 = buffer0.writeUtf8("wB");
      Charset.defaultCharset();
      Pipe pipe0 = new Pipe(1L);
      buffer0.readShort();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.seek((-1));
      // Undeclared exception!
      try { 
        buffer1.write((ByteString) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteString == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer1.sha256();
      Charset.defaultCharset();
      ByteString.decodeBase64("");
      Buffer buffer2 = buffer0.writeUtf8("'!h7H");
      buffer2.readByte();
      Integer.getInteger("'!h7H");
      buffer0.indexOf(byteString0);
      ByteString[] byteStringArray0 = new ByteString[6];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString0;
      byteStringArray0[2] = byteString0;
      byteStringArray0[3] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[5] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer0.select(options0);
      Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer2.readUtf8Line((-1730L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=6 offset=0 byteCount=-1730
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      long long0 = 2076L;
      Pipe pipe0 = new Pipe(2076L);
      Buffer buffer0 = pipe0.buffer;
      String string0 = "fF!x:_bf4P[Q";
      int int0 = (-2156);
      // Undeclared exception!
      try { 
        buffer0.writeUtf8("fF!x:_bf4P[Q", 0, (-2156));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex < beginIndex: -2156 < 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      buffer0.write(byteArray0);
      Buffer buffer1 = buffer0.clone();
      long long0 = 1488L;
      Buffer buffer2 = buffer1.writeLongLe(1488L);
      buffer1.readUtf8Line();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      buffer2.writeUtf8("");
      Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer2.readHexadecimalUnsignedLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = buffer0.clone();
      Buffer buffer3 = buffer2.writeLongLe(1488L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer3);
      Deflater deflater0 = new Deflater();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer2);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      Buffer buffer4 = realBufferedSource0.buffer;
      Buffer buffer5 = buffer3.writeInt(5);
      ByteString byteString0 = buffer2.md5();
      buffer5.indexOf(byteString0, (long) 5);
      Charset.defaultCharset();
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(buffer1);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = new Buffer.UnsafeCursor();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-21);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      ByteString byteString0 = new ByteString((byte[]) null);
      buffer_UnsafeCursor0.buffer.rangeEquals(16711680L, byteString0, (int) (byte) (-21), (-1));
      buffer0.readUtf8Line();
      buffer_UnsafeCursor0.resizeBuffer(1051L);
      Pipe pipe0 = null;
      try {
        pipe0 = new Pipe((-2109L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxBufferSize < 1: -2109
         //
         verifyException("okio.Pipe", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteString byteString0 = realBufferedSource0.buffer.sha1();
      Buffer buffer1 = realBufferedSource0.buffer.readFrom((InputStream) pipedInputStream0, (long) (byte)0);
      hashingSource0.toString();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      realBufferedSink0.buffer();
      HashingSource.hmacSha256(buffer1, byteString0);
      buffer0.sha256();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Charset.defaultCharset();
      buffer1.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer2 = buffer0.writeDecimalLong((byte)0);
      realBufferedSource0.buffer.inputStream();
      Charset.defaultCharset();
      Charset charset0 = Charset.defaultCharset();
      buffer2.writeString("JoHOR", charset0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeDecimalLong(1000000L);
      buffer1.equals(buffer0);
      // Undeclared exception!
      try { 
        buffer0.readByteArray(4278190080L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=7 offset=0 byteCount=4278190080
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Pipe pipe0 = new Pipe(2268L);
      Buffer buffer0 = pipe0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      Buffer buffer1 = buffer_UnsafeCursor1.buffer;
      // Undeclared exception!
      try { 
        buffer1.writeUtf8("m", (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // beginIndex < 0: -1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.size = 420L;
      Buffer buffer1 = buffer0.writeByte(53);
      // Undeclared exception!
      try { 
        buffer1.readShortLe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8CodePoint(1654);
      buffer1.readUtf8CodePoint();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      // Undeclared exception!
      try { 
        buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffer
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      buffer0.write(byteArray0);
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = buffer1.writeLongLe(1488L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      Deflater deflater0 = new Deflater();
      Buffer buffer3 = (Buffer)realBufferedSink0.buffer.write((Source) buffer2, 3L);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer1);
      buffer3.readUtf8CodePoint();
      // Undeclared exception!
      try { 
        buffer3.readIntLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 2
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = buffer0.writeLongLe(1000000L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      Buffer buffer3 = realBufferedSink0.buffer.write(byteArray0);
      Buffer buffer4 = (Buffer)realBufferedSink0.buffer.write((Source) buffer2, 3L);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer3);
      RealBufferedSink realBufferedSink2 = new RealBufferedSink(buffer4);
      // Undeclared exception!
      try { 
        realBufferedSink0.buffer.write((Source) buffer4, 1000000L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer((byte)0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      // Undeclared exception!
      try { 
        buffer0.write((Buffer) null, (-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      buffer_UnsafeCursor0.buffer.readByte();
      buffer1.writeUtf8CodePoint((-1));
      buffer1.readUtf8CodePoint();
      buffer0.emit();
      buffer_UnsafeCursor0.buffer.writeDecimalLong(1907L);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2X^-{\"Z8(Wj");
      Locale locale0 = Locale.TAIWAN;
      buffer_UnsafeCursor0.next();
      Object object0 = new Object();
      buffer0.readIntLe();
      // Undeclared exception!
      try { 
        buffer1.readAndWriteUnsafe(buffer_UnsafeCursor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffer
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      Buffer buffer1 = realBufferedSource0.buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Buffer buffer2 = realBufferedSink0.buffer;
      realBufferedSink0.writeInt(48);
      buffer2.indexOf((byte)67, 637L);
      realBufferedSource0.buffer.segmentSizes();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer0.readString(32L, charset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=32
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = 9;
      Buffer buffer1 = new Buffer();
      long long0 = new Integer(9);
      buffer0.equals(buffer1);
      // Undeclared exception!
      try { 
        buffer0.readIntLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer.writeUtf8("3!u7H");
      MockFile mockFile0 = new MockFile("3!u7H");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      Buffer buffer2 = buffer1.writeTo((OutputStream) mockFileOutputStream0);
      HashingSink.sha512(buffer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashingSource hashingSource0 = HashingSource.md5(buffer2);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      Buffer buffer3 = realBufferedSource0.buffer;
      realBufferedSource0.readByteString();
      buffer3.clear();
      Charset.defaultCharset();
      realBufferedSource0.buffer.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio/bytes is empty");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      buffer3.toString();
      buffer3.writeUtf8("3!u7H");
      buffer0.writeDecimalLong((byte)34);
      buffer2.writeDecimalLong((-1));
      Buffer buffer4 = realBufferedSource0.buffer;
      buffer0.equals(buffer4);
      // Undeclared exception!
      try { 
        buffer0.readUtf8Line((-363L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=4 offset=0 byteCount=-363
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer1.sha256();
      Charset.defaultCharset();
      Buffer buffer2 = buffer0.writeUtf8("'!h7H");
      buffer2.readByte();
      Integer integer0 = new Integer((-131));
      buffer0.indexOf(byteString0);
      ByteString[] byteStringArray0 = new ByteString[6];
      byteStringArray0[0] = byteString0;
      byteStringArray0[2] = byteString0;
      byteStringArray0[3] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[5] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      // Undeclared exception!
      try { 
        buffer2.selectPrefix(options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      long long0 = 91808L;
      Buffer buffer1 = buffer_UnsafeCursor0.buffer.writeDecimalLong(579L);
      // Undeclared exception!
      try { 
        buffer1.readIntLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 3
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer2 = new Buffer();
      buffer2.writeUtf8CodePoint(65271);
      Pipe pipe0 = new Pipe(65271);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      long long0 = buffer_UnsafeCursor0.offset;
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.buffer();
      Buffer buffer3 = buffer1.writeDecimalLong((-1135L));
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      buffer0.segmentSizes();
      MockFile mockFile0 = new MockFile((String) null, "A9*'A\"uQoi.2(W");
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(realBufferedSource0);
      realBufferedSink0.buffer();
      ByteString byteString0 = new ByteString(byteArray0);
      MockFile mockFile1 = new MockFile("lI ", "base64 == null");
      ByteString byteString1 = buffer0.md5();
      ByteString[] byteStringArray0 = new ByteString[2];
      byteStringArray0[0] = byteString1;
      byteStringArray0[0] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      realBufferedSource0.select(options0);
      // Undeclared exception!
      try { 
        buffer3.readInt();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[8];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = new Buffer();
      buffer0.readLong();
      HashingSource.sha256(buffer1);
      MockURI.URI("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer2.toString();
      Locale locale0 = Locale.TAIWAN;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[14];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Buffer buffer2 = buffer0.writeLongLe((-2770L));
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer_UnsafeCursor0.buffer);
      realBufferedSink0.buffer.write((Source) buffer2, (-2770L));
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer1.readUnsafe();
      Segment segment0 = buffer_UnsafeCursor1.buffer.head;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      boolean boolean0 = realBufferedSource0.closed;
      buffer_UnsafeCursor1.buffer.readLong();
      ByteString byteString0 = realBufferedSource0.readByteString();
      realBufferedSink0.write(byteString0);
      realBufferedSink0.outputStream();
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.copyTo(buffer1, 0L, 1123L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=1123
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[18];
      Buffer buffer1 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xU1W[xZm)9T.$");
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      buffer0.sha1();
      buffer2.readByteArray();
      buffer2.writeUtf8CodePoint((-533));
      try { 
        buffer0.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // size < 3: 1 (to read code point prefixed 0xffffffeb)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Pipe pipe0 = new Pipe(65536L);
      Buffer buffer0 = pipe0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      Buffer buffer2 = buffer1.writeDecimalLong(65536L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      Buffer buffer3 = realBufferedSink0.buffer;
      buffer2.indexOf((byte) (-18), 65536L, 65536L);
      buffer0.writeDecimalLong((-1065L));
      buffer0.readByte();
      realBufferedSink0.buffer();
      buffer2.readDecimalLong();
      // Undeclared exception!
      try { 
        realBufferedSink0.buffer.readAndWriteUnsafe(buffer_UnsafeCursor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffer
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = new Buffer();
      Buffer buffer3 = buffer2.writeLongLe(1000000L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer3);
      realBufferedSink0.buffer.write(byteArray0);
      Buffer buffer4 = (Buffer)realBufferedSink0.buffer.write((Source) buffer3, 3L);
      ByteString byteString0 = new ByteString(byteArray0);
      Buffer buffer5 = realBufferedSink0.buffer();
      buffer5.readUtf8Line();
      buffer2.readUtf8Line();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer3);
      Buffer buffer6 = realBufferedSink0.buffer;
      realBufferedSink0.writeIntLe((-258));
      US_ASCII uS_ASCII0 = (US_ASCII)Charset.defaultCharset();
      buffer2.writeString("\u0000@B\u000F", (Charset) uS_ASCII0);
      buffer1.write((Source) buffer4, (-1L));
      buffer6.writeByte(1282);
      realBufferedSink0.buffer.hashCode();
      HashingSource.md5(buffer4);
      buffer2.indexOfElement(byteString0, 3L);
      // Undeclared exception!
      try { 
        buffer3.readUtf8Line((-3859L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=4 offset=0 byteCount=-3859
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.sha256();
      HashingSource hashingSource0 = HashingSource.hmacSha256(buffer0, byteString0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer buffer1 = new Buffer();
      // Undeclared exception!
      try { 
        buffer1.read((Buffer) null, 65533L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // sink == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeByte(339);
      Integer integer0 = new Integer(339);
      buffer0.buffer();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.writeString("", (Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // charset == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(338);
      Buffer buffer2 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Buffer buffer3 = realBufferedSink0.buffer;
      realBufferedSink0.buffer.indexOf((byte) (-18), 8L, 1730L);
      buffer1.writeDecimalLong(91);
      buffer1.readByte();
      buffer0.readDecimalLong();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      // Undeclared exception!
      try { 
        buffer0.readIntLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteString byteString0 = realBufferedSource0.buffer.sha1();
      Buffer buffer1 = realBufferedSource0.buffer.readFrom((InputStream) pipedInputStream0, (long) (byte)0);
      hashingSource0.toString();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Buffer buffer2 = realBufferedSink0.buffer();
      HashingSource.hmacSha256(buffer1, byteString0);
      ByteString byteString1 = buffer0.sha256();
      HashingSink hashingSink0 = HashingSink.sha512(buffer2);
      ByteString byteString2 = hashingSink0.hash();
      HashingSink.hmacSha512(buffer2, byteString2);
      hashingSink0.hash();
      realBufferedSink0.write(byteString1);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSink0.buffer.readAndWriteUnsafe();
      buffer_UnsafeCursor0.resizeBuffer(0L);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer0.toString();
      Locale locale0 = Locale.TAIWAN;
      buffer_UnsafeCursor0.next();
      Object object0 = new Object();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      buffer_UnsafeCursor0.buffer.writeDecimalLong((-72057594037927925L));
      buffer1.inputStream();
      Charset.defaultCharset();
      buffer0.outputStream();
      buffer_UnsafeCursor0.buffer.readInt();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = buffer0.writeDecimalLong((-1152921504606846976L));
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)113;
      byteArray0[4] = (byte)113;
      realBufferedSink0.write(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      Buffer buffer2 = realBufferedSource0.buffer();
      buffer2.clear();
      Charset.defaultCharset();
      realBufferedSink0.writeByte((-1554));
      realBufferedSink0.writeShortLe((-1554));
      HashingSink.sha512(realBufferedSink0);
      buffer1.readDecimalLong();
      buffer0.close();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.writeLongLe(1000000L);
      Buffer buffer1 = realBufferedSink0.buffer;
      realBufferedSink0.buffer.readLong();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer0);
      buffer0.writeDecimalLong(4630279859564707840L);
      Buffer buffer2 = realBufferedSink1.buffer;
      buffer2.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        realBufferedSink1.buffer.readInt();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer1.readByte();
      ByteString byteString0 = new ByteString(byteArray0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      realBufferedSink0.writeDecimalLong((byte)0);
      realBufferedSink0.buffer.readUtf8Line();
      realBufferedSink0.buffer.readUtf8Line();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      Charset.defaultCharset();
      realBufferedSink0.buffer.hashCode();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.writeDecimalLong(100000000L);
      buffer0.size();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer2);
      realBufferedSink1.buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer2.readUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.resizeBuffer((-3101L));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resizeBuffer() only permitted for read/write buffers
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      realBufferedSource0.buffer.writeHexadecimalUnsignedLong((byte)0);
      realBufferedSource0.buffer.sha1();
      realBufferedSource0.buffer.readFrom((InputStream) pipedInputStream0, (long) (byte)0);
      hashingSource0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HashingSource(okio.Buffer@0000000001)");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer2 = realBufferedSource0.buffer;
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer2.writeString("HashingSource(okio.Buffer@0000000001)", 1842, (int) (byte)0, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex < beginIndex: 0 < 1842
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer0.snapshot();
      ByteString[] byteStringArray0 = new ByteString[7];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString0;
      byteStringArray0[3] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[6] = byteString0;
      Options.of(byteStringArray0);
      int int0 = 414;
      buffer1.writeUtf8CodePoint(414);
      buffer0.readUtf8CodePoint();
      BufferedSink bufferedSink0 = buffer1.emit();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(bufferedSink0);
      realBufferedSink0.write(byteStringArray0[4]);
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(buffer0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 414);
      realBufferedSource1.buffer.equals(byteArrayInputStream0);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer0);
      // Undeclared exception!
      try { 
        realBufferedSink0.write((ByteString) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteString == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[4];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      realBufferedSink0.buffer.write(byteArray0);
      realBufferedSink0.buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer3 = realBufferedSink0.buffer;
      buffer1.indexOf((byte) (-18), 3L, 1000000L);
      Buffer buffer4 = realBufferedSink0.buffer;
      HashingSink.sha512(buffer3);
      HashingSink.sha1(buffer3);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer3);
      realBufferedSource0.buffer();
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.readShort();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.offset = 442L;
      buffer_UnsafeCursor0.buffer.readByte();
      Buffer buffer2 = buffer1.writeUtf8CodePoint((-1));
      Buffer buffer3 = buffer_UnsafeCursor0.buffer.clone();
      ByteString byteString0 = new ByteString(byteArray0);
      HashingSource hashingSource0 = HashingSource.hmacSha1(buffer2, byteString0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      HashingSource.sha256(buffer3);
      ByteString byteString1 = hashingSource0.hash();
      Charset charset0 = Charset.defaultCharset();
      byteString1.string(charset0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.writeUtf8("\uFFFD\uFFFD\u001D\u001B\u0018\uFFFDl\b2K}d\uFFFD\u001F\uFFFDcpi\u000E\u001D");
      realBufferedSink0.buffer.sha1();
      realBufferedSource0.buffer.readByteArray();
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.readLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 8: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Deflater deflater0 = new Deflater();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-8);
      Charset charset0 = Charset.defaultCharset();
      ByteString byteString0 = new ByteString(byteArray0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString byteString1 = realBufferedSource0.readByteString();
      byteString0.indexOf(byteString1, (int) (byte) (-8));
      byteString0.md5();
      buffer0.hmacSha512(byteString0);
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.writeString((String) null, (-832), 1932735283, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // string == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      byte byte0 = ObjectStreamConstants.TC_EXCEPTION;
      Buffer buffer1 = buffer_UnsafeCursor0.buffer.writeUtf8("'!h7H");
      MockFile mockFile0 = new MockFile("bytes is empty");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      buffer1.writeTo((OutputStream) mockFileOutputStream0);
      HashingSink.sha512(buffer0);
      buffer_UnsafeCursor0.close();
      mockFileOutputStream0.getChannel();
      Integer integer0 = new Integer((byte)123);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer((-1L));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not acquired
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLongLe(1000000L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H]]&u/f$a%p~]2H\"&G");
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Buffer buffer2 = realBufferedSink0.buffer;
      Buffer buffer3 = (Buffer)realBufferedSink0.buffer.write((Source) buffer1, 3L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      buffer3.toString();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.next();
      Object object0 = new Object();
      int int0 = ObjectStreamConstants.baseWireHandle;
      US_ASCII uS_ASCII0 = (US_ASCII)Charset.defaultCharset();
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      String string0 = byteString0.string(uS_ASCII0);
      buffer1.sha1();
      buffer_UnsafeCursor0.close();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(realBufferedSink0);
      realBufferedSink1.writeUtf8(string0);
      RealBufferedSink realBufferedSink2 = new RealBufferedSink(buffer1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      HashingSink.hmacSha256(buffer0, byteString0);
      // Undeclared exception!
      try { 
        realBufferedSink1.buffer.readUtf8LineStrict((long) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limit < 0: -1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[6];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer buffer2 = new Buffer();
      Buffer buffer3 = buffer1.writeLongLe(1000000L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer3);
      Buffer buffer4 = realBufferedSink0.buffer.write(byteArray0);
      Buffer buffer5 = realBufferedSink0.buffer();
      GzipSink gzipSink0 = new GzipSink(buffer5);
      HashingSink hashingSink0 = HashingSink.sha512(buffer5);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer5);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      BufferedSink bufferedSink0 = realBufferedSink1.writeLong(1856L);
      HashingSink hashingSink1 = HashingSink.sha512(buffer0);
      ByteString byteString0 = hashingSink0.hash();
      ByteString byteString1 = buffer1.hmacSha512(byteString0);
      ByteString byteString2 = hashingSink1.hash();
      HashingSink.hmacSha512(buffer4, byteString2);
      Buffer buffer6 = realBufferedSink0.buffer;
      RealBufferedSink realBufferedSink2 = new RealBufferedSink(buffer2);
      BufferedSink bufferedSink1 = realBufferedSink2.write(byteString1);
      Segment segment0 = new Segment(byteArray0, (-1073741823), (-1073741823), false, false);
      ((RealBufferedSink) bufferedSink1).buffer.head = segment0;
      RealBufferedSink realBufferedSink3 = new RealBufferedSink(bufferedSink0);
      buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        realBufferedSink2.buffer.readInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1073741823
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer1.sha256();
      Charset.defaultCharset();
      ByteString.decodeBase64("");
      Buffer buffer2 = buffer0.writeUtf8("'!h7H");
      buffer2.readByte();
      Integer.getInteger("'!h7H");
      buffer0.indexOf(byteString0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      BufferedSink bufferedSink0 = realBufferedSink0.write(byteString0);
      HashingSink hashingSink0 = HashingSink.hmacSha512(bufferedSink0, byteString0);
      hashingSink0.hash();
      hashingSink0.hash();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer1);
      RealBufferedSink realBufferedSink2 = new RealBufferedSink(realBufferedSink1);
      Buffer buffer3 = realBufferedSink1.buffer.writeDecimalLong(2640L);
      InputStream inputStream0 = buffer1.inputStream();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer3);
      realBufferedSource0.readByteString();
      Charset charset0 = Charset.defaultCharset();
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(realBufferedSink2.buffer);
      Buffer buffer4 = realBufferedSource1.buffer;
      buffer4.writeString("source == null", charset0);
      Buffer buffer5 = realBufferedSink0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer5.writeLong((-1L));
      buffer_UnsafeCursor0.buffer.readUtf8Line();
      buffer1.readFrom(inputStream0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8CodePoint(1654);
      buffer1.readUtf8CodePoint();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.read(buffer0, (long) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      byte[] byteArray0 = new byte[4];
      Buffer buffer2 = realBufferedSink0.buffer.writeDecimalLong(10000000000000L);
      realBufferedSink0.write(byteArray0);
      buffer0.segmentSizes();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashingSource.sha1(buffer0);
      buffer2.clear();
      Charset.defaultCharset();
      buffer0.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer3 = buffer2.writeUtf8("T4fd");
      Buffer buffer4 = buffer3.writeDecimalLong(2739L);
      buffer0.writeDecimalLong(8192L);
      // Undeclared exception!
      try { 
        buffer4.readUtf8Line(9223372036854775807L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=8 offset=9223372036854775806 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.snapshot();
      buffer0.snapshot();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      buffer0.segmentSizes();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashingSource.sha1(buffer0);
      buffer0.clear();
      Charset.defaultCharset();
      realBufferedSink0.buffer.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer1.writeUtf8("+xNM$dBFtY*+)2");
      Buffer buffer2 = realBufferedSink0.buffer.writeDecimalLong(100000000000000L);
      realBufferedSink0.buffer.inputStream();
      Charset.defaultCharset();
      buffer2.readByte();
      buffer2.clone();
      Buffer buffer3 = buffer2.writeShort((byte)34);
      // Undeclared exception!
      try { 
        realBufferedSink0.buffer.readAll(buffer3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.equals(buffer0);
      ByteString byteString0 = buffer0.snapshot();
      buffer0.readAll(buffer0);
      Buffer buffer1 = (Buffer)buffer0.write((Source) buffer0, 0L);
      HashingSink hashingSink0 = HashingSink.sha512(buffer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteString byteString1 = hashingSink0.hash();
      ByteString[] byteStringArray0 = new ByteString[1];
      byteStringArray0[0] = byteString1;
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink0);
      RealBufferedSink realBufferedSink1 = (RealBufferedSink)realBufferedSink0.writeUtf8("");
      hashingSink0.hash();
      Charset.defaultCharset();
      buffer1.readUnsafe();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.rangeEquals(0L, byteString0);
      buffer1.outputStream();
      // Undeclared exception!
      try { 
        realBufferedSink1.buffer.readUtf8((-1L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer.writeUtf8("3!u7H");
      buffer1.writeLong((-1));
      buffer0.writeByte((-1));
      buffer_UnsafeCursor0.buffer.readHexadecimalUnsignedLong();
      HashingSource.sha256(buffer_UnsafeCursor0.buffer);
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      buffer2.readUtf8CodePoint();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      byte[] byteArray0 = new byte[4];
      buffer1.writeDecimalLong(2090L);
      byteArray0[1] = (byte)101;
      BufferedSink bufferedSink0 = realBufferedSink0.write(byteArray0);
      byteArray0[2] = (byte)34;
      HashingSource.sha1(((RealBufferedSink) bufferedSink0).buffer);
      realBufferedSink0.buffer.clear();
      buffer1.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer1.writeUtf8(". wZH%Cuk~00U");
      Buffer buffer2 = buffer1.writeDecimalLong(100000000000L);
      buffer2.writeDecimalLong((-1637L));
      try { 
        buffer2.readUtf8Line((long) (byte)34);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      buffer1.writeDecimalLong(1095216660480L);
      realBufferedSink0.buffer.emit();
      RealBufferedSource realBufferedSource0 = null;
      try {
        realBufferedSource0 = new RealBufferedSource((Source) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // source == null
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.sha256();
      Charset.defaultCharset();
      ByteString.decodeBase64("");
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Buffer buffer2 = realBufferedSink0.buffer();
      GzipSink gzipSink0 = new GzipSink(realBufferedSink0);
      HashingSink hashingSink0 = HashingSink.sha512(realBufferedSink0);
      ByteString byteString0 = hashingSink0.hash();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(gzipSink0);
      realBufferedSink0.write(byteString0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      realBufferedSink0.buffer.writableSegment((byte)18);
      realBufferedSink1.writeLong(652L);
      realBufferedSink1.writeUtf8CodePoint(65536);
      buffer0.sha256();
      realBufferedSink1.writeLongLe(65536);
      buffer2.writeByte(2147481500);
      // Undeclared exception!
      try { 
        buffer0.readUnsafe((Buffer.UnsafeCursor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = buffer0.write(byteArray0);
      buffer1.sha256();
      Charset.defaultCharset();
      ByteString byteString0 = ByteString.decodeBase64("");
      ByteString byteString1 = buffer0.sha256();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.buffer.emit();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(realBufferedSink0);
      realBufferedSink0.writeLong((-1L));
      byteString1.toAsciiUppercase();
      buffer0.writeDecimalLong(7205759403792792L);
      BufferedSink bufferedSink0 = realBufferedSink1.writeShort((byte)18);
      // Undeclared exception!
      try { 
        HashingSink.hmacSha512(bufferedSink0, byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      Buffer buffer2 = new Buffer();
      long long0 = 16711680L;
      buffer_UnsafeCursor0.buffer.writeDecimalLong(16711680L);
      byte byte0 = (byte)85;
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      // Undeclared exception!
      try { 
        realBufferedSink0.write((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)18;
      Buffer buffer1 = new Buffer();
      Charset.defaultCharset();
      String string0 = "h";
      Buffer buffer2 = buffer0.writeUtf8("h");
      buffer2.readByte();
      Charset.defaultCharset();
      buffer0.hashCode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio/bytes is empty");
      Buffer buffer3 = buffer0.writeDecimalLong(30L);
      Buffer buffer4 = buffer0.writeDecimalLong(10000000000L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer3.readUnsafe();
      // Undeclared exception!
      try { 
        buffer4.readUnsafe(buffer_UnsafeCursor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffe
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer1.snapshot();
      ByteString[] byteStringArray0 = new ByteString[7];
      byteStringArray0[0] = byteString0;
      byteStringArray0[4] = byteString0;
      byteStringArray0[4] = byteString0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteStringArray0[6] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer0.select(options0);
      Charset.defaultCharset();
      buffer0.sha1();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer2 = buffer1.writeUtf8("<FLe_x.!\"Dt`U{d");
      Buffer buffer3 = buffer2.writeUtf8("~h5b3CEv--S7xh");
      buffer1.writeDecimalLong(8192);
      buffer0.writeDecimalLong((-914L));
      buffer2.readUtf8Line(10L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      realBufferedSink0.writeLong(3437L);
      buffer3.clone();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Buffer buffer1 = realBufferedSource0.buffer;
      Buffer buffer2 = buffer1.writeHexadecimalUnsignedLong(255L);
      buffer1.sha1();
      buffer0.readFrom((InputStream) pipedInputStream0, (long) (byte)0);
      hashingSource0.toString();
      realBufferedSource0.buffer.segmentSizes();
      int int0 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer1.readHexadecimalUnsignedLong();
      Buffer buffer3 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer_UnsafeCursor0.buffer.readUnsafe();
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      buffer2.emit();
      buffer3.readUtf8Line();
      Buffer buffer5 = buffer_UnsafeCursor1.buffer;
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.buffer.readShort();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-7);
      Buffer buffer1 = buffer0.write(byteArray0);
      ByteString byteString0 = buffer1.snapshot();
      buffer1.indexOfElement(byteString0);
      OutputStream outputStream0 = buffer1.outputStream();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.writeUtf8("source is closed");
      Buffer buffer2 = new Buffer();
      Buffer buffer3 = buffer0.copyTo(outputStream0);
      HashingSink hashingSink0 = HashingSink.sha512(buffer0);
      hashingSink0.hash();
      Charset.defaultCharset();
      Buffer buffer4 = buffer3.writeByte((byte) (-7));
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer4.readUnsafe();
      buffer_UnsafeCursor0.buffer.clear();
      buffer1.sha512();
      // Undeclared exception!
      try { 
        buffer2.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[17];
      Buffer buffer1 = buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.offset = 442L;
      buffer_UnsafeCursor0.buffer.readByte();
      Buffer buffer2 = buffer1.writeUtf8CodePoint((-1));
      Buffer buffer3 = buffer_UnsafeCursor0.buffer.clone();
      ByteString byteString0 = new ByteString(byteArray0);
      HashingSource hashingSource0 = HashingSource.hmacSha1(buffer2, byteString0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      buffer2.indexOf(byteString0);
      Pipe pipe0 = new Pipe(442L);
      HashingSource.sha256(buffer3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer2.readUtf8();
      realBufferedSource0.buffer.snapshot();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer(100L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=442 > size=100
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.size = (long) 53;
      Buffer buffer1 = buffer0.writeByte(53);
      buffer0.readHexadecimalUnsignedLong();
      HashingSink hashingSink0 = HashingSink.sha1(buffer0);
      hashingSink0.hash();
      Buffer buffer2 = buffer0.writeUtf8CodePoint(85);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      buffer1.sha512();
      Charset.defaultCharset();
      buffer2.hashCode();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      Buffer buffer3 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      byte[] byteArray0 = buffer_UnsafeCursor1.data;
      try { 
        buffer0.readUtf8LineStrict();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=54 content=5555555555555555555555555555555555555555555555555555555555555555\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.size = (long) 53;
      Buffer buffer1 = buffer0.writeByte(53);
      buffer0.readHexadecimalUnsignedLong();
      HashingSink hashingSink0 = HashingSink.sha1(buffer0);
      ByteString byteString0 = hashingSink0.hash();
      buffer0.writeUtf8CodePoint(85);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer2 = new Buffer();
      buffer_UnsafeCursor0.buffer.snapshot();
      Charset.defaultCharset();
      buffer0.readUnsafe();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.rangeEquals(6L, byteString0);
      realBufferedSink0.outputStream();
      // Undeclared exception!
      try { 
        buffer0.readUtf8(65280L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=54 offset=0 byteCount=65280
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.size = (long) 53;
      Buffer buffer1 = buffer0.writeByte(53);
      buffer0.readHexadecimalUnsignedLong();
      HashingSink hashingSink0 = HashingSink.sha1(buffer0);
      ByteString byteString0 = hashingSink0.hash();
      buffer0.writeUtf8CodePoint(85);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer2 = new Buffer();
      ByteString byteString1 = buffer_UnsafeCursor0.buffer.snapshot();
      Charset.defaultCharset();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteString[] byteStringArray0 = new ByteString[7];
      byteStringArray0[0] = byteString1;
      byteStringArray0[1] = byteString0;
      byteStringArray0[2] = byteString0;
      byteStringArray0[3] = byteString1;
      byteStringArray0[4] = byteString1;
      byteStringArray0[5] = byteString1;
      byteStringArray0[6] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer_UnsafeCursor1.buffer.selectPrefix(options0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.rangeEquals(6L, byteString0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readByteString();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // java.io.EOFException
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = 68;
      Buffer buffer1 = buffer0.writeByte(68);
      buffer1.readHexadecimalUnsignedLong();
      HashingSink.sha1(buffer0);
      HashingSink hashingSink0 = HashingSink.md5(buffer0);
      hashingSink0.hash();
      // Undeclared exception!
      try { 
        buffer0.writeUtf8CodePoint(1073741824);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected code point: 40000000
         //
         verifyException("okio.Buffer", e);
      }
  }
}
