/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 02:23:11 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)65;
      TiffField tiffField0 = new TiffField((byte)65, (-1768), fieldTypeShort0, (byte)65, (-1086L), byteArray0, byteOrder0, 32997);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65, int0);
      assertEquals((-1768), tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getTag());
      assertEquals((-1086), tiffField0.getOffset());
      assertEquals(32997, tiffField0.getSortHint());
      assertEquals(130, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeShort0, 2L, 761, byteArray0, byteOrder0, 761);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(761, tiffField0.getOffset());
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(28, (-1075), fieldTypeDouble0, 28, (-1075), byteArray0, byteOrder0, (-1075));
      String string0 = tiffField0.toString();
      assertEquals((-1075), tiffField0.getSortHint());
      assertEquals((-1075), tiffField0.getOffset());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (28 Double)", string0);
      assertEquals((-1075), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(34244, 34244, fieldTypeRational0, 34244, 34244, byteArray0, byteOrder0, 34244);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(34244, tiffField0.getOffset());
      assertEquals(273952, tiffField0.getBytesLength());
      assertEquals(34244, tiffField0.getSortHint());
      assertEquals(34244, tiffField0.getDirectoryType());
      assertEquals(34244, tiffField0.getTag());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)65, (-2621), fieldTypeLong0, 3503L, (-1507L), byteArray0, byteOrder0, (-2621));
      tiffField0.getValue();
      assertEquals((-2621), tiffField0.getSortHint());
      assertEquals(65, tiffField0.getTag());
      assertEquals(14012, tiffField0.getBytesLength());
      assertEquals((-2621), tiffField0.getDirectoryType());
      assertEquals((-1507), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1700), fieldTypeShort0, (-2514L), (-2514L), byteArray0, byteOrder0, (-1));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2514), tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1700), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50971, 2886, fieldTypeAscii0, 52, (-40104L), byteArray0, byteOrder0, 140);
      int int0 = tiffField0.getTag();
      assertEquals(140, tiffField0.getSortHint());
      assertEquals((-40104), tiffField0.getOffset());
      assertEquals(50971, int0);
      assertEquals(2886, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2131), 263, fieldTypeShort0, 200L, 1282L, byteArray0, byteOrder0, 3720);
      int int0 = tiffField0.getTag();
      assertEquals(263, tiffField0.getDirectoryType());
      assertEquals((-2131), int0);
      assertEquals(1282, tiffField0.getOffset());
      assertEquals(3720, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)116;
      TiffField tiffField0 = new TiffField((-1768), 1, fieldTypeAscii0, 1L, 474L, byteArray0, byteOrder0, (byte)116);
      String string0 = tiffField0.getStringValue();
      assertEquals(116, tiffField0.getSortHint());
      assertEquals(474, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1768), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2576), 508, fieldTypeDouble0, 1L, 1242L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2576), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(508, tiffField0.getDirectoryType());
      assertEquals(1242, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 967, fieldTypeShort0, 2533L, 50971, byteArray0, byteOrder0, (-5729));
      int int0 = tiffField0.getSortHint();
      assertEquals(50971, tiffField0.getOffset());
      assertEquals(967, tiffField0.getDirectoryType());
      assertEquals((-5729), int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 49);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(49, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 1L, 2245L, byteArray0, byteOrder0, (byte) (-24));
      int int0 = tiffField0.getOffset();
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(2245, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-22);
      byteArray0[4] = (byte) (-31);
      TiffField tiffField0 = new TiffField((-1094), 1970, fieldTypeRational0, 1475L, 1970, byteArray0, byteOrder0, 2144842216);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(11800, tiffField0.getBytesLength());
      assertEquals(266, int0);
      assertEquals((-1094), tiffField0.getTag());
      assertEquals(1970, tiffField0.getOffset());
      assertEquals(1970, tiffField0.getDirectoryType());
      assertEquals(2144842216, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)65;
      byteArray0[7] = (byte)65;
      TiffField tiffField0 = new TiffField(32997, 2590, fieldTypeLong0, 11856L, 4L, byteArray0, byteOrder0, 41);
      tiffField0.getIntValueOrArraySum();
      assertEquals(47424, tiffField0.getBytesLength());
      assertEquals(32997, tiffField0.getTag());
      assertEquals(2590, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(41, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeDouble0, 1L, 882L, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(882, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3781), " (0x");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)103;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40095, "M+{^%w*GH:VfM7");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(25, 817, fieldTypeFloat0, 1L, 25, byteArray0, (ByteOrder) null, 817);
      tiffField0.getIntValue();
      assertEquals(25, tiffField0.getTag());
      assertEquals(817, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(817, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(272, 272, fieldTypeShort0, 272, 272, byteArray0, byteOrder0, 272);
      tiffField0.getFieldTypeName();
      assertEquals(272, tiffField0.getTag());
      assertEquals(272, tiffField0.getDirectoryType());
      assertEquals(272, tiffField0.getSortHint());
      assertEquals(272, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1047, "");
      TiffField tiffField0 = new TiffField(50971, 3, fieldTypeLong0, 1047, 136, byteArray0, byteOrder0, 2146148978);
      tiffField0.getFieldTypeName();
      assertEquals(2146148978, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(50971, tiffField0.getTag());
      assertEquals(136, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(41990);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(624, 751, (FieldType) null, 624, 0L, byteArray0, byteOrder0, (-4284));
      tiffField0.getFieldType();
      assertEquals(624, tiffField0.getTag());
      assertEquals(751, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-4284), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)71, (byte)0, fieldTypeShort0.ASCII, 1612L, (-4L), byteArray0, byteOrder0, 2146148978);
      tiffField0.getFieldType();
      assertEquals(2146148978, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "'oiCjXsT*8{HuC+ue");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)34);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-932), (-1), fieldTypeShort0, 62L, (-932), byteArray0, byteOrder0, 1323);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-932), tiffField0.getTag());
      assertEquals(1323, tiffField0.getSortHint());
      assertEquals((-932), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1541, (byte) (-5), fieldTypeShort0, 1L, 7L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(7, tiffField0.getOffset());
      assertEquals(1541, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-5), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1541, (byte) (-5), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (-446));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1541, tiffField0.getTag());
      assertEquals((-446), tiffField0.getSortHint());
      assertEquals((-5), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-24);
      TiffField tiffField0 = new TiffField(943, 40, fieldTypeRational0, 1L, 811L, byteArray0, byteOrder0, (byte) (-24));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(943, tiffField0.getTag());
      assertEquals(811, tiffField0.getOffset());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-24), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 3503L, (-1L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(3503L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeDouble0, 3503L, (-1L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, int0);
      assertEquals(28024, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(467, 2556, (FieldType) null, 0L, 467, byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals(467, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0L, long0);
      assertEquals(2556, tiffField0.getDirectoryType());
      assertEquals(467, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, (-2221), (FieldType) null, (-991), 4L, byteArray0, (ByteOrder) null, (-3155));
      long long0 = tiffField0.getCount();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2221), tiffField0.getDirectoryType());
      assertEquals((-991L), long0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-3155), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(855, 855, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)71);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(855, tiffField0.getTag());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(855, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-266), (-1), fieldTypeDouble0.FLOAT, (-266), 669L, byteArray0, byteOrder0, (byte)116);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(669, tiffField0.getOffset());
      assertEquals((-266), tiffField0.getTag());
      assertEquals(116, tiffField0.getSortHint());
      assertEquals((-1064), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)116, 560, fieldTypeDouble0, 0, (-1972L), byteArray0, byteOrder0, 560);
      tiffField0.getByteOrder();
      assertEquals(560, tiffField0.getSortHint());
      assertEquals((-1972), tiffField0.getOffset());
      assertEquals(116, tiffField0.getTag());
      assertEquals(560, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeShort0, 2L, 761, byteArray0, byteOrder0, 761);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(761, tiffField0.getOffset());
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getTag());
      assertEquals(4, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, (-3254), fieldTypeDouble0, 0, 0, byteArray0, (ByteOrder) null, (byte) (-87));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals((-3254), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)58, "GPSDateStamp");
      TiffField tiffField0 = new TiffField(1103, 471, fieldTypeAscii0, 1612L, 464L, byteArray0, byteOrder0, 471);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("50");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1612, tiffField0.getBytesLength());
      assertEquals(1103, tiffField0.getTag());
      assertEquals(464, tiffField0.getOffset());
      assertEquals(471, tiffField0.getDirectoryType());
      assertEquals(1612L, tiffField0.getCount());
      assertEquals(471, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("o=Btk");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeRational0, (-18L), 29, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4102), (-4102), fieldTypeRational0, (-4102), (-4102), byteArray0, byteOrder0, (-4102));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 67, (FieldType) null, 67, 67, byteArray0, byteOrder0, 67);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1216), (-1216), fieldTypeRational0, (-1216), (-1216), byteArray0, byteOrder0, (-1216));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-830), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-830));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeRational0, (-15), (-15), byteArray0, byteOrder0, (-15));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 65535, byteArray0, byteOrder0, 54);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeByte0, 22, 22, (byte[]) null, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeRational0, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(63, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 63);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2065, 2065, fieldTypeShort0, 2065, 2065, (byte[]) null, byteOrder0, 2065);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1726, 1726, (FieldType) null, 1726, 1726, byteArray0, byteOrder0, 1726);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-850), (-850), fieldTypeRational0, (-850), (-850), byteArray0, byteOrder0, (-850));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(28, (-1075), fieldTypeDouble0, 28, (-1075), byteArray0, byteOrder0, (-1075));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2417, 2417, fieldTypeByte0, 2417, 2417, (byte[]) null, byteOrder0, 2417);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1475), (-1475), fieldTypeRational0, (-1475), (-1475), byteArray0, byteOrder0, (-1475));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1000, fieldTypeRational0, 1, 1000, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[191];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeRational0, 1, 65535, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(100, 100, fieldTypeRational0, 100, 100, (byte[]) null, byteOrder0, 100);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33447, 967, (FieldType) null, 33447, 3072L, byteArray0, byteOrder0, 967);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeRational0, 40093, 40093, byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(99, 99, (FieldType) null, 99, 99, byteArray0, byteOrder0, 99);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1783), (-1783), fieldTypeShort0, (-1783), (-1783), byteArray0, byteOrder0, (-1783));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2065, 2065, fieldTypeShort0, 2065, 2065, (byte[]) null, byteOrder0, 2065);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-798), (-798), fieldTypeRational0, (-798), (-798), byteArray0, byteOrder0, (-798));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)0, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1, (FieldType) null, 1163L, 50971, byteArray0, byteOrder0, (byte)90);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(671, (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, 671);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(6, 1, fieldTypeDouble0, 1L, 5036L, byteArray0, byteOrder0, 6);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("c+ug54~?x1(&^}S");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, " for: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-982), (-982), fieldTypeRational0, (-982), (-982), byteArray0, (ByteOrder) null, 961);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeShort0, 34, 34, (byte[]) null, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1726), (-1726), fieldTypeLong0, (-1726), (-1726), byteArray0, byteOrder0, (-1726));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-681), 0, fieldTypeDouble0, 2147483647L, (-3584L), byteArray0, byteOrder0, 1503);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("50");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1908874352), "0A'g:]_5YaSV:f6");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1908874352), (-1908874352), fieldTypeByte0, (-1908874352), (-2215L), byteArray0, byteOrder0, (byte) (-75));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-75), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-2215), tiffField0.getOffset());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getBytesLength());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)71, (byte)0, fieldTypeShort0.ASCII, 1612L, (-4L), byteArray0, byteOrder0, 2146148978);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146148978, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(71, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeDouble0, 3503L, (-1L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3503L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 31, fieldTypeRational0, 31, 11664L, (byte[]) null, byteOrder0, (-1719));
      tiffField0.getFieldType();
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1719), tiffField0.getSortHint());
      assertEquals(11664, tiffField0.getOffset());
      assertEquals(31L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)65, (-2621), fieldTypeLong0, 3503L, (-1507L), byteArray0, byteOrder0, (-2621));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2621), int0);
      assertEquals((-1507), tiffField0.getOffset());
      assertEquals(65, tiffField0.getTag());
      assertEquals((-2621), tiffField0.getSortHint());
      assertEquals(3503L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1085, 1085, fieldTypeRational0, 1085, 1085, byteArray0, byteOrder0, 1085);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1026, 1026, fieldTypeRational0, 1026, 1026, (byte[]) null, byteOrder0, 1026);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)65, (-1768), fieldTypeShort0, (byte)65, (-1086L), byteArray0, byteOrder0, 32997);
      int int0 = tiffField0.getOffset();
      assertEquals(32997, tiffField0.getSortHint());
      assertEquals(65L, tiffField0.getCount());
      assertEquals(65, tiffField0.getTag());
      assertEquals((-1086), int0);
      assertEquals((-1768), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)116, 560, fieldTypeDouble0, 0, (-1972L), byteArray0, byteOrder0, 560);
      tiffField0.getTagInfo();
      assertEquals(560, tiffField0.getSortHint());
      assertEquals(560, tiffField0.getDirectoryType());
      assertEquals((-1972), tiffField0.getOffset());
      assertEquals(116, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 967, fieldTypeShort0, 2533L, 50964, byteArray0, byteOrder0, (-5720));
      int int0 = tiffField0.getTag();
      assertEquals(967, tiffField0.getDirectoryType());
      assertEquals((-5720), tiffField0.getSortHint());
      assertEquals(50964, tiffField0.getOffset());
      assertEquals(5066, tiffField0.getBytesLength());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(424);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1744), 554, fieldTypeFloat0, 3751L, (-1L), (byte[]) null, byteOrder0, (-1744));
      long long0 = tiffField0.getCount();
      assertEquals((-1744), tiffField0.getTag());
      assertEquals(3751L, long0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(554, tiffField0.getDirectoryType());
      assertEquals((-1744), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)65, (-2621), fieldTypeLong0, 3503L, (-1507L), byteArray0, byteOrder0, (-2621));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2621), tiffField0.getSortHint());
      assertEquals((-2621), tiffField0.getDirectoryType());
      assertEquals(14012, int0);
      assertEquals(65, tiffField0.getTag());
      assertEquals((-1507), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2922, 2922, fieldTypeRational0, 2922, 2922, byteArray0, byteOrder0, 2922);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(272, 272, fieldTypeShort0, 272, 272, byteArray0, byteOrder0, 272);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[139];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(33432, 33432, fieldTypeLong0, 33432, 33432, byteArray0, byteOrder0, 33432);
      tiffField0.getIntValueOrArraySum();
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals(33432, tiffField0.getTag());
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals(133728, tiffField0.getBytesLength());
      assertEquals(33432, tiffField0.getOffset());
      assertEquals(33432L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeAscii0, 761, 761, byteArray0, byteOrder0, 761);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5dd8e886 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(34264, 34264, fieldTypeRational0, 34264, 34264, byteArray0, byteOrder0, 34264);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1960, 1960, fieldTypeByte0, 1960, 1960, byteArray0, byteOrder0, 1960);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@321be72d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(794, 794, fieldTypeFloat0, 794, 794, byteArray0, byteOrder0, 794);
      tiffField0.getDoubleArrayValue();
      assertEquals(3176, tiffField0.getBytesLength());
      assertEquals(794L, tiffField0.getCount());
      assertEquals(794, tiffField0.getOffset());
      assertEquals(794, tiffField0.getTag());
      assertEquals(794, tiffField0.getSortHint());
      assertEquals(794, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(33432, 33432, fieldTypeLong0, 33432, 33432, byteArray0, byteOrder0, 33432);
      tiffField0.getDoubleArrayValue();
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals(33432, tiffField0.getTag());
      assertEquals(33432, tiffField0.getOffset());
      assertEquals(133728, tiffField0.getBytesLength());
      assertEquals(33432L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[119];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeFloat0.DOUBLE, 37, 37, byteArray0, byteOrder0, 37);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(37L, tiffField0.getCount());
      assertEquals(14, doubleArray0.length);
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getTag());
      assertEquals(37, tiffField0.getOffset());
      assertEquals(37, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1074, 1074, fieldTypeRational0, 1074, 1074, byteArray0, byteOrder0, 1074);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1074, tiffField0.getOffset());
      assertEquals(1074L, tiffField0.getCount());
      assertEquals(1074, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(8592, tiffField0.getBytesLength());
      assertEquals(1074, tiffField0.getDirectoryType());
      assertEquals(1074, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2922, 2922, fieldTypeRational0, 2922, 2922, byteArray0, byteOrder0, 2922);
      tiffField0.getDoubleArrayValue();
      assertEquals(2922L, tiffField0.getCount());
      assertEquals(2922, tiffField0.getDirectoryType());
      assertEquals(23376, tiffField0.getBytesLength());
      assertEquals(2922, tiffField0.getOffset());
      assertEquals(2922, tiffField0.getSortHint());
      assertEquals(2922, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeShort0, 761, 761, byteArray0, byteOrder0, 761);
      tiffField0.getDoubleArrayValue();
      assertEquals(761L, tiffField0.getCount());
      assertEquals(761, tiffField0.getTag());
      assertEquals(1522, tiffField0.getBytesLength());
      assertEquals(761, tiffField0.getOffset());
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[139];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(33432, 33432, fieldTypeLong0, 33432, 33432, byteArray0, byteOrder0, 33432);
      tiffField0.getIntArrayValue();
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals(33432, tiffField0.getTag());
      assertEquals(33432L, tiffField0.getCount());
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals(33432, tiffField0.getOffset());
      assertEquals(133728, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[119];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65, 65, fieldTypeFloat0, 65, 65, byteArray0, byteOrder0, 65);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@756228be for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1074, 1074, fieldTypeRational0, 1074, 1074, byteArray0, byteOrder0, 1074);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(34244, 34244, fieldTypeRational0, 34244, 34244, byteArray0, byteOrder0, 34244);
      tiffField0.getIntArrayValue();
      assertEquals(34244, tiffField0.getDirectoryType());
      assertEquals(34244L, tiffField0.getCount());
      assertEquals(273952, tiffField0.getBytesLength());
      assertEquals(34244, tiffField0.getOffset());
      assertEquals(34244, tiffField0.getTag());
      assertEquals(34244, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(272, 272, fieldTypeShort0, 272, 272, byteArray0, byteOrder0, 272);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(272, tiffField0.getTag());
      assertEquals(272, tiffField0.getSortHint());
      assertEquals(272L, tiffField0.getCount());
      assertEquals(272, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(544, tiffField0.getBytesLength());
      assertEquals(272, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1044, 1044, fieldTypeAscii0, 1044, 1044, byteArray0, byteOrder0, 15);
      String string0 = tiffField0.getStringValue();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(1044, tiffField0.getOffset());
      assertEquals(1044, tiffField0.getTag());
      assertEquals(1044, tiffField0.getBytesLength());
      assertEquals(1044, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2922, 2922, fieldTypeShort0, 2922, 2922, byteArray0, byteOrder0, 2922);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@3c24d81f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1105, 1105, fieldTypeRational0, 1105, 1105, byteArray0, byteOrder0, 1105);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x451)", string0);
      assertEquals(1105, tiffField0.getDirectoryType());
      assertEquals(1105, tiffField0.getSortHint());
      assertEquals(1105, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(33432, 33432, fieldTypeLong0, 33432, 33432, byteArray0, byteOrder0, 33432);
      String string0 = tiffField0.getTagName();
      assertEquals(33432, tiffField0.getOffset());
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals("Copyright", string0);
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals(33432, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1080, 1080, fieldTypeRational0, 1080, 1080, byteArray0, byteOrder0, 1080);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "X!JOHej%hrw`-m/<#u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(33409, 33409, fieldTypeFloat0, 33409, 33409, byteArray0, byteOrder0, 33409);
      tiffField0.dump();
      assertEquals(33409, tiffField0.getDirectoryType());
      assertEquals(133636, tiffField0.getBytesLength());
      assertEquals(33409L, tiffField0.getCount());
      assertEquals(33409, tiffField0.getTag());
      assertEquals(33409, tiffField0.getOffset());
      assertEquals(33409, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[171];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeByte0, 314L, 33, byteArray0, byteOrder0, 33);
      tiffField0.dump();
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(314, tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getTag());
      assertEquals(314L, tiffField0.getCount());
      assertEquals(33, tiffField0.getOffset());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeFloat0, 37, 37, byteArray0, byteOrder0, 37);
      tiffField0.dump();
      assertEquals(37, tiffField0.getOffset());
      assertEquals(148, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[423];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(3075, 3075, fieldTypeFloat0.DOUBLE, 3075, 3075, byteArray0, byteOrder0, 3075);
      tiffField0.dump();
      assertEquals(3075, tiffField0.getTag());
      assertEquals(3075, tiffField0.getSortHint());
      assertEquals(3075, tiffField0.getOffset());
      assertEquals(24600, tiffField0.getBytesLength());
      assertEquals(3075L, tiffField0.getCount());
      assertEquals(3075, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(37393, 1954, fieldTypeLong0, 37393, 37393, byteArray0, byteOrder0, 37393);
      tiffField0.dump();
      assertEquals(1954, tiffField0.getDirectoryType());
      assertEquals(37393, tiffField0.getSortHint());
      assertEquals(37393, tiffField0.getTag());
      assertEquals(149572, tiffField0.getBytesLength());
      assertEquals(37393, tiffField0.getOffset());
      assertEquals(37393L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[139];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(33432, 33432, fieldTypeLong0, 33432, 33432, byteArray0, byteOrder0, 33432);
      tiffField0.dump();
      assertEquals(33432, tiffField0.getOffset());
      assertEquals(133728, tiffField0.getBytesLength());
      assertEquals(33432L, tiffField0.getCount());
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals(33432, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1085, 1085, fieldTypeShort0, 1085, 1085, byteArray0, byteOrder0, 1085);
      tiffField0.dump();
      assertEquals(1085, tiffField0.getSortHint());
      assertEquals(1085, tiffField0.getDirectoryType());
      assertEquals(1085L, tiffField0.getCount());
      assertEquals(2170, tiffField0.getBytesLength());
      assertEquals(1085, tiffField0.getTag());
      assertEquals(1085, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(272, 272, fieldTypeShort0.SBYTE, 272, 272, byteArray0, (ByteOrder) null, 272);
      String string0 = tiffField0.getValueDescription();
      assertEquals(272, tiffField0.getSortHint());
      assertEquals(272, tiffField0.getTag());
      assertEquals(272, tiffField0.getOffset());
      assertEquals(272L, tiffField0.getCount());
      assertEquals(272, tiffField0.getBytesLength());
      assertEquals(272, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(409, 409, fieldTypeAscii0, 409, 409, byteArray0, byteOrder0, 409);
      String string0 = tiffField0.getValueDescription();
      assertEquals(409, tiffField0.getOffset());
      assertEquals(409, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(409, tiffField0.getBytesLength());
      assertEquals(409, tiffField0.getDirectoryType());
      assertEquals(409, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 3168, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).FLOAT).ASCII, 31, 31, byteArray0, byteOrder0, 3168);
      tiffField0.dump();
      assertEquals(31, tiffField0.getBytesLength());
      assertEquals(31L, tiffField0.getCount());
      assertEquals(3168, tiffField0.getSortHint());
      assertEquals(3168, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[366];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(906, 906, fieldTypeShort0, (-9L), (-9L), (byte[]) null, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(906, 1889);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(906, tiffField0.getDirectoryType());
      assertEquals((-9), tiffField0.getOffset());
      assertEquals(906, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(906, 906, fieldTypeShort0, (-9L), (-9L), (byte[]) null, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(906, 1889);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(906, tiffField0.getTag());
      assertEquals(906, tiffField0.getDirectoryType());
      assertEquals((-9), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1783), (-1783), fieldTypeShort0, (-1783), (-1783), byteArray0, byteOrder0, (-1783));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1783), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-1783), tiffField0.getOffset());
      assertEquals((-1783), tiffField0.getTag());
      assertEquals((-1783), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(15, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeByte0, 15, 15, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2922, 2922, fieldTypeRational0, 2922, 2922, byteArray0, byteOrder0, 2922);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2922L, tiffElement0.offset);
      assertEquals(2922, tiffField0.getTag());
      assertEquals(2922, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(2922, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 967, fieldTypeShort0, 50971, 50971, byteArray0, byteOrder0, 967);
      int int0 = tiffField0.getSortHint();
      assertEquals(967, tiffField0.getDirectoryType());
      assertEquals(967, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50971, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37723, 37723, fieldTypeDouble0.SHORT, 37723, 37723, byteArray0, byteOrder0, 37723);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(37723, tiffField0.getOffset());
      assertEquals("37723 (0x935b: Unknown Tag): ", string0);
      assertEquals(37723, tiffField0.getDirectoryType());
      assertEquals(37723, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37723, 37723, fieldTypeDouble0.SHORT, 37723, 37723, byteArray0, byteOrder0, 37723);
      tiffField0.dump();
      assertEquals(37723, tiffField0.getOffset());
      assertEquals(75446, tiffField0.getBytesLength());
      assertEquals(37723, tiffField0.getSortHint());
      assertEquals(37723L, tiffField0.getCount());
      assertEquals(37723, tiffField0.getTag());
      assertEquals(37723, tiffField0.getDirectoryType());
  }
}
