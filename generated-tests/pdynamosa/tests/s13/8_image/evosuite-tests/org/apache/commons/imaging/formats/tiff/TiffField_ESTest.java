/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 22:32:30 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(2147422007, 36867, fieldTypeShort0, 5L, 2147422007, byteArray0, byteOrder0, 305);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(256, int0);
      assertEquals(36867, tiffField0.getDirectoryType());
      assertEquals(2147422007, tiffField0.getTag());
      assertEquals(2147422007, tiffField0.getOffset());
      assertEquals(305, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)14;
      byteArray0[4] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)1, 10, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).SLONG).RATIONAL, 241L, (byte)1, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(14, int0);
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-109);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (byte) (-109), fieldTypeRational0, 11622L, (byte)57, byteArray0, byteOrder0, (byte)124);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2, tiffField0.getTag());
      assertEquals((-109), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(100, 3164, fieldTypeLong0, 1L, 2653L, (byte[]) null, byteOrder0, 100);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2653, tiffField0.getOffset());
      assertEquals(3164, tiffField0.getDirectoryType());
      assertEquals(100, tiffField0.getTag());
      assertEquals(100, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1631, 1431, fieldTypeLong0.FLOAT, 100, 100, byteArray0, byteOrder0, 100);
      String string0 = tiffField0.getValueDescription();
      assertEquals(100, tiffField0.getSortHint());
      assertEquals(1431, tiffField0.getDirectoryType());
      assertEquals(1631, tiffField0.getTag());
      assertEquals(100, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeRational0, 330, 330, byteArray0, byteOrder0, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(81, 1631, fieldTypeLong0, 81, 4L, byteArray0, byteOrder0, 1631);
      int int0 = tiffField0.getTag();
      assertEquals(1631, tiffField0.getSortHint());
      assertEquals(1631, tiffField0.getDirectoryType());
      assertEquals(81, int0);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2143247980, (-3689), fieldTypeShort0.ASCII, 0L, 200L, byteArray0, byteOrder0, 48323);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(200, tiffField0.getOffset());
      assertEquals(48323, tiffField0.getSortHint());
      assertEquals((-3689), tiffField0.getDirectoryType());
      assertEquals(2143247980, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(676, "OriginalRawFileData");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(676, 676, fieldTypeShort0, 676, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(676, tiffField0.getDirectoryType());
      assertEquals(676, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1092), 0, fieldTypeLong0, (-1092), 0L, byteArray0, byteOrder0, (-1092));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1092), int0);
      assertEquals((-1092), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 402, fieldTypeByte0, 4317L, 0, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(402, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37121, (-1057), fieldTypeShort0, 5811L, (-1518L), byteArray0, byteOrder0, (byte) (-3));
      int int0 = tiffField0.getOffset();
      assertEquals(37121, tiffField0.getTag());
      assertEquals((-1518), int0);
      assertEquals((-1057), tiffField0.getDirectoryType());
      assertEquals((-3), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)57, 1596, fieldTypeLong0, 2645L, (byte) (-109), byteArray0, byteOrder0, (byte)84);
      tiffField0.getIntValueOrArraySum();
      assertEquals(57, tiffField0.getTag());
      assertEquals((-109), tiffField0.getOffset());
      assertEquals(1596, tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-95);
      TiffField tiffField0 = new TiffField(2145372061, 2145372061, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)28);
      tiffField0.getIntValueOrArraySum();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2145372061, tiffField0.getTag());
      assertEquals(2145372061, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(676, "OriginalRawFileData");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 1L, 1881L, byteArray0, (ByteOrder) null, (byte)122);
      tiffField0.getIntValue();
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1881, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-56);
      TiffField tiffField0 = new TiffField((-2146774438), 2257, fieldTypeLong0.SHORT, 1L, 2257, byteArray0, byteOrder0, (byte) (-56));
      tiffField0.getIntValue();
      assertEquals(2257, tiffField0.getDirectoryType());
      assertEquals((-56), tiffField0.getSortHint());
      assertEquals(2257, tiffField0.getOffset());
      assertEquals((-2146774438), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-95);
      TiffField tiffField0 = new TiffField(2145372061, 2145372061, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)28);
      tiffField0.getIntValue();
      assertEquals(2145372061, tiffField0.getTag());
      assertEquals(2145372061, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(34, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeByte0, 34, 34, byteArray0, byteOrder0, 27);
      tiffField0.getFieldTypeName();
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(100, "");
      TiffField tiffField0 = new TiffField(1631, 1431, fieldTypeFloat0, 100, 100, byteArray0, byteOrder0, 100);
      tiffField0.getFieldTypeName();
      assertEquals(100, tiffField0.getSortHint());
      assertEquals(1431, tiffField0.getDirectoryType());
      assertEquals(1631, tiffField0.getTag());
      assertEquals(100, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(149, (byte)29, (FieldType) null, 616L, 1608L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(149, tiffField0.getTag());
      assertEquals(1608, tiffField0.getOffset());
      assertEquals(29, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(94, (byte)1, fieldTypeAscii0, 2139617407L, 4191L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(94, tiffField0.getTag());
      assertEquals(4191, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(94, (byte)1, fieldTypeAscii0, 2139617407L, 4191L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(4191, tiffField0.getOffset());
      assertEquals(94, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-103);
      TiffField tiffField0 = new TiffField((byte) (-103), 50, fieldTypeLong0, (byte)1, (byte)68, byteArray0, byteOrder0, (byte)68);
      tiffField0.getDoubleValue();
      assertEquals((-103), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-95);
      TiffField tiffField0 = new TiffField(2145372061, 2145372061, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)28);
      tiffField0.getDoubleValue();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2145372061, tiffField0.getTag());
      assertEquals(2145372061, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(69, "... (");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1022, (byte)0, fieldTypeDouble0, (byte)77, (-2593L), byteArray0, byteOrder0, (-2147216181));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2593), tiffField0.getOffset());
      assertEquals((-2147216181), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1022, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1007), (-1007), fieldTypeLong0, 50, 50, byteArray0, byteOrder0, (byte)9);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-1007), tiffField0.getTag());
      assertEquals((-1007), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(132, 1108, fieldTypeRational0, 0L, 1111L, byteArray0, byteOrder0, (byte)43);
      tiffField0.getCount();
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(1111, tiffField0.getOffset());
      assertEquals(132, tiffField0.getTag());
      assertEquals(1108, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 1052L, 0L, byteArray0, byteOrder0, (-3247));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3247), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3766, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2573), 3766, fieldTypeShort0, 0L, (-2573), byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(3766, tiffField0.getDirectoryType());
      assertEquals((-2573), tiffField0.getTag());
      assertEquals((-2573), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3766, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2573), 3766, fieldTypeShort0, 3766, (-2573), byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals((-2573), tiffField0.getOffset());
      assertEquals(3766, tiffField0.getDirectoryType());
      assertEquals((-2573), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(676, "OriginalRawFileData");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 1L, 1881L, byteArray0, (ByteOrder) null, (byte)122);
      tiffField0.getByteOrder();
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1881, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-3368), fieldTypeRational0, 27, 27, byteArray0, byteOrder0, 27);
      tiffField0.getByteArrayValue();
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-3368), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(69, 69, fieldTypeByte0, 69, 69, (byte[]) null, byteOrder0, 69);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1359), 94, fieldTypeShort0.FLOAT, (-2043L), (-1L), byteArray0, byteOrder0, (byte)43);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-4329), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).ASCII).LONG, (-3689), (-45L), byteArray0, byteOrder0, (-3689));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(247, 50, fieldTypeAscii0, (-92L), 0L, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "UTF-16LE");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-570), (-4933), fieldTypeFloat0, (-570), 1, byteArray0, (ByteOrder) null, (byte) (-119));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1765), (-1765), fieldTypeShort0, (-1765), 0L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, (-2228));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-616), (-2424), fieldTypeByte0, (-2424), (-260L), byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ReferenceBlackWhite");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "ReferenceBlackWhite");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3766, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MockFile mockFile0 = new MockFile("Unknown value: ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      TiffField tiffField0 = new TiffField(2761, (byte)0, fieldTypeShort0, (-74L), 0L, byteArray0, byteOrder0, 2067);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1538, (-2507), (FieldType) null, (-2507), 1L, byteArray0, byteOrder0, (byte)1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|DH");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(69, "... (");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1022, (byte)0, fieldTypeDouble0, (byte)77, (-2593L), byteArray0, byteOrder0, (-2147216181));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-2593), tiffField0.getOffset());
      assertEquals(1022, tiffField0.getTag());
      assertEquals((-2147216181), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 1052L, 0L, byteArray0, byteOrder0, (-3247));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3247), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(10, (-2424), fieldTypeByte0, 0L, (-2424), byteArray0, byteOrder0, 65535);
      tiffField0.getByteArrayValue();
      assertEquals((-2424), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-2424), tiffField0.getOffset());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, (byte[]) null, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(149, (byte)29, (FieldType) null, 616L, 1608L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1608, tiffField0.getOffset());
      assertEquals(29, int0);
      assertEquals(149, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-2147360242), 17, fieldTypeByte0, 919L, 17, byteArray0, byteOrder0, (-2147360242));
      tiffField0.getValue();
      assertEquals((-2147360242), tiffField0.getTag());
      assertEquals(17, tiffField0.getOffset());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals((-2147360242), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(831, 1551, (FieldType) null, 0L, 1551, byteArray0, byteOrder0, (byte)70);
      int int0 = tiffField0.getOffset();
      assertEquals(1551, int0);
      assertEquals(831, tiffField0.getTag());
      assertEquals(1551, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-3368), fieldTypeRational0, 27, 27, byteArray0, byteOrder0, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-3368), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-535), 2146808338, fieldTypeByte0.ASCII, 586L, (-3247L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-535), int0);
      assertEquals(2146808338, tiffField0.getDirectoryType());
      assertEquals((-3247), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-2541), fieldTypeByte0, (-521L), 1486L, (byte[]) null, byteOrder0, 1303);
      tiffField0.getCount();
      assertEquals((-2541), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1303, tiffField0.getSortHint());
      assertEquals(1486, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-905), (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, (-905), 4538L, byteArray0, byteOrder0, (byte) (-40));
      tiffField0.getBytesLength();
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals(4538, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte) (-11), 1323, fieldTypeByte0, 4768L, (byte) (-11), byteArray0, byteOrder0, (byte) (-11));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-11), tiffField0.getOffset());
      assertEquals("-11 (0xfffffff5: Unknown Tag): ", string0);
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(1323, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1439, (byte)0, fieldTypeShort0, 1L, 2054L, byteArray0, byteOrder0, 1439);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1439, tiffField0.getSortHint());
      assertEquals(1439, tiffField0.getTag());
      assertEquals(2054, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146774438), 1631, fieldTypeLong0.SSHORT, 255L, (-1299L), byteArray0, byteOrder0, 2052);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1631, 50, fieldTypeRational0, 50, (byte)78, byteArray0, byteOrder0, 76);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1871), (byte)0, fieldTypeByte0, (byte)0, 400L, byteArray0, byteOrder0, 3);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7ba8daa for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(69, "... (");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1022, (byte)0, fieldTypeDouble0, (byte)77, (-2593L), byteArray0, byteOrder0, (-2147216181));
      tiffField0.getDoubleArrayValue();
      assertEquals(1022, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2147216181), tiffField0.getSortHint());
      assertEquals((-2593), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2118066063, (byte)0, fieldTypeFloat0, 126L, (byte)0, byteArray0, byteOrder0, 2118066063);
      tiffField0.getDoubleArrayValue();
      assertEquals(2118066063, tiffField0.getTag());
      assertEquals(2118066063, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(81, 1631, fieldTypeLong0, 81, 4L, byteArray0, byteOrder0, 1631);
      tiffField0.getDoubleArrayValue();
      assertEquals(81, tiffField0.getTag());
      assertEquals(1631, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1631, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-779), 970, fieldTypeShort0, 970, (byte) (-111), byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals((-111), tiffField0.getOffset());
      assertEquals(970, tiffField0.getDirectoryType());
      assertEquals((-779), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(45, "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1631, 45, fieldTypeRational0, 45, (byte)78, byteArray0, byteOrder0, 76);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(78, tiffField0.getOffset());
      assertEquals(1631, tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1699), (-1699), fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte)2);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-1699), tiffField0.getDirectoryType());
      assertEquals((-1699), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "TI5t?^xU<]$2?N/.");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3992), (-3992), fieldTypeByte0, 255L, 25L, byteArray0, byteOrder0, (-3992));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@48d9707d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1247, 3, fieldTypeByte0, 3, 50, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@cc6703 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146774438), 1631, fieldTypeLong0.SSHORT, 255L, (-1299L), byteArray0, byteOrder0, 2052);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2052, tiffField0.getSortHint());
      assertEquals(1631, tiffField0.getDirectoryType());
      assertEquals(255L, tiffField0.getCount());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-2146774438), tiffField0.getTag());
      assertEquals((-1299), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(45, "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1631, 45, fieldTypeRational0, 45, (byte)78, byteArray0, byteOrder0, 76);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(69, "ti0Mw");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(79, 941, fieldTypeRational0, 941, 69, byteArray0, byteOrder0, (byte)8);
      tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(941, tiffField0.getDirectoryType());
      assertEquals(79, tiffField0.getTag());
      assertEquals(941L, tiffField0.getCount());
      assertEquals(69, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2146774438), 2257, fieldTypeLong0.SHORT, 1L, 2257, byteArray0, byteOrder0, (byte) (-56));
      tiffField0.getIntArrayValue();
      assertEquals(2257, tiffField0.getDirectoryType());
      assertEquals(2257, tiffField0.getOffset());
      assertEquals((-2146774438), tiffField0.getTag());
      assertEquals((-56), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)100, 1631, fieldTypeLong0, 4L, (-4732L), byteArray0, byteOrder0, 1631);
      tiffField0.getIntArrayValue();
      assertEquals(1631, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(1631, tiffField0.getDirectoryType());
      assertEquals((-4732), tiffField0.getOffset());
      assertEquals(100, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)15;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1182), 17, fieldTypeAscii0, 4L, 17, byteArray0, byteOrder0, (-1234));
      String string0 = tiffField0.getStringValue();
      assertEquals(17, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1234), tiffField0.getSortHint());
      assertEquals(17, tiffField0.getOffset());
      assertEquals((-1182), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1182), 17, fieldTypeAscii0, 4L, 17, byteArray0, byteOrder0, (-1234));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@6c996e01
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-2541), fieldTypeByte0, (-521L), 1486L, (byte[]) null, byteOrder0, 1303);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x32)", string0);
      assertEquals(1303, tiffField0.getSortHint());
      assertEquals((-2541), tiffField0.getDirectoryType());
      assertEquals(1486, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(10, (-2424), fieldTypeByte0, 0L, (-2424), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSMeasureMode", string0);
      assertEquals(10, tiffField0.getTag());
      assertEquals((-2424), tiffField0.getDirectoryType());
      assertEquals((-2424), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1596, 1596, fieldTypeLong0, 1596, 4L, byteArray0, byteOrder0, 1596);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "8cX_D >@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1631, 1431, fieldTypeLong0.FLOAT, 100, 100, byteArray0, byteOrder0, 100);
      String string0 = tiffField0.getValueDescription();
      assertEquals(100L, tiffField0.getCount());
      assertEquals(1431, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1631, tiffField0.getTag());
      assertEquals(100, tiffField0.getOffset());
      assertEquals(100, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-2147360242), 17, fieldTypeByte0, 919L, 17, byteArray0, byteOrder0, (-2147360242));
      String string0 = tiffField0.getValueDescription();
      assertEquals(17, tiffField0.getOffset());
      assertEquals(919L, tiffField0.getCount());
      assertEquals((-2147360242), tiffField0.getTag());
      assertEquals((-2147360242), tiffField0.getSortHint());
      assertEquals(17, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte) (-11), 1323, fieldTypeByte0, 4768L, (byte) (-11), byteArray0, byteOrder0, (byte) (-11));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1323, tiffField0.getDirectoryType());
      assertEquals((-11), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-11), tiffField0.getTag());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(4768L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      TiffField tiffField0 = new TiffField(22, 1717, fieldTypeDouble0, 255L, 935, byteArray0, byteOrder0, 17);
      String string0 = tiffField0.toString();
      assertEquals(1717, tiffField0.getDirectoryType());
      assertEquals(935, tiffField0.getOffset());
      assertEquals("22 (0x16: Unknown Tag): 0.0, 0.0 (255 null)", string0);
      assertEquals(17, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(63, 63, fieldTypeDouble0, 63, 63, byteArray0, byteOrder0, 63);
      String string0 = tiffField0.toString();
      assertEquals(63, tiffField0.getOffset());
      assertEquals("63 (0x3f: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (63 Double)", string0);
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(63, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 822, 50, byteArray0, byteOrder0, 840);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(822L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(840, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2147360217), (-2147360217), fieldTypeFloat0, (-2147360217), (-2147360217), byteArray0, byteOrder0, (-2147360217));
      assertEquals(493724, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147360217), tiffField0.getOffset());
      assertEquals((-2147360217), tiffField0.getSortHint());
      assertEquals((-2147360217), tiffField0.getDirectoryType());
      assertEquals((-2147360217), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-2147360217L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(676, "OriginalRawFileData");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(676, 676, fieldTypeShort0, 676, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(676L, tiffField0.getCount());
      assertEquals(676, tiffField0.getTag());
      assertEquals(676, tiffField0.getDirectoryType());
      assertEquals(1352, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(565, 644, fieldTypeDouble0.SHORT, 255L, 565, byteArray0, byteOrder0, 1503);
      String string0 = tiffField0.toString();
      assertEquals("565 (0x235: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (67) (255 Short)", string0);
      assertEquals(1503, tiffField0.getSortHint());
      assertEquals(644, tiffField0.getDirectoryType());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals(565, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeRational0, 330, 330, byteArray0, byteOrder0, 330);
      String string0 = tiffField0.toString();
      assertEquals("330 (0x14a: SubIFDs):  (330 Rational)", string0);
      assertEquals(2640, tiffField0.getBytesLength());
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 267601L, 267601L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(267601, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(267601, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-110), "");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 1322L, 0, byteArray0, byteOrder0, (-110));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1322, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-102), (-1796), fieldTypeByte0, (byte)1, (byte) (-102), byteArray0, byteOrder0, (byte) (-102));
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-102), tiffField0.getOffset());
      assertEquals((-1796), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-102), tiffField0.getTag());
      assertEquals((-102), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1057), (-1491), fieldTypeByte0, 1, 0L, byteArray0, byteOrder0, (-1491));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1057), tiffField0.getTag());
      assertEquals((-1491), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1491), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, (byte[]) null, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 7);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1631, 1431, fieldTypeLong0.FLOAT, 100, 100, byteArray0, byteOrder0, 100);
      tiffField0.getFieldTypeName();
      assertEquals(100, tiffField0.getOffset());
      assertEquals(1631, tiffField0.getTag());
      assertEquals(100, tiffField0.getSortHint());
      assertEquals(1431, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-111), 65535, fieldTypeShort0, 255L, 65535, byteArray0, byteOrder0, (byte)106);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(510, tiffField0.getBytesLength());
      assertNotNull(tiffElement0);
      assertEquals(65535L, tiffElement0.offset);
      assertEquals(106, tiffField0.getSortHint());
      assertEquals((-111), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "XPosition");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (-929L), (-1271L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1271), tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals((-7432), tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (byte) (-15), fieldTypeShort0, 3895L, 28, byteArray0, byteOrder0, 139);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(28, tiffField0.getOffset());
      assertEquals(139, tiffField0.getSortHint());
      assertEquals(7790, tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34027, 34027, fieldTypeLong0, 1631, 4L, byteArray0, byteOrder0, 1631);
      tiffField0.dump();
      assertEquals(34027, tiffField0.getDirectoryType());
      assertEquals(6524, tiffField0.getBytesLength());
      assertEquals(34027, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1631, tiffField0.getSortHint());
      assertEquals(1631L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4, "Aa uL");
      TiffField tiffField0 = new TiffField((-1), 4, fieldTypeShort0, (-3348L), (-998L), (byte[]) null, byteOrder0, 4327);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2143247980, 2143247980);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4327, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-998), tiffField0.getOffset());
      assertEquals((-3348L), tiffField0.getCount());
  }
}
