/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 04:45:34 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)64;
      byteArray0[0] = (byte)64;
      byte byte1 = (byte) (-19);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte)34;
      byte byte2 = (byte)0;
      byteArray0[3] = (byte)0;
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)34, (-3405), true, (-3405));
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)64, 3, false, (byte) (-19));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      boolean boolean0 = false;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, false);
      int int0 = 3;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, 2112, 3, false, 3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (byte)0);
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 3, (byte)0, false, 3);
      assertArrayEquals(new byte[] {(byte)0, (byte)16}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 7, 7, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte)0);
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (byte)0);
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray1, (-631), 1);
      assertArrayEquals(new byte[] {(byte)53}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)83;
      int int0 = 16;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 16, 1280, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)0, (byte)0);
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray1, (byte)0, (byte)0);
      T4AndT6Compression.decompressT6(byteArray2, (byte)0, 1);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)10;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)10, (-4496));
      T4AndT6Compression.compressT6(byteArray1, 38, 0);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 38, 63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 2, 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (byte)0);
      byte[] byteArray2 = T4AndT6Compression.decompressT6(byteArray1, (byte)0, 0);
      assertNotSame(byteArray0, byteArray2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 1, 1, true, 1);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, true);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray2, (-312), 1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = 2;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, false, 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)110;
      byteArray0[3] = (byte) (-41);
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)124;
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)110, (byte) (-41));
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray0, 0, (byte)110);
      T4AndT6Compression.compressT4_1D(byteArray1, 0, (byte) (-41), true);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray2, (-881), 817);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 34, 34);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = 1;
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 1, 1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (byte)0);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte)0, 3321, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-51);
      byte byte0 = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)121, (-1482), true);
      int int0 = 41;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 0, 41, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)103;
      byteArray0[0] = (byte)103;
      byte byte1 = (byte) (-2);
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)96;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)96, (byte)96, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      int int0 = 4;
      int int1 = (-25);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 4, (-25));
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, 4, 4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)61;
      byte byte0 = (byte)2;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)108;
      int int0 = 0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, (byte)2);
      T4AndT6Compression.decompressT6(byteArray1, 0, (byte)62);
      T4AndT6Compression.compressT6(byteArray0, 0, 0);
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte)108, 4030, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)115;
      byteArray0[4] = (byte)0;
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)78, (byte)0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)115;
      byteArray1[1] = (byte)115;
      byteArray1[2] = (byte)115;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      byteArray1[6] = (byte)56;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 1, 2030);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte)28}, byteArray1);
      
      byte[] byteArray2 = T4AndT6Compression.decompressT6(byteArray1, 1, 1);
      assertArrayEquals(new byte[] {(byte)0}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)123;
      T4AndT6Compression.decompressT4_1D(byteArray0, (byte) (-2), (byte) (-1), false);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-2);
      byteArray1[1] = (byte)123;
      byteArray1[2] = (byte) (-1);
      byte[] byteArray2 = T4AndT6Compression.decompressT6(byteArray1, (byte)123, 4);
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 704, (-1516));
      // Undeclared exception!
      T4AndT6Compression.compressT4_1D(byteArray1, (-496), 1711, true);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte)28}, byteArray1);
      
      byte[] byteArray2 = T4AndT6Compression.decompressModifiedHuffman(byteArray1, 1, 1);
      assertArrayEquals(new byte[] {(byte)0}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte) (-2);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)22, (byte)42);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)10;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 2, 2);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 8, 1714);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-91);
      byte byte0 = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-3);
      byte byte1 = (byte)19;
      byteArray0[3] = (byte)19;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 11, 52);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)0, 123, false, (byte) (-3));
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, 529, (-1352), true);
      assertNotSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, false, 82);
      assertArrayEquals(new byte[] {(byte)0, (byte)27, (byte) (-128), (byte)10, (byte)0, (byte)32}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 3, 989, true, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte)0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 3, 3, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = (-50);
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 1896, (-50), false, 1896);
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-50), 1896, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-405), 2176, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)20;
      T4AndT6Compression.decompressT6(byteArray0, (byte)13, (-2151));
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)20;
      byteArray1[1] = (byte)13;
      byteArray1[2] = (byte)13;
      byteArray1[3] = (byte)20;
      byteArray1[4] = (byte)20;
      byteArray1[5] = (byte) (-2);
      byteArray1[6] = (byte)20;
      byteArray1[7] = (byte)2;
      byteArray1[8] = (byte)20;
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)20, (byte)13);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)26;
      byte byte0 = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-63);
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-108);
      byteArray0[8] = (byte)7;
      T4AndT6Compression.compressT6(byteArray0, (byte)3, 9);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte) (-63), (-2850), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)5, 1676, true, (byte)85);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)27;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 1080, (byte)27);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)20;
      T4AndT6Compression.decompressT6(byteArray0, (byte)13, (-2151));
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)20;
      byteArray1[1] = (byte)13;
      byteArray1[2] = (byte)13;
      byteArray1[3] = (byte)20;
      byteArray1[4] = (byte)20;
      byteArray1[5] = (byte) (-2);
      byteArray1[6] = (byte)20;
      byteArray1[7] = (byte) (-26);
      byteArray1[8] = (byte)20;
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)20, (byte)13);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-26);
      byteArray0[2] = (byte)20;
      T4AndT6Compression.decompressT6(byteArray0, (byte)13, (-2151));
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)20;
      byteArray1[1] = (byte)13;
      byteArray1[2] = (byte)13;
      byteArray1[3] = (byte)20;
      byteArray1[4] = (byte)13;
      byteArray1[5] = (byte) (-2);
      byteArray1[6] = (byte)20;
      byteArray1[7] = (byte) (-26);
      byteArray1[8] = (byte)20;
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)20, (byte)13);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 2, 2, false);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 2, 2, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, true, 2);
      T4AndT6Compression.decompressT4_2D(byteArray1, 2, 2, true);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 2, 2, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 2, 2);
      T4AndT6Compression.compressT4_2D(byteArray1, 2, 2, false, (-138));
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT6(byteArray1, (-138), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      boolean boolean0 = false;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      int int0 = (-2);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, (-3196), (-2));
      T4AndT6Compression.decompressT4_1D(byteArray1, 1, (-240), false);
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)19;
      byteArray2[1] = (byte)19;
      byte byte0 = (byte)59;
      byteArray2[2] = (byte)59;
      byteArray2[3] = (byte)61;
      byte byte1 = (byte) (-127);
      byteArray2[4] = (byte) (-127);
      byteArray2[5] = (byte)63;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray2, (byte)19, 3991, false, (byte)63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      T4AndT6Compression.compressT6(byteArray0, 2, 2);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)41;
      byteArray1[1] = (byte)4;
      byteArray1[2] = (byte)44;
      byteArray1[3] = (byte)106;
      byteArray1[4] = (byte) (-31);
      byteArray1[5] = (byte)27;
      byteArray1[6] = (byte)31;
      byteArray1[7] = (byte) (-75);
      byteArray1[8] = (byte)48;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)31, 51, false, (byte)41);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      int int0 = 2;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, true, 2);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 2, 2, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1239), 1, true);
      int int0 = 333;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 333, 1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 67, 67);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 294, 46, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-31);
      byteArray0[6] = (byte)31;
      byteArray0[7] = (byte) (-75);
      byteArray0[8] = (byte)31;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)44, (byte)44, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)44;
      byteArray0[8] = (byte)0;
      byteArray0[4] = (byte) (-31);
      byteArray0[6] = (byte)31;
      byteArray0[7] = (byte) (-31);
      byteArray0[8] = (byte)31;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)31, 51, false, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte)3;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 63, (byte)1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1), 5, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 5, 5, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray1, (-1), (-1), false);
      T4AndT6Compression.compressModifiedHuffman(byteArray1, (-1), (-1));
      byte[] byteArray3 = T4AndT6Compression.compressT4_1D(byteArray2, (-1), 41, true);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray3, 1, 41, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
