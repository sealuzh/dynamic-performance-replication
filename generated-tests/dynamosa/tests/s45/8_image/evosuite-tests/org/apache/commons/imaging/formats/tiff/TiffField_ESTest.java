/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 12:35:32 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)25;
      byteArray0[4] = (byte)1;
      TiffField tiffField0 = new TiffField(21, 24, fieldTypeRational0, 26, 88L, byteArray0, byteOrder0, 19);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(25, int0);
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)1;
      TiffField tiffField0 = new TiffField(21, 24, fieldTypeRational0, 26, 88L, byteArray0, byteOrder0, 19);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(21, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(24, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-160), (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)117, fieldTypeFloat0, 1L, (byte)117, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(117, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[75];
      TiffField tiffField0 = new TiffField(27, (-296), fieldTypeLong0, 2164, 27, byteArray0, (ByteOrder) null, (-2222));
      String string0 = tiffField0.toString();
      assertEquals((-296), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getOffset());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (2164 IFD)", string0);
      assertEquals((-2222), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)87, fieldTypeRational0, (byte)87, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[177];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65576, 65576, fieldTypeShort0, 65576, (byte)24, byteArray0, byteOrder0, 2993);
      tiffField0.getValue();
      assertEquals(65576, tiffField0.getTag());
      assertEquals(65576, tiffField0.getDirectoryType());
      assertEquals(2993, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 1, (-2147483648L), byteArray0, byteOrder0, (-220));
      int int0 = tiffField0.getTag();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-220), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1564), (byte)48, fieldTypeFloat0, (-1836L), (-1564), byteArray0, byteOrder0, (-681));
      int int0 = tiffField0.getTag();
      assertEquals((-1564), int0);
      assertEquals((-1564), tiffField0.getOffset());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals((-681), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)10;
      TiffField tiffField0 = new TiffField(3550, 1628, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).DOUBLE).ASCII, 9720L, 1L, byteArray0, byteOrder0, (byte)10);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3550, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1628, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, 448L, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-47), 50, fieldTypeLong0, 4792L, (-2343L), byteArray0, byteOrder0, 2703);
      int int0 = tiffField0.getSortHint();
      assertEquals((-47), tiffField0.getTag());
      assertEquals((-2343), tiffField0.getOffset());
      assertEquals(2703, int0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)87, fieldTypeRational0, (byte)87, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(87, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeRational0, 1425, 0, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-25), fieldTypeRational0, 50L, (byte) (-25), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-25), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-25), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1090), 1446, fieldTypeLong0, 1427L, (-1443L), byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1090), tiffField0.getTag());
      assertEquals((-1443), tiffField0.getOffset());
      assertEquals(1446, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-33);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 246, fieldTypeShort0, (-1717986917), (-636L), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-636), tiffField0.getOffset());
      assertEquals((-8448), int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(246, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)55, 40, fieldTypeShort0, 1L, 1332L, byteArray0, (ByteOrder) null, 50);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1332, tiffField0.getOffset());
      assertEquals(55, tiffField0.getTag());
      assertEquals(40, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)106, (-1506), fieldTypeByte0, 1, 2149L, byteArray0, byteOrder0, (-4100));
      tiffField0.getIntValue();
      assertEquals((-4100), tiffField0.getSortHint());
      assertEquals(2149, tiffField0.getOffset());
      assertEquals(106, tiffField0.getTag());
      assertEquals((-1506), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-39);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-493), (-493), fieldTypeShort0, 1L, (-493), byteArray0, byteOrder0, 4126);
      tiffField0.getIntValue();
      assertEquals((-493), tiffField0.getDirectoryType());
      assertEquals((-493), tiffField0.getTag());
      assertEquals((-493), tiffField0.getOffset());
      assertEquals(4126, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-160), (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeFloat0, 0L, (-160), byteArray0, byteOrder0, (-3480));
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-3480), tiffField0.getSortHint());
      assertEquals((-160), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)108, fieldTypeRational0, (byte)108, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(108, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1817, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 1817, fieldTypeShort0, 1817, (-1212L), byteArray0, byteOrder0, (-444));
      tiffField0.getFieldTypeName();
      assertEquals((-444), tiffField0.getSortHint());
      assertEquals((-1212), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1817, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-243), (-243), (FieldType) null, (-27L), (-27L), byteArray0, byteOrder0, 42);
      tiffField0.getFieldType();
      assertEquals((-27), tiffField0.getOffset());
      assertEquals((-243), tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals((-243), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">`=~?");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeDouble0, (-3353L), 0L, byteArray0, (ByteOrder) null, (byte)106);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(106, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1090), 1446, fieldTypeLong0, 1427L, (-1443L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1443), tiffField0.getOffset());
      assertEquals(1446, tiffField0.getDirectoryType());
      assertEquals((-1090), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 1, (-2147483648L), byteArray0, byteOrder0, (-220));
      tiffField0.getDoubleValue();
      assertEquals((-220), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)87;
      TiffField tiffField0 = new TiffField(24, (byte)87, fieldTypeShort0, 1L, (byte)87, byteArray0, byteOrder0, 11);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(24, tiffField0.getTag());
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-780), ", fieldType: ");
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-780), (-780), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 2147042957);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2147042957, tiffField0.getSortHint());
      assertEquals((-780), tiffField0.getTag());
      assertEquals((-780), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1425, 0, fieldTypeRational0, 894L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1425, tiffField0.getTag());
      assertEquals(894L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)0, 50936, fieldTypeDouble0, 448L, (byte)0, byteArray0, (ByteOrder) null, 2097542167);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50936, int0);
      assertEquals(2097542167, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, (-2429), fieldTypeLong0, 1L, 73, byteArray0, byteOrder0, 593);
      long long0 = tiffField0.getCount();
      assertEquals(593, tiffField0.getSortHint());
      assertEquals((-2429), tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getOffset());
      assertEquals(73, tiffField0.getTag());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147107226, 1554, fieldTypeRational0, (byte) (-25), (-4864L), byteArray0, byteOrder0, (-1939));
      long long0 = tiffField0.getCount();
      assertEquals(2147107226, tiffField0.getTag());
      assertEquals((-25L), long0);
      assertEquals(1554, tiffField0.getDirectoryType());
      assertEquals((-1939), tiffField0.getSortHint());
      assertEquals((-4864), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeRational0.SHORT, 0L, (byte)0, byteArray0, (ByteOrder) null, (-3003));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3003), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1425, 0, fieldTypeRational0, 894L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(7152, int0);
      assertEquals(1425, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">`=~?");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeDouble0, (-3353L), 0L, byteArray0, (ByteOrder) null, (byte)106);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3353L), tiffField0.getCount());
      assertEquals(106, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-47), 50, fieldTypeLong0, 4792L, (-2343L), byteArray0, byteOrder0, 2703);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2703, tiffField0.getSortHint());
      assertEquals(4792L, tiffField0.getCount());
      assertEquals((-2343), tiffField0.getOffset());
      assertEquals((-47), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 530, fieldTypeAscii0, 496L, 496L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(530, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(496, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1507, "]mnT+<a>5");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65535, (byte)60, fieldTypeRational0, (-2147483648L), 106L, byteArray0, (ByteOrder) null, 1);
      tiffField0.getByteArrayValue();
      assertEquals(106, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1631), (-1631), fieldTypeRational0, (-1631), (-1631), (byte[]) null, byteOrder0, (-1631));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-7), fieldTypeRational0, (byte) (-7), (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)87, (byte)87, fieldTypeRational0, 1L, (byte)87, byteArray0, byteOrder0, (byte)87);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[152];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65511, 65511, (FieldType) null, 65511, 65511, byteArray0, byteOrder0, 65511);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 37, fieldTypeShort0, 1, 37, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(28, (-2514), fieldTypeShort0.DOUBLE, (-2514), (-2514), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1259), (-1259), fieldTypeShort0, (-1259), (-1259), byteArray0, (ByteOrder) null, (-1259));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 2175L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeRational0, (byte)13, (byte)13, (byte[]) null, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-9), (byte) (-9), fieldTypeShort0, (byte) (-9), (byte) (-9), byteArray0, byteOrder0, (byte) (-9));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, (FieldType) null, (byte)2, (byte)2, byteArray0, byteOrder0, (byte)2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-1), fieldTypeShort0, (byte) (-1), (byte)0, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[187];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1297), "}|h]B22q1;YO,Bt0Rf");
      TiffField tiffField0 = new TiffField(40091, 65516, fieldTypeShort0, 3200L, 43456L, byteArray0, byteOrder0, (-2141847206));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51, 51, fieldTypeLong0, 51, 51, (byte[]) null, byteOrder0, 51);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-69), (byte) (-69), fieldTypeShort0, (byte) (-69), (byte) (-69), byteArray0, byteOrder0, (byte) (-69));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)8, 1, fieldTypeRational0, 1, (-909L), byteArray0, byteOrder0, 687);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, fieldTypeRational0, (byte)2, (byte)2, (byte[]) null, byteOrder0, (byte)2);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147106698, 2147106698, fieldTypeFloat0, 2147106698, 2147106698, byteArray0, byteOrder0, 2147106698);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40093, 33, (FieldType) null, (-5544L), 40093, byteArray0, byteOrder0, (-1802));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeShort0, (byte)6, (byte)6, (byte[]) null, byteOrder0, (byte)6);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-107), fieldTypeRational0, (byte) (-107), (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeRational0, 1, (byte)0, byteArray0, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)34, (byte)34, fieldTypeRational0, (byte)34, (byte)34, (byte[]) null, byteOrder0, (byte)34);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-76), fieldTypeRational0, (byte) (-76), (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeShort0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeShort0, (-2490L), 6, byteArray0, byteOrder0, 6);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(")");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)39, 1, fieldTypeLong0, (-9L), 1353L, byteArray0, byteOrder0, 34892);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OversizeValueElement, tag: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)59, (byte)59, fieldTypeShort0, (-132L), (byte)59, byteArray0, byteOrder0, (byte)59);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 62);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-3), fieldTypeLong0.SHORT, (byte)0, 255L, byteArray0, (ByteOrder) null, (byte)60);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(40095);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("0 (0x0: GPSVersionID):  (0 Short)\n", byteArrayOutputStream0.toString());
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-556), 3504, fieldTypeShort0.FLOAT, (-1216), (byte)109, byteArray0, byteOrder0, (byte)109);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3504, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals((-556), tiffField0.getTag());
      assertEquals(109, tiffField0.getOffset());
      assertEquals(109, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33451, 33451, fieldTypeLong0, 33451, 2430L, byteArray0, byteOrder0, (-598));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(33451, tiffField0.getDirectoryType());
      assertEquals((-598), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(33451, tiffField0.getTag());
      assertEquals(2430, tiffField0.getOffset());
      assertEquals(33451L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4573, 4573, fieldTypeRational0, 4573, 4573, (byte[]) null, byteOrder0, 4573);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-584), "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-584), (-584), fieldTypeRational0, 381L, (-584), byteArray0, (ByteOrder) null, (-584));
      tiffField0.getFieldType();
      assertEquals((-584), tiffField0.getTag());
      assertEquals((-584), tiffField0.getDirectoryType());
      assertEquals(381L, tiffField0.getCount());
      assertEquals((-584), tiffField0.getSortHint());
      assertEquals((-584), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)5, (byte)5, fieldTypeShort0, (byte)5, (byte)5, byteArray0, byteOrder0, (byte)5);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4579, 4579, (FieldType) null, 3900L, 3900L, byteArray0, byteOrder0, 4579);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(582, 3645, fieldTypeLong0.ASCII, 582, 582, byteArray0, byteOrder0, (byte)0);
      tiffField0.getTagInfo();
      assertEquals(3645, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(582, tiffField0.getOffset());
      assertEquals(582, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)59, (byte)59, fieldTypeShort0, (-132L), (byte)59, byteArray0, byteOrder0, (byte)59);
      int int0 = tiffField0.getTag();
      assertEquals(59, int0);
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals((-132L), tiffField0.getCount());
      assertEquals(59, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 65105, fieldTypeShort0, 0L, 65105, byteArray0, byteOrder0, 5280);
      long long0 = tiffField0.getCount();
      assertEquals(1, tiffField0.getTag());
      assertEquals(65105, tiffField0.getDirectoryType());
      assertEquals(65105, tiffField0.getOffset());
      assertEquals(0L, long0);
      assertEquals(5280, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-23), (-23), fieldTypeAscii0, (-877L), (-23), byteArray0, (ByteOrder) null, (-23));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-23), tiffField0.getOffset());
      assertEquals((-23), tiffField0.getTag());
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals((-877), int0);
      assertEquals((-23), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)55, (byte)55, fieldTypeShort0, (byte)55, (byte)55, byteArray0, (ByteOrder) null, (byte)55);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)39, fieldTypeShort0, (byte)39, (byte)0, byteArray0, byteOrder0, (byte)39);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeRational0, (byte)13, (byte)13, byteArray0, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, (byte) (-22), fieldTypeByte0, 50, (byte) (-22), byteArray0, byteOrder0, (byte) (-22));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@50605d46 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[165];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)64, (byte)64, fieldTypeFloat0, (byte)64, (byte)64, byteArray0, byteOrder0, (byte)64);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getTag());
      assertEquals(41, doubleArray0.length);
      assertEquals(64, tiffField0.getOffset());
      assertEquals(64L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, (-295), fieldTypeLong0, 658L, (byte)0, byteArray0, (ByteOrder) null, 2973);
      tiffField0.getDoubleArrayValue();
      assertEquals((-295), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2973, tiffField0.getSortHint());
      assertEquals(658L, tiffField0.getCount());
      assertEquals(2632, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)87, (byte)87, fieldTypeShort0, (byte)87, (byte)87, byteArray0, byteOrder0, (byte)87);
      tiffField0.getDoubleArrayValue();
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(87, tiffField0.getTag());
      assertEquals(87, tiffField0.getOffset());
      assertEquals(87L, tiffField0.getCount());
      assertEquals(174, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)77, fieldTypeRational0, (byte)77, (byte)0, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(77L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(616, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[57];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.DOUBLE, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, (-295), fieldTypeLong0, 658L, (byte)0, byteArray0, (ByteOrder) null, 2973);
      tiffField0.getIntArrayValue();
      assertEquals(2632, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2973, tiffField0.getSortHint());
      assertEquals(658L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-295), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)39, fieldTypeShort0, (byte)39, (byte)0, byteArray0, byteOrder0, (byte)39);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(78, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(39L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)87, fieldTypeRational0, (byte)87, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(87L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(696, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)87, fieldTypeRational0, (byte)87, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[57];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.DOUBLE, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@378201f3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)44, 37385, fieldTypeShort0.ASCII, 37385, 37385, byteArray0, byteOrder0, 2640);
      String string0 = tiffField0.getStringValue();
      assertEquals(37385, tiffField0.getDirectoryType());
      assertEquals(37385, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(37385, tiffField0.getBytesLength());
      assertEquals(2640, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)89, fieldTypeRational0, (byte)89, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@a66db23
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(581, 581, fieldTypeRational0, 581, 581, byteArray0, byteOrder0, 581);
      String string0 = tiffField0.getTagName();
      assertEquals(581, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x245)", string0);
      assertEquals(581, tiffField0.getDirectoryType());
      assertEquals(581, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40960, (-15), fieldTypeLong0, 40960, (-15), byteArray0, byteOrder0, (-15));
      String string0 = tiffField0.getTagName();
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(40960, tiffField0.getTag());
      assertEquals("FlashpixVersion", string0);
      assertEquals((-15), tiffField0.getOffset());
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals(163840, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3708), (-3708), fieldTypeLong0, 0L, 0L, (byte[]) null, byteOrder0, (-3708));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[236];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(336, (-38), fieldTypeFloat0, 336, 336, byteArray0, byteOrder0, 336);
      String string0 = tiffField0.toString();
      assertEquals((-38), tiffField0.getDirectoryType());
      assertEquals("336 (0x150: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (59) (336 Float)", string0);
      assertEquals(336, tiffField0.getOffset());
      assertEquals(336, tiffField0.getSortHint());
      assertEquals(1344, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(3772, 0, fieldTypeByte0, 3772, 0, byteArray0, byteOrder0, 3772);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("3772 (0xebc: Unknown Tag): 0, 0, 0, 0 (3772 Byte)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3772, tiffField0.getBytesLength());
      assertEquals(3772, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[187];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)26, (byte)26, fieldTypeByte0, 192492L, 192492L, byteArray0, byteOrder0, (byte)26);
      String string0 = tiffField0.getValueDescription();
      assertEquals(192492, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(192492L, tiffField0.getCount());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getTag());
      assertEquals(192492, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65581, 65581, fieldTypeFloat0, 65581, 65581, byteArray0, byteOrder0, 65581);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65581, tiffField0.getDirectoryType());
      assertEquals(65581, tiffField0.getSortHint());
      assertEquals(262324, tiffField0.getBytesLength());
      assertEquals(65581, tiffField0.getTag());
      assertEquals(65581, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65581L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[254];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeLong0, 449L, 449L, byteArray0, byteOrder0, (byte)13);
      String string0 = tiffField0.getValueDescription();
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(449, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1796, tiffField0.getBytesLength());
      assertEquals(449L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[168];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(65576, 65576, fieldTypeLong0, 65576, 65576, byteArray0, byteOrder0, 65576);
      String string0 = tiffField0.getValueDescription();
      assertEquals(262304, tiffField0.getBytesLength());
      assertEquals(65576, tiffField0.getDirectoryType());
      assertEquals(65576L, tiffField0.getCount());
      assertEquals(65576, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65576, tiffField0.getOffset());
      assertEquals(65576, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[177];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65576, 65576, fieldTypeShort0, 65576, (byte)24, byteArray0, byteOrder0, 2993);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65576, tiffField0.getDirectoryType());
      assertEquals(131152, tiffField0.getBytesLength());
      assertEquals(65576L, tiffField0.getCount());
      assertEquals(2993, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getOffset());
      assertEquals(65576, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65581, 65581, fieldTypeAscii0, 65581, 2952L, byteArray0, byteOrder0, 65581);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(65581, tiffField0.getSortHint());
      assertEquals(2952, tiffField0.getOffset());
      assertEquals(65581, tiffField0.getTag());
      assertEquals(65581, tiffField0.getBytesLength());
      assertEquals(65581, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)13, fieldTypeRational0, (byte)13, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(13L, tiffField0.getCount());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4297, 4297, fieldTypeRational0.ASCII, 4297, 4297, byteArray0, byteOrder0, 4297);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4297, tiffField0.getOffset());
      assertEquals(4297, tiffField0.getTag());
      assertEquals(4297, tiffField0.getBytesLength());
      assertEquals(4297, tiffField0.getSortHint());
      assertEquals(4297, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1834, (byte) (-111), fieldTypeShort0, 1, 0L, byteArray0, (ByteOrder) null, 1834);
      tiffField0.dump();
      assertEquals((-111), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1834, tiffField0.getTag());
      assertEquals(1834, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[128];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeLong0.DOUBLE, (byte)50, (byte)50, byteArray0, (ByteOrder) null, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(792, 792, fieldTypeFloat0, (byte)48, 792, byteArray0, byteOrder0, (byte)48);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1279), 2147398609);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(792, tiffField0.getDirectoryType());
      assertEquals(792, tiffField0.getOffset());
      assertEquals(792, tiffField0.getTag());
      assertEquals(48L, tiffField0.getCount());
      assertNull(string0);
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[167];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 65511, fieldTypeFloat0, (-3296L), 2704L, byteArray0, byteOrder0, 65511);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(65511, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-3296L), tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(65511, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(2704, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeRational0, 338, 48129L, (byte[]) null, byteOrder0, 934);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(10, (byte)0, (FieldType) null, (byte)0, (-1L), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouUle");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3708), 3257, fieldTypeLong0, 0L, 3257, (byte[]) null, byteOrder0, 3257);
      int int0 = tiffField0.getOffset();
      assertEquals((-3708), tiffField0.getTag());
      assertEquals(3257, tiffField0.getSortHint());
      assertEquals(3257, int0);
      assertEquals(3257, tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-3708), (-3708), fieldTypeLong0, (-3708), 0L, (byte[]) null, (ByteOrder) null, (-3708));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3708L), tiffField0.getCount());
      assertEquals((-3708), int0);
      assertEquals((-3708), tiffField0.getTag());
      assertEquals((-3708), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-3708), (-3708), fieldTypeLong0, 0L, 0L, (byte[]) null, (ByteOrder) null, (-3708));
      int int0 = tiffField0.getSortHint();
      assertEquals((-3708), int0);
      assertEquals((-3708), tiffField0.getDirectoryType());
      assertEquals((-3708), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2657, 2657, fieldTypeShort0, 2657, 2657, byteArray0, byteOrder0, 2657);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2657, tiffField0.getOffset());
      assertEquals(2657, tiffField0.getSortHint());
      assertEquals(2657, tiffField0.getDirectoryType());
      assertEquals("2657 (0xa61: Unknown Tag): ", string0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(72, "MAM#I1(s*%+kIc^");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeAscii0, 72, 0L, (byte[]) null, byteOrder0, 72);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[57];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.DOUBLE, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@412bce77 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
