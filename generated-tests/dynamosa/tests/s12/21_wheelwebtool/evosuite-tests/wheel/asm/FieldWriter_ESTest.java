/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 23:00:35 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-27), "double", "double", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-27), (-3), "\">+\"H'cZ^>!N@J&}K&", "~PB?3u9YSk_%", "org.apache.commons.io.filefilter.DirectoryFileFilter", stringArray0);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-27), "double", "double", (String) null, (Object) null);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-27), (-3), "\">+\"H'cZ^>!N@J&}K&", "~PB?3u9YSk_%", "org.apache.commons.io.filefilter.DirectoryFileFilter", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-1), "f\"JYgG@j':VM<?BzB", "RuntimeVisibleAnnotations", "f\"JYgG@j':VM<?BzB", "double");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "ConstantValue", "ConstantValue", "ConstantValue", "ConstantValue");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-26), "double", "double", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(723, "dsu&_e", "dsu&_e", "dsu&_e", "dsu&_e");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.length = 260;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-38));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, (String) null, "&~tAb}6UH!'^xQxru", classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1310));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "%0m2JWYu!1jMV2}r", "%0m2JWYu!1jMV2}r", "%0m2JWYu!1jMV2}r", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "", "J83co\"&)1d6-Pbq");
      Attribute attribute0 = new Attribute(".'WvAYi");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(23);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "-", "-", "-", "");
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.visitAnnotation(">;c/;mda>s8fd", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation(">;c/;mda>s8fd", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-26), "double", "double", (String) null, (Object) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "C";
      classWriter0.visit(49, 43, "kdCMNse*", "C", "double", stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-26), "double", "double", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "[tohstantV}lue", "[tohstantV}lue", "[tohstantV}lue", "[tohstantV}lue");
      Attribute attribute0 = new Attribute("[tohstantV}lue");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1021);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "F(28{Ih", "F(28{Ih", "F(28{Ih", "F(28{Ih");
      fieldWriter0.visitAnnotation("F(28{Ih", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq", "J83co\"&)1d6-Pbq");
      fieldWriter0.visitAnnotation("`(UZbZIF)'", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-26), "double", "double", (String) null, (Object) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "C";
      classWriter0.visit(49, 43, "kdCMNse*", "C", "double", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-26), "double", "double", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-26), "double", "double", (String) null, (Object) null);
      FieldVisitor fieldVisitor1 = classWriter0.visitField(4096, "C", "", "_R'Am v", (Object) null);
      assertFalse(fieldVisitor1.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(23);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "-", "-", "-", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-59));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-59), "", "", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }
}
