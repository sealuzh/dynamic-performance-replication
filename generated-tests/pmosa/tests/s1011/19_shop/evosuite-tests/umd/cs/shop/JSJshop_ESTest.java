/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 18:52:10 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.dnd.DropTarget;
import java.io.BufferedReader;
import java.io.FileDescriptor;
import java.io.Reader;
import java.io.StreamTokenizer;
import javax.swing.JApplet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSMethod;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSState;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.semicolon = 1;
      jSJshop0.getTree();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "wvU:T%Nq1So\"/{K7K:A";
      jSJshop0.getDeleteList();
      JSJshopVars.dot = (-1475);
      JSJshopVars.flagLevel = (-2);
      JSJshopVars.semicolon = (-2);
      jSJshop0.getDeleteList();
      String string1 = "";
      JSJshopVars.greaterT = (-2);
      // Undeclared exception!
      try { 
        jSJshop0.getBufferedReader("wvU:T%Nq1So\"/{K7K:A", "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.interrogation = 0;
      JSJshopVars.whiteSpace = 5;
      JSJshop.corbaToHicap = false;
      JSJshopVars.slash = 5711;
      jSJshop0.getTree();
      JSJshopVars.whiteSpace = 38;
      JApplet jApplet0 = null;
      JSJshopVars.rightBrac = 0;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "one";
      JSJshop.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSState jSState0 = new JSState();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "XwMrtx*Wdi|N,$;fr";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSJshop jSJshop0 = new JSJshop();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "sjed";
      stringArray0[2] = "sjed";
      JSJshop.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      JSPlanningProblem jSPlanningProblem0 = jSJshop0.prob();
      assertNull(jSPlanningProblem0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "umd.cs.shop.JSTerm";
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.coma = 1;
      String string0 = " parsing list of tasks: unexpected atom";
      JSJshopVars.flagExit = false;
      JSJshopVars.plus = 0;
      JApplet jApplet0 = null;
      jSJshop0.getBufferedReader(" parsing list of tasks: unexpected atom", " parsing list of tasks: unexpected atom", (JApplet) null);
      jSJshop0.getAddList();
      jSJshop0.getDeleteList();
      jSJshop0.getTree();
      jSJshop0.getDeleteList();
      String string1 = "@!R$.LYK-L:3";
      StreamTokenizer streamTokenizer0 = null;
      try {
        streamTokenizer0 = new StreamTokenizer((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("", (String) null, (JApplet) null);
      assertNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.sol();
      jSJshop0.tree();
      jSJshop0.getTree();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      JSJshop.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "$2H4W^N2NIJrR{yqjLD";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/$2H4W^N2NIJrR{yqjLD");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)101;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte)19;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("$2H4W^N2NIJrR{yqjLD", "%%%");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/m91cRg`)&sN");
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "one");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("m91cRg`)&sN", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.coma = 1;
      String string0 = " parsing list of tasks: unexpected atom";
      JSJshopVars.flagExit = false;
      JSJshopVars.plus = 0;
      jSJshop0.getBufferedReader(" parsing list of tasks: unexpected atom", " parsing list of tasks: unexpected atom", (JApplet) null);
      jSJshop0.getAddList();
      jSJshop0.getDeleteList();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSJshop jSJshop1 = new JSJshop("Expecting Term", "-FDu#7,CQGDw222");
      JSMethod jSMethod0 = new JSMethod();
      // Undeclared exception!
      try { 
        jSMethod0.standarizerMet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/all/call ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      JSState jSState0 = new JSState();
      jSJshop0.getDeleteList();
      jSJshop0.getDeleteList();
      JSJshopVars.rightPar = (-4);
      jSJshop0.getBufferedReader(".\"9", " Expecting defdomain or defproblem", (JApplet) null);
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("all", "call ", (JApplet) null);
      assertNotNull(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/<\\2-.");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("<\u0002-.", "<\u0002-.");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/m91cRg`)&sN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";H");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("m91cRg`)&sN", ";H");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Expecting ':' for axiom,method or operator definition");
      jSJshop0.getBufferedReader("vu>wa", "vu>wa", (JApplet) null);
      jSJshop0.testParser();
      // Undeclared exception!
      try { 
        JSJshop.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }
}
