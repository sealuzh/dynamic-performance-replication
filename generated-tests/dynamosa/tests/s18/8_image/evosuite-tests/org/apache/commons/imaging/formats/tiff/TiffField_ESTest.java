/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 05:22:48 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)126;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 107, fieldTypeShort0, (byte)126, (byte)0, byteArray0, byteOrder0, (-136));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(32256, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-136), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[5] = (byte) (-73);
      TiffField tiffField0 = new TiffField((-2147078231), (-2147078231), fieldTypeShort0.RATIONAL, (-1610612735), (-2147078231), byteArray0, byteOrder0, (byte) (-73));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals((-2147078231), tiffField0.getDirectoryType());
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals((-2147078231), tiffField0.getTag());
      assertEquals((-2147078231), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte) (-73);
      TiffField tiffField0 = new TiffField((-2147078231), (-2147078231), fieldTypeShort0.SRATIONAL, (-1610612735), (-2147078231), byteArray0, byteOrder0, (byte) (-73));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2147078231), tiffField0.getDirectoryType());
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals((-2147078231), tiffField0.getTag());
      assertEquals((-2147078231), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)38, 2478, fieldTypeLong0, 1L, 179, byteArray0, byteOrder0, 2478);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(179, tiffField0.getOffset());
      assertEquals(2478, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getTag());
      assertEquals(2478, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)27, (-2109808495), fieldTypeLong0, 7896L, 126L, byteArray0, byteOrder0, (byte)27);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("?&Mx+,]M.QnnTP[g_t0");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "?&Mx+,]M.QnnTP[g_t0");
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-2109808495), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(126, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1988, 0, fieldTypeShort0, 0, (-2058L), byteArray0, byteOrder0, (-3463));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1988, tiffField0.getTag());
      assertEquals((-3463), tiffField0.getSortHint());
      assertEquals((-2058), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48320, 48320, fieldTypeLong0, 713L, 48320, byteArray0, byteOrder0, (-1));
      tiffField0.getValue();
      assertEquals(48320, tiffField0.getDirectoryType());
      assertEquals(48320, tiffField0.getTag());
      assertEquals(48320, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34853, 1096, fieldTypeByte0, 65535, 200L, byteArray0, byteOrder0, 1096);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1096, tiffField0.getDirectoryType());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(34853, tagInfo0.tag);
      assertEquals(200, tiffField0.getOffset());
      assertEquals(1096, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 166, 4L, byteArray0, byteOrder0, (-242));
      int int0 = tiffField0.getTag();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-242), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 0L, 50, byteArray0, byteOrder0, (byte)40);
      int int0 = tiffField0.getTag();
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte) (-36);
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField(3338, 41993, fieldTypeAscii0, 22L, (-1525L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(41993, tiffField0.getDirectoryType());
      assertEquals(3338, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1525), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(3221);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 3221, (FieldType) null, 0L, 1711L, byteArray0, byteOrder0, (byte)40);
      int int0 = tiffField0.getSortHint();
      assertEquals(3221, tiffField0.getDirectoryType());
      assertEquals(40, int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1711, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48320, 48320, fieldTypeLong0, 713L, 48320, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(48320, tiffField0.getOffset());
      assertEquals(48320, tiffField0.getTag());
      assertEquals(48320, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 14, 14, byteArray0, byteOrder0, 14);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3921), 2, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-3921));
      tiffField0.getOffset();
      assertEquals((-3921), tiffField0.getTag());
      assertEquals((-3921), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-870), (-870), (FieldType) null, (-870), (-1L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), int0);
      assertEquals((-870), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-870), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, (byte)1, (-2903L), byteArray0, byteOrder0, (byte)45);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2903), tiffField0.getOffset());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-73);
      TiffField tiffField0 = new TiffField((-2109808495), 122, fieldTypeShort0, (byte)1, (-2147078231), byteArray0, byteOrder0, 37439);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2109808495), tiffField0.getTag());
      assertEquals((-2147078231), tiffField0.getOffset());
      assertEquals(37439, tiffField0.getSortHint());
      assertEquals(122, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)0, fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, 3);
      tiffField0.getIntValue();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((-2147078231), (-2147078231), fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, 875);
      tiffField0.getIntValue();
      assertEquals(875, tiffField0.getSortHint());
      assertEquals((-2147078231), tiffField0.getDirectoryType());
      assertEquals((-2147078231), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-81);
      TiffField tiffField0 = new TiffField(22, 269, fieldTypeShort0, 1L, 269, byteArray0, byteOrder0, (byte) (-81));
      tiffField0.getIntValue();
      assertEquals(22, tiffField0.getTag());
      assertEquals(269, tiffField0.getOffset());
      assertEquals((-81), tiffField0.getSortHint());
      assertEquals(269, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, (String) null);
      TiffField tiffField0 = new TiffField(10, 60, fieldTypeFloat0, 50, 60, byteArray0, byteOrder0, 1521);
      tiffField0.getFieldTypeName();
      assertEquals(10, tiffField0.getTag());
      assertEquals(60, tiffField0.getOffset());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(1521, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-73), "");
      TiffField tiffField0 = new TiffField((byte) (-73), 50, fieldTypeShort0, 65535, 1874L, byteArray0, byteOrder0, (-2147483647));
      tiffField0.getFieldTypeName();
      assertEquals(1874, tiffField0.getOffset());
      assertEquals((-2147483647), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-73), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, (-526), (FieldType) null, (-526), (-526), byteArray0, byteOrder0, 14);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-526), tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-526), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals");
      TiffField tiffField0 = new TiffField(6, 9, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 9);
      tiffField0.getFieldType();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte) (-73), "org.apache.commons.imaging.common.ByteConversions");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, 1, fieldTypeRational0, 1188L, (-1610612735), byteArray0, byteOrder0, (byte) (-73));
      tiffField0.getFieldType();
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals((-1610612735), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147333274, (byte)45, fieldTypeByte0, (byte)1, 2147333274, byteArray0, byteOrder0, (byte)45);
      tiffField0.getDoubleValue();
      assertEquals(2147333274, tiffField0.getOffset());
      assertEquals(2147333274, tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-627), (-2027), fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, (-2027));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2027), tiffField0.getSortHint());
      assertEquals((-2027), tiffField0.getDirectoryType());
      assertEquals((-627), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-73);
      TiffField tiffField0 = new TiffField((-2109808495), 122, fieldTypeShort0, (byte)1, (-2147078231), byteArray0, byteOrder0, 37439);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-2147078231), tiffField0.getOffset());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals((-2109808495), tiffField0.getTag());
      assertEquals(37439, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1988, 0, fieldTypeShort0, 0, (-2058L), byteArray0, byteOrder0, (-3463));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-3463), tiffField0.getSortHint());
      assertEquals((-2058), tiffField0.getOffset());
      assertEquals(1988, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2883), (-2883), fieldTypeLong0, (-2883), (-2883), byteArray0, byteOrder0, (-786));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-786), tiffField0.getSortHint());
      assertEquals((-2883), tiffField0.getOffset());
      assertEquals((-2883), int0);
      assertEquals((-2883), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1973), (-1973), fieldTypeByte0, 492L, 492L, byteArray0, byteOrder0, (-627));
      long long0 = tiffField0.getCount();
      assertEquals((-1973), tiffField0.getTag());
      assertEquals(492, tiffField0.getOffset());
      assertEquals((-627), tiffField0.getSortHint());
      assertEquals((-1973), tiffField0.getDirectoryType());
      assertEquals(492L, long0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(179, (byte)38, fieldTypeLong0, (byte) (-42), 4L, byteArray0, byteOrder0, 3);
      long long0 = tiffField0.getCount();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(179, tiffField0.getTag());
      assertEquals((-42L), long0);
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, 73L, byteArray0, byteOrder0, (byte) (-120));
      tiffField0.getBytesLength();
      assertEquals((-120), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-120), 2172, fieldTypeLong0.SHORT, (byte) (-120), (byte) (-120), byteArray0, byteOrder0, (byte) (-120));
      tiffField0.getBytesLength();
      assertEquals((-120), tiffField0.getTag());
      assertEquals((-120), tiffField0.getSortHint());
      assertEquals((-120), tiffField0.getOffset());
      assertEquals(2172, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(391, 391, fieldTypeShort0, 391, 391, byteArray0, (ByteOrder) null, 391);
      tiffField0.getByteOrder();
      assertEquals(391, tiffField0.getDirectoryType());
      assertEquals(391, tiffField0.getSortHint());
      assertEquals(391, tiffField0.getTag());
      assertEquals(391, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1965, 1965, fieldTypeByte0, 1965, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getByteArrayValue();
      assertEquals(1965, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1965, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (-1568L), byteArray0, byteOrder0, (byte) (-110));
      tiffField0.getByteArrayValue();
      assertEquals((-1568), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-110), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 107, fieldTypeShort0, (byte)126, (byte)0, byteArray0, byteOrder0, (-136));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1973), (-1973), fieldTypeByte0, 492L, 492L, byteArray0, byteOrder0, (-627));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1657);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(46, charArrayWriter0.size());
      assertEquals((-1973), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(961, 961, fieldTypeByte0, 961, 961, (byte[]) null, byteOrder0, 961);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[83];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte) (-81), (byte) (-81), fieldTypeShort0, (byte) (-81), (byte) (-81), byteArray0, byteOrder0, (byte) (-81));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50933, 50933, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50933);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 2167L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2141451390, 2141451390, fieldTypeShort0, 2141451390, 2141451390, (byte[]) null, byteOrder0, 2141451390);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte) (-68), (byte) (-68), fieldTypeShort0, (byte) (-68), (byte) (-68), byteArray0, byteOrder0, (byte) (-68));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)27, (-2109808495), fieldTypeLong0, 7896L, 126L, byteArray0, byteOrder0, (byte)27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1582), (-1582), fieldTypeShort0, (-1582), (-1582), byteArray0, byteOrder0, (-1582));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(60, 60, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 60);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)72, (byte)72, fieldTypeShort0, (byte)72, (byte)72, (byte[]) null, byteOrder0, (byte)72);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-972), (-972), fieldTypeShort0, (-972), (-972), byteArray0, byteOrder0, (-972));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 42032, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeShort0, 43, 43, (byte[]) null, byteOrder0, 43);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147415630), (-2147415630), fieldTypeByte0, (-2147415630), (-2147415630), byteArray0, byteOrder0, (-2147415630));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-68), 1, fieldTypeShort0, 1, 255L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)27, (-2109808495), fieldTypeLong0, 7896L, 126L, byteArray0, byteOrder0, (byte)27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(201, 201, fieldTypeShort0, 201, 201, (byte[]) null, byteOrder0, 201);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-54), (byte) (-54), fieldTypeShort0.SRATIONAL, (byte) (-54), (byte) (-54), byteArray0, byteOrder0, (byte) (-54));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(119, 119, fieldTypeShort0, 119, 119, (byte[]) null, byteOrder0, 119);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte) (-81), (byte) (-81), fieldTypeShort0.SRATIONAL, (byte) (-81), (byte) (-81), byteArray0, byteOrder0, (byte) (-81));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0.SRATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40093, (byte)81, fieldTypeShort0, (byte)81, 40093, byteArray0, byteOrder0, (byte)81);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1347), (-1347), fieldTypeShort0, (-1347), (-1347), byteArray0, byteOrder0, (-1347));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(60, 2142614070, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 2142614070);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 37, (byte[]) null, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2966), (-2966), fieldTypeShort0, (-2966), (-2966), byteArray0, byteOrder0, (-2966));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-36), (byte) (-36), fieldTypeShort0.SRATIONAL, 1L, (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2231, 50724, (FieldType) null, 784L, 50724, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-750), (-750), fieldTypeShort0, (-750), 2780L, byteArray0, byteOrder0, (-750));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[129];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-2577), 16, fieldTypeLong0, (-2577), (-2577), byteArray0, byteOrder0, 48321);
      MockFile mockFile0 = new MockFile("): ", "): ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "): ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeShort0, 6, 6, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-36), (byte) (-36), fieldTypeShort0.SRATIONAL, (byte) (-36), (byte) (-36), byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeShort0, 1L, 1944L, byteArray0, byteOrder0, 122);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2109808495), (-1930), fieldTypeByte0.IFD, 1443L, 65535, byteArray0, byteOrder0, 65535);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ZLE$#k0PZAzw_l'1}");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-1930), tiffField0.getDirectoryType());
      assertEquals(1443L, tiffField0.getCount());
      assertEquals((-2109808495), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 7, fieldTypeByte0, 1L, 3367L, byteArray0, byteOrder0, (-493));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-493), tiffField0.getSortHint());
      assertEquals(3367, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2145428639, 2145428639, fieldTypeLong0, 5588L, 5588L, byteArray0, byteOrder0, (byte)4);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(5588, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(2145428639, tiffField0.getDirectoryType());
      assertEquals(2145428639, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(848, 848, fieldTypeFloat0, 4L, 848, byteArray0, byteOrder0, 37388);
      tiffField0.getByteOrder();
      assertEquals(848, tiffField0.getTag());
      assertEquals(848, tiffField0.getOffset());
      assertEquals(848, tiffField0.getDirectoryType());
      assertEquals(37388, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2136904909), (-2136904909), (FieldType) null, (-2136904909), (-2136904909), byteArray0, byteOrder0, (-2136904909));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(6, 9, fieldTypeShort0.LONG, 0, 0L, byteArray0, byteOrder0, 9);
      tiffField0.getFieldType();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147180630, ":2{q PbQ5Nv{@HT");
      TiffField tiffField0 = new TiffField(6, 1976, fieldTypeDouble0, 2147180630, 1976, byteArray0, (ByteOrder) null, 1976);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeLong0, 264L, 15, (byte[]) null, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2630, (byte) (-97), fieldTypeShort0, 0L, 2630, byteArray0, (ByteOrder) null, 34737);
      int int0 = tiffField0.getOffset();
      assertEquals(34737, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(2630, tiffField0.getTag());
      assertEquals(2630, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (byte) (-68), fieldTypeShort0, 66, (byte) (-68), byteArray0, byteOrder0, 35);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-68), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-68), tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-75), (-75), fieldTypeDouble0, (-75), (-75), byteArray0, byteOrder0, (-75));
      int int0 = tiffField0.getTag();
      assertEquals((-75), tiffField0.getOffset());
      assertEquals((-75), tiffField0.getSortHint());
      assertEquals((-75), int0);
      assertEquals((-75), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2630, (byte) (-97), fieldTypeShort0, 0L, 2630, byteArray0, (ByteOrder) null, 34737);
      tiffField0.getCount();
      assertEquals(2630, tiffField0.getTag());
      assertEquals(34737, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(2630, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(848, 848, fieldTypeFloat0, 4L, 848, byteArray0, byteOrder0, 37388);
      tiffField0.getBytesLength();
      assertEquals(848, tiffField0.getDirectoryType());
      assertEquals(848, tiffField0.getTag());
      assertEquals(848, tiffField0.getOffset());
      assertEquals(37388, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeShort0, 122, 122, byteArray0, byteOrder0, 122);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeShort0, 122, 122, byteArray0, byteOrder0, 122);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41989, 41989, fieldTypeLong0, 41989, 41989, byteArray0, byteOrder0, 41989);
      tiffField0.getIntValueOrArraySum();
      assertEquals(41989, tiffField0.getTag());
      assertEquals(41989, tiffField0.getSortHint());
      assertEquals(41989L, tiffField0.getCount());
      assertEquals(41989, tiffField0.getOffset());
      assertEquals(41989, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0.SRATIONAL, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-79), fieldTypeByte0, (byte)45, 4L, byteArray0, byteOrder0, (-79));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1eba720b for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeAscii0, 1065L, (byte)50, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2c79d949 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)38, (byte)38, fieldTypeFloat0, (byte)38, (byte)38, byteArray0, byteOrder0, (byte)38);
      tiffField0.getDoubleArrayValue();
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getOffset());
      assertEquals(38, tiffField0.getTag());
      assertEquals(38L, tiffField0.getCount());
      assertEquals(38, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[146];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(530, 530, fieldTypeDouble0, 530, 530, byteArray0, byteOrder0, 530);
      tiffField0.getDoubleArrayValue();
      assertEquals(530, tiffField0.getTag());
      assertEquals(530, tiffField0.getDirectoryType());
      assertEquals(530, tiffField0.getSortHint());
      assertEquals(530, tiffField0.getOffset());
      assertEquals(530L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(4541, 4541, fieldTypeShort0, 4541, 4541, byteArray0, byteOrder0, 4541);
      tiffField0.getDoubleArrayValue();
      assertEquals(4541, tiffField0.getSortHint());
      assertEquals(4541, tiffField0.getTag());
      assertEquals(4541, tiffField0.getDirectoryType());
      assertEquals(4541L, tiffField0.getCount());
      assertEquals(4541, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65519, 65519, fieldTypeDouble0.SLONG, 65519, 65519, byteArray0, byteOrder0, 65519);
      tiffField0.getDoubleArrayValue();
      assertEquals(65519, tiffField0.getDirectoryType());
      assertEquals(65519, tiffField0.getSortHint());
      assertEquals(65519, tiffField0.getTag());
      assertEquals(65519, tiffField0.getOffset());
      assertEquals(65519L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeShort0, 122, 122, byteArray0, byteOrder0, 122);
      tiffField0.getDoubleArrayValue();
      assertEquals(122, tiffField0.getOffset());
      assertEquals(122L, tiffField0.getCount());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(122, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(126, 126, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 126);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0.SRATIONAL, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeAscii0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7963cb6d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[146];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)51, (byte)51, fieldTypeLong0, (byte)51, (byte)51, byteArray0, byteOrder0, (byte)51);
      tiffField0.getIntArrayValue();
      assertEquals(51, tiffField0.getOffset());
      assertEquals(51, tiffField0.getTag());
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getDirectoryType());
      assertEquals(51L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)78, (byte)78, fieldTypeShort0.SRATIONAL, (byte)78, (byte)78, byteArray0, byteOrder0, (byte)78);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(140, 140, fieldTypeShort0, 140, 140, byteArray0, byteOrder0, 140);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(140, tiffField0.getOffset());
      assertEquals(140, tiffField0.getDirectoryType());
      assertEquals(140, tiffField0.getSortHint());
      assertEquals(140, tiffField0.getTag());
      assertEquals(140L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0.SRATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0.SRATIONAL, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeShort0, 122, 122, byteArray0, byteOrder0, 122);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@6f9c8e5d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(41491, " x\")'sx-'-Gu7");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 41491, byteArray0, byteOrder0, 41491);
      String string0 = tiffField0.getStringValue();
      assertEquals(41491, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(41491, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeShort0, 122, 122, byteArray0, byteOrder0, 122);
      String string0 = tiffField0.getTagName();
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(122, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x7a)", string0);
      assertEquals(122, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(322, 322, fieldTypeShort0, 322, 322, byteArray0, byteOrder0, (-427));
      String string0 = tiffField0.getTagName();
      assertEquals((-427), tiffField0.getSortHint());
      assertEquals(322, tiffField0.getDirectoryType());
      assertEquals(322, tiffField0.getTag());
      assertEquals("TileWidth", string0);
      assertEquals(322, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(32898, 32898, fieldTypeFloat0, 32898, 32898, byteArray0, byteOrder0, 32898);
      String string0 = tiffField0.getValueDescription();
      assertEquals(32898, tiffField0.getTag());
      assertEquals(32898, tiffField0.getSortHint());
      assertEquals(32898L, tiffField0.getCount());
      assertEquals(32898, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(32898, tiffField0.getOffset());
      assertEquals(131592, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37379, 37379, fieldTypeByte0, 8496L, 37379, byteArray0, byteOrder0, 37379);
      String string0 = tiffField0.toString();
      assertEquals("37379 (0x9203: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (8496 Byte)", string0);
      assertEquals(37379, tiffField0.getOffset());
      assertEquals(37379, tiffField0.getDirectoryType());
      assertEquals(8496, tiffField0.getBytesLength());
      assertEquals(37379, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147415630), (-2147415630), fieldTypeByte0, 1524L, (-2147415630), byteArray0, byteOrder0, (-2147415630));
      tiffField0.dump();
      assertEquals((-2147415630), tiffField0.getOffset());
      assertEquals((-2147415630), tiffField0.getTag());
      assertEquals((-2147415630), tiffField0.getSortHint());
      assertEquals(1524L, tiffField0.getCount());
      assertEquals((-2147415630), tiffField0.getDirectoryType());
      assertEquals(1524, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65539, 65539, fieldTypeDouble0, 65539, 65539, byteArray0, byteOrder0, 65539);
      String string0 = tiffField0.toString();
      assertEquals("65539 (0x10003: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (65539 Double)", string0);
      assertEquals(65539, tiffField0.getDirectoryType());
      assertEquals(65539, tiffField0.getOffset());
      assertEquals(524312, tiffField0.getBytesLength());
      assertEquals(65539, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[223];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)81, (byte)81, fieldTypeLong0, (byte)81, (-790L), byteArray0, byteOrder0, (byte)81);
      String string0 = tiffField0.getValueDescription();
      assertEquals(81L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55)", string0);
      assertEquals((-790), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(81, tiffField0.getTag());
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "%A$,Hy)$B");
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, 262L, 262L, byteArray0, byteOrder0, 37379);
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(524, tiffField0.getBytesLength());
      assertEquals(37379, tiffField0.getSortHint());
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (262 %A$,Hy)$B)", string0);
      assertEquals(262, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte) (-81), (byte) (-81), fieldTypeAscii0, 640L, 640L, byteArray0, byteOrder0, 2715);
      tiffField0.dump();
      assertEquals(640, tiffField0.getBytesLength());
      assertEquals((-81), tiffField0.getDirectoryType());
      assertEquals(2715, tiffField0.getSortHint());
      assertEquals(640L, tiffField0.getCount());
      assertEquals(640, tiffField0.getOffset());
      assertEquals((-81), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0.SRATIONAL, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      tiffField0.toString();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-239), (-1326), fieldTypeAscii0, 0L, (-1326), byteArray0, byteOrder0, (-239));
      tiffField0.dump();
      assertEquals((-1326), tiffField0.getOffset());
      assertEquals((-239), tiffField0.getSortHint());
      assertEquals((-239), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1326), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[129];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 255L, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(41989, 41989, fieldTypeLong0, 41989, 41989, byteArray0, byteOrder0, 41989);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41989, 41989);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(41989, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long", string0);
      assertNotNull(string0);
      assertEquals(41989, tiffField0.getTag());
      assertEquals(41989, tiffField0.getDirectoryType());
      assertEquals(41989, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeShort0, 6, 6, byteArray0, byteOrder0, 6);
      tiffField0.getFieldTypeName();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 8, fieldTypeShort0, 1803L, 1803L, (byte[]) null, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(150, 150, fieldTypeShort0, 150, 150, byteArray0, byteOrder0, 150);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(150, int0);
      assertEquals(150, tiffField0.getTag());
      assertEquals(150, tiffField0.getSortHint());
      assertEquals(150, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 16, fieldTypeLong0, 111, 111, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(111, tiffField0.getOffset());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 2, 2, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("2 (0x2: Unknown Tag): ", string0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-505), (-505), (FieldType) null, (-505), (-505), byteArray0, byteOrder0, (-505));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(394, 394, fieldTypeFloat0, 394, 394, byteArray0, byteOrder0, 394);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1576, tiffField0.getBytesLength());
      assertEquals(394, tiffField0.getSortHint());
      assertEquals(394, tiffField0.getTag());
      assertEquals(394, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(394, tiffField0.getDirectoryType());
      assertEquals(394L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)115, (byte)0, fieldTypeRational0, (-1973), (byte)0, (byte[]) null, byteOrder0, (byte)115);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1973), (byte)115);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(115, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1973L), tiffField0.getCount());
  }
}
