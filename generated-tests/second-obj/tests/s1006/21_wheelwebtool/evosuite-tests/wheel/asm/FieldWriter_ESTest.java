/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:17:47 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-782));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 228, "u&.wTjAqzT!}C[", "f", "%G`=z%dxaS&u<f", "u&.wTjAqzT!}C[");
      fieldWriter0.visitAnnotation("%G`=z%dxaS&u<f", true);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitEnd();
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-782));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "u&.wTjAqzT!}C[", "f", "%G`=z%dxaS&u<f", "u&.wTjAqzT!}C[");
      fieldWriter0.visitAnnotation("%G`=z%dxaS&u<f", false);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitEnd();
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3487);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.visitEnd();
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      System.setCurrentTimeMillis(3487);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3487);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = new Attribute("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE");
      Attribute attribute2 = new Attribute("");
      fieldWriter0.visitAttribute(attribute2);
      classWriter0.addType("Synthetic");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3487);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "", "", "wN5kdB7}o#", "wN5kdB7}o#");
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = new Attribute("");
      Attribute attribute2 = new Attribute("");
      fieldWriter1.visitAttribute(attribute0);
      classWriter0.addType("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE");
      fieldWriter1.visitAnnotation("wN5kdB7}o#", true);
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3487);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3567), ")V", "", ")V", "");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.putByte(4096);
      byteVector2.putByteArray((byte[]) null, (-3567), 2);
      byteVector0.putUTF8(")V");
      ByteVector byteVector3 = classWriter0.pool;
      fieldWriter0.put(byteVector2);
      Attribute attribute0 = new Attribute("|_MY!<axH]z4@le");
      classWriter0.addType(")V");
      int int0 = Frame.VALUE;
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3453);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3567), ")V", "", ")V", "");
      fieldWriter0.visitAnnotation("ConstantValue", false);
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("");
      int int0 = Frame.SHORT;
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(3453);
      byteVector1.putUTF8("");
      fieldWriter0.getSize();
      fieldWriter0.visitAttribute(attribute0);
      System.setCurrentTimeMillis(16777228);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3487);
      String string0 = "M";
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "M", (String) null, mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@6e34ff90
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3453);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3567), "RuntimeVisibleAnnotations", "", "RuntimeVisibleAnnotations", "");
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("kD6=<2I");
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter(1);
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3487);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3567), ")V", "", ")V", "");
      fieldWriter0.visitAnnotation(")V", true);
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute(")V");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte((-3567));
      byteVector0.putUTF8("uo:nT");
      byteVector1.putByte(1);
      classWriter0.addType("");
      classWriter0.version = 3487;
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.getSize();
      fieldWriter1.visitAttribute(attribute0);
      System.setCurrentTimeMillis(42);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3453);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3453, ")", ")", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(20);
      ByteVector byteVector2 = classWriter0.pool;
      ByteVector byteVector3 = byteVector1.putUTF8("C9rBaQ6gcrE%ZL");
      ByteVector byteVector4 = byteVector3.putByte(61969);
      classWriter0.addType("");
      fieldWriter0.visitAnnotation("t", false);
      fieldWriter0.getSize();
      byteVector3.put11(8, 61969);
      String string0 = "Synthetic";
      fieldWriter0.visitAnnotation("Synthetic", false);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.getSize();
      Attribute attribute1 = new Attribute("|QGT`H2+gG]&#YXhyB`");
      fieldWriter1.visitAttribute(attribute1);
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
