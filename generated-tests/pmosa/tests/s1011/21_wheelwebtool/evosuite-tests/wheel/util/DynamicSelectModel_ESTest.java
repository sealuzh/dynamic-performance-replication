/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 21:21:22 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.Locale;
import java.util.stream.IntStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty((Object) null);
      dynamicSelectModel1.collection("");
      dynamicSelectModel1.getTopLevelComponent();
      dynamicSelectModel2.translator("action");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(95);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.value(">F8;U");
      String string0 = "cC1O";
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("cC1O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "XOt6,P0#EU";
      ElExpression elExpression0 = new ElExpression("XOt6,P0#EU");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("namespace must be not null");
      Object object0 = new Object();
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel0.setTopLevelComponent(errorPage0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(object0);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.enumeration(" evaluated to null. Can't build a dynamic ISelectModel");
      String string0 = "namespace prefix is required after xmlns:  when namespaces are enabled";
      String string1 = "";
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel0.value("");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.collection("namespace prefix is required after xmlns:  when namespaces are enabled");
      dynamicSelectModel5.label(" evaluated to null. Can't build a dynamic ISelectModel");
      String string2 = "";
      dynamicSelectModel4.enumeration("");
      dynamicSelectModel5.collection(" evaluated to null. Can't build a dynamic ISelectModel");
      dynamicSelectModel3.value("");
      dynamicSelectModel1.getTopLevelComponent();
      dynamicSelectModel0.translator("");
      // Undeclared exception!
      try { 
        dynamicSelectModel4.getValue(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression  evaluated to null. Can't build a dynamic ISelectModel to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      Locale locale0 = Locale.GERMANY;
      locale0.getDisplayCountry();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("h[dfU<lW@W2E.|");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("h[dfU<lW@W2E.|");
      dynamicSelectModel2.validate();
      assertSame(dynamicSelectModel0, dynamicSelectModel2);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("");
      String string1 = "";
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.translator("");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.enumeration("");
      dynamicSelectModel1.validate();
      dynamicSelectModel1.collection("-'2w,");
      dynamicSelectModel4.empty(dynamicSelectModel1);
      dynamicSelectModel4.reset();
      // Undeclared exception!
      try { 
        dynamicSelectModel3.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression -'2w, to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("namespace must be not null");
      Object object0 = new Object();
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel0.setTopLevelComponent(errorPage0);
      dynamicSelectModel1.empty(object0);
      DynamicSelectModel dynamicSelectModel2 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.value("");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel2.collection("namespace prefix is required after xmlns:  when namespaces are enabled");
      dynamicSelectModel4.label(" evaluated to null. Can't build a dynamic ISelectModel");
      dynamicSelectModel3.enumeration("");
      dynamicSelectModel4.collection(" evaluated to null. Can't build a dynamic ISelectModel");
      dynamicSelectModel1.reset();
      dynamicSelectModel2.value("");
      StandaloneComponent standaloneComponent0 = dynamicSelectModel1.getTopLevelComponent();
      dynamicSelectModel0.translator("");
      dynamicSelectModel3.collection("|6P");
      dynamicSelectModel2.setComponent(standaloneComponent0);
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.collection("");
      assertSame(dynamicSelectModel5, dynamicSelectModel3);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "false";
      dynamicSelectModel0.collection("false");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression false evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("[] from ");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(3793);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3793
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
