/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 17:22:00 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37510, (-2142074368), fieldTypeShort0, (-722L), (byte) (-98), byteArray0, byteOrder0, 1298);
      tiffField0.dump();
      assertEquals(1298, tiffField0.getSortHint());
      assertEquals((-98), tiffField0.getOffset());
      assertEquals(37510, tiffField0.getTag());
      assertEquals((-2142074368), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 271L, 1L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(46, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, 148L, 530L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getValue();
      assertEquals(530, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(27, "c7");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(27, (-1075), fieldTypeRational0, 27, 0L, byteArray0, (ByteOrder) null, 1321);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1075), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(1321, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(400, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeShort0, 400, 400, byteArray0, byteOrder0, (byte) (-35));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(400, tagInfo0.tag);
      assertEquals((-35), tiffField0.getSortHint());
      assertEquals(400, tiffField0.getOffset());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)60);
      int int0 = tiffField0.getTag();
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(761, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-132), 0, fieldTypeDouble0, 0L, 1160L, byteArray0, byteOrder0, (byte) (-15));
      int int0 = tiffField0.getTag();
      assertEquals((-132), int0);
      assertEquals(1160, tiffField0.getOffset());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 9, fieldTypeAscii0, 17, 2147483647L, byteArray0, byteOrder0, 9);
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-112);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(17, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)40, 4096, fieldTypeByte0, (-708L), 1L, byteArray0, byteOrder0, (byte)40);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4096, tiffField0.getDirectoryType());
      assertEquals(40, int0);
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-265), 67, fieldTypeLong0, (-3042L), 2034L, byteArray0, byteOrder0, (byte) (-98));
      int int0 = tiffField0.getSortHint();
      assertEquals((-98), int0);
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals((-265), tiffField0.getTag());
      assertEquals(2034, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 3, fieldTypeByte0, 4L, 0, byteArray0, byteOrder0, (byte)111);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1142), "ZgJ#_YNb6S/z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1360, (byte) (-110), fieldTypeDouble0, 4L, (-1142), byteArray0, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getOffset();
      assertEquals(1360, tiffField0.getTag());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals((-110), tiffField0.getDirectoryType());
      assertEquals((-1142), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2146165363), "Couldn't skip bytes");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-63);
      TiffField tiffField0 = new TiffField(2146864241, 65109, fieldTypeShort0, (-1717986917L), (-1717986917), byteArray0, byteOrder0, (byte) (-63));
      assertEquals(858993462, tiffField0.getBytesLength());
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(2146864241, tiffField0.getTag());
      assertEquals(65109, tiffField0.getDirectoryType());
      assertEquals(193, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(531, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte) (-98);
      TiffField tiffField0 = new TiffField((-3738), 1519, fieldTypeRational0, 3691L, (-2064L), byteArray0, byteOrder0, 551);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1519, tiffField0.getDirectoryType());
      assertEquals(29528, tiffField0.getBytesLength());
      assertEquals(551, tiffField0.getSortHint());
      assertEquals((-3738), tiffField0.getTag());
      assertEquals((-2064), tiffField0.getOffset());
      assertEquals((-10406121), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1083, 1083, fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, (byte)31);
      tiffField0.getIntValue();
      assertEquals(1083, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1083, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(31, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)21;
      TiffField tiffField0 = new TiffField(50, 87, fieldTypeLong0.UNDEFINED, 1L, 1L, byteArray0, (ByteOrder) null, (-165));
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-165), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-42);
      TiffField tiffField0 = new TiffField((-761), 1, fieldTypeByte0.IFD, 1, 50, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-761), tiffField0.getTag());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1351, 65105, fieldTypeFloat0.LONG, 255L, 65105, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(1351, tiffField0.getTag());
      assertEquals(65105, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65105, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-253), "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1091, 1, fieldTypeDouble0, 4138L, 1, byteArray0, byteOrder0, (byte) (-123));
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1091, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2123354618, 2123354618, (FieldType) null, 2123354618, 2123354618, (byte[]) null, byteOrder0, 2146864241);
      tiffField0.getFieldType();
      assertEquals(2123354618, tiffField0.getOffset());
      assertEquals(2123354618, tiffField0.getDirectoryType());
      assertEquals(2123354618, tiffField0.getTag());
      assertEquals(2146864241, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Unknown: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2643), 0, fieldTypeDouble0, 239L, 239L, byteArray0, byteOrder0, (-841));
      tiffField0.getFieldType();
      assertEquals((-2643), tiffField0.getTag());
      assertEquals(239, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-841), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2142207274), "");
      TiffField tiffField0 = new TiffField(2146864241, 34264, fieldTypeAscii0, (-1L), (-1L), (byte[]) null, byteOrder0, 34264);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(34264, tiffField0.getSortHint());
      assertEquals(34264, tiffField0.getDirectoryType());
      assertEquals(2146864241, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145689593, 32771, fieldTypeShort0, (byte)1, (-1786L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(32771, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1786), tiffField0.getOffset());
      assertEquals(2145689593, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)21;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(41483, "");
      TiffField tiffField0 = new TiffField((byte)21, 65, fieldTypeRational0, 1L, (-460L), byteArray0, byteOrder0, (-352));
      tiffField0.getDoubleValue();
      assertEquals((-352), tiffField0.getSortHint());
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals((-460), tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-24);
      TiffField tiffField0 = new TiffField((-761), 1, fieldTypeByte0.SLONG, 1, 50, byteArray0, byteOrder0, (byte) (-24));
      tiffField0.getDoubleValue();
      assertEquals((-761), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 299L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(788, 1508, fieldTypeLong0.DOUBLE, 111L, 271L, byteArray0, byteOrder0, 788);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1508, int0);
      assertEquals(788, tiffField0.getSortHint());
      assertEquals(788, tiffField0.getTag());
      assertEquals(271, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-210), 0, fieldTypeFloat0, 0, 2147483647L, byteArray0, byteOrder0, (byte)114);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(114, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-210), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)60);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(761, tiffField0.getTag());
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(301, (byte)0, fieldTypeFloat0, 0L, (-1764L), byteArray0, byteOrder0, 301);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1764), tiffField0.getOffset());
      assertEquals(301, tiffField0.getTag());
      assertEquals(301, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-310), 50, fieldTypeShort0, (-2667L), 50, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-310), tiffField0.getTag());
      assertEquals((-5334), int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "b}0/e#|M?UK");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34026, 34026, fieldTypeLong0, 50, 4L, byteArray0, (ByteOrder) null, 34026);
      tiffField0.getByteOrder();
      assertEquals(34026, tiffField0.getDirectoryType());
      assertEquals(34026, tiffField0.getTag());
      assertEquals(34026, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146864241, 34264, fieldTypeAscii0, (-1L), (-1L), (byte[]) null, byteOrder0, 34264);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(48130, 48130, (FieldType) null, 155, 3497L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[205];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34118, 1966, fieldTypeFloat0.IFD, (byte) (-68), 4205L, byteArray0, byteOrder0, (byte) (-68));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1238), 34735, fieldTypeLong0, (-1238), 12832L, byteArray0, byteOrder0, (-956));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-456), (-456), fieldTypeLong0, (-2860L), 0L, (byte[]) null, byteOrder0, (-456));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, 0, fieldTypeShort0, (-3238L), 2349L, byteArray0, byteOrder0, (-3358));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2313), (-2145665286), fieldTypeAscii0.IFD, 13176L, 13176L, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[346];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(346, (byte)62, fieldTypeFloat0, (-5728L), (-5728L), byteArray0, byteOrder0, 25);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2123354618, 2123354618, (FieldType) null, 2123354618, 2123354618, (byte[]) null, byteOrder0, 2146864241);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeDouble0, (byte) (-89), 0L, byteArray0, byteOrder0, 387);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1819), (byte)75, (FieldType) null, 65535, 65535, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)90, 50, fieldTypeFloat0, (-1176L), (-673L), byteArray0, byteOrder0, 2147483646);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 1, 1L, byteArray0, byteOrder0, (byte) (-44));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-101), 3, fieldTypeAscii0, 4L, (-2313), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 40095, fieldTypeAscii0, (-1517L), 0L, byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2486), (byte)0, fieldTypeByte0.RATIONAL, 1369L, 320L, byteArray0, byteOrder0, (byte)0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)117);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(50, byteArrayOutputStream0.size());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(33450, 2138961887, fieldTypeByte0, 917L, 33450, byteArray0, byteOrder0, 33450);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2138961887, tiffField0.getDirectoryType());
      assertEquals(33450, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(33450, tiffField0.getTag());
      assertEquals(33450, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2288), (-2288), fieldTypeAscii0.IFD, (-2288), 530L, (byte[]) null, byteOrder0, 322);
      tiffField0.getByteOrder();
      assertEquals((-2288), tiffField0.getDirectoryType());
      assertEquals((-2288), tiffField0.getTag());
      assertEquals(322, tiffField0.getSortHint());
      assertEquals(530, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(531, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3738), 1519, fieldTypeRational0, 3691L, (-2064L), byteArray0, byteOrder0, 551);
      tiffField0.getByteArrayValue();
      assertEquals(1519, tiffField0.getDirectoryType());
      assertEquals((-3738), tiffField0.getTag());
      assertEquals(551, tiffField0.getSortHint());
      assertEquals((-2064), tiffField0.getOffset());
      assertEquals(29528, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)63, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      TiffField tiffField0 = new TiffField((byte)63, 549, fieldTypeShort0, 2569L, 4L, byteArray0, byteOrder0, (byte) (-100));
      tiffField0.getFieldType();
      assertEquals(549, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(63, tiffField0.getTag());
      assertEquals((-100), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2828, (-1), fieldTypeAscii0, (-1), 3270L, (byte[]) null, byteOrder0, 519);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-502), (-502), fieldTypeAscii0, (-502), 2999L, byteArray0, byteOrder0, 37388);
      int int0 = tiffField0.getOffset();
      assertEquals(37388, tiffField0.getSortHint());
      assertEquals(2999, int0);
      assertEquals((-502), tiffField0.getDirectoryType());
      assertEquals((-502), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-125), "!p0.gn?g0[QQ3R");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2146973920, fieldTypeAscii0, 0, (-125), byteArray0, byteOrder0, 1678);
      int int0 = tiffField0.getTag();
      assertEquals(2146973920, tiffField0.getDirectoryType());
      assertEquals(1678, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-125), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2313), (-2313), fieldTypeAscii0, (-1L), (-2313), (byte[]) null, byteOrder0, 852);
      tiffField0.getCount();
      assertEquals((-2313), tiffField0.getOffset());
      assertEquals(852, tiffField0.getSortHint());
      assertEquals((-2313), tiffField0.getDirectoryType());
      assertEquals((-2313), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, "LISFjW,'g(Lb`_");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 1, (byte[]) null, byteOrder0, (-2146816933));
      int int0 = tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2146816933), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1717986917), 2828, fieldTypeAscii0, 650L, 650L, byteArray0, (ByteOrder) null, 2311);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4403), "B61b%OC.z");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147483646, 2147483646, fieldTypeFloat0, 2L, 1047L, byteArray0, byteOrder0, (byte) (-125));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1351, 65105, fieldTypeFloat0.SLONG, 255L, 65105, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(65105, tiffField0.getOffset());
      assertEquals(1351, tiffField0.getTag());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(33450, 2138961887, fieldTypeByte0, 917L, 33450, byteArray0, byteOrder0, 33450);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@336ad4c3 for: 33450 (0x82aa: MD PrepDate): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0, 1, 271L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(271, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(531, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3738), 1519, fieldTypeRational0, 3691L, (-2064L), byteArray0, byteOrder0, 551);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1142), "ZgJ#_YNb6S/z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1360, (byte) (-110), fieldTypeDouble0, 4L, (-1142), byteArray0, byteOrder0, (byte) (-110));
      tiffField0.getDoubleArrayValue();
      assertEquals((-110), tiffField0.getDirectoryType());
      assertEquals(1360, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals((-1142), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-101), 2975, fieldTypeByte0, 530L, 530L, byteArray0, byteOrder0, 2147442899);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3e256a69 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1351, 65105, fieldTypeFloat0.SLONG, 255L, 65105, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(1351, tiffField0.getTag());
      assertEquals(65105, tiffField0.getOffset());
      assertEquals(65105, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-986), fieldTypeShort0, 1709L, (byte)114, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(114, tiffField0.getOffset());
      assertEquals(3418, tiffField0.getBytesLength());
      assertEquals((-986), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(37524, 37524, fieldTypeRational0, 4L, (-2314L), byteArray0, byteOrder0, (-2368));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-2368), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(37524, tiffField0.getTag());
      assertEquals(37524, tiffField0.getDirectoryType());
      assertEquals((-2314), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)60);
      tiffField0.getDoubleArrayValue();
      assertEquals(761, tiffField0.getTag());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 271L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(1084, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-986), fieldTypeShort0, 1709L, (byte)114, byteArray0, byteOrder0, 1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(114, tiffField0.getOffset());
      assertEquals((-986), tiffField0.getDirectoryType());
      assertEquals(3418, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7c80c8f9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147081421), 32995, fieldTypeRational0, (-2147081421), (-1L), byteArray0, byteOrder0, 405);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-777), 2908, fieldTypeRational0, 2908, (-2300L), byteArray0, (ByteOrder) null, (byte) (-99));
      tiffField0.getIntArrayValue();
      assertEquals(2908, tiffField0.getDirectoryType());
      assertEquals((-99), tiffField0.getSortHint());
      assertEquals(23264, tiffField0.getBytesLength());
      assertEquals((-2300), tiffField0.getOffset());
      assertEquals((-777), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0, 1, 271L, byteArray0, byteOrder0, (byte)1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(271, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-967), (-1717986917), fieldTypeByte0, 530L, (-68L), byteArray0, byteOrder0, 930);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@6d0c9cc1
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-125), "!p0.gn?g0[QQ3R");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2146973920, fieldTypeAscii0, 0, (-125), byteArray0, byteOrder0, 1678);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1678, tiffField0.getSortHint());
      assertEquals((-125), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2146973920, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 3, fieldTypeByte0, 4L, 0, byteArray0, byteOrder0, (byte)111);
      String string0 = tiffField0.getTagName();
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0, 1, 271L, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getTagName();
      assertEquals("InteroperabilityIndex", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(271, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 65535, (-3890L), byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "h");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50734, 37510, fieldTypeLong0.FLOAT, (byte)114, 2520L, byteArray0, byteOrder0, (-2142074368));
      tiffField0.dump();
      assertEquals((-2142074368), tiffField0.getSortHint());
      assertEquals(50734, tiffField0.getTag());
      assertEquals(2520, tiffField0.getOffset());
      assertEquals(37510, tiffField0.getDirectoryType());
      assertEquals(114L, tiffField0.getCount());
      assertEquals(456, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)75, (byte)98, fieldTypeFloat0, (byte)98, (byte)52, byteArray0, (ByteOrder) null, 2120971504);
      String string0 = tiffField0.toString();
      assertEquals(52, tiffField0.getOffset());
      assertEquals(392, tiffField0.getBytesLength());
      assertEquals(98, tiffField0.getDirectoryType());
      assertEquals(2120971504, tiffField0.getSortHint());
      assertEquals("75 (0x4b: Unknown Tag): 0.0, 0.0 (98 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 50780, fieldTypeShort0.BYTE, 32208L, 686L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(32208L, tiffField0.getCount());
      assertEquals(32208, tiffField0.getBytesLength());
      assertEquals(50780, tiffField0.getDirectoryType());
      assertEquals(686, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2146852962, fieldTypeByte0, 4L, 3103L, byteArray0, byteOrder0, 2121610351);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("EbMTWhMSrq_v/#^st");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(3103, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2146852962, tiffField0.getDirectoryType());
      assertEquals(2121610351, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[346];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)62, (byte)62, fieldTypeFloat0.DOUBLE, (byte)62, (byte)62, byteArray0, byteOrder0, (byte)62);
      String string0 = tiffField0.getValueDescription();
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62, tiffField0.getOffset());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertNotNull(string0);
      assertEquals(62L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-933), (-933), fieldTypeFloat0.SLONG, 1299L, (-933), byteArray0, byteOrder0, 1334);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-933), tiffField0.getDirectoryType());
      assertEquals((-933), tiffField0.getTag());
      assertEquals(5196, tiffField0.getBytesLength());
      assertEquals(1334, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-933), tiffField0.getOffset());
      assertEquals(1299L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65535, (-1240), fieldTypeDouble0.SSHORT, 144L, (byte) (-116), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-116), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(144L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1240), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-986), fieldTypeShort0, 1709L, (byte)114, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: GPSVersionID): 0, 0 (1709 SShort)", string0);
      assertEquals((-986), tiffField0.getDirectoryType());
      assertEquals(3418, tiffField0.getBytesLength());
      assertEquals(114, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 20, fieldTypeAscii0, 1188L, 1188L, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1188, tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(1188, tiffField0.getBytesLength());
      assertEquals(1188L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3383), "a%4:;RUJPNm(9V");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte)69;
      TiffField tiffField0 = new TiffField(2138961887, 50, fieldTypeAscii0, 4L, (-3383), byteArray0, byteOrder0, (-2141534938));
      tiffField0.dump();
      assertEquals((-2141534938), tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(2138961887, tiffField0.getTag());
      assertEquals((-3383), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-761), 1, fieldTypeByte0.IFD, 1, 50, byteArray0, byteOrder0, (byte) (-42));
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-761), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-17), 0, byteArray0, byteOrder0, 32);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-68), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(407, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-8), 0, fieldTypeDouble0, (-1L), (-1L), byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)106, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-8), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3383), "a%4:;RUJPNm(9V");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2138961887, 50, fieldTypeAscii0, 4L, (-3383), byteArray0, byteOrder0, (-2141534938));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-2141534938), tiffField0.getSortHint());
      assertEquals(2138961887, tiffField0.getTag());
      assertEquals((-3383), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(531, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3738), 1519, fieldTypeRational0, 3691L, (-2064L), byteArray0, byteOrder0, 551);
      tiffField0.getFieldTypeName();
      assertEquals((-2064), tiffField0.getOffset());
      assertEquals(29528, tiffField0.getBytesLength());
      assertEquals((-3738), tiffField0.getTag());
      assertEquals(1519, tiffField0.getDirectoryType());
      assertEquals(551, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2828, (-1), fieldTypeAscii0, (-1), 3270L, (byte[]) null, byteOrder0, 519);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3270, tiffField0.getOffset());
      assertEquals((-1L), tiffField0.getCount());
      assertEquals(2828, tiffField0.getTag());
      assertEquals(519, tiffField0.getSortHint());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145665286), 855, fieldTypeAscii0.BYTE, 2L, 2L, (byte[]) null, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(855, tiffField0.getDirectoryType());
      assertEquals((-2145665286), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)63, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      TiffField tiffField0 = new TiffField((byte)63, 549, fieldTypeShort0, 2569L, 4L, byteArray0, byteOrder0, (byte) (-100));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(549, tiffField0.getDirectoryType());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals("63 (0x3f: Unknown Tag): ", string0);
      assertEquals(2569L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2139470649, (-4403), fieldTypeFloat0, 64L, (-1789569705), byteArray0, byteOrder0, (byte) (-89));
      tiffField0.getDoubleArrayValue();
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(64L, tiffField0.getCount());
      assertEquals((-4403), tiffField0.getDirectoryType());
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals(2139470649, tiffField0.getTag());
      assertEquals((-1789569705), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2145665286), 65535, fieldTypeAscii0, (byte)86, (byte)0, byteArray0, byteOrder0, (byte)10);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-2145665286), tiffField0.getTag());
      assertEquals(0L, tiffElement0.offset);
  }
}
