/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:22:54 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayReader;
import java.io.File;
import java.io.StringReader;
import java.math.BigDecimal;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2743, 2743);
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QxFI");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertFalse(boolean0);
      assertEquals('Q', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("y");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("H?e(x*");
      String string0 = jSONReaderScanner0.subString(0, 0);
      assertEquals('H', jSONReaderScanner0.getCurrent());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("A]\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSON.DEFAULT_PARSER_FEATURE = 0;
      jSONReaderScanner0.scanIdent();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.sp = 0;
      String string0 = jSONReaderScanner0.stringVal();
      assertEquals("", string0);
      
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertFalse(boolean0);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '\u0000');
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      char char0 = JSONLexer.EOI;
      jSONReaderScanner0.close();
      assertEquals((-2), jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((long) 68);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 15);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'b';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 'b', 'b');
      jSONReaderScanner0.scanBoolean('b');
      char char0 = jSONReaderScanner0.next();
      assertEquals(3, jSONReaderScanner0.matchStat);
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 52, 52);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.addSymbol(52, 0, 52, (SymbolTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("R{");
      jSONReaderScanner0.scanIdent();
      String string0 = File.pathSeparator;
      jSONReaderScanner0.nextToken((-2262));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.nextToken(685);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d0|cUb9D5(");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("j%V; ");
      char[] charArray0 = new char[8];
      jSONReaderScanner0.copyTo(0, 0, charArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("n7Vw Pz]y2|}B");
      jSONReaderScanner0.features = (-23);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-23), (-23));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -23
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO", 16383);
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.close();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal state, textLength is zero");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      double double0 = Locale.LanguageRange.MAX_WEIGHT;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = 'U';
      charArray0[2] = 'h';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, (-846));
      jSONReaderScanner0.charArrayCompare(charArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.sub_chars(256, 64);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.sp = 99999;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(0, (char[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 65279);
      jSONReaderScanner0.indexOf('0', 65279);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("^szp(=(Ruq;");
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString(1782, (-815));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -815
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("A]\"");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanUUID('l');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = 52;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 52, 52);
      jSONReaderScanner0.indexOf('@', 1);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - \u0000, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[2] = '\u0000';
      charArray0[3] = '\u0000';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 3);
      jSONReaderScanner0.sub_chars('\u0000', '\u0000');
      jSONReaderScanner0.bytesValue();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[5] = (Object) "UQ}bzB{qQq0";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      objectArray0[7] = (Object) "";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("UQ}bzB{qQq0");
      char[] charArray0 = new char[3];
      charArray0[1] = 'D';
      objectArray0[7] = (Object) 'D';
      jSONReaderScanner0.indexOf('\u0000', 46);
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(46, charArray0, 46, 46);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal state, textLength is zero");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      BigDecimal bigDecimal0 = new BigDecimal((long) 2654);
      jSONReaderScanner0.indexOf('}', 1829);
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("H?e(x*");
      jSONReaderScanner0.subString(76, 610);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO");
      jSONReaderScanner0.charAt(9983);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TODO");
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char char0 = File.pathSeparatorChar;
      jSONReaderScanner0.scanIdent();
      BigDecimal bigDecimal0 = new BigDecimal((long) 9983);
      boolean boolean1 = jSONReaderScanner0.hasSpecial;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      BigDecimal bigDecimal1 = new BigDecimal(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TODO");
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.next();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("wT|SsZ36}'o7.~R}J");
      jSONReaderScanner0.stringVal();
      Object[] objectArray0 = new Object[8];
      objectArray0[5] = (Object) "wT|SsZ36}'o7.~R}J";
      jSONReaderScanner0.lexError("wT|SsZ36}'o7.~R}J", objectArray0);
      objectArray0[5] = (Object) 'G';
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("UQ}bzB{qQq0");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.stringVal();
      Object[] objectArray0 = new Object[26];
      objectArray0[0] = (Object) fileSystemHandling0;
      objectArray0[1] = (Object) "";
      objectArray0[4] = (Object) fileSystemHandling0;
      objectArray0[5] = (Object) "UQ}bzB{qQq0";
      objectArray0[6] = (Object) "";
      objectArray0[1] = (Object) fileSystemHandling0;
      jSONReaderScanner0.lexError("", objectArray0);
      char[] charArray0 = new char[4];
      charArray0[1] = 'L';
      jSONReaderScanner0.matchStat = (int) 'L';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 76);
      jSONReaderScanner1.scanIdent();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      jSONReaderScanner1.numberString();
      BigDecimal bigDecimal1 = new BigDecimal((long) 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO");
      jSONReaderScanner0.charAt(9983);
      jSONReaderScanner0.bytesValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanFloat('j');
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanUUID('U');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AllowUnQuotedFieldNames");
      SymbolTable symbolTable0 = new SymbolTable(24);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars(5192, (-170));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -170
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO");
      char[] charArray0 = new char[20];
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.charAt(9983);
      byte[] byteArray0 = jSONReaderScanner0.bytesValue();
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      boolean boolean1 = jSONReaderScanner0.hasSpecial;
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSONReaderScanner0.charAt(3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(6742705432718011780L);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      uTF8Decoder1.replacement();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\uFFFD", 3);
      jSONReaderScanner1.charAt('\u0000');
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("A]\"");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.next();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'R';
      System.setCurrentTimeMillis((-295L));
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3, (byte)0);
      jSONReaderScanner0.bp = (-1);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanIdent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }
}
