/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 19:28:52 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(24);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)114;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeShort0, 24, 663776L, byteArray0, byteOrder0, (byte) (-38));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getTag());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(663776, tiffField0.getOffset());
      assertEquals(114, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)14, (-1), fieldTypeRational0, 0L, 50, byteArray0, byteOrder0, (-2147483646));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(14, tiffField0.getTag());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeRational0, 513, 519, byteArray0, byteOrder0, (byte)60);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getTag());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getDirectoryType());
      assertEquals(519, tiffField0.getOffset());
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(180, (-1), (FieldType) null, 1851L, (-1), byteArray0, byteOrder0, 1470);
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1470, tiffField0.getSortHint());
      assertEquals(180, int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-22), (byte)49, fieldTypeRational0, 954L, 2040L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-22), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(755, "jsu&6Gpcn)wD ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)27;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 755, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, 5202);
      String string0 = tiffField0.getStringValue();
      assertEquals(5202, tiffField0.getSortHint());
      assertEquals(755, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-22), (byte)49, fieldTypeRational0, 954L, 2040L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-22), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)14, 50708, fieldTypeShort0, 4L, (-1031L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, int0);
      assertEquals((-1031), tiffField0.getOffset());
      assertEquals(50708, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)16, 50, fieldTypeRational0, (byte)0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1404), (-924), fieldTypeLong0, (byte)0, (-1760L), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getOffset();
      assertEquals((-1760), int0);
      assertEquals((-924), tiffField0.getDirectoryType());
      assertEquals((-1404), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, 1338, fieldTypeByte0, 1L, (-2123L), byteArray0, byteOrder0, 1410);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1410, tiffField0.getSortHint());
      assertEquals(1338, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
      assertEquals((-2123), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)54;
      TiffField tiffField0 = new TiffField((-1816), (-2530), fieldTypeRational0, 2896L, 0L, byteArray0, byteOrder0, 2585);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1816), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2585, tiffField0.getSortHint());
      assertEquals((-2530), tiffField0.getDirectoryType());
      assertEquals((-28894094), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, 1338, fieldTypeByte0, 1L, (-2123L), byteArray0, byteOrder0, 1415);
      tiffField0.getIntValue();
      assertEquals((-2123), tiffField0.getOffset());
      assertEquals(1415, tiffField0.getSortHint());
      assertEquals(1338, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)14;
      TiffField tiffField0 = new TiffField(74, (-70), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 14);
      tiffField0.getIntValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-70), tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-99);
      TiffField tiffField0 = new TiffField(49, 29, fieldTypeRational0.SHORT, 1L, 1L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getIntValue();
      assertEquals(49, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(86, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(86, (-1248), fieldTypeRational0, 255L, 1413L, byteArray0, byteOrder0, 1860);
      tiffField0.getFieldTypeName();
      assertEquals(1860, tiffField0.getSortHint());
      assertEquals((-1248), tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getTag());
      assertEquals(1413, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(839, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-785), 2, fieldTypeByte0, (-785), 0L, byteArray0, byteOrder0, 2);
      tiffField0.getFieldTypeName();
      assertEquals((-785), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1929), "tw1K");
      TiffField tiffField0 = new TiffField(9, (-1084), fieldTypeByte0, (-1084), 3170L, byteArray0, byteOrder0, (byte)70);
      tiffField0.getFieldType();
      assertEquals((-1084), tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(3170, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1244), (-1244), fieldTypeByte0, (-1244), 1164L, byteArray0, byteOrder0, (-1244));
      tiffField0.getFieldType();
      assertEquals(1164, tiffField0.getOffset());
      assertEquals((-1244), tiffField0.getDirectoryType());
      assertEquals((-1244), tiffField0.getSortHint());
      assertEquals((-1244), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)14;
      TiffField tiffField0 = new TiffField(74, (-70), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 14);
      tiffField0.getDoubleValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-70), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(74, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)29;
      byteArray0[7] = (byte) (-77);
      TiffField tiffField0 = new TiffField(677, 790, fieldTypeRational0, 1L, 677, byteArray0, byteOrder0, (-1422));
      tiffField0.getDoubleValue();
      assertEquals((-1422), tiffField0.getSortHint());
      assertEquals(677, tiffField0.getOffset());
      assertEquals(677, tiffField0.getTag());
      assertEquals(790, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1205, 1205, (FieldType) null, 954L, 954L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(1205, tiffField0.getTag());
      assertEquals(954, tiffField0.getOffset());
      assertEquals(1205, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1244), (-1244), fieldTypeByte0, (-1244), 1164L, byteArray0, byteOrder0, (-1244));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1244), tiffField0.getSortHint());
      assertEquals(1164, tiffField0.getOffset());
      assertEquals((-1244), int0);
      assertEquals((-1244), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, (-1641L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1641), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(124, 124, fieldTypeShort0, (-2926L), 4L, byteArray0, byteOrder0, 124);
      tiffField0.getCount();
      assertEquals(124, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(124, tiffField0.getTag());
      assertEquals(124, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Y,_FNk/o,f O|2Mi.f");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 37398, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (byte) (-116));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(37398, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37398, "qSD35H:");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 1, fieldTypeFloat0, (-1815L), (byte)50, (byte[]) null, byteOrder0, 1717986918);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(134, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 3609L, (-1), byteArray0, (ByteOrder) null, (-802));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-802), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "P8ypUk,");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18246, 0, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, (byte)78);
      tiffField0.getByteArrayValue();
      assertEquals(18246, tiffField0.getTag());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-4266), 50, fieldTypeByte0, 1032L, 4L, byteArray0, byteOrder0, 1839);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Unknown value: ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-4266), tiffField0.getTag());
      assertEquals(1839, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3894, 0, fieldTypeLong0, (-1311L), 0, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(839, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2130), (byte)81, fieldTypeByte0, (byte) (-46), 1L, byteArray0, byteOrder0, 839);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-924), (-2118), fieldTypeLong0, (-2118), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(403, 1390, fieldTypeByte0, (-1L), 1330L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1279), (-1279), fieldTypeShort0, 1586L, 165944L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37398, "qSD35H:");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 1, fieldTypeFloat0, (-1815L), (byte)50, (byte[]) null, byteOrder0, 1717986918);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1L, 0, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(124, 124, fieldTypeShort0, (-2926L), 4L, byteArray0, byteOrder0, 124);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lMq<y4");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "lMq<y4");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(3271, 5, (FieldType) null, (-371L), 0, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1149), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1149), 1281, fieldTypeShort0, (-1149), 258L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), 1229L, byteArray0, byteOrder0, (-2066));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2332), 2147480412, (FieldType) null, (-2332), 0L, (byte[]) null, byteOrder0, (-3437));
      tiffField0.getByteOrder();
      assertEquals(2147480412, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3437), tiffField0.getSortHint());
      assertEquals((-2332), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2931, 2931, fieldTypeAscii0, 2931, (-469L), byteArray0, byteOrder0, (-1651));
      tiffField0.getByteArrayValue();
      assertEquals((-1651), tiffField0.getSortHint());
      assertEquals(2931, tiffField0.getTag());
      assertEquals((-469), tiffField0.getOffset());
      assertEquals(2931, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2332), 2147480412, (FieldType) null, (-2332), 0L, (byte[]) null, byteOrder0, (-3437));
      tiffField0.getFieldType();
      assertEquals((-3437), tiffField0.getSortHint());
      assertEquals((-2332), tiffField0.getTag());
      assertEquals(2147480412, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 3312, (byte)14, byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50730, (-1121), fieldTypeShort0.DOUBLE, 3609L, 1306L, byteArray0, byteOrder0, (-1318));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 3312, (byte)14, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getValue();
      assertEquals(14, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(28, (-3663), fieldTypeShort0.ASCII, 2147483647L, 28, byteArray0, byteOrder0, 37);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3663), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1312), "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(11);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (byte)2, fieldTypeFloat0, (byte)2, (-1L), byteArray0, byteOrder0, 2147470706);
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2147470706, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)14, (-1), fieldTypeRational0, 0L, 50, byteArray0, byteOrder0, (-2147483646));
      tiffField0.getCount();
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37398, "Y,_FNk/o,f O|2Mi.f");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 37398, fieldTypeFloat0, 37398, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(37398, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "&ARO(+(?{0");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, 34910, fieldTypeRational0, 34910, 34910, byteArray0, byteOrder0, (-3486));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(34910, tiffField0.getOffset());
      assertEquals("33445 (0x82a5: MD FileTag): ", string0);
      assertEquals((-3486), tiffField0.getSortHint());
      assertEquals(34910, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(74, (-70), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 14);
      assertEquals(2, tiffField0.getBytesLength());
      
      tiffField0.getDoubleValue();
      assertEquals(74, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-70), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2187, (byte)14, fieldTypeRational0, (byte)54, (byte)54, byteArray0, byteOrder0, (byte) (-93));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Y,_FNk/o,f O|2Mi.f");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 37398, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (byte) (-116));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@6db86453 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(207, (byte) (-1), fieldTypeByte0.SLONG, 207, (-1L), byteArray0, byteOrder0, 207);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(207, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(207, tiffField0.getSortHint());
      assertEquals(828, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)14, (-2457), fieldTypeRational0, 954L, 2040L, byteArray0, byteOrder0, (byte)14);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-723), ")0}Hk_4O7s\"K");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-723), (byte)0, fieldTypeDouble0, 255L, (-591L), byteArray0, byteOrder0, 5);
      tiffField0.getDoubleArrayValue();
      assertEquals((-723), tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals((-591), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(755, "jsu&6Gpcn)wD ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 755, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, 5202);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2422), 41486, fieldTypeLong0, 41486, 41486, byteArray0, byteOrder0, 50879);
      tiffField0.getDoubleArrayValue();
      assertEquals(41486, tiffField0.getOffset());
      assertEquals((-2422), tiffField0.getTag());
      assertEquals(165944, tiffField0.getBytesLength());
      assertEquals(41486, tiffField0.getDirectoryType());
      assertEquals(50879, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1289), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1289), 3024, fieldTypeFloat0, 1475L, (byte)0, byteArray0, byteOrder0, 21);
      tiffField0.getDoubleArrayValue();
      assertEquals(3024, tiffField0.getDirectoryType());
      assertEquals((-1289), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(5900, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(24);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeShort0, 24, 663776L, byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getDoubleArrayValue();
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals(48, tiffField0.getBytesLength());
      assertEquals(663776, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)14, 3312, fieldTypeRational0, (byte)14, 489L, byteArray0, byteOrder0, (byte)14);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getTag());
      assertEquals(489, tiffField0.getOffset());
      assertEquals(3312, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-354), 153, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(153, tiffField0.getDirectoryType());
      assertEquals((-354), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50738, 51, fieldTypeLong0, 495, (-1187L), byteArray0, byteOrder0, 51);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50738, tiffField0.getTag());
      assertEquals(53, intArray0.length);
      assertEquals(51, tiffField0.getSortHint());
      assertEquals((-1187), tiffField0.getOffset());
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)14, 50708, fieldTypeShort0, 4L, (-1031L), byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getTag());
      assertEquals(50708, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1031), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-22), (byte)49, fieldTypeRational0, 954L, 2040L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals((-22), tiffField0.getTag());
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getOffset());
      assertEquals(7632, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(334, (-955), fieldTypeShort0.BYTE, 255L, 255L, byteArray0, (ByteOrder) null, (-955));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1f994ed4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, 1338, fieldTypeByte0, 1L, (-2123L), byteArray0, byteOrder0, 1410);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1338, tiffField0.getDirectoryType());
      assertEquals((-2123), tiffField0.getOffset());
      assertEquals(127, tiffField0.getTag());
      assertEquals(1410, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)14, (-57), fieldTypeRational0, (byte)14, (byte)14, byteArray0, byteOrder0, 517);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(839, "");
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(839, 839, fieldTypeByte0, 839, 0L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@12df364d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(28, (-3663), fieldTypeShort0.ASCII, 2147483647L, 28, byteArray0, byteOrder0, 37);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-3663), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(37, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, (-1395L), byteArray0, byteOrder0, 50216);
      String string0 = tiffField0.getTagName();
      assertEquals((-1395), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(50216, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1289), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 2467, fieldTypeFloat0, (-1289), 1615L, byteArray0, byteOrder0, 2819);
      String string0 = tiffField0.getTagName();
      assertEquals(2819, tiffField0.getSortHint());
      assertEquals(2467, tiffField0.getDirectoryType());
      assertEquals(1615, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals("ProcessingSoftware", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)54, (-3658), fieldTypeShort0, 1963L, (-1033L), byteArray0, byteOrder0, 65535);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("U00BE-b$/r7UeDbZ6G");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1963L, tiffField0.getCount());
      assertEquals((-3658), tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(3926, tiffField0.getBytesLength());
      assertEquals((-1033), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1312), "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(11);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (byte)2, fieldTypeFloat0, (byte)2, (-1L), byteArray0, byteOrder0, 2147470706);
      tiffField0.dump();
      assertEquals(2L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2147470706, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1338, fieldTypeByte0, 1338, (-1627L), byteArray0, byteOrder0, (byte) (-95));
      String string0 = tiffField0.toString();
      assertEquals((-1627), tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0 (1338 Undefined)", string0);
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals(1338, tiffField0.getDirectoryType());
      assertEquals(1338, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 486L, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(486, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (486 Byte)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(337, 1413, fieldTypeShort0.DOUBLE, (byte)14, (-1L), byteArray0, byteOrder0, 2147402589);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1413, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(14L, tiffField0.getCount());
      assertEquals(2147402589, tiffField0.getSortHint());
      assertEquals(337, tiffField0.getTag());
      assertEquals(112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50738, 51, fieldTypeLong0, 495, (-1187L), byteArray0, byteOrder0, 51);
      tiffField0.dump();
      assertEquals(51, tiffField0.getSortHint());
      assertEquals((-1187), tiffField0.getOffset());
      assertEquals(50738, tiffField0.getTag());
      assertEquals(51, tiffField0.getDirectoryType());
      assertEquals(495L, tiffField0.getCount());
      assertEquals(1980, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1986, 1986, fieldTypeShort0.FLOAT, 1986, 1986, byteArray0, byteOrder0, 1986);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7944, tiffField0.getBytesLength());
      assertEquals(1986, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1986L, tiffField0.getCount());
      assertEquals(1986, tiffField0.getSortHint());
      assertEquals(1986, tiffField0.getDirectoryType());
      assertEquals(1986, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[104];
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeShort0, (byte)60, (byte)60, byteArray0, byteOrder0, (byte)60);
      String string0 = tiffField0.getValueDescription();
      assertEquals(60, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getTag());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52)", string0);
      assertEquals(60L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, 2142657842, fieldTypeShort0.ASCII, 2142657842, 2142657842, byteArray0, byteOrder0, 13);
      String string0 = tiffField0.getValueDescription();
      assertEquals(13, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(2142657842, tiffField0.getOffset());
      assertEquals(2142657842, tiffField0.getBytesLength());
      assertEquals(2142657842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(740, 740, fieldTypeLong0, 740, 740, byteArray0, byteOrder0, 740);
      String string0 = tiffField0.toString();
      assertEquals("740 (0x2e4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (740 SLong)", string0);
      assertEquals(740, tiffField0.getDirectoryType());
      assertEquals(740, tiffField0.getSortHint());
      assertEquals(2960, tiffField0.getBytesLength());
      assertEquals(740, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte)114;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2931, 2931, fieldTypeAscii0, 2931, (-469L), byteArray0, byteOrder0, (-1651));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2931, tiffField0.getBytesLength());
      assertEquals(2931, tiffField0.getDirectoryType());
      assertEquals(2931, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1651), tiffField0.getSortHint());
      assertEquals((-469), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, 1338, fieldTypeByte0, 1L, (-2123L), byteArray0, byteOrder0, 1410);
      tiffField0.dump();
      assertEquals(127, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1338, tiffField0.getDirectoryType());
      assertEquals(1410, tiffField0.getSortHint());
      assertEquals((-2123), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1L, 0, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 50936, fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, 50936);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50936, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(50936, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField((byte)2, (-2147429319), fieldTypeShort0, (byte)2, 0L, byteArray0, byteOrder0, (byte)2);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-2147429319), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2422), 41486, fieldTypeLong0, 41486, 41486, byteArray0, byteOrder0, 50879);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50879, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(41486, tiffField0.getOffset());
      assertEquals((-2422), tiffField0.getTag());
      assertEquals(41486, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "@O2$`:>S?kPa");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(84, 84, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(84, tiffField0.getTag());
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-1), (-693), fieldTypeByte0, 0L, 149592L, byteArray0, byteOrder0, (-693));
      int int0 = tiffField0.getOffset();
      assertEquals((-693), tiffField0.getSortHint());
      assertEquals((-693), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(149592, int0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2066), (-2066), (FieldType) null, (-2066), (-1L), byteArray0, byteOrder0, (-2066));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2066), tiffField0.getDirectoryType());
      assertEquals((-2066L), tiffField0.getCount());
      assertEquals((-2066), int0);
      assertEquals((-2066), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[32];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2129129107, "lU)A&");
      TiffField tiffField0 = new TiffField(28, (-2227), fieldTypeByte0, (-2227), (-2383L), byteArray0, byteOrder0, 2129129107);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2227), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(2129129107, tiffField0.getSortHint());
      assertEquals((-2383), tiffField0.getOffset());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-2227), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37398, "Y,_FNk/o,f O|2Mi.f");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 37398, fieldTypeFloat0, 37398, 0, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-29), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Y,_FNk/o,f O|2Mi.f", string0);
      assertEquals(37398, tiffField0.getDirectoryType());
      assertEquals(149592, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }
}
