/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 05:49:22 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      charClass0.appendFoldedRange((-1554), (-1554));
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, 668);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][9];
      charClass0.appendTable(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray2[8] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = 0;
      intArray3[5] = 0;
      intArray3[6] = 0;
      intArray3[7] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 2;
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 0;
      intArray5[1] = (-163);
      intArray5[2] = 67897;
      intArray5[3] = 2;
      intArray5[4] = 0;
      intArray5[5] = 2;
      intArray5[6] = 2;
      intArray5[7] = 3688;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[2];
      intArray6[0] = 3688;
      intArray6[1] = 0;
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-438);
      intArray0[1] = (-1289);
      intArray0[2] = (-41);
      intArray0[3] = 8315;
      intArray0[4] = 804;
      intArray0[5] = 66640;
      intArray0[6] = (-107);
      intArray0[7] = 1057;
      intArray0[8] = (-763);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][7];
      CharClass charClass1 = charClass0.appendTable(intArray1);
      // Undeclared exception!
      try { 
        charClass1.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass();
      int int0 = 2732;
      CharClass charClass1 = charClass0.appendLiteral(2732, 2732);
      // Undeclared exception!
      try { 
        charClass1.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(8127, 8127);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1269);
      CharClass charClass0 = new CharClass(intArray0);
      int int0 = 91;
      CharClass charClass1 = charClass0.appendFoldedRange((-1269), 91);
      // Undeclared exception!
      try { 
        charClass1.appendClassWithSign(intArray0, (-1269));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendRange((-1733), (-1733));
      int[] intArray1 = new int[1];
      intArray1[0] = (-1733);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign((int[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.appendRange((-854), (-1853));
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (-1853);
      intArray0[2] = (-1853);
      intArray0[3] = (-1853);
      intArray0[4] = (-1853);
      // Undeclared exception!
      try { 
        charClass1.appendFoldedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      assertSame(charClass1, charClass2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 0;
      intArray0[0] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[5][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int int1 = 0;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[5];
      intArray1[0] = 65;
      intArray1[1] = 2333;
      intArray1[2] = 119172;
      intArray1[3] = 0;
      intArray1[4] = 2451;
      intArray0[0] = intArray1;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 119172);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.appendFoldedRange(2451, 0);
      assertSame(charClass2, charClass3);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3884;
      intArray0[1] = (-613);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      charClass0.appendTableWithSign(intArray1, 3884);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3884;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[0][8];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 65094;
      intArray0[0] = 65094;
      intArray0[1] = 91;
      int int1 = (-569);
      intArray0[2] = (-569);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral((-569), 65094);
      int[][] intArray1 = new int[8][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      int[] intArray2 = new int[0];
      intArray1[7] = intArray2;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(873, 393);
      String string0 = charClass0.toString();
      assertEquals("[0x369]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 4;
      intArray0[1] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, 66640);
      charClass2.toString();
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharGroup charGroup0 = null;
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        CharClass.charClassToString((int[]) null, 7952);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[8];
      int[] intArray1 = new int[2];
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.negateClass();
      CharClass charClass1 = charClass0.appendNegatedClass(intArray1);
      charClass1.cleanClass();
      assertArrayEquals(new int[] {0, 1114111}, intArray1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 0;
      intArray0[0] = 0;
      intArray0[1] = (-104);
      int int1 = 65;
      intArray0[2] = 65;
      intArray0[3] = 3306;
      intArray0[4] = 1584;
      intArray0[5] = 1114111;
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = (-2);
      intArray1[1] = 0;
      intArray1[2] = (-104);
      intArray1[3] = 0;
      intArray1[4] = 1584;
      intArray1[5] = 0;
      intArray1[6] = (-104);
      intArray1[7] = 1114111;
      intArray1[8] = 1584;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = 0;
      intArray0[0] = 0;
      intArray0[1] = (-3861);
      int int1 = 2351;
      intArray0[2] = 2351;
      int int2 = 5476;
      intArray0[3] = 5476;
      int int3 = 43638;
      intArray0[4] = 43638;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][2];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[1];
      intArray2[0] = (-3861);
      // Undeclared exception!
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = charClass0.toArray();
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[6];
      intArray1[0] = 65;
      intArray1[1] = 0;
      intArray1[2] = 66639;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = (-1);
      intArray0[0] = intArray1;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 4707);
      CharClass charClass2 = charClass1.appendLiteral((-1), 0);
      CharClass charClass3 = charClass2.appendNegatedClass(intArray1);
      CharClass charClass4 = charClass3.appendLiteral(2, 66639);
      CharClass charClass5 = charClass3.appendTable(intArray0);
      CharClass charClass6 = charClass5.appendNegatedTable(intArray0);
      charClass6.appendClassWithSign(intArray1, 4707);
      charClass2.appendNegatedTable(intArray0);
      charClass1.toArray();
      CharClass.charClassToString(intArray1, 0);
      CharClass charClass7 = charClass6.appendTableWithSign(intArray0, 0);
      assertSame(charClass7, charClass4);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3884;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][1];
      charClass0.cleanClass();
      assertArrayEquals(new int[] {0, 0, 3884, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = 774;
      intArray0[2] = 66639;
      intArray0[3] = 1014;
      intArray0[4] = 2254;
      intArray0[5] = 0;
      intArray0[6] = 717;
      intArray0[7] = (-802);
      intArray0[8] = 4696;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][3];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendRange(66639, 0);
      CharClass charClass3 = charClass2.cleanClass();
      charClass3.negateClass();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][5];
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-439);
      intArray0[1] = 8474;
      intArray0[2] = 65;
      intArray0[3] = (-1180);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[8][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.negateClass();
      charClass3.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {(-1179), 1114111, 65, (-1180)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-439);
      intArray0[1] = (-439);
      intArray0[2] = (-439);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.negateClass();
      assertArrayEquals(new int[] {1, 1114111, (-439), (-439)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3912;
      intArray0[1] = (-728);
      intArray0[2] = 0;
      intArray0[3] = (-1642);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[9][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendTable(intArray1);
      charClass2.appendClassWithSign(intArray0, (-728));
      CharClass charClass3 = charClass1.appendNegatedTable(intArray1);
      int[] intArray2 = charClass0.toArray();
      assertArrayEquals(new int[] {3912, (-728), 0, (-1642), (-1641), 1114111}, intArray2);
      
      String string0 = CharClass.charClassToString(intArray0, (-1642));
      assertEquals("[]", string0);
      
      charClass3.appendTableWithSign(intArray1, 3963);
      assertArrayEquals(new int[] {3912, (-728), 0, (-1642)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 2222;
      intArray0[1] = 456;
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[0][0];
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.appendFoldedRange((-2084), (-2084));
      CharClass charClass4 = charClass0.appendNegatedTable(intArray1);
      charClass1.appendNegatedClass(intArray0);
      charClass0.appendRange(8, (-2347));
      CharClass charClass5 = charClass3.appendRange(335, 859);
      charClass5.toString();
      CharClass charClass6 = charClass5.appendNegatedTable(intArray1);
      charClass6.toString();
      int[] intArray2 = charClass4.toArray();
      charClass2.appendLiteral(0, (-2410));
      assertArrayEquals(new int[] {0, 0, 2222, 456}, intArray0);
      assertNotSame(intArray0, intArray2);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-695);
      intArray0[1] = (-695);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      CharClass charClass1 = charClass0.negateClass();
      charClass0.cleanClass();
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass0.negateClass();
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass2.appendNegatedClass(intArray0);
      CharClass charClass6 = charClass4.appendNegatedTable(intArray1);
      charClass6.appendRange((-695), 1114111);
      // Undeclared exception!
      try { 
        charClass5.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[8];
      intArray1[0] = 2881;
      intArray1[1] = 206;
      int int0 = 1;
      intArray1[2] = 1;
      intArray1[3] = 66645;
      intArray1[4] = 1;
      intArray1[5] = 2890;
      intArray1[6] = 61;
      int int1 = (-2766);
      intArray1[7] = 61;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      intArray0[2] = intArray1;
      intArray0[3] = intArray1;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3884;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      charClass2.cleanClass();
      CharClass charClass3 = charClass2.appendTableWithSign(intArray1, 64);
      charClass3.appendNegatedClass(intArray0);
      charClass0.appendNegatedTable(intArray1);
      // Undeclared exception!
      try { 
        charClass3.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
