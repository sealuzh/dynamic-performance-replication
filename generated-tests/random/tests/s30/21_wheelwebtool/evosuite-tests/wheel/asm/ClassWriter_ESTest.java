/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 15:00:27 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1621));
      classWriter0.visitSource("", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visitOuterClass("fKSz5vd}tzj0OK^L5", "fKSz5vd}tzj0OK^L5", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1078);
      classWriter0.visitOuterClass("Signature", "", "value ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2724);
      classWriter0.visitOuterClass("", "Signature", "org.apache.commons.io.IOCase");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2642));
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(3030, "", "EnclosingMethod", "}wOfX++@ul%", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(952);
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        classWriter0.visit(68, 6, "", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-595));
      Item item0 = classWriter0.newMethodItem("od$t^)jhZ>a.%", "LD2]", "od$t^)jhZ>a.%", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Item item0 = classWriter0.newMethodItem("", "", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1031));
      Item item0 = classWriter0.newLong(0L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      Item item0 = classWriter0.newLong((-454L));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Item item0 = classWriter0.newInteger((-492));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1078);
      Item item0 = classWriter0.newFloat(1078);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1621));
      Item item0 = classWriter0.newFloat((-3234.313F));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      Item item0 = classWriter0.newFieldItem("[W_dswF", "[W_dswF", "");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1960);
      Item item0 = classWriter0.newFieldItem("", "", "Y![3WxL");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1621));
      int int0 = classWriter0.newField("", "", "i_bwBPs");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212683);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, (String) null, "java/lang/Class");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newDouble(0.0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1566));
      Item item0 = classWriter0.newClassItem("9m#2M)j7Q?");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      Item item0 = classWriter0.newClassItem("");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1078);
      int int0 = classWriter0.newClass("Signature");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2372));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-2372), (-1294));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      int int0 = classWriter0.addUninitializedType("|", 24);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1566));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i";
      stringArray0[1] = "";
      stringArray0[2] = "i";
      stringArray0[3] = "JICml:*ZJWnS_";
      stringArray0[4] = "*OlCKhXRpiN5;D;e*";
      stringArray0[5] = "The list of prefixes must not be null";
      stringArray0[6] = "LocalVariableTypeTable";
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(220, "The list of prefixes must not be null", "*OlCKhXRpiN5;D;e*", "q$@7`4K07Wd5jC", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(63);
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      // Undeclared exception!
      try { 
        classWriter0.newNameType("SourceFile", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1960));
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, (String) null, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, (String) null, "Sxi4Aa272/>62wW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3468));
      // Undeclared exception!
      try { 
        classWriter0.newField("l;x-saR8Pe47:9l", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1979);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@3beb4823
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1246);
      int int0 = classWriter0.newNameType("`Iw", "`Iw");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2642));
      int int0 = classWriter0.newClass("");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1078);
      classWriter0.index = 1078;
      int int0 = classWriter0.addType("InnerClasses");
      assertEquals(1, int0);
      
      int int1 = classWriter0.newUTF8("Signature");
      assertEquals(1078, int1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2372));
      classWriter0.threshold = (-839);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      assertEquals("wheel.asm.ClassWriter", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1078);
      classWriter0.addType("InnerClasses");
      int int0 = classWriter0.addType("value ");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-128));
      int int0 = classWriter0.addUninitializedType("", 3);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1621));
      classWriter0.addType("");
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1555));
      classWriter0.newMethod("})2)irO", "})2)irO", "int", false);
      Item item0 = classWriter0.newFieldItem("0~{3<GCJ", "})2)irO", "int");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1960);
      Item item0 = classWriter0.newConstItem("");
      assertNotNull(item0);
      
      int int0 = classWriter0.newConst("");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2724);
      Item item0 = classWriter0.newDouble(0.75);
      Item item1 = classWriter0.newDouble(0.75);
      assertNotNull(item1);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      Item item0 = classWriter0.newLong(2);
      assertNotNull(item0);
      
      Long long0 = new Long(2);
      int int0 = classWriter0.newConst(long0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      Float float0 = new Float((double) 24);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2315, "|", "J6", "J6", float0);
      Item item0 = classWriter0.newConstItem(float0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Item item0 = classWriter0.newInteger(14);
      Item item1 = classWriter0.newInteger(14);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2372));
      int int0 = classWriter0.newMethod("", "s_5\"0", "", true);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212683);
      classWriter0.newField("float", "float", "float");
      Item item0 = classWriter0.newFieldItem("float", "float", "float");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Item item0 = classWriter0.newFieldItem("InnerClasses", "fKSz5vd}tzj0OK^L5", "fKSz5vd}tzj0OK^L5");
      // Undeclared exception!
      try { 
        classWriter0.newConst(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@a
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      Type type0 = Type.FLOAT_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(6, "", "|q~LVpVmzRG(", "", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Double double0 = new Double(1);
      int int0 = classWriter0.newConst(double0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(952);
      Boolean boolean0 = new Boolean(";|nS:r)VD");
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1031));
      Short short0 = new Short((short) (-876));
      int int0 = classWriter0.newConst(short0);
      int int1 = classWriter0.addType("F7}i_0r782j`U?|Z5");
      assertTrue(int1 == int0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      Character character0 = new Character('V');
      int int0 = classWriter0.newConst(character0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(63);
      Byte byte0 = new Byte((byte) (-79));
      int int0 = classWriter0.newConst(byte0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5305));
      classWriter0.visitAnnotation("wheel.asm.Edge", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(83, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2372));
      classWriter0.visitAnnotation("", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(67, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2214));
      classWriter0.visitInnerClass("OO(Kojev(aQYB=l'L", (String) null, "OO(Kojev(aQYB=l'L", (-2214));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(78, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-128));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "uE0}7Oft.u{,4%";
      stringArray0[1] = "uE0}7Oft.u{,4%";
      stringArray0[2] = "uE0}7Oft.u{,4%";
      stringArray0[3] = "SourceDebugExtension";
      classWriter0.visit((byte) (-128), (byte) (-128), "uE0}7Oft.u{,4%", "SourceDebugExtension", "uE0}7Oft.u{,4%", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(117, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5305));
      classWriter0.visitSource(".].", "G");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(81, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3759);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3759, "ddom%Nr", "", "EFVLjI)aRe^zvaW&", classWriter0.COMPUTE_FRAMES);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(113, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      classWriter0.visitInnerClass((String) null, (String) null, "^d|Nvj|9Mqc/", 2015);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-595));
      classWriter0.visitInnerClass("od$t^)jhZ>a.%", "lIs#cp@?e'dM$", "od$t^)jhZ>a.%", 9);
      classWriter0.visitInnerClass("lIs#cp@?e'dM$", "", (String) null, 220);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5305));
      classWriter0.visitOuterClass("wheel.asm.Edge", "Synthetic", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-128));
      classWriter0.visitOuterClass("SourceDebugExtension", "wheel.asm.Handler", "wheel.asm.Handler");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(103, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      classWriter0.visitOuterClass("a", (String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1078);
      classWriter0.visitSource((String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      classWriter0.visit(1, 5048, "[6tEE$<AkDa,vU+1", "", "[6tEE$<AkDa,vU+1", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1246);
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        classWriter0.visit(2, (-1025), "XN>", "`Iw", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1652));
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        classWriter0.visit(491, (-3568), "Code", (String) null, "Code", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "fKSz5vd}tzj0OK^L5", "fKSz5vd}tzj0OK^L5", "fKSz5vd}tzj0OK^L5", (String[]) null, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(72, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1566));
      Boolean boolean0 = Boolean.TRUE;
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      classWriter0.invalidFrames = true;
      String[] stringArray0 = new String[0];
      classWriter0.visit(1392, 2088, "1/%BrcQ(4.PKWM<", "1/%BrcQ(4.PKWM<", "1/%BrcQ(4.PKWM<", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(65, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1566));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(8, "LocalVariableTypeTable", "i", "The list of prefixes must not be null", "The list of prefixes must not be null");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
