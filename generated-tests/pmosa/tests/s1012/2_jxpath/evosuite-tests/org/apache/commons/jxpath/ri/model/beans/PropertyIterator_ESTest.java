/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 21:37:00 GMT 2018
 */

package org.apache.commons.jxpath.ri.model.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.PropertyIterator;
import org.apache.commons.jxpath.ri.model.beans.PropertyPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyIterator_ESTest extends PropertyIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      NullPointer nullPointer0 = new NullPointer(locale0, "_ L");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      nullPropertyPointer0.getImmediateValuePointer();
      QName qName0 = new QName("_ L", "_ L");
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "_ L", false, nullPropertyPointer0);
      propertyIterator0.setPosition((-2027));
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      jXPathBasicBeanInfo0.toString();
      BeanPointer beanPointer0 = new BeanPointer(qName0, (Object) null, jXPathBasicBeanInfo0, locale0);
      propertyIterator0.setPosition(0);
      propertyIterator0.getNodePointer();
      propertyIterator0.getNodePointer();
      propertyIterator0.reset();
      propertyIterator0.getPosition();
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, qName0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      nullPointer0.namespaceIterator();
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      propertyIterator0.prepareForIndividualProperty("xml:lang");
      propertyIterator0.getNodePointer();
      propertyIterator0.reset();
      propertyIterator0.getPosition();
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<Integer> class0 = Integer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0, (Locale) null);
      beanPointer0.asPath();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "'PropertyIerator startWith parameter is not a child of the supplied parent'", true, (NodePointer) null);
      propertyIterator0.getPropertyPointer();
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      beanPointer0.printPointerChain();
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, "", false, (NodePointer) null);
      propertyIterator1.prepareForIndividualProperty("");
      propertyIterator0.getPropertyPointer();
      propertyIterator1.getPropertyPointer();
      propertyIterator1.setPosition(2);
      // Undeclared exception!
      try { 
        beanPointer0.isLanguage("<<unknown namespace>>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      NullPointer nullPointer0 = new NullPointer(locale0, "f_ L");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, nullPropertyPointer0);
      boolean boolean0 = propertyIterator0.setPosition(162);
      assertEquals(162, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      NullPointer nullPointer0 = new NullPointer(locale0, "f_ L");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, false, nullPropertyPointer0);
      boolean boolean0 = propertyIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(qName0, qName0, jXPathBasicBeanInfo0, locale0);
      BeanPointer beanPointer1 = new BeanPointer(beanPointer0, qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0);
      PropertyPointer propertyPointer0 = beanPointer1.getPropertyPointer();
      NullPointer nullPointer0 = new NullPointer(propertyPointer0, qName0);
      PropertyPointer propertyPointer1 = nullPointer0.getPropertyPointer();
      NullPointer nullPointer1 = new NullPointer(propertyPointer1, qName0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer1, (String) null, false, nullPointer0);
      propertyIterator0.getPosition();
      propertyIterator0.getPosition();
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNotNull(nodePointer0);
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      NullPointer nullPointer0 = new NullPointer(locale0, (String) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, false, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty((String) null);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertEquals(1, propertyIterator0.getPosition());
      assertNull(nodePointer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      QName qName1 = beanPropertyPointer0.getName();
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, qName1);
      Object object0 = beanPropertyPointer0.bean;
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName1, (Object) null, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.setPosition((-867));
      propertyIterator0.prepareForIndividualProperty("y|<X^e~^0Wp,XI]Z^");
      propertyIterator0.getPosition();
      propertyIterator0.getPosition();
      propertyIterator0.getPropertyPointer();
      boolean boolean0 = propertyIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, (Object) null, jXPathBasicBeanInfo0, locale0);
      QName qName1 = new QName("<<unknown namespace>>", "uI0#'!*b{ibZ");
      BeanPointer beanPointer1 = new BeanPointer(beanPointer0, qName1, beanPointer0, jXPathBasicBeanInfo0);
      PropertyPointer propertyPointer0 = beanPointer1.getPropertyPointer();
      NullPointer nullPointer0 = new NullPointer(beanPropertyPointer0, qName0);
      nullPointer0.getPropertyPointer();
      NullPointer nullPointer1 = new NullPointer(propertyPointer0, qName0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer1, "parent", false, nullPointer1);
      propertyIterator0.getPosition();
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer1, "<<unknown namespace>>", false, nullPointer1);
      propertyIterator1.getPosition();
      NodePointer nodePointer0 = propertyIterator1.getNodePointer();
      assertEquals(0, propertyIterator1.getPosition());
      assertNull(nodePointer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      QName qName0 = new QName("Cannot set value for xpath: ", "Cannot set value for xpath: ");
      Object object0 = new Object();
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, "yHd wXQwJm", jXPathBasicBeanInfo0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName0);
      NodePointer nodePointer0 = beanAttributeIterator0.getNodePointer();
      assertNull(nodePointer0);
      assertEquals(0, beanAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName("Propert>Ierator startWith parmete' is not a child of the supplied parent");
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(qName0, qName0, jXPathBasicBeanInfo0, locale0);
      BeanPointer beanPointer1 = new BeanPointer(beanPointer0, qName0, "Propert>Ierator startWith parmete' is not a child of the supplied parent", jXPathBasicBeanInfo0);
      PropertyPointer propertyPointer0 = beanPointer1.getPropertyPointer();
      NullPointer nullPointer0 = new NullPointer(propertyPointer0, qName0);
      PropertyPointer propertyPointer1 = nullPointer0.getPropertyPointer();
      NullPointer nullPointer1 = new NullPointer(propertyPointer1, qName0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer1, (String) null, false, nullPointer0);
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("h[!g7}/;5dW");
      propertyIterator0.getNodePointer();
      assertEquals(1, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      NullPointer nullPointer0 = new NullPointer(locale0, "U\b");
      nullPointer0.getRootNode();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, true, (NodePointer) null);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      assertEquals(1, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      NullPointer nullPointer0 = new NullPointer(locale0, "<<unknown namespace>>");
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("nodeValue");
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      assertEquals(1, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, (Object) null, jXPathBasicBeanInfo0, locale0);
      QName qName1 = new QName("<<unknown namespace>>", "uI0#'!*b{ibZ");
      BeanPointer beanPointer1 = new BeanPointer(beanPointer0, qName1, beanPointer0, jXPathBasicBeanInfo0);
      PropertyPointer propertyPointer0 = beanPointer1.getPropertyPointer();
      NullPointer nullPointer0 = new NullPointer(beanPropertyPointer0, qName0);
      nullPointer0.getPropertyPointer();
      NullPointer nullPointer1 = new NullPointer(propertyPointer0, qName0);
      nullPointer1.getLocale();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer1, "parent", false, nullPointer1);
      PropertyIterator propertyIterator1 = new PropertyIterator(nullPointer1, ">c\"u5;@jS", true, (NodePointer) null);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertEquals(0, propertyIterator0.getPosition());
      assertNotNull(nodePointer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Locale locale1 = Locale.GERMANY;
      Object object0 = new Object();
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, object0, jXPathBasicBeanInfo0, locale0);
      beanPointer0.asPath();
      Locale locale2 = Locale.ENGLISH;
      locale2.getDisplayName(locale1);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator1.getNodePointer();
      propertyIterator0.setPosition((-1880500936));
      PropertyIterator propertyIterator2 = null;
      try {
        propertyIterator2 = new PropertyIterator(beanPointer0, (String) null, true, beanPointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      QName qName0 = new QName((String) null, (String) null);
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, locale0, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertEquals(0, propertyIterator0.getPosition());
      assertNotNull(nodePointer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.US;
      QName qName0 = new QName((String) null, (String) null);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      Object object0 = new Object();
      Object object1 = new Object();
      BeanPointer beanPointer0 = new BeanPointer(beanPropertyPointer0, qName0, object1, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      beanPointer0.namespacePointer((String) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.setPosition(268435456);
      propertyIterator0.getNodePointer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty((String) null);
      propertyIterator0.getNodePointer();
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.ENGLISH;
      locale1.getDisplayName(locale0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, (Object) null, jXPathBasicBeanInfo0, (Locale) null);
      NodePointer nodePointer0 = beanPointer0.getImmediateValuePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nodePointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "Fq/mH", true, nullPropertyPointer0);
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, "z{~Z+;\"#WjCI>", true, nullPropertyPointer0);
      PropertyIterator propertyIterator2 = new PropertyIterator(beanPointer0, (String) null, false, (NodePointer) null);
      propertyIterator2.getNodePointer();
      propertyIterator2.setPosition(Integer.MIN_VALUE);
      propertyIterator0.prepareForIndividualProperty("Fq/mH");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName((String) null, (String) null);
      Object object0 = new Object();
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, object0, jXPathBasicBeanInfo0, locale0);
      beanPointer0.asPath();
      Locale locale1 = Locale.ENGLISH;
      locale1.getDisplayName(locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      propertyIterator0.getNodePointer();
      assertEquals(1, propertyIterator0.getPosition());
      
      propertyIterator0.reset();
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = new QName("%M6Q");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.TAIWAN;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "%M6Q", jXPathBasicBeanInfo0, locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("value");
      boolean boolean0 = propertyIterator0.setPosition(280);
      assertEquals(280, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.GERMANY;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0, locale0);
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayName(locale1);
      beanPointer0.getImmediateValuePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "PropertyIerator startWith parameter is not a child of the supplied parent", true, nullPropertyPointer0);
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, "German (Germany)", false, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      propertyIterator1.prepareForIndividualProperty("bean");
      boolean boolean0 = propertyIterator1.setPosition(344);
      assertEquals(344, propertyIterator1.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplid parent", "PropertyIerator startWith parameter is not a child of the supplid parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.ROOT;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplid parent", jXPathBasicBeanInfo0, locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("bean");
      boolean boolean0 = propertyIterator0.setPosition(9);
      assertEquals(9, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.GERMANY;
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0, locale0);
      beanPointer0.getImmediateValuePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "PropertyIerator startWith parameter is not a child of the supplied parent", true, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      propertyIterator0.prepareForIndividualProperty("java.home");
      propertyIterator0.setPosition(4388);
      propertyIterator0.prepareForIndividualProperty("collection");
      propertyIterator0.getNodePointer();
      propertyIterator0.getPosition();
      propertyIterator0.prepareForIndividualProperty("propertyName");
      boolean boolean0 = propertyIterator0.setPosition(105);
      assertEquals(105, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.GERMANY;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0, locale0);
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayName(locale1);
      beanPointer0.getImmediateValuePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "German (Germany)", false, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("PropertyIerator startWith parameter is not a child of the supplied parent");
      propertyIterator0.setPosition((-2147473666));
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, "collection", true, nullPropertyPointer0);
      propertyIterator1.prepareForIndividualProperty("valuePointer");
      propertyIterator0.getPosition();
      propertyIterator1.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.setPosition((-934));
      propertyIterator0.reset();
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.GERMANY;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0, locale0);
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayName(locale1);
      beanPointer0.getImmediateValuePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "PropertyIerator startWith parameter is not a child of the supplied parent", true, nullPropertyPointer0);
      nullPropertyPointer0.setIndex(1765);
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, "German (Germany)", false, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      propertyIterator1.prepareForIndividualProperty("bean");
      propertyIterator1.setPosition(344);
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.prepareForIndividualProperty("bean");
      boolean boolean0 = propertyIterator0.setPosition(3341);
      assertEquals(3341, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.GERMANY;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "PropertyIerator startWith parameter is not a child of the supplied parent", jXPathBasicBeanInfo0, locale0);
      beanPointer0.getImmediateValuePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "PropertyIerator startWith parameter is not a child of the supplied parent", true, nullPropertyPointer0);
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      PropertyIterator propertyIterator1 = new PropertyIterator(beanPointer0, "namespaceURI", true, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      propertyIterator1.setPosition(2);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      boolean boolean0 = propertyIterator1.setPosition(1);
      assertEquals(1, propertyIterator1.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      QName qName0 = new QName((String) null, (String) null);
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      BeanPointer beanPointer0 = new BeanPointer(qName0, nodeNameTest0, jXPathBasicBeanInfo0, locale1);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName0);
      BeanAttributeIterator beanAttributeIterator1 = new BeanAttributeIterator(beanPointer0, qName0);
      beanAttributeIterator1.prepareForIndividualProperty("bytes");
      beanAttributeIterator1.getNodePointer();
      beanAttributeIterator1.getPosition();
      BeanAttributeIterator beanAttributeIterator2 = new BeanAttributeIterator(beanPointer0, qName0);
      beanAttributeIterator2.reset();
      BeanAttributeIterator beanAttributeIterator3 = new BeanAttributeIterator(beanPointer0, qName0);
      beanAttributeIterator3.getNodePointer();
      beanAttributeIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      NodePointer nodePointer0 = beanAttributeIterator2.getPropertyPointer();
      assertFalse(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QName qName0 = new QName("d654LCo0h[zO", "d654LCo0h[zO");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.ROOT;
      JXPathBasicBeanInfo jXPathBasicBeanInfo1 = new JXPathBasicBeanInfo(class0, false);
      Locale locale1 = Locale.UK;
      BeanPointer beanPointer0 = new BeanPointer(qName0, jXPathBasicBeanInfo0, jXPathBasicBeanInfo1, locale1);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "", false, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("collection");
      assertEquals(0, propertyIterator0.getPosition());
      
      boolean boolean0 = propertyIterator0.setPosition(1);
      assertEquals(1, propertyIterator0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QName qName0 = new QName("immediateParentPointer");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      Locale locale0 = Locale.ROOT;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "immediateParentPointer", jXPathBasicBeanInfo0, locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      nullPropertyPointer0.propertyIndex = 26;
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("value");
      propertyIterator0.setPosition(75);
      boolean boolean0 = propertyIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }
}
