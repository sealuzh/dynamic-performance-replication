/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:09:30 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeByte0, 19, (-824L), byteArray0, byteOrder0, (byte)24);
      tiffField0.getTag();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41492, 41492, fieldTypeRational0, 41492, 41492, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(41492, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(41492, tiffField0.getTag());
      assertEquals(41492, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2473, 2473, fieldTypeShort0, 2473, (-1551L), byteArray0, byteOrder0, 2473);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2473, tiffField0.getDirectoryType());
      assertEquals((-20269), int0);
      assertEquals((-1551), tiffField0.getOffset());
      assertEquals(2473L, tiffField0.getCount());
      assertEquals(2473, tiffField0.getTag());
      assertEquals(2473, tiffField0.getSortHint());
      assertEquals(4946, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeByte0.SLONG, 3, 50, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 2016, fieldTypeShort0, 1169L, 196L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(2016, tiffField0.getDirectoryType());
      assertEquals(2338, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1169L, tiffField0.getCount());
      assertEquals(12, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(196, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(87, " (0x");
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 23, 1295L, byteArray0, byteOrder0, 1752);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1752, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
      assertEquals(1295, tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(23L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-25);
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte)98;
      byteArray0[6] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, (-2778), fieldTypeShort0, (byte)98, 0L, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {(-6400.0), 0.0, 25132.0}, doubleArray0, 0.01);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-2778), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(98L, tiffField0.getCount());
      assertEquals(196, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-269), "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)21;
      TiffField tiffField0 = new TiffField((-269), (-269), fieldTypeShort0, 29952L, 478L, byteArray0, (ByteOrder) null, 32998);
      int int0 = tiffField0.getSortHint();
      assertEquals((-269), tiffField0.getTag());
      assertEquals((-269), tiffField0.getDirectoryType());
      assertEquals(478, tiffField0.getOffset());
      assertEquals(32998, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-269), "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)21;
      TiffField tiffField0 = new TiffField((byte)21, (-269), fieldTypeShort0, (byte)21, 29952L, byteArray0, (ByteOrder) null, (-269));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(21L, tiffField0.getCount());
      assertArrayEquals(new int[] {21, 0}, intArray0);
      assertEquals(42, tiffField0.getBytesLength());
      assertEquals(29952, tiffField0.getOffset());
      assertEquals((-269), tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals((-269), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[190];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2461, (-4), fieldTypeFloat0, 2461, 924L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(924, tiffField0.getOffset());
      assertEquals(2461L, tiffField0.getCount());
      assertEquals(2461, tiffField0.getTag());
      assertEquals(9844, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte) (-48);
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(387, 50, fieldTypeFloat0, 1L, (byte)113, byteArray0, byteOrder0, 1);
      long long0 = tiffField0.getCount();
      assertEquals(1L, long0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(113, tiffField0.getOffset());
      assertEquals(387, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1184, 41495, fieldTypeDouble0, 3946L, 1184, byteArray0, byteOrder0, 3044);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@65389452
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33434, "d9Qf_icr<3h!n?V");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33434, 33434, fieldTypeDouble0, (-5512L), 33434, (byte[]) null, byteOrder0, 33434);
      String string0 = tiffField0.getTagName();
      assertEquals(33434, tiffField0.getDirectoryType());
      assertEquals(33434, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x829a)", string0);
      assertEquals(33434, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[15];
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, (-813), fieldTypeByte0, 1227L, 10, byteArray0, byteOrder0, (-617));
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      String string0 = tiffField0.getValueDescription();
      assertEquals(10, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-813), tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
      assertEquals(1227L, tiffField0.getCount());
      assertEquals((-617), tiffField0.getSortHint());
      assertEquals(1227, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2145003874, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)36;
      TiffField tiffField0 = new TiffField(34735, 34735, fieldTypeDouble0, 34735, 2145003874, byteArray0, (ByteOrder) null, (-3664));
      tiffField0.getDoubleArrayValue();
      assertEquals((-3664), tiffField0.getSortHint());
      assertEquals(34735, tiffField0.getDirectoryType());
      assertEquals(34735, tiffField0.getTag());
      assertEquals(2145003874, tiffField0.getOffset());
      assertEquals(34735L, tiffField0.getCount());
      assertEquals(277880, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1024, "=");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(456, 456, fieldTypeByte0, 456, 1647L, byteArray0, byteOrder0, 34264);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7409f028 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[76];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-85), 1287, fieldTypeFloat0, 1L, (-1272L), byteArray0, byteOrder0, 46);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "java.lang.Float@0000000002");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)1;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 1630L, (-37L), byteArray0, byteOrder0, 50710);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3c52b858 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-653), (-653), fieldTypeFloat0, 3404, 2147483647L, byteArray0, (ByteOrder) null, 3404);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7b50f40a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33475, 33475, fieldTypeRational0, 33475, 1748L, byteArray0, byteOrder0, 3424);
      String string0 = tiffField0.getValueDescription();
      assertEquals(267800, tiffField0.getBytesLength());
      assertEquals(33475L, tiffField0.getCount());
      assertEquals(3424, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(33475, tiffField0.getDirectoryType());
      assertEquals(1748, tiffField0.getOffset());
      assertEquals(33475, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-200), (-200), fieldTypeShort0, 1969L, 0L, byteArray0, byteOrder0, 3);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-200), 3);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-200), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-200), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)21;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)2;
      byteArray0[7] = (byte)30;
      byteArray0[8] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2096, 2096, fieldTypeRational0, 2096, 2096, byteArray0, byteOrder0, (-257));
      tiffField0.getIntArrayValue();
      assertEquals(2096, tiffField0.getDirectoryType());
      assertEquals((-257), tiffField0.getSortHint());
      assertEquals(2096, tiffField0.getTag());
      assertEquals(2096L, tiffField0.getCount());
      assertEquals(2096, tiffField0.getOffset());
      assertEquals(16768, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[15];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(33448, 28, fieldTypeLong0, 160L, 33448, byteArray0, byteOrder0, 33448);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.getTagName();
      assertEquals("MD LabName", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(33448, tiffField0.getSortHint());
      assertEquals(160L, tiffField0.getCount());
      assertEquals(33448, tiffField0.getTag());
      assertEquals(33448, tiffField0.getOffset());
      assertEquals(640, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[254];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldType fieldType0 = FieldType.getFieldType(13);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A=pmZ.-F^,5");
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 82, fieldType0, 34712, 3, byteArray0, byteOrder0, 50966);
      tiffField0.getIntArrayValue();
      assertEquals(34712L, tiffField0.getCount());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(82, tiffField0.getDirectoryType());
      assertEquals(50966, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getTag());
      assertEquals(138848, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)28;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1546, 1, fieldTypeFloat0, 1, 2038L, byteArray0, byteOrder0, 0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2038, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1546, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat1 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeAscii0, 1L, 0, byteArray0, byteOrder1, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)59;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 255L, byteArray0, byteOrder0, 51);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)33;
      byteArray0[3] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeShort0, 1L, 1616L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1616, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte) (-113);
      TiffField tiffField0 = new TiffField(50733, 2837, fieldTypeLong0, 3005L, 3005L, byteArray0, (ByteOrder) null, 50733);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50733, tiffField0.getTag());
      assertEquals(3005, tiffField0.getOffset());
      assertEquals(12020, tiffField0.getBytesLength());
      assertEquals(2837, tiffField0.getDirectoryType());
      assertEquals(50733, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 3033);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)51;
      byteArray0[7] = (byte)28;
      byteArray0[8] = (byte)103;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeRational0, 79, 522L, byteArray0, byteOrder0, (byte) (-30));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {(-3.1764529536579498)}, doubleArray0, 0.01);
      assertEquals(79, tiffField0.getTag());
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals(522, tiffField0.getOffset());
      assertEquals(632, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte) (-97), 0, fieldTypeAscii0, 68L, 0, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-97), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(68, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4136, 50730, fieldTypeFloat0, 4136, (-1827L), byteArray0, byteOrder0, (byte)11);
      tiffField0.getDoubleArrayValue();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(4136, tiffField0.getTag());
      assertEquals(50730, tiffField0.getDirectoryType());
      assertEquals(16544, tiffField0.getBytesLength());
      assertEquals((-1827), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[165];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 3, fieldTypeDouble0, 4692L, 0L, byteArray0, byteOrder0, 2703);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2703, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(37536, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)33;
      byteArray0[1] = (byte)101;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33445, 33445, fieldTypeAscii0, 33445, 33445, byteArray0, byteOrder0, (byte)101);
      String string0 = tiffField0.getStringValue();
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(33445, tiffField0.getTag());
      assertEquals(33445, tiffField0.getBytesLength());
      assertEquals(33445, tiffField0.getDirectoryType());
      assertEquals(33445, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-653), 3404, fieldTypeByte0, 3404, (-2273L), byteArray0, (ByteOrder) null, (-653));
      tiffField0.dump();
      tiffField0.getByteOrder();
      assertEquals((-2273), tiffField0.getOffset());
      assertEquals(3404, tiffField0.getDirectoryType());
      assertEquals((-653), tiffField0.getTag());
      assertEquals((-653), tiffField0.getSortHint());
      assertEquals(3404, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[230];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1313, 1313, fieldTypeLong0, 1642L, 1313, byteArray0, byteOrder0, 1313);
      Long long0 = new Long(1642L);
      tiffField0.getFieldTypeName();
      tiffField0.getValueDescription();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[275];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, (byte) (-1), fieldTypeFloat0, 24640L, 1953L, byteArray0, byteOrder1, 34);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(98560, tiffField0.getBytesLength());
      assertEquals(1953, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[418];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeDouble0, 3365L, 15496L, byteArray0, byteOrder0, 29);
      int int0 = Pattern.CANON_EQ;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldTypeDouble0.getValue(tiffField0);
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteOrder.nativeOrder();
      tiffField0.getValue();
      tiffField0.getValueDescription();
      tiffField0.getDescriptionWithoutValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tiffField0.getValue();
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int int1 = Float.MIN_EXPONENT;
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
