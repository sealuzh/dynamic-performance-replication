/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 17:52:19 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)104;
      byteArray0[4] = (byte)44;
      TiffField tiffField0 = new TiffField(1092, 2557, fieldTypeRational0, 1092, 0L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1092, tiffField0.getTag());
      assertEquals(2557, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)44;
      TiffField tiffField0 = new TiffField(1092, 2557, fieldTypeRational0, 1092, 0L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2557, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1092, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2392), (-2392), fieldTypeByte0, 4, (-1691L), (byte[]) null, byteOrder0, 2292);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2392), tiffField0.getDirectoryType());
      assertEquals(2292, tiffField0.getSortHint());
      assertEquals((-2392), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-1691), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 1739, fieldTypeAscii0, 1739, 40094, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.toString();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(40094, tiffField0.getOffset());
      assertEquals("40094 (0x9c9e: XPKeywords): Invalid value: Text field not encoded as bytes. (1739 ASCII)", string0);
      assertEquals(1739, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), 1635, fieldTypeShort0, 0, (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals((-25), tiffField0.getTag());
      assertEquals(1635, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1765, 0, fieldTypeAscii0, 1765, 0, byteArray0, byteOrder0, 1765);
      int int0 = tiffField0.getTag();
      assertEquals(1765, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1765, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-222), 59933, fieldTypeFloat0, 59933, 59933, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getTag();
      assertEquals((-222), int0);
      assertEquals(59933, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(59933, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-118);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 179, fieldTypeAscii0, 1761, 0, byteArray0, byteOrder0, (-1835));
      String string0 = tiffField0.getStringValue();
      assertEquals(7, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(179, tiffField0.getDirectoryType());
      assertEquals((-1835), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1L, 0, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 46, 0L, byteArray0, (ByteOrder) null, (byte)52);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(52, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1L, 0, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-56), (byte)44, fieldTypeRational0, 0L, (byte) (-56), byteArray0, (ByteOrder) null, (byte)104);
      int int0 = tiffField0.getOffset();
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(104, tiffField0.getSortHint());
      assertEquals((-56), int0);
      assertEquals((-56), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)70;
      TiffField tiffField0 = new TiffField(1323, 65535, fieldTypeLong0, 1323, 1323, byteArray0, byteOrder0, 13);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1323, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(1323, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-58);
      TiffField tiffField0 = new TiffField((-2146717235), 1761, fieldTypeShort0, 1761, (-1094L), byteArray0, byteOrder0, (-2146717235));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2146717235), tiffField0.getTag());
      assertEquals((-14848), int0);
      assertEquals((-1094), tiffField0.getOffset());
      assertEquals((-2146717235), tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)108;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1793, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 15);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1793, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-25);
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1L, 0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 1761, (-1L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2145908090), (-2147203625), fieldTypeByte0, (-2145908090), (-1485L), byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getFieldTypeName();
      assertEquals((-2145908090), tiffField0.getTag());
      assertEquals((-2147203625), tiffField0.getDirectoryType());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-1485), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1750), (-1750), (FieldType) null, 4186L, 4L, byteArray0, byteOrder0, 13);
      tiffField0.getFieldType();
      assertEquals((-1750), tiffField0.getTag());
      assertEquals((-1750), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2145908090), (-2147203625), fieldTypeByte0, (-2145908090), (-1485L), byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getFieldType();
      assertEquals((-2147203625), tiffField0.getDirectoryType());
      assertEquals((-2145908090), tiffField0.getTag());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-1485), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(290, 290, fieldTypeAscii0, 1761, 8736L, byteArray0, byteOrder0, (byte) (-58));
      tiffField0.getFieldType();
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(290, tiffField0.getTag());
      assertEquals(290, tiffField0.getDirectoryType());
      assertEquals(8736, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeShort0, 1L, (-1475L), byteArray0, byteOrder0, (-2147382356));
      tiffField0.getDoubleValue();
      assertEquals((-2147382356), tiffField0.getSortHint());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getTag());
      assertEquals((-1475), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-95);
      TiffField tiffField0 = new TiffField(29, (-1533), fieldTypeShort0, 1L, 2776L, byteArray0, byteOrder0, (byte)35);
      tiffField0.getDoubleValue();
      assertEquals((-1533), tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(2776, tiffField0.getOffset());
      assertEquals(29, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      CharBuffer charBuffer0 = CharBuffer.allocate(1761);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-83);
      TiffField tiffField0 = new TiffField(1761, (-1048), fieldTypeShort0, 1, 10584L, byteArray0, byteOrder0, (-43));
      tiffField0.getDoubleValue();
      assertEquals((-1048), tiffField0.getDirectoryType());
      assertEquals(1761, tiffField0.getTag());
      assertEquals((-43), tiffField0.getSortHint());
      assertEquals(10584, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 2557, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, (-3868));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50341, tiffField0.getTag());
      assertEquals(2557, int0);
      assertEquals((-3868), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3116), fieldTypeLong0, (-3116), (-2023L), byteArray0, byteOrder0, (-3667));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3116), int0);
      assertEquals((-2023), tiffField0.getOffset());
      assertEquals((-3667), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeLong0, 62, 62, byteArray0, byteOrder0, (byte)126);
      tiffField0.getCount();
      assertEquals(62, tiffField0.getOffset());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3588), (-3588), fieldTypeShort0, (-3588), 613L, byteArray0, byteOrder0, (byte)32);
      tiffField0.getCount();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-3588), tiffField0.getTag());
      assertEquals((-3588), tiffField0.getDirectoryType());
      assertEquals(613, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 903, fieldTypeRational0, 0L, (-747L), byteArray0, byteOrder0, (-1753));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-747), tiffField0.getOffset());
      assertEquals(903, tiffField0.getDirectoryType());
      assertEquals((-1753), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2650), fieldTypeRational0, (-2650), (-2650), byteArray0, byteOrder0, (byte)44);
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-2650), tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-2650), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1038), (-3877), fieldTypeByte0, (-1964L), (-1L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals((-3877), tiffField0.getDirectoryType());
      assertEquals((-1038), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1L, 0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-511), (-958), fieldTypeLong0, (-511), 1L, byteArray0, byteOrder0, 13);
      MockPrintStream mockPrintStream0 = new MockPrintStream("IFD2");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "blkXC&L3fLU");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2392), (-2392), fieldTypeByte0, 4, (-1691L), (byte[]) null, byteOrder0, 2292);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41728, (-1), (FieldType) null, (-1244L), 0L, byteArray0, byteOrder0, 41728);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2140), (-3104), fieldTypeShort0, (-1L), 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 46, fieldTypeShort0, (-3560L), 1L, (byte[]) null, byteOrder0, 1578);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1323, "<&`[/`_UbE!8>q_w[");
      TiffField tiffField0 = new TiffField(0, (-1332), fieldTypeByte0.FLOAT, 2L, (-1452L), (byte[]) null, (ByteOrder) null, (-1664));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37500, "<&`[/`_UbE!8>q_w[");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1425, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-383));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 1739, fieldTypeAscii0, 1739, 40094, byteArray0, byteOrder0, 16);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-958), "");
      TiffField tiffField0 = new TiffField((-1431655764), (-2344), fieldTypeByte0, (-2344), (-2344), byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-323), (FieldType) null, (-1048), (byte) (-83), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1750), (-1750), (FieldType) null, 4186L, 4L, byteArray0, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1547, 1547, (FieldType) null, 2466L, (-1L), byteArray0, (ByteOrder) null, 37398);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Mj*'3(}h;>h?)L-`");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-958), (-958), fieldTypeLong0, (-958), (-958), byteArray0, byteOrder0, (-958));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1323, 1323, byteArray0, byteOrder0, (-1048));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1323, tiffField0.getOffset());
      assertEquals((-1048), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeAscii0.SBYTE, 407L, 407L, byteArray0, byteOrder0, 52);
      tiffField0.getByteArrayValue();
      assertEquals(12, tiffField0.getTag());
      assertEquals(407, tiffField0.getOffset());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-958), "");
      TiffField tiffField0 = new TiffField((-1431655764), (-2344), fieldTypeByte0, (-2344), (-2344), byteArray0, byteOrder0, 10);
      tiffField0.getFieldType();
      assertEquals((-2344), tiffField0.getDirectoryType());
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-2344), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 46, 0L, byteArray0, (ByteOrder) null, (byte)52);
      tiffField0.getValue();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1765, 0, fieldTypeAscii0, 1765, 0L, byteArray0, byteOrder0, 1765);
      tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1765, tiffField0.getTag());
      assertEquals(1765, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 2147010529, fieldTypeAscii0, 0, 1L, byteArray0, (ByteOrder) null, 4098);
      int int0 = tiffField0.getTag();
      assertEquals(2147010529, tiffField0.getDirectoryType());
      assertEquals(4098, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldType fieldType0 = FieldType.getFieldType(4);
      TiffField tiffField0 = new TiffField(0, 0, fieldType0, 0, 4, byteArray0, byteOrder0, 4);
      tiffField0.getCount();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1761, (-1), fieldTypeAscii0, 1761, (-1), byteArray0, byteOrder0, 1761);
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1761, tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(29, 371, fieldTypeShort0, 484L, 371, byteArray0, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(41, 1, fieldTypeByte0, 1, 1291L, byteArray0, (ByteOrder) null, (-2145908090));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(1291, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2145908090), tiffField0.getSortHint());
      assertEquals(41, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-222), 59933, fieldTypeFloat0, 59933, 59933, byteArray0, byteOrder0, (byte)1);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@68941f37 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1L, 0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1761, 604, fieldTypeAscii0.DOUBLE, 1247, 8589898760L, byteArray0, byteOrder0, 1761);
      tiffField0.getDoubleArrayValue();
      assertEquals((-35832), tiffField0.getOffset());
      assertEquals(1247L, tiffField0.getCount());
      assertEquals(1761, tiffField0.getTag());
      assertEquals(1761, tiffField0.getSortHint());
      assertEquals(604, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4934, (-638), fieldTypeFloat0, 3146L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(3146L, tiffField0.getCount());
      assertEquals(4934, tiffField0.getTag());
      assertEquals((-638), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2652, (-2114), fieldTypeAscii0.SLONG, 1761, 1L, byteArray0, byteOrder0, 2652);
      tiffField0.getDoubleArrayValue();
      assertEquals(2652, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2652, tiffField0.getTag());
      assertEquals(1761L, tiffField0.getCount());
      assertEquals((-2114), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(39, "qK r");
      CharBuffer charBuffer0 = CharBuffer.allocate(39);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(113, 41494, fieldTypeByte0.SHORT, 41494, (-757L), byteArray0, byteOrder0, 1525);
      tiffField0.getDoubleArrayValue();
      assertEquals(113, tiffField0.getTag());
      assertEquals(1525, tiffField0.getSortHint());
      assertEquals(41494L, tiffField0.getCount());
      assertEquals((-757), tiffField0.getOffset());
      assertEquals(41494, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1323, 1323, byteArray0, byteOrder0, (-1048));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1323L, tiffField0.getCount());
      assertEquals((-1048), tiffField0.getSortHint());
      assertEquals(1323, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2146923969), 264, fieldTypeRational0, 264, 3350L, byteArray0, byteOrder0, (byte)6);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(3350, tiffField0.getOffset());
      assertEquals(264L, tiffField0.getCount());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-2146923969), tiffField0.getTag());
      assertEquals(264, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-958), 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 32998);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-958), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(32998, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1761, (-1), fieldTypeAscii0, 1761, (-1), byteArray0, byteOrder0, 1761);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(483, 483, fieldTypeFloat0, 3151L, 3151L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@ecf310a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2146717235), 1761, fieldTypeShort0, 1761, (-1094L), byteArray0, byteOrder0, (-2146717235));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2146717235), tiffField0.getTag());
      assertEquals((-2146717235), tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getDirectoryType());
      assertEquals(1761L, tiffField0.getCount());
      assertEquals((-1094), tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-620), (byte) (-83), fieldTypeShort0, 40965, (-1048), byteArray0, byteOrder0, (-1048));
      tiffField0.getIntArrayValue();
      assertEquals(40965L, tiffField0.getCount());
      assertEquals((-1048), tiffField0.getSortHint());
      assertEquals((-620), tiffField0.getTag());
      assertEquals((-1048), tiffField0.getOffset());
      assertEquals((-83), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1092, 2557, fieldTypeRational0, 1092, 0L, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 0, fieldTypeRational0, 0L, 2557, byteArray0, byteOrder0, (-2155));
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50341, tiffField0.getTag());
      assertEquals(2557, tiffField0.getOffset());
      assertEquals((-2155), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 2557, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, (-3868));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(781, 781, fieldTypeLong0, 781, 781, byteArray0, byteOrder0, 781);
      tiffField0.getIntArrayValue();
      assertEquals(781, tiffField0.getDirectoryType());
      assertEquals(781, tiffField0.getSortHint());
      assertEquals(781, tiffField0.getTag());
      assertEquals(781L, tiffField0.getCount());
      assertEquals(3124, tiffField0.getBytesLength());
      assertEquals(781, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1323, 1323, byteArray0, byteOrder0, (-1048));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@7d713ff
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(5, 1, fieldTypeAscii0, 505L, (-1L), byteArray0, byteOrder0, 2688);
      String string0 = tiffField0.getStringValue();
      assertEquals(505, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2688, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(5, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(483, 483, fieldTypeFloat0, 3151L, 3151L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(483, tiffField0.getDirectoryType());
      assertEquals(3151, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x1e3)", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 0, fieldTypeRational0, 0L, 2557, byteArray0, byteOrder0, (-2155));
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2155), tiffField0.getSortHint());
      assertEquals(2557, tiffField0.getOffset());
      assertEquals(50341, tiffField0.getTag());
      assertEquals("PrintIM", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-958), (-958), fieldTypeLong0, (-958), (-958), byteArray0, byteOrder0, (-958));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2905), 1326, fieldTypeFloat0, 1326, 299, byteArray0, byteOrder0, 37521);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37521, tiffField0.getSortHint());
      assertEquals((-2905), tiffField0.getTag());
      assertEquals(5304, tiffField0.getBytesLength());
      assertEquals(299, tiffField0.getOffset());
      assertEquals(1326L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1326, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "qK r");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1323, 1323, fieldTypeByte0, 766L, (byte) (-11), byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.toString();
      assertEquals("1323 (0x52b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (766 qK r)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1323, tiffField0.getDirectoryType());
      assertEquals((-11), tiffField0.getOffset());
      assertEquals(766, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(13, (-2147203625), fieldTypeByte0, 383L, 4L, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals((-2147203625), tiffField0.getDirectoryType());
      assertEquals(383L, tiffField0.getCount());
      assertEquals(5, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(383, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[283];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(371, 371, fieldTypeDouble0, 371, 371, byteArray0, byteOrder0, 371);
      String string0 = tiffField0.toString();
      assertEquals("371 (0x173: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (371 Double)", string0);
      assertEquals(2968, tiffField0.getBytesLength());
      assertEquals(371, tiffField0.getSortHint());
      assertEquals(371, tiffField0.getOffset());
      assertEquals(371, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(781, 781, fieldTypeLong0, 781, 781, byteArray0, byteOrder0, 781);
      String string0 = tiffField0.getValueDescription();
      assertEquals(781, tiffField0.getOffset());
      assertEquals(781, tiffField0.getTag());
      assertEquals(781, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(781, tiffField0.getDirectoryType());
      assertEquals(3124, tiffField0.getBytesLength());
      assertEquals(781L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1747, 1747, fieldTypeAscii0.SLONG, 1747, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(6988, tiffField0.getBytesLength());
      assertEquals("1747 (0x6d3: Unknown Tag): 0 (1747 SLong)", string0);
      assertEquals(1747, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1), 336, fieldTypeLong0.SSHORT, 6583L, 336, byteArray0, byteOrder0, 336);
      String string0 = tiffField0.toString();
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (6583 SShort)", string0);
      assertEquals(336, tiffField0.getOffset());
      assertEquals(336, tiffField0.getDirectoryType());
      assertEquals(336, tiffField0.getSortHint());
      assertEquals(13166, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4274, 902, fieldTypeAscii0, 4274, 4274, byteArray0, byteOrder0, 2465);
      String string0 = tiffField0.getValueDescription();
      assertEquals(902, tiffField0.getDirectoryType());
      assertEquals(2465, tiffField0.getSortHint());
      assertEquals(4274, tiffField0.getOffset());
      assertEquals(4274, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4274, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1765, 0, fieldTypeAscii0, 1765, 0, byteArray0, byteOrder0, 1765);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1765, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1765, tiffField0.getTag());
      assertEquals(1765, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1761, 0, fieldTypeAscii0, 1761, 0, byteArray0, byteOrder0, 1761);
      tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1761, tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getTag());
      assertEquals(1761L, tiffField0.getCount());
      assertEquals(1761, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1L, 0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), 1635, fieldTypeShort0, 0, (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-25), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1635, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getTag());
      assertEquals((-25), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-222), 59933, fieldTypeFloat0, 59933, 59933, byteArray0, byteOrder0, (byte)1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(59933L, tiffElement0.offset);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-222), tiffField0.getTag());
      assertEquals(59933, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2650), fieldTypeRational0, (-2650), (-2650), byteArray0, byteOrder0, (byte)44);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)44, (-21200));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2650), tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-2650), tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2650), fieldTypeRational0, (-2650), (-2650), byteArray0, byteOrder0, (byte)44);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)44, (-21200));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals((-2650), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: null", string0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-2650), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(5, 1, fieldTypeAscii0, 505L, (-1L), byteArray0, byteOrder0, 2688);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(5, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2688, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(33922, (String) null);
      TiffField tiffField0 = new TiffField(2630, 50, fieldTypeLong0, 2630, 50341, byteArray0, byteOrder0, 23);
      tiffField0.getFieldTypeName();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(50341, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2630, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "u");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2573, 0, fieldTypeByte0, (-1), 2573, byteArray0, byteOrder0, (-2038));
      int int0 = tiffField0.getOffset();
      assertEquals(2573, tiffField0.getTag());
      assertEquals((-2038), tiffField0.getSortHint());
      assertEquals(2573, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1761, 0, fieldTypeAscii0, 1761, 0, byteArray0, byteOrder0, 1761);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1761, tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33421, " (");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), 1635, fieldTypeShort0, 0, (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      tiffField0.dump();
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-25), tiffField0.getOffset());
      assertEquals(1635, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (-1048));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1048), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2650), fieldTypeRational0, (-2650), (-2650), byteArray0, byteOrder0, (byte)44);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-2650), tiffField0.getOffset());
      assertEquals((-2650), tiffField0.getDirectoryType());
      assertEquals("-1 (0xffffffff: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-935), (-935), fieldTypeLong0, (-935), (-935), byteArray0, byteOrder0, (-935));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-481), (-481), fieldTypeFloat0, 756, 36L, byteArray0, byteOrder0, (-481));
      String string0 = tiffField0.toString();
      assertEquals(3024, tiffField0.getBytesLength());
      assertEquals((-481), tiffField0.getDirectoryType());
      assertEquals("-481 (0xfffffe1f: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (756 Float)", string0);
      assertEquals(36, tiffField0.getOffset());
      assertEquals((-481), tiffField0.getSortHint());
  }
}
