/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 15:59:31 GMT 2019
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import java.util.Locale;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(1610612736, 7, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      // Undeclared exception!
      try { 
        IOUtils.getChars(3461, 3461, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3460
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 0;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer0, (CharBuffer) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8((char[]) null, 191, 191, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(">uO^NdN;Yt,%~8");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) ">uO^NdN;Yt,%~8";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) mockPrintStream0;
      objectArray0[5] = (Object) mockPrintStream0;
      objectArray0[6] = (Object) ">uO^NdN;Yt,%~8";
      // Undeclared exception!
      try { 
        mockPrintStream0.printf((Locale) null, ">uO^NdN;Yt,%~8", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '~'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      IOUtils.stringSize(144);
      IOUtils.decodeBase64("utf8 decode error, ");
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("utf8 decode error, ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      IOUtils.getStringProperty("LrjvN/#3");
      IOUtils iOUtils0 = new IOUtils();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("%kROg+");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      IOUtils.close(bufferedWriter0);
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.getChars(65536, 65536, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65535
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      char char0 = 'V';
      char char1 = '2';
      char char2 = 'v';
      int int0 = 110;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars(50L, 110, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 109
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      IOUtils.stringSize(53);
      IOUtils.stringSize(69);
      byte[] byteArray0 = IOUtils.decodeBase64("fOA[G<=s~", 2, 2);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode((CharsetDecoder) null, byteBuffer0, charBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.unmappableCharacterAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertEquals(0, byteBuffer0.arrayOffset());
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.isValidJsonpQueryParam("UTF-8");
      IOUtils.stringSize(0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)120, 0, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      IOUtils.stringSize(144);
      IOUtils.stringSize((long) 144);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        IOUtils.getChars(2799L, 3, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(35);
      IOUtils.stringSize((long) 35);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      IOUtils.close(dataOutputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 2, 2, iOUtils0.ASCII_CHARS);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 3968);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3969
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)95, 1017);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 96
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[1] = (byte) (-39);
      byteArray0[4] = (byte)1;
      byteArray0[6] = (byte) (-39);
      char[] charArray0 = new char[4];
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)1, (byte)1, charArray0);
      assertEquals((-1), int0);
      
      int int1 = IOUtils.encodeUTF8(charArray0, (byte) (-39), (byte) (-39), byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.readAll((Reader) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // read string from reader error
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      IOUtils.close((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        IOUtils.getChars((-261), (-261), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -262
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = '';
      charArray0[2] = 'S';
      charArray0[3] = 'B';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)0, (int) (byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4r,@x/S%^");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte) (-32);
      char[] charArray0 = new char[4];
      charArray0[0] = '{';
      charArray0[1] = 'N';
      charArray0[2] = '?';
      charArray0[3] = 'm';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)32, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      char[] charArray0 = new char[0];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte) (-95);
      IOUtils.encodeUTF8(charArray0, (-3077), (-3077), byteArray0);
      String string0 = IOUtils.getStringProperty("com.alibaba.fastjson.util.UTF8Decoder");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder");
      assertEquals(27, byteArray0.length);
      
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      IOUtils.decodeUTF8(byteArray0, 731, (-2322), charArray0);
      assertEquals(27, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      IOUtils.decodeBase64("UTF-8", 0, 0);
      char char0 = '^';
      IOUtils.firstIdentifier('^');
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = '^';
      charArray0[6] = '^';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1L), 3671, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3670
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-11), 63, iOUtils0.replaceChars);
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 63, (-11), iOUtils0.specicalFlags_singleQuotes);
      // Undeclared exception!
      try { 
        IOUtils.getChars(1494L, (-11), iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -12
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      char[] charArray0 = new char[8];
      int int0 = 3;
      IOUtils.getChars(3, 3, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = (-1831);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1831), (-2642), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 144;
      IOUtils.stringSize(144);
      String string0 = "read string from reader error";
      byte[] byteArray0 = IOUtils.decodeBase64("read string from reader error");
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (-2147483645), 2496, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483645
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      char[] charArray0 = new char[6];
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 763, 763, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 763
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-6), (int) (byte) (-6), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      charArray0[1] = 'q';
      charArray0[2] = 'y';
      charArray0[3] = 'C';
      charArray0[4] = 'x';
      charArray0[5] = 'S';
      int int0 = 2642;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2623, 2642);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2623
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      char[] charArray0 = null;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-122);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((char[]) null, 4, 56320);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "UTF-8";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("UTF-8", 0, (-569));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((char[]) null, 41, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = "com.alibaba.fastjson.JSONException";
      IOUtils.getStringProperty("com.alibaba.fastjson.JSONException");
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      IOUtils.stringSize(46);
      int int0 = IOUtils.stringSize(14);
      assertEquals(2, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("encodeUTF8 error", 2, 14);
      assertArrayEquals(new byte[] {(byte)114, (byte) (-121), (byte)94, (byte)81, (byte)49, (byte)124, (byte) (-3), (byte) (-22), (byte) (-21), (byte) (-94)}, byteArray0);
      assertEquals(10, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      String string0 = "X";
      IOUtils.decodeBase64("X");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 44, 4, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 70, 70, iOUtils0.replaceChars);
      assertEquals(70, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.getChars(100000000000L, 35, iOUtils0.replaceChars);
      IOUtils.getChars(2, 35, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      IOUtils.firstIdentifier('n');
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("aqDjXE(xr4: > ", 0, 1928);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.DIGITS, (-66), (-66), iOUtils0.specicalFlags_doubleQuotes);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(52);
      IOUtils.stringSize((long) 52);
      IOUtils.getChars((long) 52, 30, iOUtils0.CA);
      Charset.defaultCharset();
      IOUtils.stringSize((-1L));
      iOUtils0.UTF8.encode("fastjson.compatibleWithFieldName");
      CharBuffer.wrap((CharSequence) "fastjson.compatibleWithJavaBean");
      IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.CA, 3, 2);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = (-539);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", (-539), 4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      IOUtils.stringSize((long) 144);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars((byte)2, 27, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(30);
      CharBuffer charBuffer0 = CharBuffer.allocate(30);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-53);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte)68;
      byteArray0[7] = (byte)24;
      char[] charArray0 = new char[2];
      charArray0[0] = '8';
      charArray0[1] = 'P';
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)1, (byte)1, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 65572, 65572, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65571
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.stringSize(35);
      int int1 = IOUtils.stringSize((long) 35);
      assertTrue(int1 == int0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 2, 2, iOUtils0.ASCII_CHARS);
      char[] charArray0 = new char[7];
      charArray0[0] = 'b';
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      assertEquals(24, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder");
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = ' ';
      IOUtils.decodeUTF8(byteArray0, 127, (-2616), charArray0);
      IOUtils.loadPropertiesFromFile();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      ByteBuffer byteBuffer0 = charset0.encode("TNUoB(UF_\"QWy1NRO?$");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      String string0 = IOUtils.getStringProperty("TNUoB(UF_\"QWy1NRO?$");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      IOUtils.stringSize(5);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars(1, 1, iOUtils0.ASCII_CHARS);
      byte[] byteArray0 = IOUtils.decodeBase64("/F.1<uF");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.malformedInputAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, 1, 1);
      CharBuffer charBuffer0 = CharBuffer.wrap(iOUtils0.replaceChars, 28, 5);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // utf8 decode error, Input length = 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[3];
      byte byte0 = (byte)32;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-121);
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)32, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-3422L), (int) (byte) (-121), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -122
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.isValidJsonpQueryParam("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 12, 82);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars(56320, 56320, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56319
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      IOUtils.close(byteArrayOutputStream0);
      assertEquals(0, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[7];
      charArray0[0] = '<';
      charArray0[1] = 'C';
      charArray0[2] = '.';
      charArray0[3] = ':';
      charArray0[4] = '|';
      charArray0[5] = '[';
      charArray0[6] = '+';
      // Undeclared exception!
      try { 
        IOUtils.getChars(1088L, Integer.MAX_VALUE, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483646
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(35);
      IOUtils.stringSize((long) 35);
      IOUtils.getChars((long) 2, 2, iOUtils0.DIGITS);
      Charset.defaultCharset();
      IOUtils.stringSize((-2814L));
      IOUtils.stringSize(307L);
      IOUtils.loadPropertiesFromFile();
      iOUtils0.UTF8.encode("");
      CharBuffer.wrap((CharSequence) "fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1070, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1070
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      IOUtils.stringSize(113);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      int int0 = 9999999;
      int int1 = (-615);
      // Undeclared exception!
      try { 
        IOUtils.getChars(9999999, (-615), iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -616
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      IOUtils.stringSize(144);
      IOUtils.stringSize((long) 144);
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = 'I';
      charArray0[2] = 'j';
      charArray0[3] = '?';
      charArray0[4] = '?';
      charArray0[5] = '>';
      charArray0[6] = 'j';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('1');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, (ByteBuffer) null, (CharBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam(")iWAMjx");
      assertFalse(boolean0);
      
      int int0 = IOUtils.stringSize(10000000000L);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.unmappableCharacterAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      IOUtils.isValidJsonpQueryParam("UTF-8");
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)120, 0, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '8';
      charArray0[1] = 'z';
      char char0 = '^';
      charArray0[2] = '^';
      charArray0[3] = 'O';
      int int0 = 3088;
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 3088, 3088, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)21, (int) (byte)21, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) (byte) (-87), (int) (byte) (-87), iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -88
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      IOUtils.stringSize(53);
      int int0 = IOUtils.stringSize(69);
      assertEquals(2, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("fAG<=~", 2, 2);
      assertEquals(0, byteArray0.length);
      
      byte[] byteArray1 = IOUtils.decodeBase64("fAG<=~");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 16, 16);
      assertEquals(12, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      IOUtils.stringSize(0L);
      IOUtils.getStringProperty("G!|q");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      IOUtils.close(pipedOutputStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = 's';
      charArray0[1] = 'D';
      // Undeclared exception!
      try { 
        IOUtils.getChars(0L, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = (-2551);
      int int1 = 8064;
      char[] charArray0 = new char[1];
      char char0 = '8';
      charArray0[0] = '8';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2551), 8064, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8063
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8((byte[]) null, (byte)68, (byte)68, charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("9rtg?l.Lwl=");
      CharBuffer charBuffer0 = CharBuffer.allocate(3656);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // utf8 decode error, Input length = 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-2550L), 64, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      IOUtils.stringSize(615);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("RAX<=:~", 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertEquals(0, byteArray0.length);
      
      IOUtils.isValidJsonpQueryParam("");
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("com.alibaba.fastjson.util.UTF8Decoder");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      String string0 = IOUtils.readAll(charArrayReader0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", (-2172), (-2172));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.firstIdentifier('U');
      IOUtils.firstIdentifier('a');
      IOUtils.getStringProperty("t");
      String string0 = "P[i?SnS2Z3B:<#L]gV";
      int int0 = 0;
      IOUtils.decodeBase64("P[i?SnS2Z3B:<#L]gV", 0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'a';
      charArray0[1] = 'U';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-639L), 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      char[] charArray0 = new char[3];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-32);
      byteArray0[2] = (byte)32;
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, 82, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte) (-51);
      char[] charArray0 = new char[4];
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)114, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', 'r'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      byte[] byteArray1 = IOUtils.decodeBase64("\"", (int) (byte)82, (int) (byte)0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      char[] charArray0 = new char[6];
      IOUtils.stringSize(1979);
      int int0 = (-32);
      char[] charArray1 = new char[3];
      charArray1[0] = 'v';
      charArray1[1] = '-';
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, (-32), charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -33
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(30);
      CharBuffer charBuffer0 = CharBuffer.allocate(30);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte) (-65);
      byteArray0[5] = (byte)73;
      char[] charArray0 = new char[9];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      charArray0[6] = '=';
      charArray0[7] = '=';
      charArray0[8] = '=';
      IOUtils.decodeUTF8(byteArray0, (-2252), (-2147182245), charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (int) (byte) (-51), (int) (byte)26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -51
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 97, 97, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 97
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[1] = (byte) (-13);
      byteArray0[4] = (byte)1;
      byteArray0[6] = (byte) (-13);
      char[] charArray0 = new char[4];
      IOUtils.decodeUTF8(byteArray0, (byte)1, (byte)1, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2398L), (int) (byte) (-13), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -14
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      IOUtils.stringSize(53);
      int int0 = IOUtils.stringSize(72);
      assertEquals(2, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("fOA[G<=s~", 2, 2);
      assertEquals(0, byteArray0.length);
      
      IOUtils.getStringProperty("]IM;~~~y6B}@'a/q0>");
      byte[] byteArray1 = IOUtils.decodeBase64("");
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[3];
      charArray0[0] = '\\';
      charArray0[1] = 'E';
      charArray0[2] = '/';
      int int1 = IOUtils.encodeUTF8(charArray0, 2, (-18), byteArray1);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      IOUtils.firstIdentifier('}');
      IOUtils.isIdent('@');
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = 'h';
      charArray0[3] = 'x';
      charArray0[4] = 'l';
      charArray0[5] = '@';
      charArray0[6] = '@';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      IOUtils.close(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 0;
      int int1 = 858;
      char[] charArray0 = new char[3];
      char char0 = '7';
      charArray0[0] = '7';
      charArray0[1] = '8';
      charArray0[2] = '>';
      // Undeclared exception!
      try { 
        IOUtils.getChars(0, 858, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 857
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 12, 82);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      IOUtils.stringSize(615);
      IOUtils.decodeBase64("8AXK=:~", 3, 3);
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = '?';
      charArray0[2] = '5';
      charArray0[3] = 'N';
      charArray0[4] = '4';
      // Undeclared exception!
      try { 
        IOUtils.getChars(84, 156, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 155
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-429), 105);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -429
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      charArray0[1] = '{';
      charArray0[2] = '(';
      charArray0[3] = 'v';
      charArray0[4] = 'w';
      charArray0[5] = '*';
      charArray0[6] = '$';
      IOUtils.getChars((long) 65542, 5, charArray0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("com.alibaba.fastjson.util.UTF8Decoder");
      assertTrue(boolean0);
      
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("com.alibaba.fastjson.util.UTF8Decoder");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = IOUtils.stringSize(5);
      //  // Unstable assertion: assertEquals(1, int0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = '9';
      charArray0[1] = 'S';
      charArray0[2] = '=';
      charArray0[3] = 'A';
      charArray0[4] = 'f';
      charArray0[5] = '9';
      charArray0[6] = '\'';
      charArray0[7] = 'a';
      charArray0[8] = 'P';
      IOUtils.getChars((byte) (-52), 5, charArray0);
      //  // Unstable assertion: assertArrayEquals(new char[] {'9', 'S', '-', '\u0000', '\u0000', '9', '\'', 'a', 'P'}, charArray0);
      
      boolean boolean0 = IOUtils.isIdent('a');
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      byteArray0[4] = (byte) (-21);
      char[] charArray0 = new char[4];
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)15, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals((-1), int0);
      
      boolean boolean0 = IOUtils.isIdent('h');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      char[] charArray0 = new char[6];
      IOUtils.stringSize((-837L));
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 1, 1);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      IOUtils.stringSize((-2539L));
      String string0 = "";
      IOUtils.isValidJsonpQueryParam("");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("$al5V/svF.Q12E^Cs]", 1, 61);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(65536);
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = (-1724);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte) (-122);
      byteArray0[1] = (byte) (-122);
      IOUtils.encodeUTF8((char[]) null, 0, (-1724), byteArray0);
      IOUtils.stringSize((long) 0);
      String string0 = null;
      IOUtils.isValidJsonpQueryParam((String) null);
      IOUtils.isValidJsonpQueryParam("z3$5a-gYQcCN");
      String string1 = "";
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(35);
      IOUtils.stringSize((long) 35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.encodeUTF8(iOUtils0.replaceChars, 2, 35, iOUtils1.specicalFlags_doubleQuotes);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 2);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(58);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.isValidJsonpQueryParam("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 2, 76);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      IOUtils.stringSize(5);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 27, 27, iOUtils0.specicalFlags_doubleQuotes);
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars(1, 1, iOUtils0.ASCII_CHARS);
      IOUtils.decodeBase64("/F.1<uF");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.getStringProperty("/F.1<uF");
      IOUtils.firstIdentifier('D');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputStreamReader inputStreamReader0 = null;
      try {
        inputStreamReader0 = new InputStreamReader(pipedInputStream0, "fastjson.compatibleWithJavaBean");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '7';
      charArray0[2] = 'q';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)109, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      IOUtils.stringSize(0L);
      IOUtils.stringSize(1676L);
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = 'L';
      charArray0[2] = '#';
      charArray0[3] = 'j';
      charArray0[4] = 'I';
      charArray0[5] = 's';
      charArray0[6] = 'j';
      charArray0[7] = '?';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 69, (-429));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -361
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 65530, 65530, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65529
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char[] charArray0 = new char[6];
      IOUtils.decodeBase64("}P5%P]@M X");
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 65536, 65536, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65535
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('\u0101');
      assertFalse(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[4];
      charArray0[0] = '\u0101';
      charArray0[1] = '\u0101';
      charArray0[2] = '\u0101';
      charArray0[3] = '\u0101';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-104), (int) (byte) (-104), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -105
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = IOUtils.stringSize((long) 65536);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      IOUtils.stringSize(144);
      IOUtils.stringSize((long) 144);
      char[] charArray0 = new char[7];
      IOUtils.getChars((long) 3, 3, charArray0);
      Charset charset0 = Charset.defaultCharset();
      IOUtils.stringSize((long) 3);
      charset0.encode("");
      CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 144;
      IOUtils.stringSize((long) 144);
      IOUtils.stringSize((long) 144);
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[2] = '\'';
      charArray0[3] = '*';
      charArray0[4] = 'd';
      charArray0[5] = 'Z';
      // Undeclared exception!
      try { 
        IOUtils.getChars(10000000000L, 307, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 306
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((String) null, (-1952257860), (-1952257860));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = IOUtils.getStringProperty("5 ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[3];
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)0;
      IOUtils.decodeUTF8(byteArray0, (byte)0, 70, charArray0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = 'g';
      charArray0[2] = 'h';
      charArray0[3] = 'Q';
      charArray0[4] = 'y';
      charArray0[5] = ':';
      charArray0[6] = 'o';
      charArray0[7] = 'p';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)106, 944, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 943
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = null;
      int int0 = 118;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((String) null, (int) (byte) (-6), 118);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IOUtils.firstIdentifier('b');
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = 'D';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-54);
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)88;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 0, 1309, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      IOUtils.stringSize(144);
      IOUtils.stringSize((long) 144);
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      charArray0[3] = '?';
      charArray0[4] = '?';
      charArray0[5] = '>';
      charArray0[6] = 'j';
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      pipedWriter0.close();
      BufferedReader bufferedReader0 = new BufferedReader(pipedReader0);
      String string0 = IOUtils.readAll(bufferedReader0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "UTF-8";
      IOUtils.decodeBase64("UTF-8");
      char char0 = '^';
      IOUtils.firstIdentifier('^');
      int int0 = 3671;
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = '^';
      charArray0[6] = '^';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1L), 3671, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3670
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars(32, 35, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = IOUtils.stringSize((long) 144);
      assertEquals(3, int0);
      
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      int int1 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 3, (-1906), iOUtils0.DIGITS);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('5');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = IOUtils.stringSize(615);
      assertEquals(3, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("RqX<m=:~", 3, 3);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      IOUtils.getStringProperty(">|Ze9V+#E&2=\"Zu6");
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = 'L';
      charArray0[2] = 'r';
      charArray0[3] = 'm';
      charArray0[4] = '@';
      charArray0[5] = '[';
      charArray0[6] = 'm';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 0, 0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      IOUtils.stringSize(53);
      IOUtils.stringSize(630);
      String string0 = "fAG<=~";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fAG<=~", 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((long) 35, 35, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars(65536, 65536, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[6];
      int int0 = 65517;
      // Undeclared exception!
      try { 
        IOUtils.getChars(65517, 65517, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65516
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-124), 70, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 69
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder");
      IOUtils.getStringProperty("AV5le)C8q|;vk");
      IOUtils.close((Closeable) null);
      char[] charArray0 = new char[1];
      charArray0[0] = ')';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1626L), (-1716), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1717
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      IOUtils.getStringProperty("LvN/#3");
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.firstIdentifier('\\');
      assertFalse(boolean0);
      
      boolean boolean1 = IOUtils.firstIdentifier('w');
      assertTrue(boolean1);
      
      int int0 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 46, 46, iOUtils0.CA);
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte) (-21);
      char[] charArray0 = new char[4];
      charArray0[1] = 'N';
      charArray0[3] = 'N';
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)32, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) (byte)114, (-1), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = (-1724);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte) (-122);
      byteArray0[1] = (byte) (-122);
      IOUtils.stringSize((long) (byte) (-122));
      String string0 = null;
      IOUtils.isValidJsonpQueryParam((String) null);
      String string1 = "z3$5a-gYQcCN";
      IOUtils.isValidJsonpQueryParam("z3$5a-gYQcCN");
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      char[] charArray0 = new char[5];
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 56, 56, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(35);
      IOUtils.stringSize((long) 35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 2, 2, iOUtils0.ASCII_CHARS);
      char[] charArray0 = new char[7];
      charArray0[0] = 'b';
      charArray0[1] = 'R';
      charArray0[2] = '{';
      charArray0[3] = 'i';
      charArray0[4] = 'w';
      charArray0[5] = 'a';
      charArray0[6] = '8';
      // Undeclared exception!
      try { 
        IOUtils.getChars((int) (byte) (-119), 2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 106;
      char[] charArray0 = new char[6];
      charArray0[0] = 'n';
      charArray0[1] = 'b';
      charArray0[2] = 'f';
      charArray0[3] = 'k';
      charArray0[4] = 'b';
      char char0 = 'V';
      charArray0[5] = 'V';
      // Undeclared exception!
      try { 
        IOUtils.getChars(0L, 106, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 105
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte byte0 = (byte)17;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8((byte[]) null, 5, 5, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      charArray0[1] = 'q';
      charArray0[2] = 'y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      IOUtils.readAll(charArrayReader0);
      IOUtils.stringSize(1469L);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("Zqy\u0000\u0000\u0000", 4, (-2197));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("irk");
      IOUtils.isValidJsonpQueryParam("");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        ByteBuffer.wrap(byteArray0, (-1206), (-1206));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 65536, 65536);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65536
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      IOUtils.stringSize(144);
      IOUtils.stringSize((long) 144);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 3, 144, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 93
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      IOUtils.stringSize(5);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars((byte)5, 1, iOUtils0.DIGITS);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      IOUtils.stringSize((-2313L));
      IOUtils.decodeBase64("I");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onMalformedInput(codingErrorAction0);
      CharBuffer charBuffer0 = CharBuffer.allocate(36);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, (ByteBuffer) null, charBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", 30, 30);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      IOUtils.stringSize(5);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars(1, 1, iOUtils0.ASCII_CHARS);
      IOUtils.decodeBase64("/F.1<uF");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.malformedInputAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.compatibleWithJavaBean");
      CharBuffer charBuffer0 = CharBuffer.wrap(iOUtils0.replaceChars, 28, 5);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(52);
      IOUtils.stringSize(2L);
      IOUtils.getChars(2L, 30, iOUtils0.CA);
      Charset.defaultCharset();
      IOUtils.stringSize((-1L));
      iOUtils0.UTF8.encode("fastjson.compatibleWithFieldName");
      CharBuffer.wrap((CharSequence) "fastjson.compatibleWithJavaBean");
      IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.CA, 3, 1);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars(10000000007L, 1879, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1878
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '7';
      charArray0[2] = 'q';
      charArray0[3] = 'b';
      charArray0[4] = 'V';
      charArray0[5] = '2';
      charArray0[6] = 'v';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1469L), (-896), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -897
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.unmappableCharacterAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 0, (-429));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -430
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      char[] charArray0 = new char[4];
      IOUtils.getChars(3, 3, charArray0);
      //  // Unstable assertion: assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      IOUtils.decodeBase64("9rtg?l.Lwl=");
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = 'T';
      charArray0[2] = '';
      charArray0[3] = ';';
      charArray0[4] = 'm';
      charArray0[5] = '}';
      charArray0[6] = 'T';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 89, 89);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 89
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      int int0 = IOUtils.stringSize(56);
      assertEquals(2, int0);
      
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 2);
      PipedWriter pipedWriter1 = null;
      try {
        pipedWriter1 = new PipedWriter(pipedReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '8';
      charArray0[1] = 'Z';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)88;
      byteArray0[6] = (byte)88;
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte)88;
      int int0 = IOUtils.encodeUTF8(charArray0, 0, (-2110), byteArray0);
      assertEquals(0, int0);
      
      boolean boolean0 = IOUtils.firstIdentifier('F');
      assertTrue(boolean0);
      
      int int1 = IOUtils.encodeUTF8(charArray0, (byte)88, 0, byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(30);
      CharBuffer charBuffer0 = CharBuffer.allocate(30);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      assertFalse(byteBuffer0.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      int int0 = IOUtils.stringSize(5);
      IOUtils iOUtils0 = new IOUtils();
      int int1 = IOUtils.encodeUTF8(iOUtils0.replaceChars, 1, 1, iOUtils0.specicalFlags_doubleQuotes);
      assertTrue(int1 == int0);
      
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars((byte)5, 1, iOUtils0.DIGITS);
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      assertEquals(24, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)17, (int) (byte)17, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((byte)80, (int) (byte)80, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      IOUtils.stringSize(5);
      IOUtils.stringSize((-1186L));
      char[] charArray0 = new char[7];
      charArray0[0] = '8';
      charArray0[1] = 'W';
      charArray0[2] = 'f';
      charArray0[3] = 'x';
      charArray0[4] = 'p';
      charArray0[5] = 'Q';
      charArray0[6] = '[';
      IOUtils.getChars((-1186L), 5, charArray0);
      Charset charset0 = Charset.defaultCharset();
      IOUtils.stringSize((-1L));
      charset0.encode("utf8 decode error, ");
      CharBuffer.wrap((CharSequence) "utf8 decode error, ");
      IOUtils.getStringProperty("UTF-8");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-2151), 1626);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2151
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      IOUtils.firstIdentifier('\u009E');
      boolean boolean0 = IOUtils.isIdent('\u009E');
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte) (-31);
      byteArray0[4] = (byte)88;
      char[] charArray0 = new char[5];
      charArray0[0] = '\u009E';
      charArray0[1] = '\u009E';
      charArray0[2] = '\u009E';
      charArray0[3] = '\u009E';
      charArray0[4] = '\u009E';
      int int0 = IOUtils.decodeUTF8(byteArray0, 1, 941, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '=';
      charArray0[1] = '*';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte) (-2);
      byteArray0[6] = (byte)19;
      byteArray0[7] = (byte) (-128);
      byteArray0[8] = (byte)39;
      int int0 = IOUtils.encodeUTF8(charArray0, 144, (-1134), byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      String string0 = "CT`y[.rJf#1w0#YaI";
      IOUtils.isValidJsonpQueryParam("CT`y[.rJf#1w0#YaI");
      IOUtils.stringSize(50L);
      IOUtils.getStringProperty("CT`y[.rJf#1w0#YaI");
      IOUtils.loadPropertiesFromFile();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        uTF8Decoder0.detectedCharset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Reader reader0 = null;
      // Undeclared exception!
      try { 
        IOUtils.readAll((Reader) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // read string from reader error
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      int int0 = IOUtils.stringSize(144);
      int int1 = IOUtils.stringSize((long) 144);
      assertTrue(int1 == int0);
      
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize((-3716L));
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.JSONException", 18, 3);
      assertEquals(1, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      IOUtils.firstIdentifier('T');
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", 2151, (-1371));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      char[] charArray0 = new char[6];
      byte[] byteArray0 = IOUtils.decodeBase64("}P5%P]@M X");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, (-980), 3030, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -980
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      IOUtils.stringSize((-504));
      IOUtils.stringSize(1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'V';
      charArray0[2] = 'N';
      charArray0[3] = ']';
      charArray0[4] = 'V';
      charArray0[5] = 'g';
      int int0 = 91;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 1, 91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 91
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(52);
      IOUtils.stringSize(2L);
      IOUtils.stringSize(52);
      IOUtils.decodeBase64("9|A3s'", 2, 2);
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      int int0 = 615;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.stringSize(615);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("7ly$'(fIQv<", 3, 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      IOUtils.stringSize(0L);
      IOUtils.decodeBase64("Y");
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("V?3LTX/-%@uP>");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = "9rtg?l.Lwl=";
      byte[] byteArray0 = IOUtils.decodeBase64("9rtg?l.Lwl=");
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = ';';
      charArray0[4] = 'm';
      charArray0[5] = '\u0087';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 4, 4, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('\u0105');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      int int0 = (-2108);
      IOUtils.stringSize((-2108));
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        uTF8Decoder0.replaceWith("<|5l7vv%K_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Replacement too long
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, (byte)80, (byte)80, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 80
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1L), (int) (byte) (-6), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      CharsetDecoder charsetDecoder0 = iOUtils0.UTF8.newDecoder();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.compatibleWithFieldName");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "fastjson.compatibleWithFieldName");
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.getChars(35, 35, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String string0 = "UT8";
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char char0 = '^';
      IOUtils.firstIdentifier('^');
      int int0 = 3671;
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = '^';
      charArray0[6] = '^';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1L), 3671, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3670
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("?;");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.isValidJsonpQueryParam("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.CA, 12, 12);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('_');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("?;");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((byte) (-58), 16, iOUtils0.DIGITS);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.stringSize(35);
      //  // Unstable assertion: assertEquals(2, int0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("fastjson.properties");
      //  // Unstable assertion: assertTrue(boolean0);
      
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 12, 76);
       //  fail("Expecting exception: NegativeArraySizeException");
       // Unstable assertion
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int int0 = IOUtils.stringSize(1974L);
      assertEquals(4, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder", 27, 4);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)76, (byte)95, (byte)3}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHJAVABEAN;
      int int0 = IOUtils.stringSize(10000000000000L);
      assertEquals(14, int0);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)123;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)63;
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = 'X';
      charArray0[2] = 'M';
      charArray0[3] = '-';
      charArray0[4] = '|';
      charArray0[5] = 'F';
      charArray0[6] = '`';
      charArray0[7] = 'I';
      int int1 = IOUtils.decodeUTF8(byteArray0, (byte)0, 1, charArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("?A`6QsaJ4D");
      assertEquals(7, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      String string0 = "-%i$)vAJ`3J'CT+&20K";
      int int0 = 9999;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("-%i$)vAJ`3J'CT+&20K", 9999, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      byte byte0 = (byte) (-82);
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-82), (int) (byte) (-82), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -83
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 11, 11);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("9rtg?l.Lwl=");
      char[] charArray0 = new char[4];
      charArray0[1] = 'v';
      int int0 = IOUtils.decodeUTF8(byteArray0, 4, 101, charArray0);
      assertEquals(7, byteArray0.length);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      char[] charArray0 = new char[4];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)24;
      byteArray0[4] = (byte)126;
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)68, (byte)0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize(9999);
      IOUtils.stringSize(4);
      IOUtils.isIdent('^');
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = IOUtils.firstIdentifier('5');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("fAG<=~");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-122);
      IOUtils.encodeUTF8((char[]) null, 0, (-1724), byteArray0);
      boolean boolean0 = IOUtils.firstIdentifier('e');
      assertTrue(boolean0);
      
      ByteBuffer.allocate(16);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = IOUtils.encodeUTF8((char[]) null, 0, (byte) (-122), byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64((char[]) null, 8, 0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = 76;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 76, 76, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 93
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 65536, 65536, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(".~g0`DP0i^qnl");
      char[] charArray0 = new char[4];
      charArray0[0] = 'Q';
      charArray0[1] = '^';
      charArray0[2] = 'R';
      charArray0[3] = '$';
      // Undeclared exception!
      try { 
        IOUtils.getChars(10000000L, 8, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      char[] charArray0 = new char[6];
      int int0 = 13;
      // Undeclared exception!
      try { 
        IOUtils.getChars(13, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("F-fh8");
      char[] charArray0 = new char[27];
      charArray0[6] = '\u0083';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 4, 4, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      int int0 = IOUtils.stringSize(5);
      assertEquals(1, int0);
      
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars(1, 1, iOUtils0.ASCII_CHARS);
      byte[] byteArray0 = IOUtils.decodeBase64("/F.1<uF");
      assertEquals(5, byteArray0.length);
      
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.malformedInputAction();
      uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      byte[] byteArray1 = IOUtils.decodeBase64("com.alibaba.fastjson.JSONException", 1, 10);
      assertEquals(7, byteArray1.length);
      
      IOUtils.decodeBase64("com.alibaba.fastjson.JSONException");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("fastjson.compatibleWithFieldName");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(35);
      IOUtils.stringSize((long) 35);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getChars(35, 0, iOUtils1.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("9rtg?l.Lwl=");
      char[] charArray0 = new char[4];
      charArray0[1] = 'v';
      int int0 = IOUtils.decodeUTF8(byteArray0, 0, 101, charArray0);
      assertEquals(7, byteArray0.length);
      assertEquals((-1), int0);
      assertArrayEquals(new char[] {'\u0000', 'v', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-73), 27, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(30);
      CharBuffer charBuffer0 = CharBuffer.allocate(30);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = FLUSHED, new state = CODING_END
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, (byte)95, (byte)95, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('s');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      IOUtils.firstIdentifier('$');
      IOUtils iOUtils0 = new IOUtils();
  }
}
