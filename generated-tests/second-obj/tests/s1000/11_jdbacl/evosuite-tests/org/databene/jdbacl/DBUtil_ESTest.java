/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:13:10 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintStream;
import java.lang.reflect.Proxy;
import java.net.URI;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.bean.UntypedPropertyMutator;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBPreparedStatement;
import org.h2.Driver;
import org.h2.command.ddl.CreateTableData;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.Session;
import org.h2.engine.SessionRemote;
import org.h2.expression.Function;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbc.JdbcResultSet;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueDecimal;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      Session session0 = new Session();
      DBUtil.getOpenConnectionCount();
      DBUtil.resetMonitors();
      System.setCurrentTimeMillis(3);
      Class<JdbcResultSet> class0 = JdbcResultSet.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("]", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "$`.8]|%^yh%:zEz";
      // Undeclared exception!
      try { 
        DBUtil.connect("$`.8]|%^yh%:zEz", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '$`.8]|%^yh%:zEz.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          DBUtil.existsEnvironment("--");
          DBUtil.escape("Em");
          String string0 = "42X07";
          ConnectionInfo connectionInfo0 = new ConnectionInfo("42X07");
          connectionInfo0.setBaseDir("vn4-kz2` ZC4?X");
          JdbcConnection jdbcConnection0 = null;
          try {
            jdbcConnection0 = new JdbcConnection(connectionInfo0, false);
            fail("Expecting exception: JdbcSQLException");
          
          } catch(Throwable e) {
             //
             // General error: \"java.lang.NullPointerException\" [50000-136]
             //
             verifyException("org.h2.message.DbException", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.checkReadOnly("--xOGjcl>{", false);
      DBUtil.close((Statement) null);
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      Driver driver0 = new Driver();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      errorHandler0.setLoggingStackTrace(true);
      DBUtil.runScript("--pF1Gb;/f_h#)", '8', (Connection) null, false, errorHandler0);
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      try { 
        DBUtil.getMetaData((Connection) null, "", "--pF1Gb;/f_h#)", true, false, false, false, "There are unclosed database resources", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Driver driver0 = new Driver();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      Driver driver1 = new Driver();
      driver0.connect(".i$_ji", formatableProperties0);
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      TableContainer tableContainer0 = new TableContainer(".i$_ji");
      DBUtil.dependencyOrderedTables(tableContainer0);
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = createTableData0.session;
      FileUtil fileUtil0 = FileUtil.getDefaultInstance();
      HsqlProperties hsqlProperties0 = new HsqlProperties((String) null, fileUtil0, false);
      boolean boolean0 = DBUtil.available("IN4GgG!yo", (String) null, "?-8IbvvUqN@lk7~T\"k", "X6M~|?+!6");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.assertAllDbResourcesClosed(false);
      boolean boolean0 = DBUtil.available(".i", ".i", ".i", "--.i$_ji");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      dBPrimaryKeyConstraint0.addColumnName((String) null);
      dBPrimaryKeyConstraint0.setTable(defaultDBTable0);
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      dBPrimaryKeyConstraint0.setDoc("");
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '' not found in table ''
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.assertAllDbResourcesClosed(true);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "^", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: ^
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "V#}fTy\"W0;y[ZGT", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FormatableProperties formatableProperties0 = new FormatableProperties();
      Driver driver0 = new Driver();
      driver0.connect(" result set(s)", formatableProperties0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(true);
      String string0 = "xOGjcl>{";
      // Undeclared exception!
      try { 
        DBUtil.runScript("xOGjcl>{", (Connection) proxy0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("4&~E3", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      String string0 = "--pF1Gb;/f_h#)";
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("8IF@", 'b', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)10;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.query("a9b01L", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Connection connection0 = null;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      TableContainer tableContainer0 = new TableContainer("No JDBC URL specified", (CompositeDBObject<? extends DBObject>) null);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      DBUtil.runScript("", '8', (Connection) proxy0, false, errorHandler0);
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 connection(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("{HR.aH=]uVg2@", "yL. 7iQG1|zpj3_f+Rr", ">'@", "{HR.aH=]uVg2@");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting yL. 7iQG1|zpj3_f+Rr failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "", "downloading {}");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      DBUtil.runScript("", 'J', (Connection) null, false, errorHandler0);
      Object object0 = new Object();
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.queryLong("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "' found";
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      ErrorHandler errorHandler0 = new ErrorHandler("' found");
      // Undeclared exception!
      try { 
        DBUtil.countRows("' found", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      Driver driver0 = new Driver();
      Connection connection0 = null;
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--pF1Gb;/f_h#)", '8', (Connection) null, false, errorHandler0);
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "--pF1Gb;/f_h#)", (boolean) dBExecutionResult0.changedStructure);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Driver driver0 = new Driver();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      Driver driver1 = new Driver();
      driver0.connect(".i$_ji", formatableProperties0);
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      TableContainer tableContainer0 = new TableContainer(".i$_ji");
      DBUtil.dependencyOrderedTables(tableContainer0);
      ErrorHandler errorHandler0 = new ErrorHandler(".i$_ji");
      // Undeclared exception!
      try { 
        DBUtil.runScript(".i$_ji", ".i$_ji", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: .i$_ji
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("--pF1Gb;/f_h#)", level0);
      DBUtil.close((Connection) null);
      int int0 = Function.REPEAT;
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DBUtil.assertAllDbResourcesClosed(false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      MockThrowable mockThrowable0 = new MockThrowable();
      CreateTableData createTableData0 = new CreateTableData();
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler("org.databene.SQL", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("_.I@", '@', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("--}BNI9ea_<[", level0);
      Class<UntypedPropertyMutator> class0 = UntypedPropertyMutator.class;
      ErrorHandler errorHandler1 = new ErrorHandler(class0);
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      int int0 = DBUtil.getOpenStatementCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      Recover recover0 = new Recover();
      Class<FBPreparedStatement> class0 = FBPreparedStatement.class;
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.nextLine(simpleResultSet0);
      SessionRemote sessionRemote1 = new SessionRemote();
      URI uRI0 = MockURI.create("eW3");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sessionRemote0.getLobConnection();
      sessionRemote0.readSessionState();
      DBUtil.executeUpdate("", (Connection) null);
      ErrorHandler.getDefault();
      sessionRemote0.autoCommitIfCluster();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.assertAllDbResourcesClosed(false);
      String string0 = "\"Q'[";
      String string1 = "There are unclosed database resources: ";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "}B", "There are unclosed database resources: ", "#?Z6%~0[HjSFoSz2Ta");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
