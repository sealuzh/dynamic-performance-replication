/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 02:57:13 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-534));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-534), "Runtime2isitlbMnnotatio", "Runtime2isitlbMnnotatio", "Runtime2isitlbMnnotatio", "Runtime2isitlbMnnotatio");
      classWriter0.version = 49;
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4106);
      classWriter0.index = (-2906);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4106, "RuntimeVisiblegnnotations", "RuntimeVisiblegnnotations", "RuntimeVisiblegnnotations", "RuntimeVisiblegnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "NMoNISK\u0000YHcOxrUQp9", "NMoNISK\u0000YHcOxrUQp9", "NMoNISK\u0000YHcOxrUQp9", "NMoNISK\u0000YHcOxrUQp9");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4106);
      classWriter0.index = (-2906);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4106, "RuntimeVisiblegnnotations", "RuntimeVisiblegnnotations", "RuntimeVisiblegnnotations", "RuntimeVisiblegnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "CSH``8j&!06.{@<Nw", "CSH``8j&!06.{@<Nw", "v}^]Ix|;Mf2|$K", "v}^]Ix|;Mf2|$K");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4069);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "%QR&8nnw+ppG|[#", "%QR&8nnw+ppG|[#", "%QR&8nnw+ppG|[#", "%QR&8nnw+ppG|[#");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "^Mf/&<wmU5kti\u0006", "^Mf/&<wmU5kti\u0006", "^Mf/&<wmU5kti\u0006", "^Mf/&<wmU5kti\u0006");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4068);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "%kR&8nnw+ppG|[#", "%kR&8nnw+ppG|[#", "%kR&8nnw+ppG|[#", "%kR&8nnw+ppG|[#");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-493));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-493), "y (?het", "y (?het", "y (?het", "y (?het");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-493);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3550);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      byte[] byteArray0 = new byte[3];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 14, "RuntimeVisibleAnnotations", "wN=NdtdhEMQBh%", "RuntimeVisibleAnnotations", "Fq7t]kQGeOUy4J$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("wN=NdtdhEMQBh%", true);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1786), "", "", "Deprecated", annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.AnnotationWriter@b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisitlbAnnotations", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("wN=NdtdhEMQBh%", true);
      ByteVector byteVector0 = new ByteVector(6);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "NxaCXNOoC_c", "NxaCXNOoC_c", (String) null, "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector(1247);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "32t/Y";
      classWriter0.visit(4096, 4096, "32t/Y", "", "The list of prefixes must not be null", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4106);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-457), "RuntimeVisiblegnnotations", "", ":L*ZLRU~p", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3550);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "NxaCXNOoC_c", "NxaCXNOoC_c", (String) null, "RuntimeVisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "32t/Y";
      classWriter0.visit(4096, 4096, "32t/Y", "", "The list of prefixes must not be null", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4106);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-457), "RuntimeVisiblegnnotations", "", ":L*ZLRU~p", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("wN=NdtdhEMQBh%", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-517));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-517), "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations", "RuntimeVisitlbAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisitlbAnnotations", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitEnd();
  }
}
