/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 13:38:26 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 8524;
      intArray0[0] = 8524;
      int int1 = (-1065);
      intArray0[1] = (-1065);
      intArray0[2] = 1;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = (-1065);
      intArray2[1] = 8524;
      intArray2[2] = (-1065);
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      // Undeclared exception!
      charClass0.appendTableWithSign(intArray1, (-1065));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 6;
      intArray0[0] = 6;
      int int1 = 0;
      intArray0[1] = 0;
      intArray0[2] = 51010;
      int int2 = 65;
      intArray0[3] = 65;
      intArray0[4] = 2481;
      intArray0[5] = 40098;
      intArray0[6] = 66639;
      int int3 = 3653;
      intArray0[7] = 3653;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(0, 6);
      CharClass charClass2 = charClass1.cleanClass();
      int[][] intArray1 = new int[6][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[9];
      intArray2[0] = (-2777);
      intArray2[1] = 51010;
      intArray2[2] = 57;
      intArray2[3] = 2481;
      intArray2[4] = 2481;
      intArray2[5] = 0;
      intArray2[6] = 3653;
      intArray2[7] = 40098;
      intArray2[8] = 349;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass1.appendTableWithSign(intArray1, 93);
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      int[][] intArray3 = new int[1][8];
      intArray3[0] = intArray0;
      charClass3.appendNegatedTable(intArray3);
      // Undeclared exception!
      charClass3.cleanClass();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 579;
      intArray0[1] = 108;
      intArray0[2] = (-897);
      intArray0[3] = 86;
      intArray0[4] = 57509;
      intArray0[5] = (-1600);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      charClass1.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendTable(intArray1);
      charClass2.cleanClass();
      charClass0.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass2.appendLiteral((-1600), (-897));
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      assertSame(charClass1, charClass4);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 2164;
      intArray0[1] = (-65);
      intArray0[2] = 0;
      intArray0[3] = 1983;
      intArray0[4] = (-656);
      intArray0[5] = 8;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.toArray();
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendFoldedClass(intArray0);
      charClass1.appendLiteral(1983, 6);
      assertArrayEquals(new int[] {(-656), 1983, 2164, (-65), 8490, 8490}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.toString();
      int[] intArray0 = new int[2];
      intArray0[0] = 65532;
      intArray0[1] = 1092700;
      charClass1.appendClassWithSign(intArray0, 65532);
      // Undeclared exception!
      charClass1.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 65;
      intArray0[1] = 1;
      intArray0[2] = 4;
      intArray0[3] = 366;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, 0);
      CharClass charClass3 = charClass1.appendRange(4, 1);
      charClass2.appendFoldedRange(48, (-563));
      charClass1.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[2][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass3.appendTableWithSign(intArray1, 50);
      charClass0.appendFoldedRange(65, 4);
      charClass1.appendFoldedClass(intArray0);
      assertArrayEquals(new int[] {65, 1, 0, 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 2640);
      CharClass charClass2 = charClass1.appendFoldedRange(6495, 2640);
      int[][] intArray1 = new int[0][0];
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      charClass1.cleanClass();
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, 6495);
      charClass4.negateClass();
      String string0 = charClass1.toString();
      assertEquals("[]", string0);
      
      int[] intArray2 = charClass4.toArray();
      assertArrayEquals(new int[] {}, intArray2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = (-210);
      CharClass charClass1 = charClass0.appendLiteral((-210), (-210));
      int int1 = 4163;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign((int[][]) null, 4163);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(65, 65);
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[6];
      intArray1[0] = 65;
      intArray1[1] = 65;
      intArray1[2] = 65;
      intArray1[3] = 65;
      intArray1[4] = 65;
      intArray1[5] = 957;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 957;
      intArray2[1] = 65;
      intArray2[2] = 65;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 957;
      intArray3[1] = 957;
      intArray3[2] = 957;
      intArray3[3] = 957;
      intArray3[4] = 65;
      intArray3[5] = 65;
      intArray3[6] = 957;
      intArray3[7] = 65;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 957;
      intArray4[1] = 957;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 65;
      intArray5[1] = (-603);
      intArray5[2] = 957;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 957;
      intArray6[1] = 957;
      intArray6[2] = 957;
      intArray6[3] = (-603);
      intArray6[4] = 65;
      intArray6[5] = (-603);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 2941;
      intArray7[1] = 65;
      intArray7[2] = 0;
      intArray7[3] = 65;
      intArray7[4] = (-603);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[7];
      intArray8[0] = (-603);
      intArray8[1] = 2941;
      intArray8[2] = 957;
      intArray8[3] = 874;
      intArray8[4] = 65;
      intArray8[5] = 65;
      intArray8[6] = (-2);
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[8][7];
      int[] intArray1 = new int[2];
      int int0 = 0;
      intArray1[0] = 0;
      intArray1[1] = 3286;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 3286;
      intArray3[1] = (-1971);
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = 3286;
      intArray3[5] = 3286;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = (-1971);
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 3286;
      intArray4[4] = (-1971);
      intArray4[5] = 3286;
      intArray4[6] = (-1971);
      intArray4[7] = (-1971);
      intArray4[8] = 3286;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = (-1971);
      intArray5[1] = 3286;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 3286;
      intArray5[5] = 3286;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = 1333;
      intArray6[1] = 3286;
      intArray6[2] = (-1971);
      intArray6[3] = 3286;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 0;
      intArray7[1] = (-1971);
      intArray7[2] = 1333;
      intArray7[3] = 3286;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[4];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 3286;
      intArray8[3] = (-1971);
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray0, (-1971));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      int[] intArray0 = new int[2];
      intArray0[0] = 2574;
      charClass0.cleanClass();
      intArray0[1] = 64323;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.appendFoldedRange(91, 91);
      int[] intArray0 = new int[2];
      intArray0[0] = 91;
      charClass1.appendClassWithSign(intArray0, 91);
      intArray0[1] = 91;
      charClass1.appendClassWithSign(intArray0, 91);
      charClass0.toArray();
      CharClass charClass2 = charClass0.appendLiteral(91, 91);
      assertSame(charClass0, charClass2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.appendClass(intArray0);
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-1199);
      intArray0[1] = (-1348);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][8];
      int[] intArray2 = new int[3];
      intArray2[0] = (-1199);
      intArray2[1] = (-1348);
      intArray2[2] = (-1199);
      intArray1[0] = intArray2;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-1347));
      CharClass charClass3 = charClass2.appendLiteral(362, (-1199));
      CharClass charClass4 = charClass3.appendFoldedRange((-1348), 362);
      CharClass charClass5 = charClass4.appendFoldedClass(intArray0);
      charClass5.appendNegatedTable(intArray1);
      assertArrayEquals(new int[] {(-1348), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 32;
      intArray0[1] = 832;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendRange(832, 0);
      CharClass charClass3 = charClass2.negateClass();
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      charClass2.appendFoldedRange(832, (-1));
      // Undeclared exception!
      try { 
        charClass3.appendTableWithSign(intArray1, (-577));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendLiteral(1114111, 1114111);
      charClass2.appendLiteral(1114111, 1114111);
      intArray0[0] = 1114111;
      int int0 = 0;
      charClass0.toString();
      intArray0[1] = 0;
      CharClass charClass3 = charClass0.appendFoldedClass(intArray0);
      charClass3.appendClass(intArray0);
      charClass3.cleanClass();
      CharClass charClass4 = charClass3.appendClass(intArray0);
      charClass4.cleanClass();
      int[][] intArray1 = new int[2][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      try { 
        charClass3.appendTableWithSign(intArray1, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 2246;
      int int0 = 0;
      intArray0[2] = 0;
      intArray0[3] = 1152;
      intArray0[4] = 2613;
      int int1 = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass(intArray0);
      int int2 = 66640;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 10131;
      intArray0[1] = 762;
      intArray0[2] = 620;
      intArray0[3] = 2;
      intArray0[4] = (-2825);
      intArray0[5] = (-582);
      intArray0[6] = (-1);
      intArray0[7] = (-1001);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = (-1141);
      intArray1[1] = 66639;
      intArray1[2] = 2550;
      intArray1[3] = (-5650);
      intArray1[4] = (-3640);
      intArray0[0] = intArray1;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, (-913));
      charClass0.cleanClass();
      charClass0.appendFoldedRange(11521, (-1605));
      CharClass charClass2 = charClass1.appendTable(intArray0);
      assertSame(charClass1, charClass2);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[7];
      intArray0[0] = (-779);
      intArray0[1] = 65;
      intArray0[2] = 615;
      intArray0[3] = 525;
      int int0 = 13;
      intArray0[4] = 13;
      intArray0[5] = 91;
      intArray0[6] = (-2172);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendRange((-3543), 38);
      CharClass charClass3 = charClass2.appendFoldedRange(3059, (-2));
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, 1740);
      CharClass charClass5 = charClass4.cleanClass();
      CharClass charClass6 = charClass5.appendClassWithSign(intArray0, (-2));
      assertSame(charClass6, charClass5);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = null;
      int int0 = 488;
      // Undeclared exception!
      try { 
        CharClass.charClassToString((int[]) null, 488);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 91;
      int[] intArray0 = new int[2];
      intArray0[0] = 91;
      intArray0[1] = 91;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
