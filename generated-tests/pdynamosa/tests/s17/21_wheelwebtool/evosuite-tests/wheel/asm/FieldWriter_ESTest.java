/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 03:08:39 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1160), "E{o@K2FUd^GC", "E{o@K2FUd^GC", "", "");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "zSy:G";
      stringArray0[2] = "D0fQ.:m";
      stringArray0[3] = "";
      stringArray0[4] = "C";
      stringArray0[5] = "C";
      stringArray0[6] = "C";
      stringArray0[7] = "";
      stringArray0[8] = "";
      classWriter0.visit((-1160), 4096, "", "zSy:G", "Synthetic", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(191, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1949);
      classWriter0.index = (-648);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "+E.E^'^g8:%p`5o", "+E.E^'^g8:%p`5o", "+E.E^'^g8:%p`5o", "+E.E^'^g8:%p`5o");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(300);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "AH[stxMtu.Ag3fy", "Invalid IOCase name: ", "w/Jn$SDIZ/64?{>j", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-5054), "9!C7ZuDA_C", "9!C7ZuDA_C", "9!C7ZuDA_C", "9!C7ZuDA_C");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212681);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "cAMR", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3569), "C", "C", "C", "C");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      ClassWriter classWriter0 = new ClassWriter(204);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "cO$vd8,Vqx", "cO$vd8,Vqx", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@9c03f89
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "jMZKe_Y8}-GC6xYrC(", "");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 932, "C", "C", (String) null, (Object) null);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3569), "C", "C", "C", "C");
      classWriter0.visit(49, 49, "f@P</JY<!%u]HZ", "C", "f@P</JY<!%u]HZ", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(130, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3569), "C", "C", "C", "C");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(120, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 932, "C", "C", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3569), "C", "C", "C", "C");
      fieldWriter0.visitAnnotation("C", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(160, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3569), "C", "C", "C", "C");
      fieldWriter0.visitAnnotation("C", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(162, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3569), "C", "C", "C", "C");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 932, "C", "C", (String) null, (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212681);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "cAMR", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1001);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "jMZKe_Y8}-GC6xYrC(", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
