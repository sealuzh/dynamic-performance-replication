/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 06:08:00 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, 2125344641, fieldTypeRational0, 1149L, 2125344641, byteArray0, byteOrder0, (-26));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2125344641, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(2125344641, tiffField0.getOffset());
      assertEquals(9192, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4046, 4046, fieldTypeByte0, 567L, (byte)0, byteArray0, byteOrder0, 3169);
      tiffField0.getTagInfo();
      assertEquals(3169, tiffField0.getSortHint());
      assertEquals(4046, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4046, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3980, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-1), fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (-3618));
      int int0 = tiffField0.getTag();
      assertEquals((-3618), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "8]Q4*@xJlI");
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, (-1L), (-1L), byteArray0, byteOrder0, 390);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(390, tiffField0.getSortHint());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte) (-114);
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2279L, 0L, byteArray0, byteOrder0, 15);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2279, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-29), (-341), fieldTypeRational0.BYTE, 2562L, 0L, byteArray0, byteOrder0, 1466);
      int int0 = tiffField0.getSortHint();
      assertEquals(1466, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-341), tiffField0.getDirectoryType());
      assertEquals((-29), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 1L, (byte[]) null, byteOrder0, (-2147164697));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2147164697), int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-29), (-341), fieldTypeRational0.SBYTE, 2562L, 0L, byteArray0, byteOrder0, 1466);
      int int0 = tiffField0.getOffset();
      assertEquals(1466, tiffField0.getSortHint());
      assertEquals((-341), tiffField0.getDirectoryType());
      assertEquals((-29), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "8]Q4*@xJlI");
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, (-1L), (-1L), byteArray0, byteOrder0, 390);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(390, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte) (-114);
      byteArray0[5] = (byte) (-114);
      TiffField tiffField0 = new TiffField((byte)113, (byte)113, fieldTypeRational0, 3277L, 0L, byteArray0, byteOrder0, 2125344641);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2125344641, tiffField0.getSortHint());
      assertEquals(256, int0);
      assertEquals(26216, tiffField0.getBytesLength());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-81);
      TiffField tiffField0 = new TiffField(12, (-564), fieldTypeShort0, 617L, 12, byteArray0, byteOrder0, 347);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12, tiffField0.getOffset());
      assertEquals((-20736), int0);
      assertEquals(1234, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getTag());
      assertEquals((-564), tiffField0.getDirectoryType());
      assertEquals(347, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3296), ", ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)70);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-49);
      TiffField tiffField0 = new TiffField(1, 65002, fieldTypeByte0, 1, (-419L), byteArray0, byteOrder0, 265);
      tiffField0.getIntValue();
      assertEquals((-419), tiffField0.getOffset());
      assertEquals(265, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(65002, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 65535, fieldTypeFloat0, 1L, (-20504L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals((-20504), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2033, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(136, 50, fieldTypeFloat0, 136, 1214L, byteArray0, byteOrder0, Integer.MAX_VALUE);
      tiffField0.getFieldTypeName();
      assertEquals(1214, tiffField0.getOffset());
      assertEquals(Integer.MAX_VALUE, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(136, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-101), 37390, (FieldType) null, 37390, 4L, byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getFieldType();
      assertEquals(37390, tiffField0.getDirectoryType());
      assertEquals((-101), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "W");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 1433, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(1433, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3560), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3560), (-3560), fieldTypeFloat0, 490L, 9192L, (byte[]) null, byteOrder0, (-1506));
      tiffField0.getFieldType();
      assertEquals((-3560), tiffField0.getDirectoryType());
      assertEquals((-1506), tiffField0.getSortHint());
      assertEquals(9192, tiffField0.getOffset());
      assertEquals((-3560), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-33);
      TiffField tiffField0 = new TiffField(2146755440, 2146755440, fieldTypeRational0, 1L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2146755440, tiffField0.getDirectoryType());
      assertEquals(2146755440, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeFloat0, 1L, 0L, byteArray0, byteOrder0, (byte) (-6));
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-6), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2896, 2896, fieldTypeRational0, 2896, 2751L, byteArray0, byteOrder0, 3924);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2896, int0);
      assertEquals(3924, tiffField0.getSortHint());
      assertEquals(2896, tiffField0.getTag());
      assertEquals(2751, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3980, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-1), fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (-3618));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals((-3618), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-29), (-341), fieldTypeRational0.UNDEFINED, 2562L, 0L, byteArray0, byteOrder0, 1466);
      tiffField0.getCount();
      assertEquals((-29), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1466, tiffField0.getSortHint());
      assertEquals((-341), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2143676052, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-538), 0, fieldTypeByte0, (-538), 0, byteArray0, byteOrder0, 331);
      tiffField0.getCount();
      assertEquals(331, tiffField0.getSortHint());
      assertEquals((-538), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1677, 0, fieldTypeRational0.UNDEFINED, 0, 806L, byteArray0, byteOrder0, (byte)110);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1677, tiffField0.getTag());
      assertEquals(806, tiffField0.getOffset());
      assertEquals(110, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50725, 50725, fieldTypeAscii0, (-2171L), (-2171L), byteArray0, byteOrder0, (byte)4);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50725, tiffField0.getTag());
      assertEquals((-2171), tiffField0.getOffset());
      assertEquals(50725, tiffField0.getDirectoryType());
      assertEquals((-2171), int0);
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3296), ", ");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)70);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2114, 2114, fieldTypeFloat0, (-1412L), (-1412L), byteArray0, byteOrder0, (byte)75);
      tiffField0.getByteOrder();
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(2114, tiffField0.getTag());
      assertEquals(2114, tiffField0.getDirectoryType());
      assertEquals((-1412), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "W");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 1433, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(1433, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (byte)41, fieldTypeRational0.SSHORT, (byte)49, 1888L, byteArray0, byteOrder0, 2146827727);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("*'e)A1hE`m");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Expected String value(");
      assertEquals(2, tiffField0.getTag());
      assertEquals(2146827727, tiffField0.getSortHint());
      assertEquals(98, tiffField0.getBytesLength());
      assertEquals(1888, tiffField0.getOffset());
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(30, 888, fieldTypeByte0.DOUBLE, 134L, 134L, byteArray0, byteOrder0, 30);
      MockPrintStream mockPrintStream0 = new MockPrintStream("30 (0x1e: Unknown Tag):  (134 Double)");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(134, tiffField0.getOffset());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(1072, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getTag());
      assertEquals(888, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1818), (-1818), fieldTypeByte0, (-195L), (-960L), byteArray0, byteOrder0, 1723);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, (FieldType) null, 0, (-1426L), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)60, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-3125), fieldTypeDouble0, 196L, (-4232), byteArray0, byteOrder0, (byte)60);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "8]Q4*@xJlI");
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, (-1L), (-1L), byteArray0, byteOrder0, 390);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-26), (byte) (-116), fieldTypeFloat0, 50, (byte)113, byteArray0, byteOrder0, (byte) (-104));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2141111291), 3537, fieldTypeAscii0.SHORT, (-747), 1423L, byteArray0, byteOrder0, (-1550));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2724), (byte) (-41), fieldTypeFloat0.ASCII, 2685L, 3715L, byteArray0, byteOrder0, (byte) (-92));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 1L, (byte[]) null, byteOrder0, (-2147164697));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "OpcodeList1");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1), 65101, fieldTypeAscii0, (-277L), 0L, byteArray0, byteOrder0, 328);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3560), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3560), (-3560), fieldTypeFloat0, 490L, 9192L, (byte[]) null, byteOrder0, (-1506));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-444), fieldTypeByte0.ASCII, 0L, (-444), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3296), ", ");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)70);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4046, 4046, fieldTypeByte0, 567L, (byte)0, byteArray0, byteOrder0, 3169);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4046, tiffField0.getDirectoryType());
      assertEquals(4046, tiffField0.getTag());
      assertEquals(3169, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, (String) null);
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1433, (-1431655764), fieldTypeByte0, 1433, 1221L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(1433, tiffField0.getTag());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(1221, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1433, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(71, 2159, fieldTypeShort0.LONG, 54L, (-4120L), byteArray0, byteOrder0, 2159);
      tiffField0.getFieldType();
      assertEquals(2159, tiffField0.getSortHint());
      assertEquals(2159, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getTag());
      assertEquals((-4120), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3399), "LinearResponseLimit");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 586L, 818L, byteArray0, byteOrder0, (byte) (-17));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(818, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-17), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeByte0.SHORT, 12, 12, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1677, 0, fieldTypeRational0.BYTE, 0, 806L, byteArray0, byteOrder0, (byte)110);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1677, tiffField0.getTag());
      assertEquals(110, tiffField0.getSortHint());
      assertEquals(806, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(16, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-450), 65535, fieldTypeDouble0, (-1479L), 65535, byteArray0, byteOrder0, (byte)6);
      int int0 = tiffField0.getOffset();
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-450), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2146946910), fieldTypeRational0, (byte)0, 2070L, byteArray0, byteOrder0, (-2146946910));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-2146946910), tiffField0.getSortHint());
      assertEquals((-2146946910), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(2070, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1818), (-1818), fieldTypeByte0, (-195L), (-960L), byteArray0, byteOrder0, 1723);
      int int0 = tiffField0.getTag();
      assertEquals((-1818), int0);
      assertEquals((-960), tiffField0.getOffset());
      assertEquals((-1818), tiffField0.getDirectoryType());
      assertEquals(1723, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1602, 0, fieldTypeAscii0, 0, 1602, byteArray0, byteOrder0, (byte)87);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1602, tiffField0.getTag());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(1602, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)113, 1, fieldTypeRational0, (byte)113, (byte)113, (byte[]) null, byteOrder0, 1);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(904, int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getTag());
      assertEquals(113, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "8]Q4*@xJlI");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1717986917), 32995, fieldTypeAscii0, (-1740L), (byte) (-60), byteArray0, byteOrder0, (-185));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-1717986917 (0x9999999b: Unknown Tag): ", string0);
      assertEquals(32995, tiffField0.getDirectoryType());
      assertEquals((-60), tiffField0.getOffset());
      assertEquals((-185), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 1, 65535, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145258275), 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 2146517618);
      tiffField0.getIntValue();
      assertEquals(2146517618, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2145258275), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "Ubl8mV:dNJylt");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1139, (-341), fieldTypeShort0.SBYTE, 1322L, 1143L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4b53ce6f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(12, (-564), fieldTypeShort0, 617L, 12, byteArray0, byteOrder0, 347);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1234, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getTag());
      assertEquals((-564), tiffField0.getDirectoryType());
      assertEquals(347, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2251, 2143676052, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, 390);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(390, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2251, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2143676052, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1108, 1108, fieldTypeLong0, 1108, 1362L, byteArray0, byteOrder0, 1108);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1108, tiffField0.getDirectoryType());
      assertEquals(1108, tiffField0.getTag());
      assertEquals(1108, tiffField0.getSortHint());
      assertEquals(4432, tiffField0.getBytesLength());
      assertEquals(1362, tiffField0.getOffset());
      assertEquals(1108L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3215, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeDouble0, 3537, 65535, byteArray0, byteOrder0, (byte)111);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(28296, tiffField0.getBytesLength());
      assertEquals(3537L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)113, (byte)113, fieldTypeFloat0, (byte)113, 443L, byteArray0, byteOrder0, 79);
      tiffField0.getDoubleArrayValue();
      assertEquals(443, tiffField0.getOffset());
      assertEquals(113L, tiffField0.getCount());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(113, tiffField0.getTag());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(452, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2146277873, 2146277873, fieldTypeLong0, 1267L, (-419L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals(2146277873, tiffField0.getDirectoryType());
      assertEquals((-419), tiffField0.getOffset());
      assertEquals(2146277873, tiffField0.getTag());
      assertEquals(5068, tiffField0.getBytesLength());
      assertEquals(1267L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3965, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 3965, byteArray0, byteOrder0, (-960));
      tiffField0.getDoubleArrayValue();
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(3965, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-960), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-832), 421, fieldTypeRational0, 421, 421, byteArray0, byteOrder0, (byte)17);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(421L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(421, tiffField0.getDirectoryType());
      assertEquals(3368, tiffField0.getBytesLength());
      assertEquals(421, tiffField0.getOffset());
      assertEquals((-832), tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 65535, fieldTypeFloat0, 1L, (-20504L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-20504), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeByte0, 99, 99, byteArray0, byteOrder0, 99);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@53c07892 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(71, 2159, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).SLONG, 54L, (-4120L), byteArray0, byteOrder0, 2159);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(71, tiffField0.getTag());
      assertEquals(2159, tiffField0.getDirectoryType());
      assertEquals(2159, tiffField0.getSortHint());
      assertEquals(54L, tiffField0.getCount());
      assertEquals(25, intArray0.length);
      assertEquals((-4120), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-219), 1930, fieldTypeShort0, 12L, 255L, byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1930, tiffField0.getDirectoryType());
      assertEquals(12L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals((-219), tiffField0.getTag());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-101), 2146827727, fieldTypeAscii0, 3537, (byte) (-101), byteArray0, byteOrder0, (byte) (-101));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@700fecb6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)113;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146827727, 2146827727, fieldTypeRational0, 2562L, (-3767L), byteArray0, byteOrder0, (byte)113);
      tiffField0.getIntArrayValue();
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(2562L, tiffField0.getCount());
      assertEquals(2146827727, tiffField0.getTag());
      assertEquals(2146827727, tiffField0.getDirectoryType());
      assertEquals(20496, tiffField0.getBytesLength());
      assertEquals((-3767), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146827727, 2146827727, fieldTypeRational0, 2562L, (-3767L), byteArray0, byteOrder0, (byte)113);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)0, (-3796), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-484));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeByte0.SHORT, 12, 12, byteArray0, byteOrder0, (-3829));
      tiffField0.getIntArrayValue();
      assertEquals((-3829), tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "W");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 1433, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(1433, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2146827727, (byte)0, fieldTypeRational0, (byte)113, (byte)0, byteArray0, byteOrder0, 2125344641);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@4670b4e0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte) (-116), fieldTypeFloat0, (byte) (-83), (byte) (-104), byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getTagName();
      assertEquals((-104), tiffField0.getOffset());
      assertEquals((-116), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x32)", string0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3980, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-1), fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (-3618));
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3618), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals("GPSVersionID", string0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeByte0, 12, 12, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeByte0.FLOAT, 4L, 720L, byteArray0, byteOrder0, (byte)61);
      String string0 = tiffField0.toString();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(720, tiffField0.getOffset());
      assertEquals("12 (0xc: Unknown Tag): 0.0, 0.0 (4 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeByte0, 99, 99, byteArray0, byteOrder0, 99);
      String string0 = tiffField0.toString();
      assertEquals(99, tiffField0.getOffset());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals("99 (0x63: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (99 SByte)", string0);
      assertEquals(99, tiffField0.getBytesLength());
      assertEquals(99, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3221), 32809, fieldTypeFloat0, 537L, (-1458L), byteArray0, byteOrder0, (-3221));
      tiffField0.dump();
      assertEquals((-3221), tiffField0.getSortHint());
      assertEquals(2148, tiffField0.getBytesLength());
      assertEquals((-1458), tiffField0.getOffset());
      assertEquals((-3221), tiffField0.getTag());
      assertEquals(537L, tiffField0.getCount());
      assertEquals(32809, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[33];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4232), 1, fieldTypeLong0.DOUBLE, (byte)84, 1, byteArray0, byteOrder0, (byte)84);
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals("-4232 (0xffffef78: Unknown Tag): 0.0, 0.0, 0.0, 0.0 (84 Double)", string0);
      assertEquals(672, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((-2145258275), (-2145258275), fieldTypeLong0, (byte)75, (byte)75, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals((-2145258275), tiffField0.getDirectoryType());
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("-2145258275 (0x8021f4dd: Unknown Tag): 0, 0, 0 (75 IFD)", string0);
      assertEquals(75, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2864, 2864, fieldTypeShort0, 2864, 2864, byteArray0, byteOrder0, 2864);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2864, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2864, tiffField0.getDirectoryType());
      assertEquals(5728, tiffField0.getBytesLength());
      assertEquals(2864L, tiffField0.getCount());
      assertEquals(2864, tiffField0.getSortHint());
      assertEquals(2864, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeByte0, 99, 99, byteArray0, byteOrder0, 99);
      String string0 = tiffField0.getValueDescription();
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(99, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(99, tiffField0.getBytesLength());
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(99L, tiffField0.getCount());
      assertEquals(99, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1329), 4323, fieldTypeByte0.ASCII, 521L, (-1329), byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(4323, tiffField0.getDirectoryType());
      assertEquals((-1329), tiffField0.getOffset());
      assertEquals(521, tiffField0.getBytesLength());
      assertEquals((-1329), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3296), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)70);
      tiffField0.dump();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-747), (-1192), fieldTypeAscii0, 0L, (-2147483648L), byteArray0, byteOrder0, 3537);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-101), (-1192));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3537, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals((-1192), tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-747), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte) (-116), fieldTypeFloat0, (byte) (-83), (byte) (-104), byteArray0, byteOrder0, (byte)50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-83L), tiffField0.getCount());
      assertEquals((-116), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-104), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, (String) null);
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1433, (-1431655764), fieldTypeByte0, 1433, 1221L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1221, tiffField0.getOffset());
      assertEquals(1433, tiffField0.getTag());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(1433, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-219), 1930, fieldTypeShort0, 12L, 255L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(12L, tiffField0.getCount());
      assertEquals((-219), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(255L, tiffElement0.offset);
      assertEquals(1930, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)60, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-3125), fieldTypeDouble0, 196L, (-4232), byteArray0, byteOrder0, (byte)60);
      String string0 = tiffField0.toString();
      assertEquals((-4232), tiffField0.getOffset());
      assertEquals((-3125), tiffField0.getDirectoryType());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (196 )", string0);
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1916, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-920L), (-920L), (byte[]) null, byteOrder0, 1916);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1916, (-2843));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1916, tiffField0.getSortHint());
      assertEquals((-920), tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNull(string0);
  }
}
