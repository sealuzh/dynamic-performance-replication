/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:24:25 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.DataDictionary;
import org.apache.derby.iapi.types.DateTimeDataValue;
import org.apache.derby.impl.sql.compile.Predicate;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.h2.command.ddl.CreateTableData;
import org.h2.engine.Session;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueDecimal;
import org.hsqldb.jdbc.jdbcClob;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Random.setNextRandom(11);
      String string0 = ", but is ";
      String string1 = "=,\\Cs]I=& (";
      // Undeclared exception!
      try { 
        DBUtil.connect("=,Cs]I=& (", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '=,Cs]I=& (.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/e ~6|UmJ7TX.env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean0 = DBUtil.existsEnvironment("e ~6|UmJ7TX");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBUtil.assertAllDbResourcesClosed(false);
      boolean boolean0 = DBUtil.existsEnvironment("zY$.9|] t#H?c%wyC+");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("Local transaction active: can't begin another", "Local transaction active: can't begin another", "9l<uWv", "9l<uWv");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting Local transaction active: can't begin another failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "zsBcq&5@AzDIuQ3}", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: zsBcq&5@AzDIuQ3}
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "zsBcq&5@AzDIuQ3}", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("TIME '", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      String string0 = "'7P";
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("'7P", false, false, false, false, "'7P", false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition ''7P.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.checkReadOnly("", false);
      String string0 = DBUtil.escape("The result set is closed");
      assertEquals("The result set is closed", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = DateTimeDataValue.QUARTER_INTERVAL;
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      Level level0 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.runScript("d7", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "M7";
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.query("M7", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Connection connection0 = null;
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("t Xy>9N|e", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "zsBcq&5@AzDIuQ3}", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(true);
      Level level0 = Level.error;
      ErrorHandler.setDefaultLevel(level0);
      Connection connection0 = null;
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("", (Connection) null, false, errorHandler0);
      boolean boolean0 = false;
      boolean boolean1 = false;
      String string0 = "^zg;=+";
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "", (boolean) dBExecutionResult0.changedStructure, false, false, false, "", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetVTI();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(true);
      Level level0 = Level.info;
      ErrorHandler.setDefaultLevel(level0);
      Connection connection0 = null;
      String string0 = "M7";
      // Undeclared exception!
      try { 
        DBUtil.runScript("M7", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "\"1zf/w=8;^L-";
      ErrorHandler errorHandler0 = new ErrorHandler("\"1zf/w=8;^L-");
      errorHandler0.setLoggingStackTrace(false);
      boolean boolean0 = false;
      errorHandler0.setLoggingStackTrace(false);
      Level level0 = Level.error;
      ErrorHandler.setDefaultLevel(level0);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.runScript("\"1zf/w=8;^L-", "\"1zf/w=8;^L-", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: \"1zf/w=8;^L-
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Connection connection0 = null;
      ErrorHandler.getDefault();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "", "C6':X)R1^pZ(#4");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.available((String) null, "--", "' HASH '", "7k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      Predicate predicate0 = new Predicate();
      predicate0.getSearchClauseHT();
      fBArray0.getResultSet((Map) null);
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorHandler.getDefault();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      DBUtil.createLoggingResultSet((ResultSet) null, (Statement) null);
      TableContainer tableContainer0 = new TableContainer("\"y27E\"BStcs#");
      tableContainer0.setDoc("/2[87Xx,3V'x,Zs6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      tableContainer0.getTable("--7ko \"%6s");
      DBUtil.available("&p=i4,", "No resultset for sql", "No resultset for sql", "/2[87Xx,3V'x,Zs6");
      DBUtil.checkReadOnly("--", false);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "\\GFU&@eBqW~{T2";
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.countRows("GFU&@eBqW~{T2", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("On", 13);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      int int0 = DataDictionary.SYSDEPENDS_CATALOG_NUM;
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("#\u0004", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.isCursorActivation();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, "ITD0$xT@", (String) null, (String) null);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Level level0 = Level.fatal;
      ErrorHandler.setDefaultLevel(level0);
      Random.setNextRandom((-364));
      DBUtil.close((Connection) null);
      DBUtil.close((Connection) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(false);
      errorHandler0.setLoggingStackTrace(false);
      Connection connection0 = null;
      String string0 = "--^CTf=fUX3&r";
      DBUtil.runScript("--^CTf=fUX3&r", (Connection) null, false, errorHandler0);
      String string1 = "Database query failed: ";
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("Database query failed: ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 result set(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      DBUtil.assertAllDbResourcesClosed(false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.isClosed();
      constantActionActivation0.setForCreateTable();
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      DBUtil.assertAllDbResourcesClosed(false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("");
      Reader reader0 = jdbcClob0.getCharacterStream();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "$BX";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      ResultSet resultSet0 = csv0.read(reader0, stringArray0);
      DBUtil.format(resultSet0);
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = new Session();
      JdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new JdbcConnection(session0, "2-q)xm~{", ")`G,N)b_vnQ@?LD1;6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.engine.Session", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      DBUtil.assertAllDbResourcesClosed(false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Csv csv0 = Csv.getInstance();
      jdbcClob jdbcClob0 = new jdbcClob("%Auh#m");
      Reader reader0 = jdbcClob0.getCharacterStream();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "%Auh#m";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "%Auh#m";
      stringArray0[6] = "";
      ResultSet resultSet0 = csv0.read(reader0, stringArray0);
      DBUtil.format(resultSet0);
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = new Session();
      JdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new JdbcConnection(session0, "", "M7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.engine.Session", e);
      }
  }
}
