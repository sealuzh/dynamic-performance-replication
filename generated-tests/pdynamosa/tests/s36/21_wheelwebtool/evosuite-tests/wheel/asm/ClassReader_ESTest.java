/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 00:03:02 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, (-22));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.readUnsignedShort(4);
      assertEquals(271, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      Label[] labelArray0 = new Label[6];
      Label label0 = classReader0.readLabel(2, labelArray0);
      assertNotNull(label0);
      assertEquals(271, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      int int0 = classReader0.readInt(248);
      assertEquals(16778608, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      char[] charArray0 = new char[7];
      Type type0 = (Type)classReader0.readConst(2, charArray0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      int int0 = classReader0.readByte(4);
      assertEquals(0, int0);
      assertEquals(830, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      int int0 = classReader0.readUnsignedShort(0);
      assertEquals(51966, int0);
      assertEquals(701, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readUTF8(345, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-3272), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      short short0 = classReader0.readShort(0);
      assertEquals((short) (-13570), short0);
      assertEquals(701, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      short short0 = classReader0.readShort(9);
      assertEquals((short)10506, short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      long long0 = classReader0.readLong(0);
      assertEquals(464, classReader0.header);
      assertEquals((-3819410108757049297L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-1), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      int int0 = classReader0.readInt(2);
      assertEquals((-1161953280), int0);
      assertEquals(271, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(22, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      // Undeclared exception!
      try { 
        classReader0.readConst((-1156), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1156
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        classReader0.readClass((byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      // Undeclared exception!
      try { 
        classReader0.readClass(33554432, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      int int0 = classReader0.readByte(110);
      assertEquals(1380, classReader0.header);
      assertEquals(76, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, (-17));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2605);
      assertEquals(48, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-1859));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readLong((-2382));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2382
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      // Undeclared exception!
      try { 
        classReader0.readLabel(15, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(51, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      // Undeclared exception!
      try { 
        classReader0.getItem((-1804));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1804
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (-886));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2985);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      assertEquals(773, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter((-1828));
      classReader0.accept((ClassVisitor) classWriter0, (-4593));
      char[] charArray0 = new char[3];
      String string0 = classReader0.readUTF8(1288, charArray0);
      assertEquals("set", string0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 2);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter0 = new ClassWriter(8);
      Attribute[] attributeArray0 = new Attribute[1];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 62);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 599);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassAdapter");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, 1302);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass((-181), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      // Undeclared exception!
      try { 
        classReader0.readInt((-1300));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1300
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readShort((-1330));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      // Undeclared exception!
      try { 
        classReader0.readConst(11, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(5, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      // Undeclared exception!
      try { 
        classReader0.readConst(2, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter0, 464);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassWriter classWriter0 = new ClassWriter(149);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 156);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      assertEquals(7802, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("LocalVariableTable");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(821);
      classReader0.copyPool(classWriter0);
      assertEquals(4, ClassReader.SKIP_FRAMES);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassAdapter");
      classReader0.getInterfaces();
      assertEquals(1302, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(773, classReader0.header);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      String string0 = classReader0.getSuperName();
      assertEquals(830, classReader0.header);
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 185, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2332
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/Item", string0);
      assertNotNull(string0);
      assertEquals(773, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      long long0 = classReader0.readLong(4);
      assertEquals(271, classReader0.header);
      assertEquals(214750071296L, long0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      // Undeclared exception!
      try { 
        classReader0.readByte((-3159));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3159
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      int int0 = classReader0.getItem(33);
      assertEquals(1380, classReader0.header);
      assertEquals(333, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      int int0 = classReader0.getAccess();
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 1562);
      assertEquals(1, ClassReader.SKIP_CODE);
  }
}
