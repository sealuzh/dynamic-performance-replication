/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:51:26 GMT 2018
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.Evaluation;
import weka.classifiers.functions.LinearRegression;
import weka.classifiers.lazy.IBk;
import weka.classifiers.meta.MultiClassClassifierUpdateable;
import weka.classifiers.meta.RandomCommittee;
import weka.classifiers.meta.RandomSubSpace;
import weka.classifiers.misc.InputMappedClassifier;
import weka.classifiers.misc.SerializedClassifier;
import weka.classifiers.rules.M5Rules;
import weka.classifiers.trees.m5.RuleNode;
import weka.clusterers.SimpleKMeans;
import weka.core.BinarySparseInstance;
import weka.core.CheckScheme;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.TestInstances;
import weka.core.Utils;
import weka.core.neighboursearch.LinearNNSearch;
import weka.core.tokenizers.AlphabeticTokenizer;
import weka.filters.AllFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, true, true, false, true, 2668, true, true, 2668);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2668' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(true, true, true, false, true, false, 1819);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1819' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setSilent(true);
      boolean[] booleanArray0 = checkClassifier0.declaresSerialVersionUID();
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray0));
      
      String[] stringArray0 = TestInstances.DEFAULT_WORDS;
      boolean[] booleanArray1 = checkClassifier0.canPredict(true, true, false, false, true, false, 2);
      assertTrue(Arrays.equals(new boolean[] {false, true}, booleanArray1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = (-1705.954843111472);
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.canPredict(false, false, true, true, false, false, 4);
      Enumeration enumeration0 = checkClassifier0.listOptions();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      checkClassifier0.canPredict(false, false, false, true, false, false, 4);
      checkClassifier0.listOptions();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, true, true, false, true, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Random.setNextRandom(32);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, false, false, false, false, true, 1560);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1560' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, false, true, true, true, true, 72, false, true, 42);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '72' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      LinearRegression linearRegression0 = new LinearRegression();
      linearRegression0.turnChecksOn();
      checkClassifier0.setClassifier(linearRegression0);
      checkClassifier0.getOptions();
      linearRegression0.getAttributeSelectionMethod();
      Random.setNextRandom(3157);
      checkClassifier0.setClassifier(linearRegression0);
      checkClassifier0.testToString();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, false, false, false, 213);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '213' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.updateableClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      boolean boolean0 = false;
      boolean boolean1 = true;
      CheckClassifier checkClassifier1 = new CheckClassifier();
      boolean boolean2 = true;
      boolean boolean3 = true;
      // Undeclared exception!
      try { 
        checkClassifier1.instanceWeights(true, true, false, true, false, true, 31);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '31' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = 480;
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, true, false, false, true, false, 480);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '480' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = (-1705.954843111472);
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.setWordSeparators("8034");
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, true, true, false, false, 9);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '9' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, true, true, true, true, (-3613));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-3613' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = false;
      boolean boolean3 = false;
      boolean boolean4 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, false, false, true, (-741));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-741' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, true, true, false, false, false, 21);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '21' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = (-1705.954843111472);
      checkClassifier0.getOptions();
      checkClassifier0.multiInstanceHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, false, false, true, true, (-100), true, true, (-100));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-100' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, true, true, true, true, true, 640);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '640' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getWords();
      checkClassifier0.multiInstanceHandler();
      RandomCommittee randomCommittee0 = new RandomCommittee();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, false, false, false, true, 3570);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '3570' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Enumeration enumeration0 = new AlphabeticTokenizer();
      boolean boolean0 = true;
      int int0 = 3;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, false, true, true, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "8034";
      stringArray0[1] = "8034";
      stringArray0[2] = "8034";
      CheckClassifier.main(stringArray0);
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, false, true, true, false, 34, 2403);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '34' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.testToString();
      Locale.getISOCountries();
      checkClassifier0.multiInstanceHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, false, true, false, true, 465, false, false, (-1563));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '465' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setSilent(true);
      checkClassifier0.setNumDate(640);
      checkClassifier0.declaresSerialVersionUID();
      checkClassifier0.declaresSerialVersionUID();
      checkClassifier0.getOptions();
      checkClassifier0.canHandleMissing(true, false, false, false, false, false, 2, false, true, 640);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, true, true, true, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      int int0 = 4;
      checkClassifier0.getOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier1.doesntUseTestClassVal(false, true, false, false, true, false, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.rules.ZeroR: Cannot handle relational class!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      boolean boolean0 = true;
      int int0 = 3;
      boolean boolean1 = false;
      checkClassifier0.doesntUseTestClassVal(false, true, false, false, true, false, 3);
      checkClassifier0.getPostProcessor();
      IBk iBk0 = new IBk((-1874));
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      boolean boolean0 = true;
      int int0 = 3;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, true, true, false, true, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.updateableClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.canPredict(true, true, true, true, true, true, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      System.setCurrentTimeMillis(1522L);
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.listOptions();
      checkClassifier0.getOptions();
      checkClassifier0.canTakeOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canPredict(true, false, false, true, true, true, 95);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '95' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      SerializedClassifier serializedClassifier0 = new SerializedClassifier();
      checkClassifier0.m_Classifier = (Classifier) serializedClassifier0;
      checkClassifier0.testToString();
      checkClassifier0.getOptions();
      checkClassifier0.multiInstanceHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, false, true, true, true, 465, true, false, (-1563));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '465' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.updateableClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = false;
      boolean boolean3 = false;
      boolean boolean4 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, false, true, true, false, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "-N <num>";
      stringArray0[2] = "-Gll}e+A@C@acTF";
      stringArray0[3] = "0xt^u?CUX'`slQ2";
      stringArray0[4] = "weka.attributeSelection.GainRatioAttributeEval";
      Random.setNextRandom((-2549));
      CheckClassifier checkClassifier0 = new CheckClassifier();
      String[] stringArray1 = checkClassifier0.getOptions();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.getOptions();
      checkClassifier0.setOptions(stringArray1);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(false, true, true, true, true, false, 20, false, false, (-371));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '20' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.multiInstanceHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, true, true, true, true, 465, true, false, (-1684));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '465' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.instanceWeights(false, false, true, false, false, false, 3);
      checkClassifier0.getOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.getRevision();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, false, false, false, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.rules.ZeroR: Cannot handle string class!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.updateableClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.updateableClassifier();
      checkClassifier0.canPredict(false, false, false, true, true, false, 0);
      checkClassifier0.listOptions();
      checkClassifier0.doTests();
      checkClassifier0.getRevision();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumDate(640);
      RandomSubSpace randomSubSpace0 = new RandomSubSpace();
      checkClassifier0.setClassifier(randomSubSpace0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      checkClassifier0.doTests();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.doesntUseTestClassVal(false, true, false, true, true, false, 3);
      checkClassifier0.printAttributeSummary(true, true, true, true, false, true, 1041);
      checkClassifier0.doTests();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = (-1705.954843111472);
      int int0 = 100;
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.getRevision();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, false, true, true, true, (-3460), true, false, 100);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-3460' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.updateableClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.canPredict(false, false, false, true, true, false, 0);
      checkClassifier0.listOptions();
      checkClassifier0.listOptions();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.instanceWeights(false, false, true, false, false, false, 3);
      checkClassifier0.getOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.canTakeOptions();
      checkClassifier0.doTests();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumDate(640);
      RandomSubSpace randomSubSpace0 = new RandomSubSpace();
      System.setCurrentTimeMillis(1522L);
      checkClassifier0.setClassifier(randomSubSpace0);
      checkClassifier0.listOptions();
      checkClassifier0.getOptions();
      checkClassifier0.canTakeOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.doTests();
  }
}
