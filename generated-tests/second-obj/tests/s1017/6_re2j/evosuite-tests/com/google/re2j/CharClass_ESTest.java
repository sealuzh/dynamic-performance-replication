/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:55:11 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][3];
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 23;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, 3228);
      assertArrayEquals(new int[] {0, 23}, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-2352);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][2];
      charClass0.cleanClass();
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, (-2352));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = (-867);
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[9];
      intArray1[0] = (-1797);
      intArray1[3] = 65;
      CharClass charClass0 = new CharClass(intArray1);
      // Undeclared exception!
      charClass0.appendTableWithSign(intArray0, (-1797));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[7] = (-606);
      intArray0[1] = (-867);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass();
      charClass0.appendTableWithSign(intArray1, (-867));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      CharClass.charClassToString(intArray0, (-723));
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][6];
      CharClass charClass1 = charClass0.appendTable(intArray0);
      charClass1.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
      charClass0.appendLiteral(399, 399);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[0][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 12349;
      intArray1[1] = 12349;
      intArray1[2] = 2618;
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-606);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][8];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.appendClassWithSign(intArray0, (-606));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[8][3];
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[][] intArray0 = new int[1][5];
      CharClass charClass0 = new CharClass(intArray0[0]);
      charClass0.appendLiteral((-879), (-606));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(0, (-1211));
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-2055), (-2055));
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 2452;
      intArray0[1] = 9471;
      intArray0[2] = (-1072);
      intArray0[3] = (-1885);
      intArray0[4] = (-2655);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][6];
      intArray1[0] = intArray0;
      charClass0.appendTableWithSign(intArray1, (-1618));
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = (-867);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      charClass0.appendTableWithSign(intArray1, (-10744));
      CharClass charClass1 = charClass0.appendLiteral(65, (-867));
      int[] intArray2 = new int[4];
      intArray2[0] = (-1797);
      intArray2[1] = (-867);
      intArray0[4] = (-606);
      intArray2[3] = 65;
      charClass1.appendFoldedClass(intArray2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[7][3];
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendFoldedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][2];
      charClass0.cleanClass();
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, (-2033));
      int[][] intArray1 = new int[3][3];
      intArray1[2] = intArray0;
      charClass0.appendClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(5024, 234);
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[6];
      intArray1[0] = 234;
      intArray1[1] = 5024;
      intArray1[2] = 5024;
      intArray1[3] = 234;
      intArray1[4] = 5024;
      intArray1[5] = 5024;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 234;
      intArray2[1] = 5024;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        charClass1.appendTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[][] intArray0 = new int[0][5];
      int[] intArray1 = new int[1];
      intArray1[0] = 2618;
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.appendNegatedTable(intArray0);
      CharClass charClass1 = new CharClass();
      // Undeclared exception!
      try { 
        charClass0.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-1452), (-1452));
      charClass1.negateClass();
      CharClass charClass2 = charClass0.negateClass();
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-606);
      intArray0[1] = (-867);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 5263);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1112);
      intArray0[1] = (-540);
      intArray0[2] = 774;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (-2293);
      intArray0[7] = (-1);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange((-3833), 3760);
      CharClass charClass2 = charClass1.cleanClass();
      charClass2.cleanClass();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[10];
      intArray0[0] = 196;
      intArray0[1] = 0;
      intArray0[2] = 2691;
      intArray0[3] = 2081;
      intArray0[4] = 65;
      intArray0[5] = 2691;
      intArray0[6] = 0;
      intArray0[7] = 65;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1603;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 1603);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      charClass0.appendClassWithSign(intArray0, 1);
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[4] = (-606);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange((-606), (-867));
      int[][] intArray1 = new int[8][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass0.appendFoldedClass(intArray0);
      intArray1[7] = intArray0;
      charClass1.cleanClass();
      charClass0.appendClass(intArray0);
      CharClass charClass2 = new CharClass(intArray0);
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, (-867));
      charClass3.appendFoldedRange((-867), (-607));
      charClass2.appendFoldedRange(66639, 1114111);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-606);
      intArray0[1] = (-606);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClass(intArray0);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass3 = new CharClass(intArray0);
      CharClass charClass4 = charClass2.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass3.cleanClass();
      int int0 = (-1478);
      charClass3.appendFoldedRange((-1478), 1114111);
      charClass1.negateClass();
      CharClass charClass6 = charClass1.appendTable(intArray1);
      CharClass charClass7 = charClass1.appendNegatedTable(intArray1);
      charClass7.appendNegatedTable(intArray1);
      CharClass charClass8 = charClass5.cleanClass();
      CharClass charClass9 = charClass6.negateClass();
      int int1 = (-219);
      charClass9.appendFoldedRange(int1, int1);
      CharClass charClass10 = charClass5.negateClass();
      charClass4.appendNegatedTable(intArray1);
      int int2 = (-1907);
      charClass8.appendClassWithSign(intArray0, int2);
      int int3 = 458;
      charClass10.appendFoldedRange(int0, int3);
      int int4 = 2;
      int int5 = (-1435);
      charClass10.appendFoldedRange(int4, int5);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 3423;
      intArray0[1] = 1608;
      intArray0[2] = 99317;
      intArray0[3] = 4182;
      intArray0[4] = 1352;
      intArray0[5] = (-1869);
      intArray0[6] = (-1869);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][0];
      int[] intArray2 = new int[3];
      intArray2[0] = 2855;
      intArray2[1] = 1608;
      intArray2[2] = 4182;
      intArray1[0] = intArray2;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 2855);
      charClass1.appendFoldedRange(99324, 99340);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = (-603);
      intArray0[0] = (-603);
      intArray0[1] = (-603);
      int int1 = 65;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendLiteral((-602), 65);
      int[][] intArray1 = new int[9][5];
      intArray1[0] = intArray0;
      int int2 = (-10743);
      CharClass charClass3 = charClass1.appendTableWithSign(intArray1, (-10743));
      CharClass charClass4 = charClass3.appendTableWithSign(intArray1, int0);
      charClass2.toString();
      CharClass charClass5 = charClass0.appendClassWithSign(intArray1[0], int1);
      CharClass charClass6 = charClass3.appendNegatedTable(intArray1);
      int[] intArray2 = new int[4];
      intArray2[1] = int0;
      intArray0[1] = int0;
      intArray2[3] = int1;
      charClass5.appendFoldedClass(intArray2);
      CharGroup charGroup0 = null;
      charClass0.cleanClass();
      boolean boolean0 = false;
      charClass4.toString();
      CharClass charClass7 = charClass0.appendGroup(charGroup0, boolean0);
      charClass6.appendTable(intArray1);
      int int3 = 605;
      charClass6.appendRange(int3, int2);
      charClass5.appendLiteral(int2, int1);
      charClass2.appendNegatedClass(intArray0);
      charClass7.toString();
      int int4 = 1495;
      int int5 = (-1168);
      charClass5.appendFoldedRange(int4, int5);
      charClass3.toArray();
      charClass1.appendGroup(charGroup0, boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = (-745);
      intArray0[0] = (-745);
      intArray0[1] = 1;
      intArray0[2] = (-150);
      intArray0[3] = 2112;
      intArray0[4] = (-3070);
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 160;
      intArray1[2] = 1;
      intArray1[3] = (-745);
      CharClass charClass1 = charClass0.appendClass(intArray1);
      CharClass charClass2 = charClass1.appendLiteral((-3070), (-951));
      int[][] intArray2 = new int[6][1];
      intArray2[0] = intArray1;
      intArray2[1] = intArray0;
      intArray2[2] = intArray1;
      intArray2[3] = intArray0;
      intArray2[4] = intArray1;
      intArray2[5] = intArray0;
      CharClass charClass3 = charClass2.appendTableWithSign(intArray2, (-76));
      CharClass charClass4 = charClass3.appendNegatedTable(intArray2);
      CharClass charClass5 = charClass4.appendFoldedRange(intArray0[2], intArray0[1]);
      int int1 = (-1);
      charClass5.appendLiteral(int0, int1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-606);
      intArray0[1] = (-879);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClass(intArray0);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass3 = new CharClass(intArray0);
      charClass2.appendNegatedClass(intArray0);
      CharClass charClass4 = charClass0.appendTableWithSign(intArray1, 4);
      charClass0.appendFoldedClass(intArray0);
      charClass2.cleanClass();
      CharClass charClass5 = charClass2.appendFoldedRange(1114111, (-3444));
      charClass2.negateClass();
      CharClass charClass6 = charClass0.appendNegatedTable(intArray1);
      charClass6.appendFoldedClass(intArray0);
      charClass6.negateClass();
      charClass0.negateClass();
      CharClass charClass7 = charClass5.appendFoldedRange(1114111, (-879));
      charClass2.appendFoldedRange((-879), (-1894));
      charClass7.appendNegatedTable(intArray1);
      charClass4.appendClassWithSign(intArray0, 1114111);
  }
}
