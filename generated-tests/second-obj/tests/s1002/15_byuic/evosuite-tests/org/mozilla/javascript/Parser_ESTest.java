/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:11:24 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.File;
import java.io.FileDescriptor;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextAction;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ObjArray;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;
import org.mozilla.javascript.WrapFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) null, "split", 21);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.eof();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(" ? ", "xn~X03~cokP`]I", (-1722));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1722
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("throw", "r U", (-300));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -300
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("E@Nr'~1EcC");
      functionNode0.itsFunctionType = 95;
      // Undeclared exception!
      try { 
        parser0.parse("function ", "function ", 22);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before function parameters. (function #22)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.addError((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Context context0 = new Context();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@<j,$lD+[la@}t?", "", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "@Nr'~1EcC";
      String string1 = "";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@Nr'~1EcC", "3}RtX#]n;", (-2068));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2068
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      context0.getApplicationClassLoader();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      ContextFactory.getGlobal();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "t";
      // Undeclared exception!
      try { 
        parser0.parse(";'O", "t", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (t#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(122);
      Locale locale0 = new Locale("");
      Set<String> set0 = compilerEnvirons0.activationNames;
      parser0.parse("", "", 11);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(989, false, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.parm.]ed%cl", "@YuMgV#[$nLg;", (-1324));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1324
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ContextFactory.getGlobal();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("Pb7.@}", "language version", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (language version#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FunctionNode functionNode0 = new FunctionNode("EgdP/#HD ]&Sw'");
      parser0.currentScriptOrFn = (ScriptOrFnNode) functionNode0;
      String string0 = "set";
      // Undeclared exception!
      try { 
        parser0.parse("EgdP/#HD ]&Sw'", "set", 1389);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (set#1389)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "3}RtX#]n;";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = "";
      // Undeclared exception!
      try { 
        parser0.parse("3}RtX#]n;", "", 2032);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (#2032)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("Pr(_MBp'VFDC:6", "", 101);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (#101)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "-_.!~*'()";
      // Undeclared exception!
      try { 
        parser0.parse("-_.!~*'()", (String) null, (-1916));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1916
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "C[O_U}PEX;,";
      FunctionNode functionNode0 = new FunctionNode("[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      Context context0 = new Context();
      String string1 = "";
      // Undeclared exception!
      try { 
        parser0.parse("[", "C[O_U}PEX;,", 584);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (C[O_U}PEX;,#584)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.getErrorReporter();
      contextFactory0.enterContext();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[JavaPackage ", "TV8O?)Nw0pl?Qi5", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (TV8O?)Nw0pl?Qi5#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FunctionNode functionNode0 = new FunctionNode("S>.,ihb:8");
      parser0.getEncodedSource();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      contextFactory0.onContextReleased(context0);
      FunctionNode functionNode1 = new FunctionNode("");
      Node.Jump node_Jump0 = new Node.Jump(21);
      parser0.addStrictWarning("language version", "zbl!@q2UUZ0/zhP");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(2);
      // Undeclared exception!
      try { 
        parser0.parse("S>.,ihb:8", "language version", (-1722));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1722
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("it<", "msg.no.colon.cond", 34);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (msg.no.colon.cond#34)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      String string0 = "5:Q";
      String string1 = "H0k3'wL8y:6";
      // Undeclared exception!
      try { 
        parser0.parse("5:Q", "H0k3'wL8y:6", (-3964));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3964
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("ldd!=WG");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      String string0 = "QirESF";
      // Undeclared exception!
      try { 
        parser0.parse("ryW10=QUr<2y7e}C", "QirESF", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (QirESF#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "!.";
      // Undeclared exception!
      try { 
        parser0.parse("!.", "language version", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      parser0.createDecompiler(compilerEnvirons0);
      compilerEnvirons1.setGenerateObserverCount(false);
      // Undeclared exception!
      try { 
        parser0.parse("<command>", "<command>", 142);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (<command>#142)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      String string0 = "r U";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("(%B,K`34zkrjm`", "r U", 432);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (r U#432)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(146);
      Context context0 = Context.enter();
      ContextFactory.getGlobal();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.enterContext(context0);
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter1);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      parser1.getEncodedSource();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser2 = new Parser(compilerEnvirons1, defaultErrorReporter2);
      Parser parser3 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      parser0.parse("sMVU;", "language version", 10);
      parser0.insideFunction();
      String string0 = parser2.getEncodedSource();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "X9tw-|l_`St07q,";
      String string1 = "get";
      // Undeclared exception!
      try { 
        parser0.parse("X9tw-|l_`St07q,", "get", (-2791));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2791
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ObjArray objArray0 = context0.previousInterpreterInvocations;
      context0.previousInterpreterInvocations = null;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("d&B|:", "pow", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (pow#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      FunctionNode functionNode0 = new FunctionNode("o");
      Set<String> set0 = compilerEnvirons0.activationNames;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
      try { 
        parser0.parse("$P|", "@CK}2J(\"feYn)", 2152);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (@CK}2J(\"feYn)#2152)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "3}RtX#]n;";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = "Pr(_MBp'VFDC:6";
      String string2 = "JTTDj`xd!q";
      // Undeclared exception!
      try { 
        parser0.parse("/ii549", "JTTDj`xd!q", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (JTTDj`xd!q#100)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Locale locale0 = new Locale("tw+''-UW]Vdn");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = compilerEnvirons1.activationNames;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      Context context0 = new Context();
      context0.getErrorReporter();
      // Undeclared exception!
      try { 
        parser0.parse("~o?)OasxS", "error reporter", 52);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (error reporter#52)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("E@Nr'~1EcC");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("S(2TwJy%3[CW", "E@Nr'~1EcC", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (E@Nr'~1EcC#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      FunctionNode functionNode0 = new FunctionNode("C[O_U}PEX;,");
      functionNode0.putIntProp((-449), (-3093));
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(143);
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      scriptOrFnNode0.addChildrenToFront(functionNode0);
      // Undeclared exception!
      try { 
        parser0.parse("tw+'''UW]Vdn", "tw+'''UW]Vdn", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (tw+'''UW]Vdn#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("_bZ[4C~_Rw~^c/k^/", "", 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("l:`/Zf", "error reporter", 160);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#160)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      String string0 = "tw+'''UW]Vdn";
      FunctionNode functionNode0 = new FunctionNode("C[O_U}PEX;,");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.initApplicationClassLoader(classLoader0);
      ContextFactory.initGlobal(contextFactory0);
      String string1 = "V";
      String string2 = "LU*]6=w";
      // Undeclared exception!
      try { 
        parser0.parse("LU*]6=w", (String) null, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      FunctionNode functionNode0 = new FunctionNode("C[O_U}PEX;,");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      String string0 = "r5%";
      // Undeclared exception!
      try { 
        parser0.parse("r5%", "r5%", 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (r5%#15)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        parser0.parse("do ", "2c#K'>", (-4888));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4888
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      ContextFactory contextFactory1 = new ContextFactory();
      ContextFactory contextFactory2 = new ContextFactory();
      contextFactory0.enterContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse("for ", "error reporter", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( after for (error reporter#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "ldd!=";
      // Undeclared exception!
      try { 
        parser0.parse("ldd!=", "ldd!=", (-247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -247
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      EvaluatorException evaluatorException0 = new EvaluatorException("@Nr'~1EcC", "9-mBc~e5bjd&,6?k", 132, "msg.no.brace.prop", 132);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "fU,";
      parser1.addStrictWarning("fU,", "^VJ]4#Emm]~Qnb]|X|+");
      Node.Scope node_Scope0 = new Node.Scope(132);
      String string1 = "Lorg/mozilla/javascript/Context;";
      // Undeclared exception!
      try { 
        parser1.parse("fU,", "Lorg/mozilla/javascript/Context;", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (Lorg/mozilla/javascript/Context;#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      parser0.compilerEnv = compilerEnvirons1;
      Locale locale0 = new Locale("error reporter", "error reporter", "org.mozilla.javascript.NativeMath");
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context1 = new Context();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      WrapFactory wrapFactory0 = new WrapFactory();
      compilerEnvirons2.setXmlAvailable(true);
      parser0.addStrictWarning("org.mozilla.javascript.DToA", "error reporter");
      // Undeclared exception!
      try { 
        parser0.parse("{Vh5'-V]rCQ5:h1nIL", "L1YOm6>PyJl,'o)", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (L1YOm6>PyJl,'o)#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setXmlAvailable(false);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)29;
      compilerEnvirons1.setOptimizationLevel(1);
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte)0;
      byteArray0[5] = (byte)29;
      byteArray0[8] = (byte)26;
      Locale locale0 = new Locale("");
      Set<String> set0 = new LinkedHashSet<String>();
      Node.Scope.splitScope(functionNode0);
      // Undeclared exception!
      try { 
        parser0.pushScope(functionNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      String string0 = "!S^&";
      // Undeclared exception!
      try { 
        parser0.parse("!S^&", "wE+BJ*[cS\"f.c.:I\"Xn", 390);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (wE+BJ*[cS\"f.c.:I\"Xn#390)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(3);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      EvaluatorException evaluatorException0 = new EvaluatorException("language version", "error reporter", 1);
      Context context1 = new Context(contextFactory0);
      context0.getErrorReporter();
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "+%mQU jfwr:V+'af";
      // Undeclared exception!
      try { 
        parser1.parse("+%mQU jfwr:V+'af", "+%mQU jfwr:V+'af", 2234);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (+%mQU jfwr:V+'af#2234)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("NK-{b`H|B|&k8h", "NK-{b`H|B|&k8h", 1880);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (NK-{b`H|B|&k8h#1880)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGeneratingSource(false);
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.insideFunction();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = contextFactory1.enterContext(context0);
      Context context2 = contextFactory1.enterContext(context1);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      contextFactory1.exit();
      parser0.parse("", "error reporter", 7);
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        NativeJavaMethod.scriptSignature(context2.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.NativeJavaMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      char[] charArray0 = new char[7];
      charArray0[0] = ';';
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      contextFactory0.exit();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      context0.getErrorReporter();
      Parser parser2 = new Parser(compilerEnvirons0, errorReporter0);
      compilerEnvirons0.setGenerateDebugInfo(false);
      FunctionNode functionNode0 = new FunctionNode("))");
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser0.createDecompiler(compilerEnvirons1);
      parser2.createDecompiler(compilerEnvirons2);
      String string0 = "--";
      // Undeclared exception!
      try { 
        parser1.parse("--", "@(\"~u,7czp", (-263));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -263
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(5);
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "msg.bad.return";
      // Undeclared exception!
      try { 
        parser0.parse("msg.bad.return", "mU9ER8!y", (-341));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      ErrorReporter errorReporter2 = DefaultErrorReporter.forEval(errorReporter0);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      compilerEnvirons0.setErrorReporter(errorReporter0);
      contextFactory0.seal();
      compilerEnvirons0.setXmlAvailable(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter2);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      contextFactory0.exit();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      context0.getErrorReporter();
      ErrorReporter errorReporter3 = DefaultErrorReporter.forEval(errorReporter2);
      Parser parser2 = new Parser(compilerEnvirons2, errorReporter3);
      FunctionNode functionNode1 = new FunctionNode("");
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      parser0.createDecompiler(compilerEnvirons1);
      parser1.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser1.parse("@(\"~u,7czp", "super", 102);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: XML runtime not available (super#102)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      compilerEnvirons0.setErrorReporter(errorReporter0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      String string0 = "-%[;^kTM4>";
      DefaultErrorReporter.forEval(errorReporter1);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      String string1 = "U D4r41Y";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-%[;^kTM4>");
      EvaluatorException evaluatorException0 = new EvaluatorException("language version", "language version", 15, "error reporter", 9);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      parser0.insideFunction();
      // Undeclared exception!
      try { 
        parser0.parse("{", "msg.no.bracket.arg", 119);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing } in compound statement (msg.no.bracket.arg#119)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateDebugInfo(false);
      compilerEnvirons0.setGenerateObserverCount(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("UNGsBs,[]=75ZD", "([W", 1830);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (([W#1830)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.parse("b", "language version", 7);
      compilerEnvirons0.setXmlAvailable(true);
      errorReporter0.runtimeError("error reporter", (String) null, 9, (String) null, 12);
      parser0.compilerEnv = compilerEnvirons0;
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      boolean boolean0 = parser1.calledByCompileFunction;
      parser0.defineSymbol(121, false, (String) null);
      // Undeclared exception!
      try { 
        parser0.addError("b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property b
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("typeof", "typeof", 144);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (typeof#144)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = " === ";
      errorReporter0.runtimeError("error reporter", "get", 5, "language version", 2);
      Context context1 = contextFactory0.enterContext(context0);
      compilerEnvirons0.initFromContext(context1);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("msg.bad.throw.eol", "language version", 5);
      ContextFactory contextFactory1 = new ContextFactory();
      Context context2 = contextFactory1.enterContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.initFromContext(context2);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons1.setGeneratingSource(true);
      ContextFactory contextFactory2 = new ContextFactory();
      ContextFactory.getGlobal();
      Context context3 = contextFactory2.enterContext(context2);
      context3.getErrorReporter();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      ErrorReporter errorReporter1 = compilerEnvirons4.getErrorReporter();
      Parser parser2 = new Parser(compilerEnvirons3, errorReporter1);
      Parser parser3 = new Parser(compilerEnvirons1, errorReporter0);
      compilerEnvirons0.getErrorReporter();
      // Undeclared exception!
      try { 
        parser3.popScope();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("transient", "transient", (-2421));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2421
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("dW==aK_ (v,`5y", "dW==aK_ (v,`5y", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (dW==aK_ (v,`5y#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("(new Date(", "msg.dup.parms", (-2813));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2813
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("hP%~{", "tw+''-UW]Vdn", 70);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid property id (tw+''-UW]Vdn#70)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("with", "%)k", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before with-statement object (%)k#14)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      String string0 = "[p]";
      int int0 = 107;
      // Undeclared exception!
      try { 
        contextFactory0.checkNotSealed();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateDebugInfo(true);
      compilerEnvirons0.setGenerateObserverCount(true);
      compilerEnvirons0.setXmlAvailable(false);
      WrapFactory wrapFactory0 = new WrapFactory();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(14);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("An [<4m(`", "An [<4m(`", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (An [<4m(`#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons2.setGenerateObserverCount(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      Parser parser2 = new Parser(compilerEnvirons2, errorReporter0);
      String string0 = null;
      // Undeclared exception!
      try { 
        parser1.parse("resumeGenerator() not implemented", (String) null, 37);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ; before statement
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("V3GP :O", propertyChangeListener0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("V3GP :O", "V3GP :O", 42);
      parser0.getEncodedSource();
      defaultErrorReporter0.runtimeError("V3GP :O", "V3GP :O", 1, "V3GP :O", 1664);
      parser0.parse("V3GP :O", "join", 2);
      parser0.popScope();
      // Undeclared exception!
      try { 
        parser0.defineSymbol((-1893), true, "join");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateObserverCount(false);
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(7);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      scriptOrFnNode0.putIntProp(1, 39);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Context context1 = contextFactory0.enterContext();
      boolean boolean0 = context1.compileFunctionsWithDynamicScopeFlag;
      compilerEnvirons0.setXmlAvailable(true);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser1.addStrictWarning("t", "language version");
      parser1.addStrictWarning("msg.parm.reCmncl", "synchronized");
      // Undeclared exception!
      try { 
        parser1.parse("var ", "t", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing variable name (t#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Locale locale0 = new Locale("_&ARoya");
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.enterContext();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      compilerEnvirons1.setXmlAvailable(true);
      parser0.addStrictWarning("ZN|@AMR\"E", "6=Ub,");
      String string0 = "org.mozilla.javascript.Arguments";
      parser0.addStrictWarning("L1YOm6>PyJl,'o)", "org.mozilla.javascript.Arguments");
      parser1.addStrictWarning("error reporter", "");
      // Undeclared exception!
      try { 
        parser0.parse("continue", " (", 65533);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // continue must be inside loop ( (#65533)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      context0.setErrorReporter(errorReporter0);
      ErrorReporter errorReporter1 = compilerEnvirons1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("w>=Con0U$c3:", (String) null, 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("++", "++", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (++#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h+vAyTt[S:U4mD[D");
      FunctionNode functionNode0 = new FunctionNode("Kvwvk##u)AA");
      Set<String> set0 = context0.activationNames;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q@lke?~2~v*kf6+h|RD");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      context0.hasFeature(5);
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons1.initFromContext(context0);
      parser2.currentScope = (Node.Scope) null;
      // Undeclared exception!
      try { 
        parser2.parse("q--NUOP%DG}+}&?", "language version", 80);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#80)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Object object0 = context0.lastInterpreterFrame;
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(contextAction0).run(any(org.mozilla.javascript.Context.class));
      Context.call(contextFactory0, contextAction0);
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.enterContext();
      compilerEnvirons0.setXmlAvailable(false);
      String string0 = null;
      // Undeclared exception!
      try { 
        parser0.parse("(new Boolean(false))", "(new Boolean(false))", (-2095));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      DefaultErrorReporter.forEval(errorReporter0);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FunctionNode functionNode0 = new FunctionNode("S>.,ihb:8");
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse("switch ", "namespace", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before switch expression (namespace#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
