/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 21:35:45 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(4);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-779));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = null;
      fBProcedureCall0.getOutputParam((-2965));
      int int0 = 2257;
      fBProcedureCall0.mapOutParamIndexToPosition(2257);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-2965));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2966
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-2532), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2533
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), (-171880440));
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "07005";
      fBProcedureCall0.clone();
      String string1 = "@B*G`D X\\uM5";
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-479), string1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -479
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 1;
      fBProcedureCall0.getSQL(false);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1956), "EXECUTE PROCEDURE null");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1956
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(1);
      fBProcedureCall0.getOutputParam(643);
      fBProcedureCall0.addParam(2681, "");
      fBProcedureCall0.getInputParam(1);
      try { 
        fBProcedureCall0.registerOutParam(1, 1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "Il$W?K7{feVh+:Yc27");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParam(2);
      assertTrue(fBProcedureCall0.equals((Object)object0));
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam(37);
      boolean boolean0 = fBProcedureCall0.equals((Object) null);
      assertFalse(boolean0);
      
      fBProcedureCall0.getOutputParams();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getInputParams();
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null)", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("");
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      String string0 = "zpd5P?^f9rNt}";
      fBProcedureCall0.getInputParam(1);
      fBProcedureCall0.getOutputParam(1);
      fBProcedureCall0.clone();
      fBProcedureCall0.addParam(1, "zpd5P?^f9rNt}");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.getInputParams();
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.equals("");
      fBProcedureCall0.setName("zpd5P?^f9rNt}");
      fBProcedureCall0.getInputParams();
      int int0 = (-2089);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-2089));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2090
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "Il$W?K7{feVh+:Yc27");
      assertEquals(2, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(Il$W?K7{feVh+:Yc27)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(41, true);
      assertEquals(41, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(40, true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(40);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParam(63);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1992, true);
      assertEquals(1992, int0);
      
      boolean boolean0 = fBProcedureCall0.equals("|d#a");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 4096;
      String string0 = "HY009";
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(4096);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(4096, "HY009");
      boolean boolean0 = true;
      fBProcedureParam0.setType(4096);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(4096);
      fBProcedureParam2.clone();
      try { 
        fBProcedureParam1.setValue(fBProcedureParam2);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("HY009");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2);
      fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      int int0 = 31;
      fBProcedureCall0.getOutputParam(31);
      fBProcedureCall0.mapOutParamIndexToPosition(2);
      fBProcedureCall0.setName("{j");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(2);
      fBProcedureParam0.clone();
      String string0 = "";
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureParam1.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.getInputParams();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.getInputParams();
      Object object0 = new Object();
      Object object1 = new Object();
      fBProcedureCall0.equals(object1);
      fBProcedureCall1.equals(fBProcedureCall0);
      String string0 = "|<X5HO)nr^:dpxQ[/Z";
      fBProcedureCall0.setName("|<X5HO)nr^:dpxQ[/Z");
      fBProcedureCall1.getInputParams();
      // Undeclared exception!
      try { 
        fBProcedureCall2.getInputParam((-2089));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2090
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(40, true);
      assertEquals(40, int0);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(40);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(2358);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.clone();
      fBProcedureCall0.hashCode();
      assertNotSame(fBProcedureCall0, object0);
      assertTrue(fBProcedureCall0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1199, "-vsX;");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-2501), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(608, "no");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName("no");
      fBProcedureParam0.setIndex(63);
      fBProcedureCall0.registerOutParam(63, 63);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(63, fBProcedureParam0.getType());
      
      fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam(63);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.mapOutParamIndexToPosition((-72039300), true);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.registerOutParam(63, 63);
      fBProcedureCall0.clone();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(609, list0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "Il$W?K7{feVh+:Yc27");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-1264), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1205);
      assertEquals(1205, int0);
      
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("pq");
      boolean boolean0 = fBProcedureCall1.equals((Object) null);
      assertFalse(boolean0);
      
      boolean boolean1 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "Il$W?K7{feVh+:Yc27");
      Object object0 = new Object();
      fBProcedureParam0.setValue(object0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName("OUT");
      fBProcedureCall0.getName();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(2, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam(31);
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(31, "8Y0)+}n?aNk");
      fBProcedureCall0.clone();
      fBProcedureParam0.setType(31);
      fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex((-1));
      Object object0 = new Object();
      fBProcedureParam0.setValue(object0);
      fBProcedureParam0.setIndex((-1));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getName();
      fBProcedureCall0.registerOutParam((-1), 0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.clone();
      Object object1 = new Object();
      fBProcedureCall0.equals(object1);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.mapOutParamIndexToPosition(1140, true);
      fBProcedureCall0.setName("IN");
      fBProcedureCall0.getInputParams();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(687, "in2RR<Y%?JNd");
      assertEquals(687, fBProcedureParam0.getPosition());
      assertEquals("in2RR<Y%?JNd", fBProcedureParam0.getParamValue());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "MUTpj~;l";
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex((-629));
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-629), "inT$");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -629
         //
         verifyException("java.util.Vector", e);
      }
  }
}
