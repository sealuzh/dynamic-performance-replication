/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 03:56:21 GMT 2019
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2, (-177));
      assertEquals((-181), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-128);
      short short0 = MethodWriter.readShort(byteArray0, 0);
      assertEquals((short)128, short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 102, 102);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 1, (byte) (-87));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(171);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "BJ0%<tw";
      stringArray0[1] = "BJ0%<tw";
      stringArray0[2] = "BJ0%<tw";
      stringArray0[3] = "BJ0%<tw";
      stringArray0[4] = "*eM=Io#uJ]_R:";
      stringArray0[5] = "BJ0%<tw";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1353), "M? )rE@{I1{%T.'", "BJ0%<tw", "*eM=Io#uJ]_R:", stringArray0, false, false);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "BJ0%<tw");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1200);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "StackMapTable";
      stringArray0[1] = "x\"{n?(FI";
      stringArray0[2] = "x\"{n?(FI";
      stringArray0[3] = "StackMapTable";
      stringArray0[4] = "x\"{n?(FI";
      stringArray0[5] = "StackMapTable";
      stringArray0[6] = "x\"{n?(FI";
      stringArray0[7] = "StackMapTable";
      stringArray0[8] = "StackMapTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2535), "StackMapTable", "StackMapTable", "x\"{n?(FI", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("r|TD!~KH'^EB", 0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1536));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Z.#Nu!7p-7";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1536), "", "Z.#Nu!7p-7", "O C-^`z", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("Z.#Nu!7p-7", (-1536));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2226));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[1] = ":E9aFA<PD6`h*_";
      stringArray0[2] = ":E9aFA<PD6`h*_";
      stringArray0[3] = ":E9aFA<PD6`h*_";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2226), "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", ":E9aFA<PD6`h*_", stringArray0, false, false);
      int[] intArray0 = new int[8];
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn((Label) null, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2689), "org.objectweb.asm.jip.ByteVector", "{|8{Flfpuv", "{", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("LocalVariableTable", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "^;VP5*pgm#", (Label) null, (Label) null, (-1083));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3880);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[1] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[2] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[3] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[4] = "i/-0; [JHIyfTK";
      classWriter0.visitMethod((-2457), " P\"d_rDSd(d4r_SQ'1l", " P\"d_rDSd(d4r_SQ'1l", " P\"d_rDSd(d4r_SQ'1l", stringArray0);
      classWriter0.lastMethod.visitVarInsn(2744, (-3385));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-1994));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1994
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K0rpuKUPyHW!PY(E+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 19, "Rt3prmYnT;DstY5.&", "K0rpuKUPyHW!PY(E+", "Rt3prmYnT;DstY5.&", stringArray0, false, false);
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(19, (-1063), (Label) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2696);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cW\"";
      stringArray0[1] = "cW\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 128, "cW\"", "cW\"", "cW\"", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "StackMapTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-12), "StackMapTable", "StackMapTable", "StackMapTable", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(8, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3018);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "XAcqf52/)Smt'QQ";
      stringArray0[1] = "XAcqf52/)Smt'QQ";
      stringArray0[2] = "XAcqf52/)Smt'QQ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2472, "XAcqf52/)Smt'QQ", "XAcqf52/)Smt'QQ", "XAcqf52/)Smt'QQ", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn(3018, "XAcqf52/)Smt'QQ", (String) null, "char");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(171);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "BJ0%<tw";
      stringArray0[1] = "BJ0%<tw";
      stringArray0[2] = "BJ0%<tw";
      stringArray0[3] = "BJ0%<tw";
      stringArray0[4] = "*eM=Io#uJ]_R:";
      stringArray0[5] = "BJ0%<tw";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1353), "M? )rE@{I1{%T.'", "BJ0%<tw", "*eM=Io#uJ]_R:", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(430);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[2] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[3] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 430, "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "Exceptions", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, 1604);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2612));
      String[] stringArray0 = new String[8];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-2612), "LocalVariableTypeTable", (String) null, (String) null, stringArray0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[6];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(6, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[1] = 688;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 25, 688);
      assertEquals(1351, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 191;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2, (-177));
      assertEquals((-179), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2118);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Signature";
      stringArray0[1] = "EnclosingMethod";
      stringArray0[2] = "EnclosingMethod";
      stringArray0[3] = "EnclosingMethod";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2331), "EnclosingMethod", "Deprecated", "Deprecated", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = "RuntimeInvisibleAnnotations";
      stringArray0[3] = "RuntimeInvisibleAnnotations";
      stringArray0[4] = "O@/k)u\")\"}n??b";
      stringArray0[5] = "RuntimeInvisibleAnnotations";
      stringArray0[6] = "O@/k)u\")\"}n??b";
      stringArray0[7] = "O@/k)u\")\"}n??b";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 285212684, "RuntimeInvisibleAnnotations", "O@/k)u\")\"}n??b", "O@/k)u\")\"}n??b", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "nd3JH*z>", "nd3JH*z>", "nd3JH*z>", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "nd3JH*z>", "nd3JH*z>", "nd3JH*z>", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("nd3JH*z>", 1);
      methodWriter0.visitFrame(191, (-1691), (Object[]) null, 2, (Object[]) null);
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1200);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "StackMapTable";
      stringArray0[1] = "x\"{n?(FI";
      stringArray0[2] = "x\"{n?(FI";
      stringArray0[3] = "StackMapTable";
      stringArray0[4] = "x\"{n?(FI";
      stringArray0[5] = "StackMapTable";
      stringArray0[6] = "x\"{n?(FI";
      stringArray0[7] = "StackMapTable";
      stringArray0[8] = "StackMapTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2514), "StackMapTable", "StackMapTable", "x\"{n?(FI", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(54, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "I)):%", "I)):%", "k_W{ Q2Z", (String[]) null, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(859, (-103));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1200);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "StackMapTable";
      stringArray0[1] = "x\"{n?(FI";
      stringArray0[2] = "x\"{n?(FI";
      stringArray0[3] = "StackMapTable";
      stringArray0[4] = "x\"{n?(FI";
      stringArray0[5] = "StackMapTable";
      stringArray0[6] = "x\"{n?(FI";
      stringArray0[7] = "StackMapTable";
      stringArray0[8] = "StackMapTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2535), "StackMapTable", "StackMapTable", "x\"{n?(FI", stringArray0, false, false);
      methodWriter0.visitMaxs(0, 0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2274);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ox";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Ox", "Ox", "UJ:^M3}5j<Pc", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(2274, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1200);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "StackMapTable";
      stringArray0[1] = "x\"{n?(FI";
      stringArray0[2] = "x\"{n?(FI";
      stringArray0[3] = "StackMapTable";
      stringArray0[4] = "x\"{n?(FI";
      stringArray0[5] = "StackMapTable";
      stringArray0[6] = "x\"{n?(FI";
      stringArray0[7] = "StackMapTable";
      stringArray0[8] = "StackMapTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2535), "StackMapTable", "StackMapTable", "x\"{n?(FI", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("StackMapTable", "java/lang/String", "uPUrHGC?x", label0, label0, 0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "%J!@KytXh-:Pkt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 127, "%J!@KytXh-:Pkt", "O!kjADS5/`mG", "%J!@KytXh-:Pkt", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("O!kjADS5/`mG", "8k7rrs*?&{dU|5=?YY", (String) null, (Label) null, (Label) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2553);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^+B%7SUgUYHP";
      stringArray0[1] = "^+B%7SUgUYHP";
      stringArray0[2] = "3 w[lk)Mjd8)R)Z";
      stringArray0[3] = "^+B%7SUgUYHP";
      stringArray0[4] = "^+B%7SUgUYHP";
      stringArray0[5] = "3 w[lk)Mjd8)R)Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "3 w[lk)Mjd8)R)Z", "3 w[lk)Mjd8)R)Z", "^+B%7SUgUYHP", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "_Ik#Nuh%~zhkInA");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "nd3JH*z>", "nd3JH*z>", "nd3JH*z>", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("nd3JH*z>", 1);
      int int0 = methodWriter0.getSize();
      assertEquals(38, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1934962289));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "RL!JkIC";
      stringArray0[1] = "RL!JkIC";
      stringArray0[2] = "RL!JkIC";
      stringArray0[3] = "RL!JkIC";
      stringArray0[4] = "RL!JkIC";
      stringArray0[5] = "RL!JkIC";
      stringArray0[6] = "RL!JkIC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-318), "RL!JkIC", "RL!JkIC", "RL!JkIC", stringArray0, false, false);
      methodWriter0.visitIincInsn((-1474), (-1956160767));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K0rpuKUPyHW!PY(E+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 19, "Rt3prmYnT;DstY5.&", "K0rpuKUPyHW!PY(E+", "Rt3prmYnT;DstY5.&", stringArray0, false, false);
      methodWriter0.visitIincInsn(1, 19);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "I)):%", "I)):%", "k_W{ Q2Z", (String[]) null, false, true);
      methodWriter0.visitIincInsn(2, 16777216);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(430);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[2] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[3] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 430, "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "Exceptions", stringArray0, false, false);
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.MethodWriter");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1523));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "rz6b@";
      stringArray0[1] = "rz6b@";
      stringArray0[2] = "rz6b@";
      stringArray0[3] = "rz6b@";
      stringArray0[4] = "JSR/RET are not supported with computeFrames option";
      stringArray0[5] = "rz6b@";
      stringArray0[6] = "JSR/RET are not supported with computeFrames option";
      stringArray0[7] = "JSR/RET are not supported with computeFrames option";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "rz6b@", "rz6b@", "JSR/RET are not supported with computeFrames option", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(79, label0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1678);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "pU_4{Zf6n#&Ug!";
      stringArray0[1] = "!O,>";
      stringArray0[2] = "";
      stringArray0[3] = "long";
      stringArray0[4] = "pU_4{Zf6n#&Ug!";
      stringArray0[5] = "pU_4{Zf6n#&Ug!";
      stringArray0[6] = "!O,>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "!O,>", "!O,>", "pU_4{Zf6n#&Ug!", stringArray0, false, false);
      methodWriter0.visitMethodInsn((-788), "long", "AnnotationDefault", "");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2553);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^+B%7SUgUYHP";
      stringArray0[1] = "^+B%7SUgUYHP";
      stringArray0[2] = "3 w[lk)Mjd8)R)Z";
      stringArray0[3] = "^+B%7SUgUYHP";
      stringArray0[4] = "^+B%7SUgUYHP";
      stringArray0[5] = "3 w[lk)Mjd8)R)Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "3 w[lk)Mjd8)R)Z", "3 w[lk)Mjd8)R)Z", "^+B%7SUgUYHP", stringArray0, true, true);
      methodWriter0.visitMethodInsn(2553, "3 w[lk)Mjd8)R)Z", "1h*9jFy(6|6w-j", "XAqf52/)Smt'QQ");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1521));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "rz6b@";
      stringArray0[1] = "rz6b@";
      stringArray0[2] = "rz6b@";
      stringArray0[3] = "rz6b@";
      stringArray0[4] = "JSR/RET are not supported with computeFrames option";
      stringArray0[5] = "rz6b@";
      stringArray0[6] = "JSR/RET are not supported with computeFrames option";
      stringArray0[7] = "JSR/RET are not supported with computeFrames option";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "rz6b@", "rz6b@", "JSR/RET are not supported with computeFrames option", stringArray0, false, false);
      methodWriter0.visitFieldInsn(2, "lGc5[", "SourceFile", "JSR/RET are not supported with computeFrames option");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2337));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "f@m_({u(AR+";
      stringArray0[1] = "f@m_({u(AR+";
      stringArray0[2] = "f@m_({u(AR+";
      stringArray0[3] = "f@m_({u(AR+";
      stringArray0[4] = "f@m_({u(AR+";
      stringArray0[5] = "f@m_({u(AR+";
      stringArray0[6] = "f@m_({u(AR+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2337), "f@m_({u(AR+", "f@m_({u(AR+", "f@m_({u(AR+", stringArray0, false, false);
      methodWriter0.visitTypeInsn((-4656), "f@m_({u(AR+");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3880);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[1] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[2] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[3] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[4] = "i/-0; [JHIyfTK";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-2457), " P\"d_rDSd(d4r_SQ'1l", " P\"d_rDSd(d4r_SQ'1l", " P\"d_rDSd(d4r_SQ'1l", stringArray0);
      methodVisitor0.visitVarInsn((-3385), 2287);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3880);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[1] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[2] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[3] = " P\"d_rDSd(d4r_SQ'1l";
      stringArray0[4] = "i/-0; [JHIyfTK";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-2457), " P\"d_rDSd(d4r_SQ'1l", " P\"d_rDSd(d4r_SQ'1l", " P\"d_rDSd(d4r_SQ'1l", stringArray0);
      methodVisitor0.visitIntInsn((-2494), 2125);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "9o\"V8yu^FOG2!";
      stringArray0[1] = "9o\"V8yu^FOG2!";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "'.wCSF~7;9O", "'.wCSF~7;9O", "9o\"V8yu^FOG2!", stringArray0, false, false);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1521));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "rz6b@";
      stringArray0[1] = "rz6b@";
      stringArray0[2] = "rz6b@";
      stringArray0[3] = "rz6b@";
      stringArray0[4] = "JSR/RET are not supported with computeFrames option";
      stringArray0[5] = "rz6b@";
      stringArray0[6] = "JSR/RET are not supported with computeFrames option";
      stringArray0[7] = "JSR/RET are not supported with computeFrames option";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "rz6b@", "rz6b@", "JSR/RET are not supported with computeFrames option", stringArray0, false, false);
      methodWriter0.visitFrame(6, (-3162), stringArray0, 2, stringArray0);
      methodWriter0.visitIincInsn(4571, 2);
      methodWriter0.visitFrame(4571, 4571, stringArray0, 6, stringArray0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "nd3JH*z>", "nd3JH*z>", "nd3JH*z>", (String[]) null, false, false);
      methodWriter0.visitFrame(191, (-1691), (Object[]) null, 2, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-2945), 1088, (Object[]) null, 54, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RuntimeVisibleParameterAnnotations";
      stringArray0[1] = "2.]G&LHJ|";
      stringArray0[2] = "org.objectweb.asm.jip.MethodWriter";
      stringArray0[3] = "StackMapTable";
      stringArray0[4] = ",[{@bix]*,`{)@,S";
      stringArray0[5] = "";
      stringArray0[6] = "+";
      stringArray0[7] = "C%u+.KrDsdUG1,9;JO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2728), "RuntimeVisibleParameterAnnotations", "+", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      Attribute attribute0 = new Attribute("C%u+.KrDsdUG1,9;JO");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1868));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ConstantValue";
      stringArray0[1] = "ConstantValue";
      stringArray0[2] = "f@m_({u(AR+";
      stringArray0[3] = "ConstantValue";
      stringArray0[4] = "ConstantValue";
      stringArray0[5] = "ConstantValue";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "ConstantValue", "ConstantValue", "f@m_({u(AR+", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "ConstantValue", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K0rpuKUPyHW!PY(E+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 19, "Rt3prmYnT;DstY5.&", "K0rpuKUPyHW!PY(E+", "Rt3prmYnT;DstY5.&", stringArray0, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("%", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "nd3JH*z>", "nd3JH*z>", "nd3JH*z>", (String[]) null, false, false);
      methodWriter0.visitAnnotation("Label offset position has not been resolved yet", false);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "<init>";
      stringArray0[1] = "LocalVariableTypeTable";
      stringArray0[2] = "tL/IUA[";
      stringArray0[3] = "_n2D4";
      stringArray0[4] = "<init>";
      stringArray0[5] = "=Alqf|>s";
      stringArray0[6] = "<init>";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "<init>", "StackMapTable", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3129));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      methodWriter0.visitVarInsn((-2209), 84);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2573));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2573), "125*Z(#q@G8s4-", "g)LJ/-", "RuntimeInvisibleAnnotations", (String[]) null, true, true);
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.MethodWriter");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4117);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      stringArray0[1] = "Class not found";
      stringArray0[2] = "3lS.iNlZ>";
      stringArray0[3] = "Class not found";
      stringArray0[4] = "3lS.iNlZ>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 20, "3lS.iNlZ>", "3lS.iNlZ>", "Class not found", stringArray0, false, false);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 1, "Class not found", "Ljava/lang/Synthetic;", "3lS.iNlZ>", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "9o\"V8yu^FOG2!";
      stringArray0[1] = "9o\"V8yu^FOG2!";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "'.wCSF~7;9O", "'.wCSF~7;9O", "9o\"V8yu^FOG2!", stringArray0, false, false);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)90);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 90
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      short short0 = MethodWriter.readShort(byteArray0, 0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 17, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "feTe.gauwvk)BD-}y!";
      stringArray0[1] = "Signature";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1474), "feTe.gauwvk)BD-}y!", "feTe.gauwvk)BD-}y!", "feTe.gauwvk)BD-}y!", stringArray0, true, false);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 229);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 229
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2553);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^+B%7SUgUYHP";
      stringArray0[1] = "^+B%7SUgUYHP";
      stringArray0[2] = "3 w[lk)Mjd8)R)Z";
      stringArray0[3] = "^+B%7SUgUYHP";
      stringArray0[4] = "^+B%7SUgUYHP";
      stringArray0[5] = "3 w[lk)Mjd8)R)Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "3 w[lk)Mjd8)R)Z", "3 w[lk)Mjd8)R)Z", "^+B%7SUgUYHP", stringArray0, true, true);
      methodWriter0.visitVarInsn(10, 1);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }
}
