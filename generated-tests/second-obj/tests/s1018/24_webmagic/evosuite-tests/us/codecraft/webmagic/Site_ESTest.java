/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:33:50 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Site;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Site_ESTest extends Site_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Site site0 = new Site();
      site0.toTask();
      site0.hashCode();
      assertEquals(5000, site0.getSleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Site site0 = Site.me();
      site0.getRetryTimes();
      assertEquals(1000, site0.getRetrySleepTime());
      
      site0.setRetrySleepTime(0);
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getCycleRetryTimes();
      assertEquals(0, int0);
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Site site0 = Site.me();
      site0.getRetryTimes();
      assertEquals(5000, site0.getSleepTime());
      
      site0.setSleepTime(0);
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getSleepTime();
      assertEquals(5000, int0);
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Site site0 = new Site();
      Object object0 = new Object();
      boolean boolean0 = site0.equals(object0);
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertFalse(boolean0);
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Site site0 = new Site();
      site0.getRetryTimes();
      Site site1 = site0.setRetryTimes(0);
      assertEquals(5000, site1.getTimeOut());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(5000, site1.getSleepTime());
      assertTrue(site1.isUseGzip());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setDisableCookieManagement(false);
      boolean boolean0 = site1.equals(site0);
      assertEquals(0, site1.getCycleRetryTimes());
      assertTrue(boolean0);
      assertFalse(site0.isDisableCookieManagement());
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(0, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getRetryTimes();
      assertEquals(0, int0);
      
      String string0 = site0.toString();
      assertEquals("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}", string0);
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setCharset("");
      site1.hashCode();
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Site site0 = new Site();
      site0.getCharset();
      Site site1 = site0.setUserAgent((String) null);
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Site site0 = Site.me();
      assertEquals(5000, site0.getTimeOut());
      
      site0.setTimeOut(0);
      assertEquals(0, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Site site0 = new Site();
      site0.getCharset();
      Site site1 = site0.addCookie((String) null, (String) null, (String) null);
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Site site0 = Site.me();
      boolean boolean0 = site0.isDisableCookieManagement();
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(boolean0);
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Site site0 = Site.me();
      site0.getHeaders();
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Site site0 = new Site();
      site0.getCharset();
      Site site1 = site0.setDomain((String) null);
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
      assertTrue(site1.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setDomain("");
      site1.hashCode();
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Site site0 = new Site();
      site0.getCharset();
      site0.getUserAgent();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Site site0 = Site.me();
      site0.getDomain();
      int int0 = site0.getTimeOut();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, int0);
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setUserAgent("~E0T5~");
      site1.hashCode();
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getSleepTime());
      assertFalse(site1.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setDomain("*YzM|}MMj%");
      Site site2 = site1.setCharset("*YzM|}MMj%");
      site2.addCookie("*YzM|}MMj%", "&}", "&}");
      site0.addCookie("*YzM|}MMj%", "*YzM|}MMj%", "*YzM|}MMj%");
      site0.setRetryTimes(2342);
      assertEquals(2342, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Site site0 = Site.me();
      boolean boolean0 = site0.equals((Object) null);
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
      assertFalse(boolean0);
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Site site0 = new Site();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      site0.setTimeOut(1000);
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertEquals(1000, site0.getTimeOut());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Site site0 = new Site();
      site0.setCharset("-;");
      Site site1 = Site.me();
      Object object0 = new Object();
      boolean boolean0 = site1.equals(site0);
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(boolean0);
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(0, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Site site0 = new Site();
      site0.getHeaders();
      site0.toString();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.addCookie(", cycleRetryTimes=", ", cycleRetryTimes=");
      Site site2 = site1.setUserAgent("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      site0.equals(site1);
      site2.toTask();
      assertEquals(5000, site1.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Site site0 = new Site();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      site0.toString();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site0.setCharset("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Site site0 = new Site();
      site0.setSleepTime((-2013265918));
      Site site1 = Site.me();
      boolean boolean0 = site1.equals(site0);
      assertEquals((-2013265918), site0.getSleepTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Site site0 = new Site();
      site0.getCookies();
      Site site1 = Site.me();
      site1.toTask();
      site1.setCycleRetryTimes((-1601));
      boolean boolean0 = site0.equals(site1);
      assertEquals((-1601), site1.getCycleRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Site site0 = new Site();
      site0.setUserAgent("");
      site0.getCookies();
      String string0 = site0.toString();
      assertEquals("Site{domain='null', userAgent='', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}", string0);
      
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
      assertTrue(site1.isUseGzip());
      assertEquals(1000, site1.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setDomain("g$X}F\"i5%");
      Site site2 = new Site();
      site1.equals(site2);
      site2.getCookies();
      site2.isUseGzip();
      site1.getRetrySleepTime();
      site1.setRetryTimes(1000);
      assertEquals(1000, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Site site0 = new Site();
      site0.toString();
      Site site1 = Site.me();
      site1.setRetryTimes(31);
      site0.setSleepTime(31);
      site1.getRetrySleepTime();
      boolean boolean0 = site0.equals(site1);
      assertEquals(31, site1.getRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Site site0 = new Site();
      site0.setDomain("mBmjRi<`9#5pax#2,");
      Site site1 = Site.me();
      boolean boolean0 = site1.equals(site0);
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
      assertFalse(boolean0);
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Site site0 = new Site();
      site0.setAcceptStatCode((Set<Integer>) null);
      site0.toTask();
      site0.hashCode();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Site site0 = new Site();
      site0.getHeaders();
      site0.toString();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setUserAgent("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Site site0 = new Site();
      site0.hashCode();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      site0.setAcceptStatCode(linkedHashSet0);
      Site site1 = Site.me();
      int int0 = site0.getRetrySleepTime();
      assertEquals(1000, int0);
      
      boolean boolean0 = site0.equals(site1);
      assertEquals(5000, site1.getTimeOut());
      assertEquals(5000, site1.getSleepTime());
      assertFalse(boolean0);
      assertTrue(site1.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Site site0 = new Site();
      site0.hashCode();
      site0.toString();
      Site site1 = Site.me();
      Site site2 = site1.setAcceptStatCode((Set<Integer>) null);
      site2.getAcceptStatCode();
      Site site3 = site0.setUserAgent("k");
      site1.equals(site3);
      site0.setSleepTime((-2686));
      site0.setDomain("Y0Z2pcf6.-k&Rvy;{B");
      assertEquals((-2686), site0.getSleepTime());
      
      site2.setCycleRetryTimes((-1));
      assertEquals(5000, site1.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setRetrySleepTime(6);
      site0.hashCode();
      Site site2 = site1.setCharset("Site{domain='");
      Site site3 = site0.setDomain("Site{domain='");
      Site site4 = Site.me();
      site1.setRetryTimes(6);
      Site site5 = Site.me();
      site5.setCycleRetryTimes(6);
      Site site6 = site1.setCharset("Site{domain='");
      Site site7 = site3.setAcceptStatCode((Set<Integer>) null);
      Integer integer0 = new Integer(6);
      Site site8 = site4.setRetryTimes(6);
      site8.setAcceptStatCode((Set<Integer>) null);
      site7.equals(site8);
      site0.setSleepTime((-644));
      site6.getAllCookies();
      site6.getAcceptStatCode();
      site2.setAcceptStatCode((Set<Integer>) null);
      assertEquals((-644), site2.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Site site0 = new Site();
      site0.toTask();
      Integer integer0 = new Integer((-23));
      Site site1 = Site.me();
      site0.equals(site1);
      Integer integer1 = new Integer((-23));
      Site site2 = site0.setDomain("");
      Site site3 = site1.setDomain("");
      Object object0 = new Object();
      Object object1 = new Object();
      Site site4 = site3.addHeader("", "");
      site2.equals(site4);
      site4.setSleepTime(31);
      assertEquals(31, site4.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Site site0 = new Site();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      site0.toString();
      Site site1 = new Site();
      Site site2 = site0.setCharset("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      assertFalse(site2.equals((Object)site1));
      
      site1.setCharset("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      site2.setUseGzip(true);
      boolean boolean0 = site0.equals(site1);
      assertTrue(site0.equals((Object)site1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setUserAgent("");
      Map<String, String> map0 = new HashMap<String, String>();
      site0.toString();
      Site site2 = new Site();
      assertFalse(site2.equals((Object)site1));
      
      Site site3 = site2.setUserAgent("");
      site0.equals(site2);
      int int0 = site3.getSleepTime();
      assertTrue(site2.equals((Object)site1));
      assertEquals(5000, int0);
  }
}
