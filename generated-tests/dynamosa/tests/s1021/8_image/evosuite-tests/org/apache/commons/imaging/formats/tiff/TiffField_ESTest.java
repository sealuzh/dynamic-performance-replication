/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 07:23:32 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)35;
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField(50, 48131, fieldTypeRational0, 707L, 2223L, byteArray0, (ByteOrder) null, 4098);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(48131, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(4098, tiffField0.getSortHint());
      assertEquals(4, int0);
      assertEquals(2223, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)21;
      TiffField tiffField0 = new TiffField((-2323), 2028179000, fieldTypeRational0, 101430L, (-37168L), byteArray0, byteOrder0, (byte)21);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2028179000, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-2323), tiffField0.getTag());
      assertEquals((-37168), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3614, "*20k6pr}n");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, (-935), fieldTypeByte0, 4L, 3562L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3562, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-935), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50724, 50724, fieldTypeRational0, 50724, 1L, byteArray0, byteOrder0, (byte) (-44));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-44), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(50724, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50724, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2726), "Y");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2726), 32996, fieldTypeDouble0, 1668L, 1020L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(32996, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2726), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(324, 324, fieldTypeLong0, 324, 324, byteArray0, byteOrder0, (-2223));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tiffField0.getOffset());
      assertEquals((-2223), tiffField0.getSortHint());
      assertEquals(324, tiffField0.getTag());
      assertEquals(324, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3329, (byte)35, fieldTypeLong0, (-819L), 3161L, byteArray0, byteOrder0, 404);
      int int0 = tiffField0.getTag();
      assertEquals(404, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(3329, int0);
      assertEquals(3161, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1065), (-1227), fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, (-137));
      int int0 = tiffField0.getTag();
      assertEquals((-137), tiffField0.getSortHint());
      assertEquals((-1065), int0);
      assertEquals((-1227), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)62;
      TiffField tiffField0 = new TiffField(1, (byte)62, fieldTypeRational0.ASCII, 1420L, (-2718L), byteArray0, byteOrder0, (byte)62);
      String string0 = tiffField0.getStringValue();
      assertEquals(62, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals((-2718), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2832), 1, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)122);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2832), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(122, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-72), 2, fieldTypeAscii0.SHORT, 1506L, 1L, byteArray0, byteOrder0, (-705));
      int int0 = tiffField0.getSortHint();
      assertEquals((-72), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-705), int0);
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1064), (-1227), fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, (-137));
      tiffField0.getOffset();
      assertEquals((-1227), tiffField0.getDirectoryType());
      assertEquals((-137), tiffField0.getSortHint());
      assertEquals((-1064), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(296, 296, fieldTypeRational0, 0L, 2616L, byteArray0, byteOrder0, (byte) (-40));
      int int0 = tiffField0.getOffset();
      assertEquals(2616, int0);
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals(296, tiffField0.getDirectoryType());
      assertEquals(296, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50715, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-4);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(727, (byte)84, fieldTypeShort0, 50715, 1120L, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(252, int0);
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(727, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1120, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50715, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-4);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 1410, fieldTypeShort0, 1L, 1173L, byteArray0, byteOrder0, 37398);
      tiffField0.getIntValueOrArraySum();
      assertEquals(37398, tiffField0.getSortHint());
      assertEquals(1410, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1173, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2146888941, "");
      TiffField tiffField0 = new TiffField((-2310), 8, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 2146888941);
      tiffField0.getIntValue();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2146888941, tiffField0.getSortHint());
      assertEquals((-2310), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3614, "*20k6pr}n");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)124, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(124, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-62);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1876, 1876, fieldTypeShort0, 1L, 19, byteArray0, byteOrder0, (byte)24);
      tiffField0.getIntValue();
      assertEquals(1876, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(1876, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(57, (String) null);
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeAscii0, (-1L), (-1L), byteArray0, byteOrder0, 57);
      tiffField0.getFieldTypeName();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34029, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34029, 34029, fieldTypeRational0, 2317L, 2317L, byteArray0, byteOrder0, 2);
      tiffField0.getFieldTypeName();
      assertEquals(34029, tiffField0.getTag());
      assertEquals(2317, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(34029, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2, (byte) (-6), fieldTypeByte0.ASCII, 140L, 2, byteArray0, byteOrder0, (-11));
      tiffField0.getFieldType();
      assertEquals((-6), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-11), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2726), "Y");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2726), 32996, fieldTypeDouble0, 1668L, 1020L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(32996, tiffField0.getDirectoryType());
      assertEquals((-2726), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 521);
      tiffField0.getFieldType();
      assertEquals(521, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(35, 2214, fieldTypeFloat0.DOUBLE, 1L, 1L, byteArray0, byteOrder0, 35);
      tiffField0.getDoubleValue();
      assertEquals(2214, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)21;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2913, 5, fieldTypeByte0, 1L, (-375L), byteArray0, byteOrder0, (byte)21);
      tiffField0.getDoubleValue();
      assertEquals(2913, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-375), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-6);
      TiffField tiffField0 = new TiffField(1, 1460, fieldTypeShort0, 1, 1460, byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1460, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1460, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[36];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1065), 0, fieldTypeFloat0.IFD, 2670L, 0, byteArray0, byteOrder0, (-1065));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1065), tiffField0.getTag());
      assertEquals((-1065), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(24, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeLong0, 1030L, (-1L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(24, int0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1036), (-1908874352), fieldTypeAscii0, 53, (-1802L), byteArray0, byteOrder0, 50217);
      long long0 = tiffField0.getCount();
      assertEquals(50217, tiffField0.getSortHint());
      assertEquals((-1036), tiffField0.getTag());
      assertEquals((-1802), tiffField0.getOffset());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals(53L, long0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1522, "");
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1522, 2, fieldTypeRational0, (-2147483648L), 1522, byteArray0, byteOrder0, (-1726));
      long long0 = tiffField0.getCount();
      assertEquals(1522, tiffField0.getOffset());
      assertEquals(1522, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-2147483648L), long0);
      assertEquals((-1726), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "JQ(");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 1, fieldTypeShort0, 0L, 15, byteArray0, byteOrder0, 2261);
      tiffField0.getBytesLength();
      assertEquals(15, tiffField0.getTag());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(2261, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)21, 1373, fieldTypeByte0, 887L, (-1L), byteArray0, byteOrder0, (byte)21);
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1373, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1065), (-1227), fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, (-137));
      tiffField0.getByteOrder();
      assertEquals((-1065), tiffField0.getTag());
      assertEquals((-1227), tiffField0.getDirectoryType());
      assertEquals((-137), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 32947, fieldTypeAscii0, (-926L), 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(32947, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1908874352), (byte)21, fieldTypeByte0, (byte)115, (byte)115, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(62, "System");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)115, (byte) (-58), fieldTypeShort0.RATIONAL, (byte)115, 62, byteArray0, byteOrder0, (byte)106);
      tiffField0.getByteArrayValue();
      assertEquals(106, tiffField0.getSortHint());
      assertEquals(115, tiffField0.getTag());
      assertEquals((-58), tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2045, 455, fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, 455);
      MockFile mockFile0 = new MockFile("r'ak>vBw;&i", "'java.lang.String@0000000003'");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(455, tiffField0.getDirectoryType());
      assertEquals(455, tiffField0.getSortHint());
      assertEquals(67L, mockFile0.length());
      assertEquals(2045, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1240, 1240, fieldTypeLong0, 1240, 1240, (byte[]) null, byteOrder0, 1240);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-98), (-98), fieldTypeShort0.RATIONAL, (-98), (-98), byteArray0, byteOrder0, (-98));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeFloat0.SLONG, 1790, 1790, (byte[]) null, byteOrder0, 1790);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-545), (-545), fieldTypeShort0, (-545), (-545), byteArray0, byteOrder0, (-545));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1420L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeFloat0, 909L, (-1), byteArray0, byteOrder0, (byte)112);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-104), (-104), fieldTypeShort0, (-104), 0L, byteArray0, byteOrder0, (-104));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 28, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeFloat0.LONG, 1790, 1790, (byte[]) null, byteOrder0, 1790);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-545), (-545), fieldTypeShort0, (-545), (-545), byteArray0, byteOrder0, (-545));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(16, (-1086), fieldTypeAscii0, 16, (-1086), (byte[]) null, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(61, 61, fieldTypeShort0, 61, 61, (byte[]) null, byteOrder0, 61);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0.RATIONAL, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-545), fieldTypeShort0, 28, (-545), (byte[]) null, byteOrder0, 50);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50242, 50242, fieldTypeShort0, 50242, 50242, (byte[]) null, byteOrder0, 50242);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-14), (-14), fieldTypeShort0, (-14), (-14), byteArray0, byteOrder0, (-14));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1193L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(3389, 1, fieldTypeShort0.RATIONAL, 1, 3389, byteArray0, (ByteOrder) null, 3389);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1678, 1678, fieldTypeShort0, 1678, 1678, (byte[]) null, byteOrder0, 1678);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0.RATIONAL, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-58), (byte)27, (FieldType) null, (byte) (-58), (byte)27, byteArray0, byteOrder0, (byte)27);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeShort0, 40093, (-1L), (byte[]) null, byteOrder0, 40093);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, (byte[]) null, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-955), (-955), fieldTypeShort0.RATIONAL, (-955), (-955), byteArray0, byteOrder0, (-955));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 6, (FieldType) null, 6, 6, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-29), (-29), fieldTypeShort0, (-29), (-29), byteArray0, byteOrder0, (-29));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[25];
      TiffField tiffField0 = new TiffField(19, 19, (FieldType) null, 19, 19, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[77];
      TiffField tiffField0 = new TiffField((-673), (-673), fieldTypeFloat0, (-673), (-673), byteArray0, byteOrder0, (-673));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1134, 1134, fieldTypeShort0, (-1930L), (-1930L), byteArray0, byteOrder0, (-2834));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 27, fieldTypeShort0.DOUBLE, 1L, 4L, byteArray0, byteOrder0, 11);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OversizeValueElement, tag: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "@pmF>ZTa}45I");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1460, 1460, fieldTypeShort0.RATIONAL, 1460, 1460, byteArray0, byteOrder0, 1460);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-775), (-775), fieldTypeShort0.RATIONAL, (-775), (-775), byteArray0, byteOrder0, (-775));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte) (-88), fieldTypeLong0, 2035L, (byte) (-88), byteArray0, byteOrder0, (-1112));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeLong0, (-1L), 1L, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(285, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3614, "*20k6pr}n");
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3614, 3614, fieldTypeByte0, 3614, 1L, byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(3614, tiffField0.getTag());
      assertEquals(3614, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2745), 0, (FieldType) null, (-3099L), (-3662L), (byte[]) null, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals((-2745), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3662), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(727, (-1954), fieldTypeShort0, (-2310), (-2310), byteArray0, byteOrder0, 613);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2310), tiffField0.getOffset());
      assertEquals(727, tiffField0.getTag());
      assertEquals((-1954), int0);
      assertEquals(613, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-4), fieldTypeShort0, (-590L), (-1145L), byteArray0, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeFloat0, (-64L), (-64L), (byte[]) null, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-3588L), (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3588), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-3642), fieldTypeDouble0, 28, 1931, (byte[]) null, byteOrder0, 1931);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals(1931, tiffField0.getSortHint());
      assertEquals(1931, tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-3642), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-55), fieldTypeByte0, (-2959L), 2147483647L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-55), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, (-387L), (-387L), byteArray0, byteOrder0, 137);
      tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(137, tiffField0.getSortHint());
      assertEquals((-387), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getOffset());
      assertEquals("19 (0x13: Unknown Tag): ", string0);
      assertEquals(19, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0.RATIONAL, 19, 19, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 37, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(2180, 2180, fieldTypeAscii0, 2180, 2180, byteArray0, byteOrder0, 2180);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2b651e0a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51, 51, fieldTypeShort0.RATIONAL, 51, 51, byteArray0, byteOrder0, 51);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[195];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1268, 1268, fieldTypeLong0, 1268, 1268, byteArray0, byteOrder0, 1268);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1268, tiffField0.getDirectoryType());
      assertEquals(1268, tiffField0.getSortHint());
      assertEquals(1268, tiffField0.getTag());
      assertEquals(1268L, tiffField0.getCount());
      assertEquals(1268, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeFloat0.DOUBLE, 333, 333, byteArray0, byteOrder0, 333);
      tiffField0.getDoubleArrayValue();
      assertEquals(333, tiffField0.getOffset());
      assertEquals(333, tiffField0.getDirectoryType());
      assertEquals(333, tiffField0.getTag());
      assertEquals(333L, tiffField0.getCount());
      assertEquals(333, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(253, 253, fieldTypeFloat0, 253, 253, byteArray0, byteOrder0, 253);
      tiffField0.getDoubleArrayValue();
      assertEquals(253, tiffField0.getOffset());
      assertEquals(253L, tiffField0.getCount());
      assertEquals(253, tiffField0.getTag());
      assertEquals(253, tiffField0.getDirectoryType());
      assertEquals(253, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(2204, 2204, fieldTypeAscii0, 2204, 2204, byteArray0, byteOrder0, 2204);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@57bfe468 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeShort0, 47, 47, byteArray0, byteOrder0, 47);
      tiffField0.getDoubleArrayValue();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47L, tiffField0.getCount());
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getOffset());
      assertEquals(47, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0.RATIONAL, 19, 19, byteArray0, byteOrder0, 19);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(19L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0.RATIONAL, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getDoubleArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[120];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1959, 1959, fieldTypeLong0, 1959, 1959, byteArray0, byteOrder0, 1959);
      tiffField0.getDoubleArrayValue();
      assertEquals(1959, tiffField0.getDirectoryType());
      assertEquals(1959L, tiffField0.getCount());
      assertEquals(1959, tiffField0.getOffset());
      assertEquals(1959, tiffField0.getSortHint());
      assertEquals(1959, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[46];
      TiffField tiffField0 = new TiffField((byte)119, (byte)119, fieldTypeFloat0, (byte)119, (byte)119, byteArray0, byteOrder0, (byte)119);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@301cda50 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeShort0.RATIONAL, 3, 3, byteArray0, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0.RATIONAL, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getIntArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[120];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1959, 1959, fieldTypeLong0, 1959, 1959, byteArray0, byteOrder0, 1959);
      tiffField0.getIntArrayValue();
      assertEquals(1959L, tiffField0.getCount());
      assertEquals(1959, tiffField0.getSortHint());
      assertEquals(1959, tiffField0.getDirectoryType());
      assertEquals(1959, tiffField0.getTag());
      assertEquals(1959, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0.RATIONAL, 19, 19, byteArray0, byteOrder0, 19);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@4b7d5923
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[34];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0.RATIONAL, 5, 5, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getTagName();
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x5)", string0);
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0.RATIONAL, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[332];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1996, 1996, fieldTypeDouble0.FLOAT, 1996, 1996, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(1996, tiffField0.getTag());
      assertEquals(1996L, tiffField0.getCount());
      assertEquals(1996, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(7984, tiffField0.getBytesLength());
      assertEquals(1996, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeByte0, 959L, 959L, byteArray0, byteOrder0, 38);
      tiffField0.dump();
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(38, tiffField0.getTag());
      assertEquals(959, tiffField0.getOffset());
      assertEquals(959L, tiffField0.getCount());
      assertEquals(959, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[46];
      TiffField tiffField0 = new TiffField((byte)86, (byte)86, fieldTypeFloat0, (byte)86, (byte)86, byteArray0, byteOrder0, (byte)86);
      String string0 = tiffField0.getValueDescription();
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(344, tiffField0.getBytesLength());
      assertEquals(86, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(86, tiffField0.getOffset());
      assertEquals(86L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[417];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2002, 2002, fieldTypeDouble0, 2002, 2002, byteArray0, byteOrder0, 2002);
      String string0 = tiffField0.toString();
      assertEquals(2002, tiffField0.getOffset());
      assertEquals(2002, tiffField0.getSortHint());
      assertEquals(2002, tiffField0.getDirectoryType());
      assertEquals(16016, tiffField0.getBytesLength());
      assertEquals("2002 (0x7d2: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (2002 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeFloat0.DOUBLE, 333, 333, byteArray0, byteOrder0, 333);
      tiffField0.dump();
      assertEquals(2664, tiffField0.getBytesLength());
      assertEquals(333, tiffField0.getOffset());
      assertEquals(333L, tiffField0.getCount());
      assertEquals(333, tiffField0.getDirectoryType());
      assertEquals(333, tiffField0.getSortHint());
      assertEquals(333, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeFloat0.SLONG, 20, 20, byteArray0, byteOrder0, 20);
      tiffField0.dump();
      assertEquals(20L, tiffField0.getCount());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[209];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-2648), 1234, fieldTypeLong0, 1234, (-2648), byteArray0, byteOrder0, 1234);
      tiffField0.dump();
      assertEquals((-2648), tiffField0.getOffset());
      assertEquals(1234L, tiffField0.getCount());
      assertEquals((-2648), tiffField0.getTag());
      assertEquals(4936, tiffField0.getBytesLength());
      assertEquals(1234, tiffField0.getSortHint());
      assertEquals(1234, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[110];
      TiffField tiffField0 = new TiffField(1680, 1680, fieldTypeFloat0.SHORT, 1680, 1680, byteArray0, byteOrder0, 1680);
      tiffField0.dump();
      assertEquals(3360, tiffField0.getBytesLength());
      assertEquals(1680, tiffField0.getTag());
      assertEquals(1680, tiffField0.getOffset());
      assertEquals(1680, tiffField0.getSortHint());
      assertEquals(1680, tiffField0.getDirectoryType());
      assertEquals(1680L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(2214, 2214, fieldTypeFloat0.SHORT, 2214, 2214, byteArray0, byteOrder0, 2214);
      tiffField0.dump();
      assertEquals(2214, tiffField0.getTag());
      assertEquals(2214, tiffField0.getOffset());
      assertEquals(2214, tiffField0.getSortHint());
      assertEquals(2214, tiffField0.getDirectoryType());
      assertEquals(4428, tiffField0.getBytesLength());
      assertEquals(2214L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(253, 253, fieldTypeFloat0.ASCII, 253, 253, byteArray0, byteOrder0, 253);
      tiffField0.dump();
      assertEquals(253L, tiffField0.getCount());
      assertEquals(253, tiffField0.getTag());
      assertEquals(253, tiffField0.getDirectoryType());
      assertEquals(253, tiffField0.getBytesLength());
      assertEquals(253, tiffField0.getSortHint());
      assertEquals(253, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 19, fieldTypeShort0, 1, 19, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[120];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1959, 1959, fieldTypeByte0, 1959, 1959, byteArray0, byteOrder0, 1959);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1959, tiffField0.getOffset());
      assertEquals(1959, tiffField0.getDirectoryType());
      assertEquals(1959, tiffField0.getBytesLength());
      assertEquals(1959, tiffField0.getTag());
      assertEquals(1959L, tiffField0.getCount());
      assertEquals(1959, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 11, 17178397920L, byteArray0, byteOrder0, 11);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(32, 5);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(20, tiffField0.getTag());
      assertEquals((-1471264), tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11L, tiffField0.getCount());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 1L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeDouble0, 28, 28, byteArray0, byteOrder0, 28);
      tiffField0.getFieldTypeName();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)21, fieldTypeByte0, (byte)115, (byte)115, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(115, tiffField0.getOffset());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-3642), fieldTypeDouble0, 28, 1931, (byte[]) null, byteOrder0, 1931);
      tiffField0.dump();
      assertEquals((-3642), tiffField0.getDirectoryType());
      assertEquals(28L, tiffField0.getCount());
      assertEquals(1931, tiffField0.getOffset());
      assertEquals(1931, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1665, 1665, fieldTypeFloat0, 1665, 1665, (byte[]) null, byteOrder0, 1665);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(595, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 595, fieldTypeRational0, 998L, (-1L), byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(595, tiffField0.getDirectoryType());
      assertEquals((-1L), tiffElement0.offset);
  }
}
