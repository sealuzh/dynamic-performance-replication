/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 14:45:39 GMT 2019
 */

package org.fixsuite.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.fixsuite.message.Library;
import org.fixsuite.message.info.DictionaryInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Library library0 = new Library();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Loaded ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      library0.loadFromDirectory("vP_\"g}bgaz:tnK~F");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.getDictionaries();
      library0.getDictionaries();
      boolean boolean0 = library0.loadFromDirectory("");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      List<DictionaryInfo> list0 = library0.getDictionaries();
      library0.loadFromDirectory("6");
      library0.loadFromDirectory("X{Q*eDX}fW");
      library0.getDictionary("Loaded ");
      library0.getDictionaries();
      library0.loadFromDirectory("Loading time: ");
      boolean boolean1 = library0.loadFromDirectory("Loaded ");
      assertFalse(boolean1 == boolean0);
      
      library0.getDictionary("");
      List<DictionaryInfo> list1 = library0.getDictionaries();
      assertTrue(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("");
      library0.loadFromDirectory("");
      List<DictionaryInfo> list0 = library0.getDictionaries();
      library0.loadFromDirectory("");
      library0.getDictionary("");
      library0.getDictionaries();
      List<DictionaryInfo> list1 = library0.getDictionaries();
      assertTrue(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Library library0 = new Library();
      boolean boolean0 = library0.loadFromDirectory("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Library library0 = new Library();
      library0.loadFromDirectory("GFzMtZ[?sUR");
      library0.getDictionaries();
      library0.getDictionaries();
      // Undeclared exception!
      try { 
        library0.getDictionary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Library library0 = new Library();
      library0.loadFromDirectory("MsgType.xml");
      library0.getDictionaries();
      library0.getDictionary("z,AN,`T)r_M<H-");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("z,AN,`T)r_M<H-");
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
