/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:32:38 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][8];
      charClass0.appendTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-3159), 599);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(8377, 2339);
      int[][] intArray0 = new int[0][2];
      charClass1.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[1] = (-3107);
      intArray0[2] = (-3107);
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-3107);
      intArray0[1] = (-3107);
      intArray0[2] = 66640;
      intArray0[3] = (-3107);
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      charClass0.appendFoldedRange((-3107), (-3107));
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][8];
      // Undeclared exception!
      charClass0.appendTableWithSign(intArray0, (-496));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[][] intArray0 = new int[7][6];
      int[] intArray1 = new int[2];
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(1, 1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(69821, 69821);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-3107);
      intArray0[1] = (-3107);
      intArray0[2] = 66640;
      int[][] intArray1 = new int[3][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      charClass0.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[3] = 69820;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[3][8];
      charClass0.appendTable(intArray1);
      charClass1.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[][] intArray0 = new int[5][8];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(65, 65);
      int[] intArray1 = new int[2];
      intArray1[0] = 65;
      intArray1[1] = 65;
      charClass1.appendClassWithSign(intArray1, 65);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(66640, 3352);
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[1][8];
      charClass1.toString();
      charClass0.appendTable(intArray0);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[2] = 66640;
      intArray0[3] = 69820;
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[4][8];
      CharClass charClass1 = charClass0.appendFoldedRange(2338, 2338);
      charClass1.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(66619, 66619);
      int[][] intArray0 = new int[0][6];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 67058);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      charClass0.appendFoldedClass(intArray0);
      intArray0[0] = 397;
      intArray0[1] = 69820;
      intArray0[2] = 206;
      intArray0[3] = 64;
      charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[3][8];
      charClass0.cleanClass();
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 66640;
      intArray0[1] = 66639;
      intArray0[2] = (-1697);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(848, 848);
      CharClass charClass2 = charClass1.appendRange(66639, 66640);
      CharClass charClass3 = charClass2.cleanClass();
      CharClass charClass4 = charClass3.appendClass(intArray0);
      int[][] intArray1 = new int[4][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass4.appendTableWithSign(intArray1, intArray0[0]);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1967);
      intArray0[1] = 870;
      intArray0[2] = 4150;
      intArray0[3] = (-2125);
      charClass0.appendClass(intArray0);
      charClass0.appendFoldedRange(66619, 66619);
      int[][] intArray1 = new int[0][6];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 67058);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[5][8];
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 836;
      intArray0[1] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.cleanClass();
      int[] intArray1 = new int[1];
      // Undeclared exception!
      try { 
        charClass1.appendClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[2] = 66640;
      intArray0[3] = 120658;
      CharClass charClass1 = charClass0.appendLiteral(120658, 120658);
      CharClass charClass2 = charClass0.negateClass();
      int[][] intArray1 = new int[2][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass1.appendTableWithSign(intArray1, 93);
      CharClass charClass3 = new CharClass();
      CharClass charClass4 = charClass0.appendTable(intArray1);
      charClass2.appendNegatedTable(intArray1);
      charClass0.toString();
      charClass4.cleanClass();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[][] intArray0 = new int[3][6];
      int[] intArray1 = new int[0];
      CharClass charClass0 = new CharClass(intArray1);
      CharClass charClass1 = charClass0.appendClass(intArray1);
      CharClass charClass2 = charClass1.appendFoldedClass(intArray1);
      CharClass charClass3 = charClass2.cleanClass();
      CharClass charClass4 = charClass3.appendNegatedClass(intArray1);
      charClass4.negateClass();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(4780, 4780);
      int[] intArray0 = new int[2];
      intArray0[0] = 4780;
      intArray0[0] = 4780;
      charClass1.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[0][2];
      CharClass charClass2 = charClass0.appendNegatedTable(intArray0);
      charClass2.appendTable(intArray0);
      int[] intArray1 = new int[0];
      charClass1.appendClassWithSign(intArray1, (-228));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(32, 32);
      int[] intArray0 = new int[0];
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 66644;
      intArray0[3] = 66644;
      int[][] intArray1 = new int[3][8];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.appendNegatedClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      charClass0.appendFoldedClass(intArray0);
      intArray0[0] = 543;
      intArray0[1] = 1114111;
      intArray0[2] = (-2248);
      intArray0[3] = (-2);
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 405;
      intArray0[1] = 1708;
      intArray0[2] = 719;
      intArray0[3] = 775;
      intArray0[4] = 4720;
      intArray0[5] = 406;
      intArray0[6] = 1064;
      intArray0[7] = (-320);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange(4720, 775);
      CharClass charClass2 = charClass1.cleanClass();
      charClass2.cleanClass();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-397), 120084);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 66640;
      intArray0[3] = 66640;
      int[][] intArray1 = new int[3][8];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.appendNegatedClass(intArray0);
      charClass1.appendNegatedTable(intArray1);
      CharGroup charGroup0 = null;
      boolean boolean0 = true;
      charClass0.appendGroup(charGroup0, boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 66640;
      intArray0[3] = 69870;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass0.appendNegatedTable(intArray1);
      charClass2.appendRange(66640, 9);
      int[][] intArray2 = new int[1][7];
      intArray2[0] = intArray0;
      charClass1.appendTableWithSign(intArray2, 1109);
      charClass0.negateClass();
  }
}
