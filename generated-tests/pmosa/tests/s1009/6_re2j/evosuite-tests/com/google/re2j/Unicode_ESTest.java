/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 14:20:33 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Unicode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Unicode_ESTest extends Unicode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Unicode.toUpper(3696);
      assertEquals(3696, int0);
      
      Unicode.isTitle(3696);
      Unicode.toUpper(1);
      boolean boolean0 = Unicode.isLower(1114111);
      int int1 = Unicode.toLower(3696);
      assertEquals(3696, int1);
      
      Unicode.simpleFold(0);
      Unicode.isUpper(3696);
      int int2 = Unicode.simpleFold(1);
      assertEquals(1, int2);
      
      Unicode.isTitle(502);
      Unicode.isLower(0);
      boolean boolean1 = Unicode.isLower(3696);
      assertFalse(boolean1);
      
      boolean boolean2 = Unicode.isUpper((-665));
      assertTrue(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(32);
      boolean boolean1 = Unicode.isLower(32);
      assertFalse(boolean1);
      
      boolean boolean2 = Unicode.isTitle(3243);
      assertFalse(boolean2 == boolean0);
      
      int int0 = Unicode.toUpper((-2843));
      assertEquals((-2843), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = Unicode.toUpper(981);
      assertEquals(934, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Unicode.isTitle(256);
      int int0 = Unicode.toUpper(8115);
      assertEquals(8124, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(3171);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Unicode.isUpper(2327);
      Unicode.toLower(2327);
      int int0 = Unicode.simpleFold(2327);
      assertEquals(2327, int0);
      
      Unicode.isUpper(8249);
      Unicode.isTitle(233);
      int int1 = Unicode.simpleFold(0);
      assertEquals(0, int1);
      
      boolean boolean0 = Unicode.isUpper(2327);
      boolean boolean1 = Unicode.isPrint(65096);
      assertFalse(boolean1 == boolean0);
      
      int int2 = Unicode.toUpper(2327);
      assertEquals(2327, int2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Unicode.isTitle(83);
      boolean boolean0 = Unicode.isPrint(3183);
      int int0 = Unicode.toUpper((-2553));
      assertEquals((-2553), int0);
      
      boolean boolean1 = Unicode.isUpper((-2553));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Unicode.isTitle((-416));
      boolean boolean0 = Unicode.isPrint(1793);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Unicode.toUpper((-2321));
      Unicode.isPrint((-2321));
      int int0 = Unicode.toLower(1043);
      assertEquals(1075, int0);
      
      Unicode.isTitle(0);
      Unicode.toUpper(1379);
      Unicode.toLower((-2321));
      Unicode.isLower((-2321));
      Unicode.toLower(1379);
      Unicode.isTitle(0);
      boolean boolean0 = Unicode.isPrint((-539));
      assertFalse(boolean0);
      
      Unicode.simpleFold((-539));
      Unicode.toUpper(128591);
      Unicode.toUpper(4657);
      int int1 = Unicode.simpleFold((-2321));
      assertEquals((-2321), int1);
      
      int int2 = Unicode.toUpper(1379);
      assertEquals(1331, int2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Unicode.isLower(1055);
      Unicode.isTitle(300);
      Unicode.isLower(65113);
      int int0 = Unicode.simpleFold((-4053));
      assertEquals((-4053), int0);
      
      Unicode.isUpper(65113);
      Unicode.toUpper(65113);
      Unicode.toUpper((-232));
      Unicode.isPrint((-2));
      int int1 = Unicode.toLower(90);
      assertEquals(122, int1);
      
      int int2 = Unicode.simpleFold(1055);
      assertEquals(1087, int2);
      
      Unicode.toLower((-81));
      int int3 = Unicode.toLower(300);
      assertEquals(301, int3);
      
      Unicode.toUpper((-81));
      Unicode.toUpper(1087);
      Unicode.isUpper(3758);
      Unicode.isPrint((-4053));
      Unicode.isUpper(300);
      boolean boolean0 = Unicode.isPrint(301);
      assertTrue(boolean0);
      
      Unicode.isLower(0);
      int int4 = Unicode.toLower(1);
      assertEquals(1, int4);
      
      Unicode.isUpper(301);
      Unicode.isLower(1868);
      Unicode.isUpper((-1890));
      Unicode.toUpper(1);
      int int5 = Unicode.simpleFold(3758);
      assertEquals(3758, int5);
      
      boolean boolean1 = Unicode.isUpper(300);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(35);
      int int0 = Unicode.toLower(122);
      assertEquals(122, int0);
      
      boolean boolean1 = Unicode.isUpper((-3814));
      assertFalse(boolean1);
      
      boolean boolean2 = Unicode.isTitle(122);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Unicode.isPrint(228);
      Unicode.isTitle(228);
      int int0 = Unicode.MIN_FOLD;
      assertEquals(65, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = Unicode.isTitle(13);
      assertFalse(boolean0);
      
      int int0 = Unicode.toUpper(97);
      assertEquals(65, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Unicode.isUpper(97);
      boolean boolean0 = Unicode.isLower(0);
      boolean boolean1 = Unicode.isPrint(90);
      boolean boolean2 = Unicode.isLower(0);
      assertFalse(boolean2 == boolean1);
      
      Unicode.toLower(2572);
      Unicode.isTitle(90);
      int int0 = Unicode.simpleFold(97);
      assertEquals(65, int0);
      
      int int1 = Unicode.simpleFold((-3024));
      assertEquals((-3024), int1);
      
      int int2 = Unicode.toLower(1457);
      assertEquals(1457, int2);
      
      boolean boolean3 = Unicode.isUpper((-1436));
      assertTrue(boolean3 == boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(749);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Unicode.isTitle(894);
      Unicode.toLower(894);
      Unicode.toUpper((-2555));
      Unicode.simpleFold(894);
      Unicode.toUpper(894);
      Unicode.simpleFold(894);
      boolean boolean0 = Unicode.isLower(894);
      Unicode.simpleFold((-2555));
      boolean boolean1 = Unicode.isPrint(1871);
      boolean boolean2 = Unicode.isPrint((-2213));
      assertTrue(boolean2 == boolean0);
      
      Unicode.isTitle(894);
      Unicode.isTitle(894);
      Unicode.toLower((-717));
      Unicode.toLower(12353);
      Unicode.isTitle(894);
      Unicode.isPrint(894);
      Unicode.isUpper((-378));
      Unicode.toLower((-717));
      int int0 = Unicode.simpleFold(2366);
      assertEquals(2366, int0);
      
      Unicode.isTitle(167);
      Unicode.toUpper(1871);
      Unicode.simpleFold((-2555));
      boolean boolean3 = Unicode.isPrint(2182);
      assertFalse(boolean3 == boolean1);
      
      int int1 = Unicode.simpleFold((-2555));
      assertEquals((-2555), int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = Unicode.simpleFold(2953);
      assertEquals(2953, int0);
      
      Unicode.toLower((-350));
      Unicode.toLower(43273);
      boolean boolean0 = Unicode.isUpper((-2877));
      int int1 = Unicode.simpleFold(0);
      assertEquals(0, int1);
      
      Unicode.toLower(43273);
      boolean boolean1 = Unicode.isPrint(43273);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Unicode.toLower((-806));
      Unicode.toLower(173);
      Unicode.isLower((-806));
      Unicode.isLower((-119));
      int int0 = Unicode.simpleFold(1126);
      assertEquals(1127, int0);
      
      boolean boolean0 = Unicode.isPrint(173);
      Unicode.simpleFold((-806));
      Unicode.toUpper(173);
      Unicode.isTitle((-119));
      Unicode.isUpper((-806));
      boolean boolean1 = Unicode.isLower(1126);
      assertFalse(boolean1);
      
      Unicode.toUpper(0);
      Unicode.toLower(0);
      Unicode.simpleFold(0);
      int int1 = Unicode.simpleFold(173);
      assertEquals(173, int1);
      
      Unicode.toLower(0);
      int int2 = Unicode.toLower(0);
      assertEquals(0, int2);
      
      Unicode.isTitle((-191));
      boolean boolean2 = Unicode.isPrint((-2591));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Unicode.toLower(0);
      boolean boolean0 = Unicode.isPrint(11775);
      Unicode.isUpper(0);
      Unicode.simpleFold(1114111);
      Unicode.toLower(11775);
      int int0 = Unicode.toUpper(0);
      assertEquals(0, int0);
      
      Unicode.simpleFold(1114111);
      Unicode.toLower(1114111);
      boolean boolean1 = Unicode.isPrint(0);
      assertFalse(boolean1 == boolean0);
      
      int int1 = Unicode.simpleFold(97);
      assertEquals(65, int1);
      
      int int2 = Unicode.simpleFold(647);
      assertEquals(647, int2);
      
      boolean boolean2 = Unicode.isPrint(678);
      assertTrue(boolean2);
      
      int int3 = Unicode.simpleFold(127);
      assertEquals(127, int3);
      
      int int4 = Unicode.toLower(65);
      assertFalse(int4 == int1);
  }
}
