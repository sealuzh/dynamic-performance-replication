/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:38:47 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      Long long0 = new Long(101);
      Item item0 = classWriter0.newConstItem(long0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1025));
      classWriter0.newFloat((-1025));
      classWriter0.newFloat((-1025));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.MethodWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.newUTF8("L");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(768);
      classWriter0.visitEnd();
      String[] stringArray0 = new String[0];
      classWriter0.visit(821, 768, "*&h}DE!Wk,w=S:J", "*&h}DE!Wk,w=S:J", "*&h}DE!Wk,w=S:J", stringArray0);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-274));
      classWriter0.visitInnerClass("", "", "", (-274));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331660);
      Integer integer0 = new Integer(1);
      classWriter0.newConst(integer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(607);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      // Undeclared exception!
      try { 
        classWriter0.newConst(mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@24e1cdcf
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4442);
      String string0 = null;
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 519);
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.newFloat((-2458));
      classWriter0.visitInnerClass("", (String) null, "", 2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.newField("", ",A+vZk&T]dmh]", "");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4596);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      classWriter0.newDouble(50331648);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-33));
      classWriter0.index = 534;
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        classWriter0.visitField((-33), "2hclc&'6u-0-\"^7,g", (String) null, "The prefix must not be null", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2639));
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-2639), (String) null, (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2075));
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      classWriter0.version = 2;
      classWriter0.index = 292552704;
      Item[] itemArray0 = new Item[2];
      Item item0 = classWriter0.newInteger(292552704);
      itemArray0[0] = item0;
      Item item1 = classWriter0.newInteger(292552704);
      item1.intVal = 292552705;
      classWriter0.newFloat(292552704);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2952);
      Byte byte0 = new Byte((byte)1);
      classWriter0.newConst(byte0);
      classWriter0.newField("", "", "");
      Byte.toUnsignedInt((byte)1);
      Integer integer0 = new Integer(1);
      Item[] itemArray0 = new Item[9];
      Item item0 = classWriter0.newLong(5);
      itemArray0[0] = item0;
      classWriter0.newFloat(601.05F);
      Item item1 = classWriter0.key;
      itemArray0[2] = item1;
      itemArray0[3] = item1;
      Item item2 = classWriter0.newFieldItem("", "", "");
      itemArray0[4] = item2;
      Item item3 = classWriter0.newFieldItem("", "pkFqRX4|)x(N+", "Deprecated");
      itemArray0[5] = item3;
      classWriter0.newClassItem("J/r;|bqD");
      Item item4 = classWriter0.newLong(0L);
      itemArray0[7] = item4;
      Item item5 = classWriter0.key3;
      itemArray0[8] = item5;
      classWriter0.typeTable = itemArray0;
      Byte.toUnsignedInt((byte) (-102));
      classWriter0.newInteger((byte)1);
      classWriter0.newInteger(1);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("07d", "07d");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '07d.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Type type0 = Type.DOUBLE_TYPE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(5);
      Double double0 = new Double((-1432.9059667753));
      classWriter0.newConst(double0);
      boolean boolean0 = ClassReader.RESIZE;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, 2242);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      Item item0 = classWriter0.newFloat((-2458));
      Item[] itemArray0 = new Item[1];
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      int int0 = Frame.ELEMENT_OF;
      classWriter0.addUninitializedType("", 50331648);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.typeTable = itemArray0;
      Type type0 = Type.DOUBLE_TYPE;
      Item item1 = classWriter0.key3;
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-2458);
      Type type0 = Type.SHORT_TYPE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2458));
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      String string0 = "";
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit((-2458), 1, "", "", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      classWriter0.newLong(16777216);
      classWriter0.visitSource("(", "StackMapTable");
      classWriter0.visitField(2, "StackMapTable", "he<8l~", "StackMapTable", "StackMapTable");
      classWriter0.newLong(16777216);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1584));
      classWriter0.version = 4;
      Short short0 = Short.valueOf((short)2054);
      classWriter0.newConst(short0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.newClass("EnclosingMethod");
      classWriter0.visitInnerClass("EnclosingMethod", (String) null, (String) null, 2);
      classWriter0.version = 8;
      System.setCurrentTimeMillis(1);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BYTE_TYPE;
      ClassWriter classWriter0 = new ClassWriter((-2458));
      String string0 = "org.apache.commons.io.IOCase";
      String string1 = null;
      classWriter0.visit((-2178), 9, "RuntimeInvisibleAnnotations", (String) null, "&~Mu0j.3?", (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("RuntimeInvisibleAnnotations", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'RuntimeInvisibleAnnotations.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      byte[] byteArray0 = ClassWriter.TYPE;
      String string0 = "RuntimeInvisibleAnnotations";
      classWriter0.visit(1845, 1845, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "K4/wT", (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("K4/wT", "K4/wT");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'K4/wT.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      Item item0 = classWriter0.key3;
      classWriter0.visitSource("RuntimeVisibleAnnotations", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BYTE_TYPE;
      ClassWriter classWriter0 = new ClassWriter((-2487));
      int int0 = Float.SIZE;
      classWriter0.visitAnnotation("3/+~$6&9J+#", false);
      System.setCurrentTimeMillis(0L);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(5, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.newFloat((-2458));
      int int0 = Type.DOUBLE;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeIavisbleParameterAnnotations";
      classWriter0.visit(31, 40, "org.apache.commons.io.filefilter.FileFileFilter", "", "RuntimeIavisbleParameterAnnotations", stringArray0);
      classWriter0.addType("org.apache.commons.io.filefilter.FileFileFilter");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("b.nthetic", "RuntimeIavisbleParameterAnnotations");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'b/nthetic.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.newFloat(8);
      classWriter0.visitInnerClass("", "", "", 8);
      classWriter0.visitOuterClass("", "", "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.visitInnerClass("", "", "", 4);
      // Undeclared exception!
      try { 
        classWriter0.newField("", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BOOLEAN_TYPE;
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newConst(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      classWriter0.version = 20;
      classWriter0.addType("The wildcard must not be null");
      Character character0 = Character.valueOf('?');
      classWriter0.newConst(character0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BYTE_TYPE;
      ClassWriter classWriter0 = new ClassWriter((-2458));
      String string0 = "org.apache.commons.io.IOCase";
      String string1 = null;
      classWriter0.visit((-2178), (-1025), "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations", (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("RuntimeInvisibleAnnotations", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'RuntimeInvisibleAnnotations.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.visitSource((String) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = Character.MAX_CODE_POINT;
      int int1 = Character.MAX_CODE_POINT;
      // Undeclared exception!
      try { 
        classWriter0.newMethod("", (String) null, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BYTE_TYPE;
      ClassWriter classWriter0 = new ClassWriter(292552704);
      String string0 = "org.apache.commons.io.IOCase";
      String string1 = "java/lang/Object";
      classWriter0.visit(16, (-177), "java/lang/Object", (String) null, "[Q-<kd%@tAX}P>&5s,f", (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("cR:M<e&A0", "?NpX;tt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'cR:M<e&A0.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2579);
      Type type0 = Type.BOOLEAN_TYPE;
      classWriter0.newConstItem(type0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.newDouble((-2458));
      classWriter0.visitOuterClass(">fb[WPoST8d(77M/;g", "&a&f<5-.@um(F", (String) null);
      classWriter0.newLong(2);
      String string0 = "kB9LIgaG-`";
      // Undeclared exception!
      try { 
        classWriter0.newField("", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      classWriter0.newFloat(8);
      classWriter0.visitInnerClass("", "", "", 8);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.visitInnerClass("", "", "", 19);
      classWriter0.newField("", "", "");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      classWriter0.newFloat((-328));
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.DOUBLE_TYPE;
      Float float0 = new Float((double) (-328));
      classWriter0.newConstItem(float0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-604));
      Boolean boolean0 = new Boolean(true);
      classWriter0.newConstItem(boolean0);
      String string0 = "aM&(M[*pL";
      String string1 = "!,c2X_N_1gS7l";
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(13, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.visitField(5, "vvH{uJK/W:;Z~f", "vvH{uJK/W:;Z~f", "vvH{uJK/W:;Z~f", boolean0);
      Boolean boolean1 = new Boolean("vvH{uJK/W:;Z~f");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.DOUBLE_TYPE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(7);
      String string0 = "";
      classWriter0.visitAnnotation("", true);
      classWriter0.addType(",&r4NHKGG^");
      classWriter0.addType(",&r4NHKGG^");
      classWriter0.visitEnd();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(5, 723);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.CHAR_TYPE;
      Type.getObjectType("qIAow");
      Type[] typeArray0 = new Type[0];
      Type.getMethodDescriptor(type0, typeArray0);
      int int0 = Character.MIN_RADIX;
      ClassWriter classWriter0 = new ClassWriter(5);
      byte[] byteArray0 = ClassWriter.TYPE;
      int int1 = Character.MIN_RADIX;
      classWriter0.toByteArray();
      classWriter0.visitOuterClass("The wildcard list must not be null", "EnclosingMethod", " K");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      String string0 = "org.apache.commons.io.IOCase";
      classWriter0.newConstItem("org.apache.commons.io.IOCase");
      classWriter0.newConstItem("org.apache.commons.io.IOCase");
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.CHAR_TYPE;
      try { 
        Long.valueOf("org.apache.commons.io.IOCase");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.apache.commons.io.IOCase\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2458));
      Item item0 = classWriter0.newFloat((-2458));
      item0.set(1.0F);
      Item item1 = new Item((-2458), item0);
      classWriter0.newUTF8("b.nthetic");
      Boolean boolean0 = Boolean.TRUE;
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.newClassItem("b.nthetic");
      Type type1 = Type.DOUBLE_TYPE;
      int int0 = Frame.LONG;
      ClassWriter classWriter1 = new ClassWriter((-2458));
      Type type2 = Type.getObjectType("b.nthetic");
      classWriter0.visitEnd();
      Item item2 = classWriter1.key3;
      classWriter1.addUninitializedType("vvH{uJK/W:;Z~f", 3);
      Class<Double> class0 = Double.class;
      Type.getInternalName(class0);
      classWriter1.newMethod("vvH{uJK/W:;Z~f", "org.apache.commons.io.IOCase", "b.nthetic", false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newConstItem(type2);
      Type type3 = Type.DOUBLE_TYPE;
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("org.apache.commons.io.IOCase", "RuntimeVisibleAnnotations");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'RuntimeVisibleAnnotations.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.getCommonSuperClass("org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      classWriter0.visitOuterClass("Q/C7{T!m0YT", (String) null, "LocalVariableTypeTable");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = (-2458);
      Boolean boolean0 = Boolean.FALSE;
      EvoSuiteFile evoSuiteFile0 = null;
      Type type0 = Type.BOOLEAN_TYPE;
      ClassWriter classWriter0 = new ClassWriter(512);
      String string0 = "java/lang/Class";
      classWriter0.getCommonSuperClass("java/lang/Class", "java/lang/Object");
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      int int0 = Float.SIZE;
      classWriter0.visitInnerClass("EnclosingMethod", "EnclosingMethod", "EnclosingMethod", 32);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "!jkcIh&`C$K^(h~E", "EnclosingMethod", "EnclosingMethod", stringArray0, false, false);
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.classReaderOffset = 32;
      classWriter0.version = 8;
      classWriter0.visitAnnotation("EnclosingMethod", false);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BYTE_TYPE;
      ClassWriter classWriter0 = new ClassWriter(27);
      int int0 = Float.SIZE;
      classWriter0.visitAnnotation("", true);
      System.setCurrentTimeMillis(5);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.CHAR_TYPE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2458));
      Double double0 = new Double(1);
      classWriter0.newConstItem(double0);
      String string0 = "wheel.asm.Frame";
      classWriter0.getCommonSuperClass("wheel.asm.Frame", "org.apache.commons.io.IOCase");
      classWriter0.invalidFrames = false;
      classWriter0.newDouble(1.0);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("sr!(T/", "org.apache.commons.io.IOCase", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "k%V");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter(31);
      classWriter0.addUninitializedType("", 10);
      classWriter0.newLong((-1997L));
      classWriter0.newFloat(26);
      classWriter0.newMethodItem("", "&ID<GlY_Y|", "", false);
      classWriter0.newFieldItem("&ID<GlY_Y|", "", "gaj1RP/3_(r~0(7*");
      classWriter0.addUninitializedType("", 10);
      classWriter0.visitSource("?zzC1MV4f/:$7R\"", "");
      classWriter0.newUTF8("gaj1RP/3_(r~0(7*");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Type type0 = Type.BYTE_TYPE;
      type0.getDescriptor();
      ClassWriter classWriter0 = new ClassWriter((-2458));
      classWriter0.addUninitializedType("vvH{uJK/W:;Z~f", 3);
      classWriter0.getCommonSuperClass("wheel.asm.Frame", "org.apache.commons.io.IOCase");
      boolean boolean1 = false;
      classWriter0.invalidFrames = false;
      classWriter0.newDouble(5);
      Class<Boolean> class0 = Boolean.class;
      classWriter0.newInteger(2);
      Type type1 = Type.getType(class0);
      Type[] typeArray0 = new Type[6];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type1;
      typeArray0[3] = type1;
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      classWriter0.newMethodItem("org.apache.commons.io.IOCase", "i]c[fy%JBKa", "", false);
      classWriter0.newClass("P~");
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
