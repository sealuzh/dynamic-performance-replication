/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:12:54 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff.write;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Frame;
import java.awt.image.BufferedImage;
import java.io.OutputStream;
import java.nio.ByteOrder;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Stack;
import javax.swing.JFormattedTextField;
import org.apache.commons.imaging.common.BinaryOutputStream;
import org.apache.commons.imaging.common.ImageBuilder;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii;
import org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase;
import org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless;
import org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossy;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSet;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffImageWriterBase_ESTest extends TiffImageWriterBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        tiffImageWriterLossy0.validateDirectories(tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No directories.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Calendar.WEEK_OF_YEAR;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, stack0, 3, 3);
      BufferedImage bufferedImage0 = new BufferedImage(3, 6, 3);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy();
      TiffImageWriterBase.imageDataPaddingLength((-662));
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream((OutputStream) null, byteOrder0);
      // Undeclared exception!
      try { 
        tiffImageWriterLossy0.writeImageFileHeader(binaryOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy(byteOrder0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      ByteOrder.nativeOrder();
      tiffOutputSet0.addRootDirectory();
      // Undeclared exception!
      try { 
        tiffImageWriterLossy0.write((OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy(byteOrder0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      ByteOrder.nativeOrder();
      tiffOutputSet0.addRootDirectory();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        tiffImageWriterLossy0.write((OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TiffImageWriterBase.imageDataPaddingLength(1102);
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, stack0, 0L, (-2123L));
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      BufferedImage bufferedImage0 = new BufferedImage(2, 6, 2);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("XMP_XML", "XMP_XML");
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = Calendar.WEEK_OF_YEAR;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, stack0, 3, 3);
      BufferedImage bufferedImage0 = new BufferedImage(3, 6, 3);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("f6W\"KKv)GGi`\"", tiffImageWriterLossless0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown parameter: f6W\"KKv)GGi`\"
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = Calendar.WEEK_OF_YEAR;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, stack0, 3, 3);
      BufferedImage bufferedImage0 = new BufferedImage(3, 6, 3);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 823, fieldTypeRational0, 3, 823, (byte[]) null, byteOrder0, 77);
      stack0.add(tiffField0);
      hashMap0.put("EXIF", tiffDirectory0);
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.imaging.formats.tiff.TiffDirectory cannot be cast to org.apache.commons.imaging.formats.tiff.write.TiffOutputSet
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.getOrCreateGPSDirectory();
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffOutputSet tiffOutputSet1 = new TiffOutputSet();
      tiffOutputSet1.getGPSDirectory();
      MockPrintStream mockPrintStream0 = new MockPrintStream("PARAM_KEY_LZW_COMPRESSION_BLOCK_SIZE");
      tiffOutputSet0.setGPSInDegrees((-1L), (-3));
      ByteOrder.nativeOrder();
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy();
      tiffImageWriterLossy0.validateDirectories(tiffOutputSet0);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(mockPrintStream0, tiffOutputSet1.byteOrder);
      System.setCurrentTimeMillis((-3));
      System.setCurrentTimeMillis((-3));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.getOrCreateGPSDirectory();
      tiffOutputSet0.addInteroperabilityDirectory();
      Stack<TiffField> stack0 = new Stack<TiffField>();
      tiffOutputSet0.getOrCreateRootDirectory();
      ByteOrder.nativeOrder();
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy();
      TiffOutputSummary tiffOutputSummary0 = tiffImageWriterLossy0.validateDirectories(tiffOutputSet0);
      TiffOutputSummary tiffOutputSummary1 = tiffImageWriterLossy0.validateDirectories(tiffOutputSet0);
      assertFalse(tiffOutputSummary1.equals((Object)tiffOutputSummary0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = JFormattedTextField.REVERT;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, stack0, 2, 2);
      stack0.spliterator();
      BufferedImage bufferedImage0 = new BufferedImage(2, 6, 2);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Double double0 = new Double(0.0);
      hashMap0.put("COMPRESSION", double0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>(2);
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression parameter (Only CCITT 1D/Group 3/Group 4, LZW, Packbits and uncompressed supported).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffImageWriterLossy tiffImageWriterLossy0 = new TiffImageWriterLossy();
      tiffOutputSet0.addExifDirectory();
      try { 
        tiffImageWriterLossy0.validateDirectories(tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing root directory.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TiffImageWriterBase.imageDataPaddingLength(1082);
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, stack0, 2, 1082);
      stack0.spliterator();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      BufferedImage bufferedImage0 = new BufferedImage(645, 12, 2);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      stack0.stream();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>(108);
      // Undeclared exception!
      tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashtable0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = Calendar.WEEK_OF_YEAR;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, stack0, 0L, 3);
      BufferedImage bufferedImage0 = new BufferedImage(3, 6, 3);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ImageBuilder imageBuilder0 = new ImageBuilder(3, 3, true);
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      stack0.addAll((Collection<? extends TiffField>) tiffDirectory0.entries);
      Double double0 = new Double(3);
      hashMap1.put("COMPRESSION", double0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_UNKNOWN;
      Object object0 = new Object();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>(3);
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TiffImageWriterBase.imageDataPaddingLength(1090);
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, stack0, 2, 2);
      stack0.spliterator();
      BufferedImage bufferedImage0 = new BufferedImage(2, 6, 2);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Double double0 = new Double(128.0);
      hashMap1.put("COMPRESSION", (Object) null);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>(2);
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = JFormattedTextField.REVERT;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, stack0, 0L, 2);
      stack0.spliterator();
      BufferedImage bufferedImage0 = new BufferedImage(2, 6, 2);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Double double0 = new Double(0.0);
      hashMap0.put("COMPRESSION", tiffImageWriterLossless0);
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression parameter, must be numeric: org.apache.commons.imaging.formats.tiff.write.TiffImageWriterLossless@1
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffImageWriterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = Frame.MAXIMIZED_HORIZ;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, stack0, 2, 2);
      ByteOrder.nativeOrder();
      BufferedImage bufferedImage0 = new BufferedImage(2, 6, 2);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      stack0.trimToSize();
      Double double0 = new Double(2);
      Double.min(2, 2);
      bufferedImage0.flush();
      hashMap0.put("COMPRESSION", double0);
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = NumberFormat.FRACTION_FIELD;
      TiffImageWriterLossless tiffImageWriterLossless0 = new TiffImageWriterLossless((byte[]) null);
      Stack<TiffField> stack0 = new Stack<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(605, stack0, 605, 605);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii((String) null, 6, 605, tiffDirectoryType0);
      TiffDirectory tiffDirectory1 = new TiffDirectory(1, stack0, 1, 1);
      BufferedImage bufferedImage0 = new BufferedImage(1, 6, 1);
      OutputStream outputStream0 = null;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Double double0 = new Double(1);
      hashMap1.put("COMPRESSION", double0);
      // Undeclared exception!
      try { 
        tiffImageWriterLossless0.writeImage(bufferedImage0, (OutputStream) null, hashMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
}
