/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 16:41:02 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField((-81), (-721), fieldTypeRational0, 8864L, (-721), byteArray0, byteOrder0, 2144733989);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-721), tiffField0.getDirectoryType());
      assertEquals(2144733989, tiffField0.getSortHint());
      assertEquals(63, int0);
      assertEquals((-721), tiffField0.getOffset());
      assertEquals((-81), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3124), (-859), fieldTypeRational0, 0L, (-81), byteArray0, byteOrder0, (-1720));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals((-1720), tiffField0.getSortHint());
      assertEquals((-859), tiffField0.getDirectoryType());
      assertEquals((-81), tiffField0.getOffset());
      assertEquals((-3124), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0L, byteArray0, (ByteOrder) null, 89);
      int int0 = tiffField0.getTag();
      assertEquals(89, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-87), 50, fieldTypeRational0, 3L, (-2147048140), (byte[]) null, byteOrder0, (-30));
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals((-87), int0);
      assertEquals((-2147048140), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-39);
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte) (-10);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)20;
      byteArray0[7] = (byte)37;
      TiffField tiffField0 = new TiffField((-1019), 0, fieldTypeRational0.ASCII, 2085L, 1461L, byteArray0, byteOrder0, 933);
      String string0 = tiffField0.getStringValue();
      assertEquals(1461, tiffField0.getOffset());
      assertEquals((-1019), tiffField0.getTag());
      assertEquals(933, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)8, fieldTypeShort0, 1, 4L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2174), (-3124), fieldTypeRational0, 412L, 0L, byteArray0, byteOrder0, (-81));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2174), tiffField0.getTag());
      assertEquals((-3124), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-81), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-936), (-936), fieldTypeRational0, (-936), 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals((-936), tiffField0.getTag());
      assertEquals((-936), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-5), (byte)31, fieldTypeLong0, 484L, (-23840L), byteArray0, (ByteOrder) null, (byte) (-5));
      int int0 = tiffField0.getOffset();
      assertEquals((-23840), int0);
      assertEquals((-5), tiffField0.getTag());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      TiffField tiffField0 = new TiffField((-141), (-3215), fieldTypeShort0, 870L, 2147483647L, byteArray0, byteOrder0, (-141));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-141), tiffField0.getSortHint());
      assertEquals((-141), tiffField0.getTag());
      assertEquals(2048, int0);
      assertEquals((-3215), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-24);
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 506, fieldTypeLong0, 506, 1427L, byteArray0, byteOrder0, 2518);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1427, tiffField0.getOffset());
      assertEquals(506, tiffField0.getDirectoryType());
      assertEquals(2518, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)55, 684, fieldTypeLong0.DOUBLE, (byte)1, 755L, byteArray0, byteOrder0, 68);
      tiffField0.getIntValue();
      assertEquals(755, tiffField0.getOffset());
      assertEquals(55, tiffField0.getTag());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(684, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)41;
      TiffField tiffField0 = new TiffField(2146787543, (-583), fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, 2146928599);
      tiffField0.getIntValue();
      assertEquals((-583), tiffField0.getDirectoryType());
      assertEquals(2146787543, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2146928599, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-33);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-33), 132, fieldTypeFloat0, 1L, (byte)3, byteArray0, byteOrder0, (byte)63);
      tiffField0.getIntValue();
      assertEquals((-33), tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(132, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147300805, (String) null);
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(758, 98, fieldTypeDouble0, 98, (byte)10, byteArray0, byteOrder0, 758);
      tiffField0.getFieldTypeName();
      assertEquals(10, tiffField0.getOffset());
      assertEquals(98, tiffField0.getDirectoryType());
      assertEquals(758, tiffField0.getTag());
      assertEquals(758, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)50, "");
      TiffField tiffField0 = new TiffField((byte)36, (byte) (-55), fieldTypeDouble0, (byte)50, (byte)50, byteArray0, byteOrder0, (-3223));
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-3223), tiffField0.getSortHint());
      assertEquals((-55), tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3, 6, (FieldType) null, (-2246L), (-1939), byteArray0, byteOrder0, 2142074369);
      tiffField0.getFieldType();
      assertEquals(3, tiffField0.getTag());
      assertEquals((-1939), tiffField0.getOffset());
      assertEquals(2142074369, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "Ti@I");
      TiffField tiffField0 = new TiffField((-1465), 1, fieldTypeAscii0, 1352L, 44, byteArray0, byteOrder0, (-3841));
      tiffField0.getFieldType();
      assertEquals((-3841), tiffField0.getSortHint());
      assertEquals((-1465), tiffField0.getTag());
      assertEquals(44, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "{h.f%<W5CWxQ_");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1007, (-2147385377), fieldTypeLong0, 0L, (-2147483648L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(1007, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147385377), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-4452), (byte) (-1), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-4452), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)41;
      TiffField tiffField0 = new TiffField(2146787543, (-583), fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, 2146928599);
      tiffField0.getDoubleValue();
      assertEquals((-583), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2146787543, tiffField0.getTag());
      assertEquals(2146928599, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-33);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-33), 132, fieldTypeFloat0, 1L, (byte)3, byteArray0, byteOrder0, (byte)63);
      tiffField0.getDoubleValue();
      assertEquals(132, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals((-33), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50715, 0, fieldTypeRational0, 6518L, 400L, byteArray0, byteOrder0, 5);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(400, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(50715, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1904, 5070, (FieldType) null, 5070, (-151L), byteArray0, byteOrder0, (byte)120);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(5070, int0);
      assertEquals(1904, tiffField0.getTag());
      assertEquals((-151), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(836, 836, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, 3255);
      tiffField0.getCount();
      assertEquals(836, tiffField0.getTag());
      assertEquals(836, tiffField0.getDirectoryType());
      assertEquals(3255, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2147370746), 700, fieldTypeAscii0, 700, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147370746), tiffField0.getTag());
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3728), fieldTypeByte0, (-3728), (-3728), byteArray0, byteOrder0, 962);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3728), tiffField0.getOffset());
      assertEquals(962, tiffField0.getSortHint());
      assertEquals((-3728), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-470), (-470), fieldTypeByte0, 1696L, (byte)0, byteArray0, byteOrder0, 144);
      tiffField0.getBytesLength();
      assertEquals(144, tiffField0.getSortHint());
      assertEquals((-470), tiffField0.getDirectoryType());
      assertEquals((-470), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3728), fieldTypeByte0, (-3728), (-3728), byteArray0, byteOrder0, 962);
      tiffField0.getBytesLength();
      assertEquals((-3728), tiffField0.getDirectoryType());
      assertEquals(962, tiffField0.getSortHint());
      assertEquals((-3728), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeLong0, (-1), (-3098L), byteArray0, (ByteOrder) null, (-400));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-400), tiffField0.getSortHint());
      assertEquals((-3098), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-4452), (byte) (-1), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getByteArrayValue();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-4452), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeFloat0, 0L, 4L, byteArray0, byteOrder0, 33445);
      tiffField0.getByteArrayValue();
      assertEquals(33445, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2841, 2045222521, fieldTypeRational0.SSHORT, (byte)41, 913L, byteArray0, byteOrder0, (byte)41);
      MockFile mockFile0 = new MockFile("uNK5Ig`;[k", "~+p8kws<");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "~+p8kws<");
      assertEquals(61L, mockFile0.length());
      assertEquals(2841, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(2045222521, tiffField0.getDirectoryType());
      assertEquals(913, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1325, 1325, fieldTypeRational0, (-3124), 706L, byteArray0, byteOrder0, (-2174));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("3e,E=m&T3D");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[230];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1631), 65535, fieldTypeDouble0.FLOAT, (-1631), 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1159), "s(4+");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1745), (-1745), fieldTypeByte0, (-1159), (-1159), byteArray0, byteOrder0, (-467));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2097, 21, fieldTypeDouble0, (-986L), (-986L), byteArray0, (ByteOrder) null, (-753));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[188];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1931, 1931, fieldTypeDouble0, (-1448L), 5L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3728), fieldTypeByte0, (-3728), (-3728), byteArray0, byteOrder0, 962);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(6, 1827, fieldTypeByte0, (-2147483648L), 2146953797, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-2147370746), fieldTypeAscii0, (-2147370746), (-2147370746), byteArray0, byteOrder0, (-2147370746));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-244), 0, (FieldType) null, 0, (-244), byteArray0, byteOrder0, 271);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[146];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(71, "Aves\"xC;GmNd^A65");
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeLong0, (-545L), (-545L), byteArray0, byteOrder0, (-2539));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3319, (byte) (-106), fieldTypeRational0.SSHORT, (-2147483648L), (-227L), byteArray0, byteOrder0, (byte) (-31));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[146];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(71, "Aves\"xC;GmNd^A65");
      TiffField tiffField0 = new TiffField(71, 35, fieldTypeLong0, (byte)50, (-545L), byteArray0, byteOrder0, 71);
      tiffField0.getByteOrder();
      assertEquals(71, tiffField0.getSortHint());
      assertEquals((-545), tiffField0.getOffset());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-4452), (byte) (-1), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-4452), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3124), (-859), fieldTypeRational0, 0L, (-81), byteArray0, byteOrder0, (-1720));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-81), tiffField0.getOffset());
      assertEquals((-1720), tiffField0.getSortHint());
      assertEquals((-859), int0);
      assertEquals((-3124), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5570), 2144733989, fieldTypeAscii0, (-496L), (-496L), byteArray0, byteOrder0, 2144733989);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3215), (byte)8, fieldTypeShort0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      tiffField0.getValue();
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-3215), tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)60);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 50725, fieldTypeLong0, 1827L, (byte) (-24), byteArray0, byteOrder0, (byte)0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-24), tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50725, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(941, (-2147048140), fieldTypeRational0, 1108L, 941, byteArray0, byteOrder0, (-4540));
      int int0 = tiffField0.getTag();
      assertEquals(941, int0);
      assertEquals((-2147048140), tiffField0.getDirectoryType());
      assertEquals(941, tiffField0.getOffset());
      assertEquals((-4540), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3265), 0, fieldTypeByte0, 0L, 1114L, byteArray0, byteOrder0, (byte)62);
      tiffField0.getBytesLength();
      assertEquals(1114, tiffField0.getOffset());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3265), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2997, 2997, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("2997 (0xbb5: Unknown Tag): ", string0);
      assertEquals(2997, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-141), (-3215), fieldTypeShort0, 870L, 2147483647L, byteArray0, byteOrder0, (-141));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(3557, (byte)0, fieldTypeByte0, 1589L, (byte)41, byteArray0, byteOrder0, (byte)41);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(34, 2894, fieldTypeLong0.ASCII, 255L, 2894, byteArray0, byteOrder0, 2894);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7f563760 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2150, 1477, fieldTypeLong0, 1477, (-2826L), byteArray0, byteOrder0, (byte)41);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1477, tiffField0.getDirectoryType());
      assertEquals(2150, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
      assertEquals((-2826), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 3, fieldTypeRational0.DOUBLE, 1L, 1696L, byteArray0, byteOrder0, 1468);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(1696, tiffField0.getOffset());
      assertEquals(1468, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147478092, 9, fieldTypeLong0.DOUBLE, (byte)55, (-247L), byteArray0, byteOrder0, 2147313388);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147313388, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(2147478092, tiffField0.getTag());
      assertEquals((-247), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 6, fieldTypeLong0.FLOAT, 2360L, (-1064L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1064), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1477, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrRational");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1887, (-1752), fieldTypeFloat0, 11748L, 1L, byteArray0, byteOrder0, (-1752));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1752), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1887, tiffField0.getTag());
      assertEquals((-1752), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[146];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(71, "Aves\"xC;GmNd^A65");
      TiffField tiffField0 = new TiffField(71, 35, fieldTypeLong0, (byte)50, (-545L), byteArray0, byteOrder0, 71);
      tiffField0.getDoubleArrayValue();
      assertEquals((-545), tiffField0.getOffset());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(71, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(50, 2307, fieldTypeByte0, 2307, 2307, byteArray0, byteOrder0, 2307);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@58d57f2c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-213), (byte) (-106), fieldTypeRational0, (byte)41, 1, byteArray0, byteOrder0, 1900);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-106), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1900, tiffField0.getSortHint());
      assertEquals((-213), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2146787543, (-583), fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, 2146928599);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(2146787543, tiffField0.getTag());
      assertEquals((-583), tiffField0.getDirectoryType());
      assertEquals(2146928599, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-63), (byte) (-63), fieldTypeShort0, (byte)27, 1787L, byteArray0, byteOrder0, (byte)27);
      tiffField0.getDoubleArrayValue();
      assertEquals(27L, tiffField0.getCount());
      assertEquals((-63), tiffField0.getTag());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(1787, tiffField0.getOffset());
      assertEquals((-63), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(993, 0, fieldTypeLong0, 0, (-13884L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(993, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-13884), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, ", fieldType: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte) (-117), fieldTypeDouble0, (byte)55, 0L, byteArray0, byteOrder0, (-298));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2764554b for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-81), (-721), fieldTypeRational0, 8864L, (-721), byteArray0, byteOrder0, 2144733989);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3124), (-859), fieldTypeRational0, 0L, (-81), byteArray0, byteOrder0, (-1720));
      tiffField0.getIntArrayValue();
      assertEquals((-859), tiffField0.getDirectoryType());
      assertEquals((-81), tiffField0.getOffset());
      assertEquals((-1720), tiffField0.getSortHint());
      assertEquals((-3124), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 1099, fieldTypeRational0, 1L, 1875L, byteArray0, byteOrder0, (byte) (-89));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (byte)41, byteArray0, byteOrder0, (byte)41);
      String string0 = tiffField0.getStringValue();
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[113];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)25, "'");
      TiffField tiffField0 = new TiffField((-2147370710), (byte)1, fieldTypeFloat0.SHORT, (-2147370710), 1077L, byteArray0, byteOrder0, 71);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@6bf283e4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3, 6, (FieldType) null, (-2246L), (-1939), byteArray0, byteOrder0, 2142074369);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x3)", string0);
      assertEquals(2142074369, tiffField0.getSortHint());
      assertEquals((-1939), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-2147370746), fieldTypeAscii0, (-2147370746), (-2147370746), byteArray0, byteOrder0, (-2147370746));
      String string0 = tiffField0.getTagName();
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-2147370746), tiffField0.getOffset());
      assertEquals((-2147370746), tiffField0.getDirectoryType());
      assertEquals((-2147370746), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1455), 50966, fieldTypeRational0, 2147483647L, 50966, byteArray0, byteOrder0, (-1455));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1590), 995, fieldTypeFloat0, 995, 0L, byteArray0, byteOrder0, (-1590));
      try { 
        fieldTypeFloat0.SSHORT.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: -1590 (0xfffff9ca: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (995 Float) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[63];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2005), 42240, fieldTypeDouble0.SBYTE, 1205L, 63L, byteArray0, byteOrder0, 925);
      String string0 = tiffField0.toString();
      assertEquals(925, tiffField0.getSortHint());
      assertEquals("-2005 (0xfffff82b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (63) (1205 SByte)", string0);
      assertEquals(42240, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2751, fieldTypeFloat0, 2067L, 936L, byteArray0, byteOrder0, (byte) (-79));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(936, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals(2751, tiffField0.getDirectoryType());
      assertEquals(2067L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65528, 65528, fieldTypeDouble0, 65528, 65528, byteArray0, byteOrder0, 65528);
      String string0 = tiffField0.toString();
      assertEquals(65528, tiffField0.getDirectoryType());
      assertEquals("65528 (0xfff8: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (65528 Double)", string0);
      assertEquals(65528, tiffField0.getSortHint());
      assertEquals(65528, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((-212), (byte)41, fieldTypeByte0.DOUBLE, 707L, (byte)41, byteArray0, byteOrder0, 15);
      String string0 = tiffField0.toString();
      assertEquals(41, tiffField0.getOffset());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals("-212 (0xffffff2c: Unknown Tag): 0.0, 0.0 (707 Double)", string0);
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(37393, 65535, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).FLOAT).SLONG, 65535, (-1693L), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1693), tiffField0.getOffset());
      assertEquals("37393 (0x9211: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (65535 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(50, 2307, fieldTypeByte0, 2307, 2307, byteArray0, byteOrder0, 2307);
      String string0 = tiffField0.toString();
      assertEquals(2307, tiffField0.getDirectoryType());
      assertEquals("50 (0x32: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (2307 Undefined)", string0);
      assertEquals(2307, tiffField0.getSortHint());
      assertEquals(2307, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[113];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)25, "'");
      TiffField tiffField0 = new TiffField((-2147370710), (byte)1, fieldTypeFloat0.SHORT, (-2147370710), 1077L, byteArray0, byteOrder0, 71);
      assertEquals(225876, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2147370710), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1077, tiffField0.getOffset());
      assertEquals((-2147370710L), tiffField0.getCount());
      assertEquals(71, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)60);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50, 3469, fieldTypeAscii0, 3469, (byte)60, byteArray0, byteOrder0, (byte)60);
      tiffField0.toString();
      assertEquals(60, tiffField0.getOffset());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(3469, tiffField0.getDirectoryType());
      assertEquals(3469, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(3469L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(34, 2894, fieldTypeLong0.ASCII, 255L, 2894, byteArray0, byteOrder0, 2894);
      tiffField0.toString();
      assertEquals(2894, tiffField0.getSortHint());
      assertEquals(2894, tiffField0.getOffset());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2894, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-51);
      byteArray0[6] = (byte) (-64);
      byteArray0[7] = (byte)14;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)10, (byte) (-51), fieldTypeAscii0, (byte)10, (-4974L), byteArray0, byteOrder0, 22);
      tiffField0.toString();
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(10L, tiffField0.getCount());
      assertEquals((-4974), tiffField0.getOffset());
      assertEquals((-51), tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2997, 2997, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2997, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2997, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2997, 2997, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65535, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(2997, tiffField0.getTag());
      assertEquals(2997, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(423, "MD ColorTable");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(423, 0, fieldTypeRational0, 295L, 0L, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(423, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)41, 334, fieldTypeRational0, (byte)50, (byte)41, byteArray0, byteOrder0, (byte)41);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(930, (byte)50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(334, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(41, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2681, 2681, fieldTypeAscii0, (-4926L), (-631L), byteArray0, (ByteOrder) null, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2681, tiffField0.getTag());
      assertEquals((-631), tiffField0.getOffset());
      assertEquals(2681, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3215), (byte)8, fieldTypeShort0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-3215), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)36, 1678, fieldTypeRational0, (byte) (-55), (byte)50, byteArray0, byteOrder0, (byte)36);
      tiffField0.getFieldTypeName();
      assertEquals(1678, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147434354, 2147154026, fieldTypeAscii0.FLOAT, 2147434354, 2147154026, byteArray0, byteOrder0, 4541);
      int int0 = tiffField0.getOffset();
      assertEquals(2147154026, int0);
      assertEquals(4541, tiffField0.getSortHint());
      assertEquals(2147154026, tiffField0.getDirectoryType());
      assertEquals(2147434354, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3215), (byte)8, fieldTypeShort0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getSortHint();
      assertEquals((-3215), tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, int0);
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-63), fieldTypeShort0, (byte)27, (byte)27, byteArray0, byteOrder0, 1155);
      String string0 = tiffField0.toString();
      assertEquals(1155, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
      assertEquals((-63), tiffField0.getDirectoryType());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (27 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[146];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(71, "Aves\"xC;GmNd^A65");
      TiffField tiffField0 = new TiffField(71, 35, fieldTypeLong0, (byte)50, (-545L), byteArray0, byteOrder0, 71);
      tiffField0.dump();
      assertEquals(71, tiffField0.getSortHint());
      assertEquals((-545), tiffField0.getOffset());
      assertEquals(71, tiffField0.getTag());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147300805, (-3215), fieldTypeShort0, (byte)8, 3, byteArray0, byteOrder0, 2147300805);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(16, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(2147300805, tiffField0.getSortHint());
      assertEquals(2147300805, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(8L, tiffField0.getCount());
      assertEquals((-3215), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2112, (-2147370746), fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-2147370746));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2147370746), 492);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2112, tiffField0.getTag());
      assertEquals((-2147370746), tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-2147370746), tiffField0.getDirectoryType());
  }
}
