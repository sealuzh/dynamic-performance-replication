/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 16:41:51 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.time.chrono.ChronoLocalDate;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 tos=\"80%,*\">\n<FRAME NAME=\"CostantPool\" 'RC=\"");
      String[] stringArray0 = new String[5];
      stringArray0[1] = ".";
      stringArray0[2] = "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\n&lt;FRAMESET BORDER=1 tos=\"80%,*\"&gt;\n&lt;FRAME NAME=\"CostantPool\" 'RC=\"";
      ClassPath classPath0 = new ClassPath((ClassPath) null, ".");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      JavaClass javaClass0 = classPathRepository0.loadClass("java.lang.reflect.AnnotatedType");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, stringArray0[0]);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class<Object> class1 = Object.class;
      JavaClass javaClass1 = syntheticRepository0.loadClass(class1);
      JavaClass javaClass2 = javaClass1.copy();
      javaClass2.setFileName("");
      String string0 = "";
      syntheticRepository0.storeClass(javaClass0);
      syntheticRepository0.clear();
      syntheticRepository0.removeClass(javaClass1);
      javaClass1.isEnum(true);
      Class2HTML class2HTML0 = new Class2HTML(javaClass2, "");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass((-1270));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: -1270. Constant pool size is: 78
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "H\")";
      stringArray0[1] = ",$";
      stringArray0[2] = "-zijp";
      stringArray0[3] = "lrem";
      stringArray0[4] = "_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"";
      stringArray0[5] = "";
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class2HTML.referenceType("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<A HREF=\"</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\".html\" TARGET=_top><.TITLE><.HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"</A>";
      Class2HTML.referenceType("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      javaClass0.setClassName("The list of prefixes must not be null");
      javaClass0.getBytes();
      syntheticRepository0.clear();
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "'Py`@HT");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Pattern.quote("hTkcgo@6d jXR^>^KlW");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(99);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 99. Constant pool size is: 78
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      syntheticRepository0.loadClass(class0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "java.time.chrono.Era";
      stringArray0[1] = "-d";
      stringArray0[2] = ".";
      stringArray0[3] = "Q;dT";
      stringArray0[4] = "-d";
      stringArray0[5] = "short";
      stringArray0[6] = "getfield";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/.");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = ".";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      syntheticRepository0.loadClass(class0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "-zip";
      stringArray0[2] = "-zip";
      stringArray0[3] = "-zip";
      stringArray0[4] = "-d";
      stringArray0[5] = "java.time.chrono.Era";
      stringArray0[6] = "-d";
      stringArray0[7] = "-zip";
      stringArray0[8] = ".";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // -zip (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "./";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-d");
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 tows=\"80%,*\">\n<FRAME NAME=\"CostantPool\" 'RC=\"");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/&lt;/TITLE&gt;&lt;");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      classLoaderRepository0.getClassPath();
      JavaClass javaClass0 = classLoaderRepository0.loadClass("java.time.temporal.TemporalUnit");
      javaClass0.dump("java.time.temporal.TemporalUnit");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "-PX@zOQzA1,yX~f4i,");
      Class2HTML.referenceClass((byte)3);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-PX@zOQzA1,yX~f4i,");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "java.time.temporal.TemporalUnit");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-PX@zOQzA1,yX~f4i,";
      stringArray0[1] = "java.time.temporal.TemporalUnit";
      Class2HTML.main(stringArray0);
      Class2HTML.main(stringArray0);
  }
}
