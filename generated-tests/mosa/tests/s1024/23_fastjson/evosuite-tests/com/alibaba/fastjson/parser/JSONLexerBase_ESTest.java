/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 15:17:43 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.JSONScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.CharArrayReader;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.math.BigDecimal;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONLexerBase_ESTest extends JSONLexerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[0];
      PipedWriter pipedWriter0 = new PipedWriter();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 107);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", (-2714));
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONScanner.checkDate('1', '1', 'k', '1', '1', 'k', 84, 84);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("aUqn}%tJPmnnf_g2kd");
      jSONReaderScanner0.nextToken(84);
      assertEquals('U', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9+D");
      JSONScanner jSONScanner0 = new JSONScanner("9+D", 0);
      assertEquals(0, jSONScanner0.matchStat);
      
      jSONScanner0.scanDecimal('3');
      SymbolTable symbolTable0 = new SymbolTable(114);
      jSONReaderScanner0.setTimeZone((TimeZone) null);
      assertEquals(0, jSONReaderScanner0.matchStat());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("rvGk", 31);
      jSONScanner0.isRef();
      JSONScanner jSONScanner1 = new JSONScanner("ssss");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ssss", 0);
      jSONScanner0.next();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", (-2714));
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.getCurrent();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("", (-1));
      char[] charArray0 = new char[4];
      charArray0[0] = '$';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("");
      jSONReaderScanner1.charAt(0);
      jSONReaderScanner0.getCurrent();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("undefined");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("undefined", (-2707));
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("eE&2*mC},", 31);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.info();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9,OV~8)J.*", 356);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      Locale locale1 = Locale.PRC;
      locale1.getScript();
      jSONReaderScanner0.nextToken();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WriteBigDecimalAsPlain");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteBigDecimalAsPlain");
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.charAt(91);
      jSONReaderScanner0.getCurrent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 0);
      jSONReaderScanner0.longValue();
      jSONScanner0.charAt(6);
      jSONScanner0.scanUUID('\u001A');
      jSONScanner0.scanStringArray((Collection<String>) null, 'a');
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal state. ");
      jSONReaderScanner0.scanDouble('<');
      jSONReaderScanner0.scanLong('o');
      char char0 = File.pathSeparatorChar;
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 58;
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 58);
      char[] charArray0 = new char[0];
      jSONScanner0.np = 58;
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue(false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 45);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.charAt(45);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONScanner jSONScanner0 = new JSONScanner("^>,P#W[^D@eIU6)");
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - ^, info : pos 0, json : ^>,P#W[^D@eIU6)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("6*");
      char[] charArray0 = new char[6];
      charArray0[0] = '|';
      charArray0[1] = 'f';
      charArray0[2] = 'N';
      charArray0[3] = 's';
      charArray0[4] = 'p';
      charArray0[5] = 'O';
      jSONScanner0.scanFieldFloatArray2(charArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 59);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      PipedWriter pipedWriter0 = new PipedWriter();
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      Feature feature0 = Feature.AllowUnQuotedFieldNames;
      jSONReaderScanner0.config(feature0, false);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.copyTo(59, 1584, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 0);
      double double0 = Locale.LanguageRange.MAX_WEIGHT;
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0);
      jSONScanner0.isBlankInput();
      jSONScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONScanner0.stringVal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 107);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.charAt(2991);
      jSONReaderScanner0.matchField(charArray0);
      jSONReaderScanner0.getCurrent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9+D");
      jSONReaderScanner0.scanDouble('<');
      jSONReaderScanner0.scanLong('o');
      char char0 = File.pathSeparatorChar;
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = 'D';
      charArray0[4] = 'D';
      charArray0[5] = '5';
      charArray0[6] = '5';
      charArray0[4] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 591);
      jSONReaderScanner0.scanDouble('5');
      jSONReaderScanner0.scanLong('5');
      char char0 = File.pathSeparatorChar;
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      char char0 = 'F';
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      charArray0[4] = 'F';
      charArray0[5] = 'F';
      charArray0[6] = 'F';
      charArray0[7] = 'F';
      int int0 = 117;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 117, 0);
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("O%YNvHP=pj?iZ");
      JSONScanner jSONScanner0 = new JSONScanner("E%\"Mzavtu^P");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      jSONScanner0.scanNumber();
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = '~';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 10);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteNullNumberAsZero");
      jSONReaderScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 34);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illega str", 34);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.info();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("d ifo: ");
      jSONScanner0.scanDecimal('8');
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Set");
      JSONScanner jSONScanner0 = new JSONScanner("&wkCm*a?O");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      jSONScanner0.scanNumber();
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("tmtmmms");
      jSONReaderScanner0.scanBoolean('B');
      jSONReaderScanner0.scanFloat('B');
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanDouble('D');
      Feature feature0 = Feature.UseObjectArray;
      jSONReaderScanner0.config(feature0, false);
      jSONReaderScanner0.scanFloat('D');
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(", info : ");
      jSONScanner0.scanDecimal('5');
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("v-#.@LZ*n`sUw.4");
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("com.alibaba.fastjson.JSONArray", 1790);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.JSONArray", 1790);
      jSONReaderScanner0.scanBoolean('B');
      jSONScanner0.scanInt('\u0017');
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", (-2030));
      jSONReaderScanner0.scanInt('*');
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.nio.file.Path");
      char[] charArray0 = new char[4];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '';
      charArray0[3] = 'L';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.matchField2(charArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ob~].M&IO");
      jSONReaderScanner0.isEnabled(47, 59);
      JSONScanner jSONScanner0 = new JSONScanner(",$5A34HNA]");
      jSONScanner0.scanFieldStringArray(charArray0, 0, (SymbolTable) null);
      JSONScanner.charArrayCompare("ZS2", 550, charArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 34);
      jSONScanner0.info();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illega str", 34);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONScanner0.np = 34;
      jSONReaderScanner0.info();
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue(true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      charArray0[1] = '~';
      char[] charArray1 = new char[1];
      charArray1[0] = '-';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 144, 2915);
      jSONReaderScanner0.nextToken((-35));
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray1, 144);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 34);
      jSONScanner0.info();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illega str", 34);
      char[] charArray0 = new char[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONScanner0.np = 34;
      jSONReaderScanner0.info();
      jSONReaderScanner0.getLocale();
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue(false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'O';
      JSONScanner jSONScanner0 = new JSONScanner("rvGk");
      jSONScanner0.matchField2(charArray0);
      jSONScanner0.scanFieldFloatArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      char[] charArray0 = new char[9];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 45);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONReaderScanner0.scanUUID('&');
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      jSONReaderScanner0.scanFieldInt(charArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'B';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("tmtmmms", 91);
      jSONReaderScanner0.scanBoolean('\u0000');
      JSONScanner jSONScanner0 = new JSONScanner("tmtmmms");
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.scanFieldBoolean(charArray0);
      jSONScanner0.scanType("tmtmmms");
      jSONScanner0.scanFieldBoolean(charArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("L");
      jSONReaderScanner0.getTimeZone();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Set", 123);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.subString(123, 123);
      char[] charArray0 = new char[1];
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WriteBigDecimalAsPlain");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteBigDecimalAsPlain");
      jSONReaderScanner0.scanFloat('7');
      char[] charArray0 = new char[7];
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = 'b';
      JSONScanner jSONScanner0 = new JSONScanner("u555");
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.nextToken(13);
      jSONScanner0.stringVal();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 34);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illega str", 34);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("illega str", 1328);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      JSONScanner jSONScanner1 = new JSONScanner("illega str");
      jSONReaderScanner1.scanFieldFloatArray(charArray0);
      jSONReaderScanner1.scanString('S');
      jSONReaderScanner1.nextToken(3);
      JSONLexerBase.readString(charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 58);
      jSONScanner0.scanString('(');
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 63);
      int int0 = Calendar.HOUR_OF_DAY;
      jSONReaderScanner0.skipWhitespace();
      Locale locale0 = Locale.JAPAN;
      jSONScanner0.setLocale(locale0);
      jSONScanner0.matchField(charArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'N';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u:yjvRo=(#:>KA@K");
      jSONReaderScanner0.scanInt('X');
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("F", 10);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanNullOrNew();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null or new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" crX2jnAHKId");
      JSONScanner jSONScanner0 = new JSONScanner(" crX2jnAHKId");
      int int0 = 3061;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon(3061);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - c, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2m_");
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.floatValue();
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner((String) null, 722);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONScanner jSONScanner0 = new JSONScanner("MapSortField");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("MapSortField", (-794));
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 99999);
      jSONReaderScanner0.token = 99999;
      jSONReaderScanner0.scanBoolean('g');
      jSONReaderScanner0.info();
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("TreeSet", 2479);
      jSONScanner0.isBlankInput();
      jSONScanner0.stringVal();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      JSONReaderScanner jSONReaderScanner0 = null;
      try {
        jSONReaderScanner0 = new JSONReaderScanner(mockFileReader0, (-304));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(" ifo: ");
      jSONScanner0.scanDecimal('8');
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      SymbolTable symbolTable0 = new SymbolTable(97);
      jSONScanner0.scanEnum(class0, symbolTable0, 'I');
      jSONScanner0.scanString('2');
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".-ct//V+~", 32);
      JSONScanner jSONScanner0 = new JSONScanner(".-ct//V+~");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(".-ct//V+~", 32);
      jSONScanner0.next();
      jSONReaderScanner0.scanLong('+');
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TMTMMMS");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("+/", 0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("l}T0bb4XIA6");
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      jSONReaderScanner1.scanFieldStringArray(charArray0, class0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("v-#.@LZ*n`sUw.4");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONScanner jSONScanner0 = new JSONScanner("SupportArrayToBean", 1790);
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0);
      jSONScanner0.isBlankInput();
      jSONScanner1.scanNumber();
      jSONScanner0.stringVal();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1790);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      jSONReaderScanner0.scanLong('M');
      JSONScanner jSONScanner2 = new JSONScanner("");
      jSONScanner2.info();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \u0000
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("type not match. ");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      char[] charArray0 = new char[5];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("%<O", (-511));
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanDouble('D');
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(", info : ", (-2797));
      jSONScanner0.scanDecimal('8');
      SymbolTable symbolTable0 = new SymbolTable(97);
      Feature feature0 = Feature.CustomMapDeserializer;
      jSONScanner0.isEnabled(feature0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 59);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("tmtmmms", 59);
      jSONReaderScanner1.scanBoolean('L');
      JSONScanner jSONScanner0 = new JSONScanner("DisableCircularReferenceDetect");
      JSONScanner jSONScanner1 = new JSONScanner("is");
      jSONScanner1.scanFieldDouble(charArray0);
      jSONScanner0.scanFieldBoolean(charArray0);
      jSONScanner1.scanType("tmtmmms");
      jSONScanner0.scanFieldBoolean(charArray0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '@';
      charArray0[1] = '~';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '@');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("BrowserCompatible", 2);
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner1.scanInt('~');
      jSONReaderScanner1.skipWhitespace();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("", 99999);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("rvGk", 31);
      jSONScanner0.isRef();
      jSONScanner0.scanDecimal('g');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZbGS'FK@l84m", (-1));
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("rvGk");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONScanner0.token();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("f0ia+=`", 2901);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.nextToken((-1));
      jSONReaderScanner0.getFeatures();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 10);
      jSONReaderScanner0.skipWhitespace();
      JSONLexerBase.readString(charArray0, 0);
      jSONReaderScanner0.next();
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("<'WP`}y_^KF@", 75);
      jSONReaderScanner0.nextIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SymbolTable symbolTable0 = new SymbolTable(1265);
      Feature feature0 = Feature.InitStringFieldAsEmpty;
      jSONReaderScanner0.config(feature0, true);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, '1');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteBigDecimalAsPlain");
      jSONReaderScanner0.scanFloat('7');
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, '\\', (-2287));
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 1234);
      jSONReaderScanner2.nextToken((-1));
      char[] charArray1 = new char[7];
      charArray1[0] = '7';
      charArray1[1] = '7';
      jSONReaderScanner2.scanFieldIntArray(charArray1);
      jSONReaderScanner1.scanNumber();
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray1, (-3059));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[2];
      charArray0[0] = '~';
      charArray0[1] = '-';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65, 144);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 65);
      jSONReaderScanner1.scanString('-');
      jSONReaderScanner1.matchField(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken(144);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("S'a;<flx");
      jSONScanner0.nextToken(37);
      jSONScanner0.stringVal();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("S");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = 'B';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 'B', 91);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteNonStringKeyAsString", (-511));
      MockDate mockDate0 = new MockDate((-511), 0, (-511), 0, (-511), (-511));
      jSONReaderScanner0.sbuf = charArray0;
      jSONReaderScanner0.scanInt('}');
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader(", pos ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 69);
      jSONReaderScanner0.scanDouble(' ');
      jSONReaderScanner0.scanLong('3');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      jSONReaderScanner0.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - \u0000, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.nio.file.Path", (-2104));
      jSONReaderScanner0.scanDouble('u');
      jSONReaderScanner0.scanLong('-');
      char char1 = Locale.PRIVATE_USE_EXTENSION;
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("rvGk", 1790);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      char[] charArray0 = new char[5];
      charArray0[0] = '*';
      charArray0[1] = '*';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TMTMMMS", 0);
      jSONReaderScanner0.charAt(103);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.nextIdent();
      MockFile mockFile0 = new MockFile("`mk|21OZ$_sj");
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TMTMMMS");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = '\\';
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 1000);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str.lit
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      String string0 = File.separator;
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldUUID(charArray0);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 1000);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("not support type : ", 1433);
      jSONReaderScanner0.scanInt('u');
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.skipWhitespace();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("rvGk", 1790);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", (-816));
      MockDate mockDate0 = new MockDate(0, 57, 0, 42, 48, 42);
      jSONReaderScanner0.scanInt('3');
      char[] charArray0 = new char[7];
      charArray0[0] = '3';
      charArray0[1] = '}';
      charArray0[2] = '3';
      charArray0[3] = '}';
      charArray0[4] = '}';
      charArray0[5] = '}';
      charArray0[6] = '3';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader(", pos ");
      JSONScanner jSONScanner0 = new JSONScanner("QQu", 41);
      jSONScanner0.isRef();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", pos ");
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 10);
      jSONReaderScanner0.setToken(26085);
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(10, charArray0, 10, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9+D");
      JSONScanner jSONScanner0 = new JSONScanner("9+D", 0);
      jSONScanner0.scanDecimal('3');
      SymbolTable symbolTable0 = new SymbolTable(114);
      jSONScanner0.stringVal();
      jSONScanner0.putChar('3');
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("v-#.@LZ*n`sUw.4");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      jSONReaderScanner0.scanLong('z');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      jSONReaderScanner0.scanFieldInt(charArray0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9+D");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      jSONReaderScanner0.scanInt('g');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("9+D", (-3857));
      char[] charArray0 = new char[0];
      jSONReaderScanner0.intValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 0);
      JSONScanner jSONScanner0 = new JSONScanner("O7>y7:+zM=1ZAq8\"]]");
      char[] charArray0 = new char[9];
      charArray0[2] = 'T';
      charArray0[4] = 'T';
      charArray0[7] = '\u0000';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("O7>y7:+zM=1ZAq8\"]]", '\u0000');
      jSONReaderScanner1.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("O7>y7:+zM=1ZAq8\"]]");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner1.nextToken();
      jSONReaderScanner1.scanInt('T');
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[6] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65, (-1160));
      jSONReaderScanner0.scanFieldUUID(charArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      jSONReaderScanner0.getFeatures();
      jSONReaderScanner0.scanInt('5');
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.info();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '%';
      charArray0[2] = '|';
      charArray0[3] = 'D';
      charArray0[4] = 'k';
      charArray0[5] = 'z';
      charArray0[6] = 'o';
      charArray0[7] = 'C';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1825);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      int[] intArray0 = JSONLexerBase.digits;
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanDouble('%');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1825, 286);
      jSONReaderScanner1.scanLong('-');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner0.getFeatures();
      jSONReaderScanner0.close();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONScanner jSONScanner0 = new JSONScanner("crx2jnahkid");
      jSONScanner0.resetStringPosition();
      jSONScanner0.next();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("EOF error");
      jSONReaderScanner0.scanDouble('4');
      jSONReaderScanner0.scanNumber();
      JSONLexerBase.isWhitespace('4');
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 58);
      char[] charArray0 = new char[0];
      jSONScanner0.np = 58;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("`", 58);
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("n;jX.ivGR8gPwj3W", 58);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 191, 91);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 1790);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str.lit
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, '\\');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[2];
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.getFeatures();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SymbolTable symbolTable0 = new SymbolTable(2705);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+/", (-311));
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1790);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("+/");
      jSONReaderScanner2.scanFieldDate(charArray0);
      char[] charArray1 = new char[2];
      jSONReaderScanner2.scanFieldDecimal(charArray1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fn");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0, 69);
      char[] charArray0 = new char[1];
      jSONReaderScanner0.matchStat = (int) 'E';
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanBoolean('&');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0, 69);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextTokenWithColon(69);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - \u0000, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      char[] charArray0 = new char[0];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TreeSet", 3);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("TreeSet");
      jSONReaderScanner1.longValue();
      jSONReaderScanner0.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("TreeSet");
      // Undeclared exception!
      try { 
        jSONReaderScanner2.scanFieldDecimal((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 34);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("(n&8a0l7Z[", 34);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("u555");
      jSONScanner1.nextToken(93);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 34);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      char[] charArray0 = new char[9];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("NaN", 83);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 83, (-4036));
      jSONReaderScanner0.scanLong('h');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner1.scanNumber();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'D';
      charArray0[3] = '/';
      charArray0[4] = 'D';
      charArray0[5] = 'D';
      charArray0[6] = '/';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3096, 191);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.isBlankInput();
      JSONLexerBase.readString(charArray0, 5);
      jSONReaderScanner0.pos();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1790, 1790);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "o";
      JSONScanner jSONScanner0 = new JSONScanner("JBEM~K7FBw'!s<`YE,");
      BigDecimal bigDecimal0 = new BigDecimal((int) '!');
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = '4';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o");
      int int0 = 10;
      jSONReaderScanner0.nextToken(10);
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 45;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("O%YNvHP=pj?iZ");
      char char0 = '5';
      jSONReaderScanner0.scanFloat('5');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("O_j", 45);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextIdent();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("O%YNvHP=pj?iZ", 45);
      jSONReaderScanner2.charAt(45);
      jSONReaderScanner1.nextToken();
      jSONReaderScanner1.nextIdent();
      MockFile mockFile0 = new MockFile("O%YNvHP=pj?iZ");
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = 'B';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 191, 91);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 91);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str.lit
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[1];
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.getFeatures();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("Unknown");
      jSONReaderScanner0.nextIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("false", (-97531599));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illega str", 34);
      jSONScanner0.info();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illega str", 34);
      char[] charArray0 = new char[0];
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 34);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      JSONScanner jSONScanner1 = new JSONScanner("[KGv0", 15);
      jSONScanner0.stringVal();
      jSONScanner0.isEOF();
      HashSet<String> hashSet0 = new HashSet<String>();
      JSONScanner jSONScanner2 = new JSONScanner("[KGv0", '9');
      jSONScanner2.matchField(charArray0);
      SymbolTable symbolTable0 = new SymbolTable(78);
      jSONReaderScanner1.scanSymbolWithSeperator(symbolTable0, '9');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("ille@a st2");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ille@a st2", 34);
      char[] charArray0 = new char[0];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(" ifo: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ifo: ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" ifo: ", 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(" ifo: ");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      SymbolTable symbolTable0 = new SymbolTable(8192);
      Feature feature0 = Feature.InternFieldNames;
      jSONReaderScanner0.config(feature0, false);
      jSONReaderScanner1.scanSymbolWithSeperator(symbolTable0, 'c');
      jSONReaderScanner0.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+A\"2&~3{L", 252);
      jSONReaderScanner0.scanType("+A\"2&~3{L");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.CANADA;
      locale0.stripExtensions();
      locale0.getScript();
      jSONReaderScanner0.charAt(36);
      JSONScanner jSONScanner0 = new JSONScanner("", (-1619450339));
      JSONScanner jSONScanner1 = new JSONScanner("tmtmmms");
      jSONScanner1.scanInt('a');
      jSONReaderScanner0.scanString();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Set", 123);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.subString(123, 123);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDecimal(charArray0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+/", 356);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = " crX2jnAHKId";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" crX2jnAHKId");
      jSONReaderScanner0.scanFloat('7');
      JSONScanner jSONScanner0 = new JSONScanner(" crX2jnAHKId");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(" crX2jnAHKId", 79);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      jSONReaderScanner1.scanInt('N');
      jSONReaderScanner1.skipWhitespace();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("BQF,cS^", (-1));
      jSONReaderScanner0.intValue();
      jSONReaderScanner1.scanDecimal('7');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TMTMMMS");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("+/", 0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      jSONReaderScanner1.skipComment();
      jSONReaderScanner1.bytesValue();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("sttmtmm3s", (-199091453));
      jSONReaderScanner0.scanBoolean('2');
      char[] charArray0 = new char[8];
      charArray0[0] = '2';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '2';
      charArray0[5] = '2';
      charArray0[6] = '2';
      charArray0[7] = '2';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1016, 92);
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(2624);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.JAPAN;
      MockCalendar.getInstance(timeZone0, locale0);
      jSONReaderScanner1.nextToken(12);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 4044);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+/", 356);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 22, 0);
      jSONReaderScanner0.scanLong(',');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      jSONReaderScanner1.scanFieldLong(charArray0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = '\\';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("^S");
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.tokenName();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null");
      jSONReaderScanner0.nextToken();
      jSONReaderScanner1.indexOf('p', 976);
      jSONReaderScanner0.scanDate('p');
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 191, 91);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.isBlankInput();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      jSONReaderScanner0.charArrayCompare(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.sp = 1131;
      jSONReaderScanner0.scanDate('#');
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.longValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanNumber();
      JSONScanner jSONScanner0 = new JSONScanner("Unknown");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("false", (-97531599));
      jSONReaderScanner0.getCalendar();
      Feature feature0 = Feature.AutoCloseSource;
      jSONScanner0.isEnabled(feature0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.copyTo(0, (-1400), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'B';
      charArray0[1] = 'B';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 91, 191);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 191);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 34);
      JSONScanner jSONScanner0 = new JSONScanner("error parse true");
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.scanFieldBigInteger(charArray0);
      PipedWriter pipedWriter0 = new PipedWriter();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("error parse true", 0);
      jSONReaderScanner0.scanDecimal('\u001B');
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      jSONReaderScanner1.scanNumber();
      char char0 = File.pathSeparatorChar;
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+e2&~3{L", 252);
      jSONReaderScanner0.scanType("+e2&~3{L");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.ROOT;
      locale0.stripExtensions();
      locale0.getScript();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner0.scanNumber();
      char[] charArray0 = new char[3];
      charArray0[0] = 'u';
      charArray0[2] = 'u';
      charArray0[2] = 'u';
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONScanner jSONScanner0 = new JSONScanner("SupportArrayToBean", 1790);
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0);
      jSONScanner0.isBlankInput();
      jSONScanner1.scanNumber();
      jSONScanner0.stringVal();
      JSONScanner jSONScanner2 = new JSONScanner("syntax error, ", 0);
      jSONScanner2.nextToken(18);
      char[] charArray1 = new char[2];
      charArray1[0] = '0';
      charArray1[1] = '-';
      JSONScanner jSONScanner3 = null;
      try {
        jSONScanner3 = new JSONScanner(charArray1, (-1699), (-1699));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("true", 1023);
      jSONScanner0.isRef();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char char0 = 'g';
      jSONScanner0.scanDecimal('g');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("undefined", 1023);
      char[] charArray0 = new char[5];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'g';
      charArray0[4] = 'g';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.nextIdent();
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner((Reader) null, 63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner(",ye");
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONScanner0.ch = '}';
      JSONScanner jSONScanner1 = new JSONScanner(", pos ", 101);
      jSONScanner0.nextToken(0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("true", 0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("7haMt6?Wk9:q");
      char[] charArray1 = new char[0];
      jSONReaderScanner1.scanFieldLong(charArray1);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("7haMt6?Wk9:q");
      jSONReaderScanner1.nextToken();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      charArray0[3] = 'u';
      charArray0[4] = '-';
      charArray0[5] = 'h';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 34, 34);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.scanInt('Q');
      jSONReaderScanner0.scanDate('3');
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('Q');
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(" ifo: ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" ifo: ", 0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      jSONReaderScanner0.scanFieldDecimal(charArray0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("5G<<u&`>,w6Kwf", 34);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("5G<<u&`>,w6Kwf", 34);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("5G<<u&`>,w6Kwf", 1328);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      SymbolTable symbolTable0 = new SymbolTable(852);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0, 'S');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" crX2jnAHKId");
      jSONReaderScanner0.scanFloat('7');
      JSONScanner jSONScanner0 = new JSONScanner(" crX2jnAHKId");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("BQF,cS^", 0);
      String string0 = "TMTMMMS";
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("TMTMMMS", 569);
      jSONReaderScanner0.scanBoolean('[');
      JSONScanner jSONScanner1 = new JSONScanner("BQF,cS^", 569);
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      jSONScanner0.scanFieldBoolean(charArray0);
      jSONScanner1.scanInt('7');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[2] = '_';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("a/g");
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.longValue();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("rvGk", 31);
      jSONScanner0.isRef();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONScanner0.scanDecimal('g');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZbGS'FK@l84m", (-1));
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.longValue();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 13);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("can not cast to JSONObject.", 13);
      jSONReaderScanner0.scanDecimal('\u001B');
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("|4O^;h9qt*mtZR");
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      SymbolTable symbolTable0 = new SymbolTable(392);
      jSONScanner0.scanEnum(class0, symbolTable0, '\u001B');
      jSONScanner0.scanString('0');
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : |pos 0, json : |4O^;h9qt*mtZR
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".-ct//V+~", 32);
      JSONScanner jSONScanner0 = new JSONScanner(".-ct//V+~");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSONReaderScanner0.scanInt('?');
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".-ct//V+~", 32);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      JSONScanner jSONScanner0 = new JSONScanner("is");
      jSONScanner0.scanFloat(',');
      jSONReaderScanner0.scanNumber();
      char[] charArray0 = new char[3];
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      JSONScanner jSONScanner1 = new JSONScanner(".-ct//V+~");
      jSONScanner0.scanInt('0');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Set", 123);
      jSONReaderScanner0.isBlankInput();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldBoolean(charArray0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356, 356);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      double double0 = Locale.LanguageRange.MIN_WEIGHT;
      JSONScanner jSONScanner0 = new JSONScanner("-yu-?$a7");
      jSONScanner0.scanFloat('9');
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = 'D';
      charArray0[4] = 'D';
      charArray0[5] = '5';
      charArray0[6] = '5';
      charArray0[7] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanDouble('5');
      char[] charArray1 = new char[0];
      Feature feature0 = Feature.DisableFieldSmartMatch;
      jSONReaderScanner0.config(feature0, true);
      SymbolTable symbolTable0 = new SymbolTable(1191);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, '5');
      jSONReaderScanner0.scanFieldInt(charArray1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[6];
      JSONScanner jSONScanner0 = new JSONScanner("c0p#*kEIf");
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(?h\"GkQ5");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("(?h\"GkQ5");
      jSONReaderScanner1.scanString('z');
      jSONReaderScanner1.nextToken();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[6];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9+D");
      jSONReaderScanner0.scanFloat('\u0000');
      JSONScanner jSONScanner0 = new JSONScanner("9Ab94");
      SymbolTable symbolTable0 = new SymbolTable(107);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldStringArray(charArray0, (-1864), symbolTable0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[3] = 'D';
      charArray0[4] = 'D';
      charArray0[5] = '5';
      charArray0[6] = '5';
      charArray0[7] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanDouble('5');
      jSONReaderScanner0.scanFloat('D');
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[1] = 'D';
      charArray0[4] = 'D';
      charArray0[5] = '5';
      charArray0[6] = '5';
      charArray0[7] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanDouble('5');
      Feature feature0 = Feature.DisableFieldSmartMatch;
      jSONReaderScanner0.config(feature0, true);
      jSONReaderScanner0.scanFloat('D');
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      JSONScanner jSONScanner0 = new JSONScanner("S'a;<flx");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0, 58);
      jSONScanner1.nextToken(58);
      jSONScanner0.stringVal();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteNullNumberAsZero", 2);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      try { 
        jSONReaderScanner0.longValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // WriteNullNumberAsZero
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 10);
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.matchStat();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(10, charArray0, 169, 169);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader(", pos ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0, 69);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"", 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanFieldDate(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("NY&giv>M@", 1360);
      jSONScanner0.isRef();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("NY&giv>M@", 0);
      char[] charArray0 = new char[7];
      jSONReaderScanner0.matchStat = (int) 'k';
      Locale locale0 = Locale.CANADA;
      locale0.getScript();
      jSONReaderScanner0.charAt(41);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("type not match. ");
      StringReader stringReader0 = new StringReader("$k");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0, 0);
      char[] charArray0 = new char[9];
      charArray0[1] = '\\';
      charArray0[2] = 'D';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[2] = '\\';
      charArray0[6] = '\\';
      charArray0[7] = 'D';
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanDouble('\\');
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanFloat('f');
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONScanner jSONScanner0 = new JSONScanner("SupportArrayToBean", 1790);
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0);
      jSONScanner0.isBlankInput();
      jSONScanner1.scanNumber();
      jSONScanner0.stringVal();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("SupportArrayToBean", 75);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.intValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // SupportArrayToBean
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      char char0 = File.separatorChar;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", 91);
      jSONReaderScanner0.scanDouble('X');
      jSONReaderScanner0.scanLong('V');
      jSONReaderScanner0.scanLong('o');
      char char1 = File.pathSeparatorChar;
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(" ifo: ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" ifo: ", 0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      SymbolTable symbolTable0 = new SymbolTable(79);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      char char0 = 'Q';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5m_");
      JSONScanner jSONScanner0 = new JSONScanner("5m_");
      jSONScanner0.scanDecimal('Q');
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+/", 356);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("+/");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      jSONScanner0.scanNumber();
      jSONReaderScanner0.scanNumber();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextIdent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 120);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      int[] intArray0 = JSONLexerBase.digits;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('F');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mwZ7y");
      JSONScanner jSONScanner0 = new JSONScanner("", 36);
      jSONScanner0.info();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("kcM$w|v{rGE=;k7>E", 259);
      jSONScanner0.scanDecimal(']');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("mx", 3103);
      char[] charArray0 = new char[4];
      charArray0[0] = '&';
      charArray0[1] = ']';
      charArray0[2] = 'g';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[3] = ']';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner1.scanNumber();
      jSONReaderScanner1.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("null", 3103);
      jSONReaderScanner2.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader(", pos ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONScanner jSONScanner0 = new JSONScanner(", pos ", (-493));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("epoNEnZ 9", 0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('1');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(", pos ");
      jSONReaderScanner0.nextToken();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(" ifo: ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" ifo: ");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.longValue();
      JSONScanner jSONScanner1 = new JSONScanner("TreeSet");
      TimeZone timeZone0 = jSONScanner1.getTimeZone();
      jSONScanner0.timeZone = timeZone0;
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      jSONScanner0.scanISO8601DateIfMatch();
      charArray0[1] = '%';
      charArray0[2] = 'x';
      jSONScanner0.np = 116;
      charArray0[3] = 'u';
      charArray0[4] = 'E';
      charArray0[5] = 'x';
      charArray0[6] = 'D';
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.nextTokenWithColon(0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = 118;
      JSONScanner jSONScanner0 = new JSONScanner("not support type ", 118);
      // Undeclared exception!
      try { 
        jSONScanner0.nextToken(118);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      char[] charArray0 = new char[9];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONReaderScanner0.nextToken();
      char[] charArray1 = null;
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 12, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = (-3343);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("bqf", (-3343));
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("not support type ", 43);
      jSONScanner0.scanDecimal('8');
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      SymbolTable symbolTable0 = new SymbolTable(71);
      jSONScanner0.scanEnum(class0, symbolTable0, '8');
      jSONScanner0.scanString(']');
      jSONScanner0.scanFloat('6');
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      int int0 = 81;
      jSONReaderScanner0.resetStringPosition();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(70, 70, 81, 0, 0, 83);
      mockGregorianCalendar0.getLeastMaximum(13);
      jSONReaderScanner0.scanString('i');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null, '\\');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5m_");
      char[] charArray0 = new char[9];
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 2, 2);
      SymbolTable symbolTable0 = new SymbolTable(69);
      jSONScanner0.scanSymbol(symbolTable0, 'Q');
      jSONScanner0.scanDecimal('\u0000');
      char char0 = Locale.PRIVATE_USE_EXTENSION;
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = File.separatorChar;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", 91);
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanDouble('X');
      jSONReaderScanner0.scanLong('V');
      jSONReaderScanner0.scanLong('o');
      char char1 = Locale.PRIVATE_USE_EXTENSION;
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("EOF error", 123);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.longValue();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+/", 356);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JSONScanner jSONScanner0 = new JSONScanner("5Wz+#c0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("+/", 78);
      jSONScanner1.nextToken(78);
      jSONScanner1.stringVal();
      jSONReaderScanner0.scanDouble('Y');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("cm_P", (-1));
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(" ifo: ", 1697);
      jSONScanner0.isRef();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONScanner jSONScanner1 = new JSONScanner("unclosed.str");
      BigDecimal bigDecimal0 = new BigDecimal(0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("' Q]'gS=;O", 1902);
      char[] charArray0 = new char[4];
      charArray0[0] = '8';
      charArray0[1] = 'g';
      charArray0[2] = '8';
      charArray0[3] = 'g';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      BigDecimal bigDecimal1 = new BigDecimal((int) 'g');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("' Q]'gS=;O");
      jSONReaderScanner1.longValue();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = '-';
      charArray0[2] = 'u';
      charArray0[3] = 'p';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 34, Integer.MAX_VALUE);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.scanInt('p');
      jSONReaderScanner0.scanDate('-');
      jSONReaderScanner0.nextIdent();
      char char1 = '6';
      jSONReaderScanner0.scanLong('6');
      Feature feature0 = Feature.SupportNonPublicField;
      jSONReaderScanner0.isEnabled(feature0);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 40);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("P0Dqz)j>", (-1330));
      jSONScanner0.resetStringPosition();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner0.scanInt('k');
      jSONReaderScanner0.scanDate('l');
      jSONReaderScanner0.nextIdent();
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("P0Dqz)j>", (-1330));
      Feature feature0 = Feature.DisableCircularReferenceDetect;
      jSONReaderScanner1.isEnabled(feature0);
      jSONReaderScanner1.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 5);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("~!T", 0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char char0 = 'B';
      SymbolTable symbolTable0 = new SymbolTable(70);
      char char1 = '\"';
      char[] charArray0 = new char[1];
      charArray0[0] = '\"';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 31, 31);
      char char2 = 'L';
      // Undeclared exception!
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, 'L');
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("rvGk", 31);
      jSONScanner0.isRef();
      SymbolTable symbolTable0 = new SymbolTable(1064);
      jSONScanner0.scanSymbolUnQuoted(symbolTable0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONScanner0.scanDecimal('B');
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      SymbolTable symbolTable1 = new SymbolTable(70);
      jSONScanner0.scanEnum(class0, symbolTable1, 'B');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader(", pos ");
      JSONScanner jSONScanner0 = new JSONScanner(", pos ");
      jSONScanner0.scanDecimal('s');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("zm@-6FPp\"Jd{", (-113));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 6);
      char[] charArray1 = new char[0];
      jSONReaderScanner1.scanFieldIntArray(charArray1);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner1.scanNumber();
      jSONReaderScanner0.scanFieldBoolean(charArray1);
      SymbolTable symbolTable0 = new SymbolTable(25);
      jSONScanner0.scanSymbol(symbolTable0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      char[] charArray0 = new char[6];
      JSONScanner jSONScanner0 = new JSONScanner("c0p#*kEIf");
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("7v!NC<D5|bQ=@", 120);
      jSONScanner1.nextToken(78);
      JSONScanner jSONScanner2 = new JSONScanner("5Wz+#c0");
      jSONScanner2.stringVal();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONReaderScanner0.scanDouble('^');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(", info : ", 120);
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("P0Dqz)j>", (-1330));
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("a");
      arrayList0.add(locale_LanguageRange0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\":\"", 0);
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'W';
      charArray0[2] = '>';
      charArray0[3] = 'F';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanDecimal(':');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner1.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 1049);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" crX2jnAHKId");
      jSONReaderScanner0.scanFloat('7');
      JSONScanner jSONScanner0 = new JSONScanner(" crX2jnAHKId");
      JSONScanner jSONScanner1 = new JSONScanner("cm_P");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[6];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[4] = '';
      char[] charArray1 = new char[8];
      charArray1[0] = '';
      charArray1[1] = '';
      charArray1[2] = '\\';
      charArray1[3] = '7';
      charArray1[4] = '';
      charArray1[5] = '|';
      charArray1[6] = '';
      charArray1[7] = '';
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray1, 70);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[2] = '5';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = '5';
      charArray0[6] = '5';
      charArray0[7] = 'C';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanDouble('5');
      char[] charArray1 = new char[0];
      Feature feature0 = Feature.DisableFieldSmartMatch;
      jSONReaderScanner0.config(feature0, true);
      SymbolTable symbolTable0 = new SymbolTable(1191);
      String string0 = File.separator;
      jSONReaderScanner0.scanFieldInt(charArray1);
      jSONReaderScanner0.scanFieldLong(charArray1);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : 5
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner(",ye");
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONScanner0.ch = '}';
      JSONScanner jSONScanner1 = new JSONScanner(", pos ", 101);
      jSONScanner0.nextToken(0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", pos ", 0);
      jSONReaderScanner0.scanNumber();
      Feature feature0 = Feature.IgnoreNotMatch;
      jSONReaderScanner0.isEnabled(feature0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(",ye");
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("true", 90);
      jSONReaderScanner2.scanFieldFloat(charArray0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@foU?<2z");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("P0Dqz)j>");
      jSONReaderScanner0.nextToken();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, (-1330));
      jSONReaderScanner1.scanInt('m');
      jSONReaderScanner1.nextIdent();
      jSONReaderScanner1.matchField(charArray0);
      Feature feature0 = Feature.AllowSingleQuotes;
      jSONReaderScanner1.isEnabled(feature0);
      char[] charArray1 = new char[9];
      charArray1[0] = 'h';
      jSONReaderScanner0.close();
      SymbolTable symbolTable0 = new SymbolTable(5);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }
}
