/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:19:12 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[16];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 0);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(6652, 6652);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 2515;
      intArray0[2] = 2515;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[16];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(975, 975);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[8];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      charClass0.appendFoldedRange(1904, 2825);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[8];
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(93, 93);
      charClass0.appendClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(1952, 1952);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][8];
      charClass0.appendFoldedRange((-2787), (-2787));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[13];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(975, 975);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 2804;
      intArray0[1] = 6634;
      charClass0.appendNegatedClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[13];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(975, 975);
      charClass0.appendFoldedRange((-693), 975);
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][8];
      charClass0.appendTableWithSign(intArray0, 8722);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[][] intArray0 = new int[0][5];
      charClass0.appendTableWithSign(intArray0, (-1));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(6553, 6553);
      charClass1.negateClass();
      int[][] intArray0 = new int[1][8];
      charClass0.appendTableWithSign(intArray0, 8722);
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[9];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.cleanClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[16];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass.charClassToString(intArray0, (-180));
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[6] = 2515;
      intArray0[2] = 2;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArrayArray0 = null;
      CharClass charClass2 = charClass1.appendNegatedTable(intArrayArray0);
      charClass2.appendNegatedTable(intArrayArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(119665, 119665);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendRange(4890, 4890);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 208;
      intArray0[1] = 2;
      intArray0[2] = 208;
      intArray0[3] = 32;
      intArray0[4] = 65114;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[0][8];
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      charClass0.appendNegatedTable(intArray1);
      charClass1.appendClassWithSign(intArray0, (-3090));
      // Undeclared exception!
      try { 
        charClass2.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, (-894));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 2515;
      intArray0[2] = 2;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, (-221));
      charClass2.cleanClass();
      CharClass charClass3 = charClass1.appendNegatedTable(intArray1);
      int int0 = (-895);
      charClass3.appendTableWithSign(intArray1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(1114111, 1114111);
      CharClass charClass2 = charClass1.appendFoldedRange((-505), 91);
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[13];
      int int0 = 975;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 975);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[5];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass.charClassToString(intArray0, 2);
      CharClass.charClassToString(intArray0, (-1516));
      // Undeclared exception!
      charClass0.appendFoldedRange(42876, 1048575);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-16);
      intArray0[1] = 2515;
      intArray0[2] = 2;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 208;
      intArray0[1] = 2;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[4][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass.charClassToString(intArray0, 0);
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass2 = charClass0.appendTableWithSign(intArray1, 2);
      charClass2.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass1.appendNegatedTable(intArray1);
      charClass0.cleanClass();
      CharClass charClass4 = charClass3.appendTableWithSign(intArray1, 2146);
      charClass4.appendClass(intArray0);
      charClass3.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 208;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      CharClass charClass1 = charClass0.appendTable(intArray1);
      charClass1.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 208;
      intArray0[1] = 2;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[4][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass2 = charClass0.appendTableWithSign(intArray1, 2);
      charClass2.appendNegatedTable(intArray1);
      charClass1.appendNegatedTable(intArray1);
      charClass1.appendClass(intArray0);
      charClass0.appendLiteral(0, 208);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 208;
      intArray0[0] = 208;
      intArray0[1] = 2;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[4][6];
      intArray1[0] = intArray0;
      charClass1.negateClass();
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass0.appendTableWithSign(intArray1, 2);
      charClass2.appendNegatedTable(intArray1);
      charClass1.appendNegatedTable(intArray1);
      charClass1.appendClass(intArray0);
      charClass0.appendLiteral(intArray0[0], int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 208;
      intArray0[1] = 2;
      intArray0[1] = 208;
      intArray0[3] = 32;
      intArray0[4] = 65114;
      intArray0[5] = (-506);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[5][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 65114;
      intArray2[1] = 32;
      intArray2[2] = 0;
      intArray2[3] = 65114;
      intArray2[4] = 2;
      intArray2[5] = 208;
      intArray2[6] = 0;
      intArray2[7] = 32;
      intArray1[3] = intArray2;
      intArray1[4] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      charClass2.negateClass();
      charClass0.appendNegatedTable(intArray1);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 2698);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
