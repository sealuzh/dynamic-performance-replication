/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 21:46:42 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-12), ".z[br{", ".z[br{", "dN1mk&Xe>*tn\"/:E?kI", "dN1mk&Xe>*tn\"/:E?kI");
      ByteVector byteVector0 = classWriter0.pool;
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2589, "", "fFsy", "fFsy", "fFsy");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(1250);
      ByteVector byteVector2 = byteVector1.putInt(2407);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteVector2.data = byteArray0;
      ByteVector byteVector3 = byteVector2.put12(0, 0);
      fieldWriter0.put(byteVector3);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2589, "", "fFsy", "fFsy", "fFsy");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte(1250);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-681), "ConstantValue", "", "ConstantValue", (Object) null);
      int int0 = fieldWriter1.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "-5y$Sgi15)+{", "-5y$Sgi15)+{", "-5y$Sgi15)+{", "7");
      fieldWriter0.visitAnnotation("u", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      byteVector0.put12((-1727), 0);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2589, "", "fFsy", "fFsy", "fFsy");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte(1250);
      ClassWriter classWriter1 = new ClassWriter((-759));
      FieldWriter fieldWriter1 = new FieldWriter(classWriter1, 63, "$5Q=1p`", "H9{T&']sK=P", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("$5Q=1p`", false);
      ByteVector byteVector1 = new ByteVector();
      fieldWriter1.put(byteVector0);
      ByteVector byteVector2 = byteVector1.put12(1250, 2);
      fieldWriter1.put(byteVector2);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, ".z[br{", ".z[br{", "-5y$Sgi15)+{", ".z[br{");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2218), "fFsy", "fFsy", "fFsy", "");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort((-2218));
      byteVector0.putInt((-2218));
      fieldWriter0.visitAnnotation("fFsy", true);
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = new ByteVector();
      fieldWriter0.put(byteVector0);
      classWriter0.version = (-63);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("=*P4{=t'");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)119;
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5086);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "WSS2! f:B$hJF|p";
      stringArray0[1] = "Qv(06PTT";
      stringArray0[2] = "Q,2OqQ";
      stringArray0[3] = "WSS2! f:B$hJF|p";
      classWriter0.visit(5086, 65535, "Qv(06PTT", "WSS2! f:B$hJF|p", "[]", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "Qv(06PTT", "bi", "L*9'pV");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      System.setCurrentTimeMillis(20);
  }
}
