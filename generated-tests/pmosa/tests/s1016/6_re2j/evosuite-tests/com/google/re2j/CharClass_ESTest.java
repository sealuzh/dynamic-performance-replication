/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 08:59:20 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 2143;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass.charClassToString(intArray0, 0);
      // Undeclared exception!
      try { 
        charClass0.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 2781;
      intArray0[0] = 2781;
      intArray0[1] = 0;
      intArray0[2] = 1671;
      intArray0[3] = 0;
      intArray0[4] = 0;
      int int1 = 66461;
      intArray0[5] = 66461;
      intArray0[6] = 1503;
      intArray0[7] = 4360;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(0, 32);
      int[][] intArray1 = new int[2][9];
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 4360;
      intArray2[4] = 1503;
      intArray2[5] = 66461;
      intArray2[6] = 0;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      int int2 = 3315;
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, int2);
      CharClass charClass4 = charClass3.appendRange(intArray2[3], int0);
      CharClass charClass5 = charClass4.appendFoldedClass(intArray1[1]);
      charClass5.toArray();
      int int3 = 0;
      charClass4.appendFoldedRange(int1, int3);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      charClass1.negateClass();
      int[][] intArray1 = new int[1][9];
      int[] intArray2 = new int[3];
      intArray2[0] = 119149;
      intArray2[1] = 321;
      intArray2[2] = (-921);
      intArray1[0] = intArray2;
      CharClass charClass2 = charClass1.appendTable(intArray1);
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-3716);
      intArray0[3] = (-1598);
      intArray0[4] = 0;
      intArray0[5] = 43360;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(8, 2707);
      // Undeclared exception!
      try { 
        charClass0.appendFoldedClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-1723);
      intArray0[5] = 85;
      intArray0[6] = 0;
      intArray0[7] = 0;
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedRange(0, 177984);
      int[][] intArray1 = new int[1][6];
      intArray1[0] = intArray0;
      CharClass charClass3 = charClass2.appendTable(intArray1);
      charClass3.negateClass();
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, intArray0[1]);
      int int0 = 0;
      charClass4.appendRange(intArray0[4], int0);
      charClass1.toArray();
      int int1 = (-973);
      charClass2.appendTableWithSign(intArray1, int1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(12317, 12317);
      int[][] intArray0 = new int[0][0];
      CharClass charClass2 = charClass1.appendTableWithSign(intArray0, 12317);
      CharClass charClass3 = charClass2.appendTable(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 12317;
      intArray1[1] = 12317;
      intArray1[2] = 12317;
      // Undeclared exception!
      try { 
        charClass3.appendClassWithSign(intArray1, 2409);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, 793);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[0];
      int[][] intArray1 = new int[10][4];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 0);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.cleanClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      CharClass charClass4 = charClass3.appendFoldedClass(intArray0);
      CharClass charClass5 = charClass4.appendClass(intArray0);
      CharClass charClass6 = charClass5.appendClassWithSign(intArray0, 0);
      assertSame(charClass6, charClass3);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-826), (-826));
      String string0 = charClass0.toString();
      assertEquals("[0xfffffcc6]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(61217, 61217);
      charClass1.negateClass();
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass0.appendRange(32, (-2500));
      CharClass charClass3 = charClass2.cleanClass();
      assertSame(charClass3, charClass1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][0];
      int[] intArray1 = new int[4];
      intArray1[0] = (-4227);
      intArray1[1] = 2651;
      intArray1[2] = 65;
      intArray1[3] = (-1378);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 65;
      intArray2[1] = (-4227);
      intArray2[2] = (-4227);
      CharClass charClass1 = charClass0.appendRange(65, 1);
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass0.cleanClass();
      CharClass.charClassToString(intArray2, 2);
      charClass0.negateClass();
      charClass2.cleanClass();
      charClass3.appendLiteral(1, 65);
      // Undeclared exception!
      try { 
        charClass1.appendFoldedClass(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 765;
      intArray0[2] = 0;
      intArray0[3] = 511;
      intArray0[4] = (-2341);
      intArray0[5] = 65101;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.toString();
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-2341));
      charClass2.cleanClass();
      assertArrayEquals(new int[] {(-2341), 1114111, 0, 765, 0, 511}, intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 0);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.cleanClass();
      charClass0.negateClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[5] = 0;
      CharClass charClass4 = charClass2.appendClass(intArray0);
      CharClass charClass5 = charClass4.appendClassWithSign(intArray0, 0);
      assertSame(charClass5, charClass3);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][0];
      int[] intArray1 = new int[4];
      intArray1[0] = (-4227);
      intArray1[1] = 2651;
      intArray1[2] = 65;
      intArray1[3] = (-1378);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 65;
      intArray2[1] = (-4227);
      intArray2[2] = (-4227);
      int int0 = 1;
      CharClass charClass1 = charClass0.appendRange(65, 1);
      charClass1.cleanClass();
      charClass1.appendLiteral(2651, (-4227));
      charClass1.toString();
      CharClass charClass2 = charClass0.cleanClass();
      CharClass.charClassToString(intArray2, 2);
      // Undeclared exception!
      try { 
        charClass2.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 2781;
      intArray0[1] = 0;
      intArray0[2] = 1671;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-2318), (-2318));
      CharClass charClass2 = charClass1.appendClass(intArray0);
      int[] intArray1 = charClass1.toArray();
      assertArrayEquals(new int[] {(-2318), (-2318), 2781, 0, 1671, 0, 0, 0}, intArray1);
      
      charClass0.negateClass();
      int[] intArray2 = charClass2.toArray();
      assertArrayEquals(new int[] {(-2317), 2780, 1, 1670, 1, 1114111}, intArray2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[1] = 96;
      intArray0[1] = 3390;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 2065);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      int[] intArray1 = charClass0.toArray();
      CharClass charClass3 = charClass0.appendFoldedClass(intArray1);
      charClass0.appendClass(intArray1);
      CharClass charClass4 = charClass3.appendRange(3390, 2065);
      charClass4.toString();
      CharClass charClass5 = charClass2.appendNegatedClass(intArray1);
      charClass2.toArray();
      CharClass charClass6 = charClass5.appendFoldedClass(intArray1);
      charClass5.appendClass(intArray0);
      charClass3.appendClass(intArray1);
      // Undeclared exception!
      try { 
        charClass6.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][0];
      int[] intArray1 = new int[4];
      intArray1[0] = (-4227);
      intArray1[1] = 2651;
      intArray1[2] = 65;
      intArray1[3] = (-1378);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[1] = (-4227);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = (-1378);
      intArray3[1] = 2651;
      intArray3[2] = 65;
      intArray3[3] = 2651;
      intArray0[2] = intArray3;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 65);
      CharClass charClass2 = charClass0.appendNegatedTable(intArray0);
      charClass2.cleanClass();
      CharClass charClass3 = charClass1.appendNegatedClass(intArray3);
      charClass1.appendFoldedRange(2651, 2651);
      charClass3.negateClass();
      charClass0.appendTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][2];
      int[] intArray1 = new int[7];
      intArray1[1] = 42894;
      intArray1[2] = 1;
      intArray1[3] = 202;
      intArray1[4] = 1303;
      int int0 = 8467;
      intArray1[5] = 8467;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 43047;
      intArray2[2] = 8467;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 1114111;
      intArray0[1] = 1114111;
      intArray0[2] = 1114111;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = new CharClass();
      int[][] intArray1 = new int[4][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass1.appendNegatedTable(intArray1);
      boolean boolean0 = true;
      CharGroup charGroup0 = null;
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
