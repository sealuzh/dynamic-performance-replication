/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 17:00:11 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Utils.isalnum(92);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(1);
      Utils.escapeRune(stringBuilder0, 8624);
      assertEquals("\u21B0", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utils.isWordRune(8080);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)81;
      byte byte0 = (byte)12;
      byteArray0[3] = (byte)12;
      // Undeclared exception!
      try { 
        Utils.indexOf(byteArray0, (byte[]) null, (-3348));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(4343);
      Utils.unhex(10);
      Utils.escapeRune(stringBuilder0, 4343);
      assertEquals("\u10F7", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = Utils.EMPTY_END_LINE;
      Utils.escapeRune(stringBuilder0, 33);
      assertEquals("!", stringBuilder0.toString());
      
      byte[] byteArray0 = new byte[4];
      Utils.indexOf(byteArray0, byteArray0, 2);
      int int1 = Utils.unhex((-1));
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 30);
      assertEquals("\\x1e", stringBuilder0.toString());
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)64;
      Utils.indexOf(byteArray0, byteArray0, (byte)64);
      int int0 = Utils.unhex((byte)0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Utils.stringToRunes("?g(~4\"5J");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte) (-118);
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-34);
      byteArray0[8] = (byte) (-108);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)109;
      byteArray1[1] = (byte)109;
      byteArray1[2] = (byte)114;
      byteArray1[3] = (byte)70;
      byteArray1[4] = (byte) (-108);
      byteArray1[5] = (byte) (-108);
      byteArray1[6] = (byte) (-103);
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte) (-118));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-33);
      Utils.indexOf(byteArray0, byteArray1, (byte)0);
      Utils.isalnum((byte)0);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (byte) (-33), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -33
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-11);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte) (-11));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = Utils.EMPTY_END_LINE;
      Utils.escapeRune(stringBuilder0, 30);
      assertEquals("\\x1e", stringBuilder0.toString());
      
      byte[] byteArray0 = new byte[2];
      Utils.indexOf(byteArray0, byteArray0, (byte)0);
      boolean boolean0 = Utils.isWordRune(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 12928);
      assertEquals("\u3280", stringBuilder0.toString());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-37);
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)40;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte) (-37));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utils.runeToString(9);
      Utils.emptyOpContext((-267), 1320);
      int int0 = 0;
      Utils.runeToString(0);
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-267), (Object) "\t");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -267
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utils.isalnum(67);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.runeToString(67);
      int int0 = Utils.EMPTY_NO_WORD_BOUNDARY;
      Utils.escapeRune(stringBuilder0, 32);
      assertEquals(" ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = Utils.emptyOpContext(349, (-2843));
      assertEquals(42, int0);
      
      int int1 = Utils.unhex(1601);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utils.isalnum((-558));
      int[] intArray0 = new int[2];
      intArray0[0] = (-558);
      intArray0[1] = (-558);
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 3462, (-558));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utils.isWordRune(2165);
      Utils.isalnum(2165);
      StringBuilder stringBuilder0 = new StringBuilder(2165);
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = '`';
      charArray0[3] = '7';
      charArray0[4] = 'R';
      // Undeclared exception!
      try { 
        stringBuilder1.insert(2165, charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2165
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)99;
      Utils.isalnum((byte)99);
      int int0 = (-614);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-3010));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte)57;
      byteArray0[6] = (byte) (-111);
      byteArray0[7] = (byte) (-112);
      byteArray0[8] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, 1665);
      Utils.stringToRunes("+cjSw=K|bc~'a]Hr{/");
      Utils.isalnum(12);
      String string0 = Utils.runeToString((byte) (-112));
      assertEquals("\uFF90", string0);
      
      int[] intArray0 = new int[0];
      Utils.subarray(intArray0, (byte)0, (byte)0);
      boolean boolean0 = Utils.isalnum(12);
      assertFalse(boolean0);
      
      int int0 = Utils.emptyOpContext(3734, 1025);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((-2620.602499811));
      int int0 = Utils.EMPTY_BEGIN_TEXT;
      Utils.escapeRune(stringBuilder0, 4);
      // Undeclared exception!
      try { 
        Utils.subarray((int[]) null, 4, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)101;
      byteArray1[1] = (byte)101;
      byteArray1[2] = (byte)101;
      byteArray1[3] = (byte)101;
      Utils.indexOf(byteArray0, byteArray1, (byte)101);
      String string0 = "";
      Utils.stringToRunes("");
      Utils.indexOf(byteArray1, byteArray0, (byte)101);
      Utils.emptyOpContext(125, (-1));
      Utils.runeToString(1213);
      Utils.runeToString(0);
      Utils.subarray(byteArray0, (byte)101, (byte)101);
      StringBuilder stringBuilder0 = new StringBuilder(2);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(2, 122);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Utils.isalnum(92);
      // Undeclared exception!
      try { 
        Utils.subarray((byte[]) null, (byte)101, 1056);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(1);
      Utils.unhex(92);
      Utils.escapeRune(stringBuilder0, 70);
      assertEquals("F", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, 2403);
      Utils.emptyOpContext(262, 0);
      Utils.isWordRune((byte) (-106));
      Utils.isalnum((byte)0);
      int int0 = 1644;
      Utils.indexOf(byteArray0, byteArray0, 1644);
      Utils.indexOf(byteArray0, byteArray0, (byte)19);
      int int1 = 697;
      Utils.unhex(697);
      String string0 = "rBpYv#>j_7G[7";
      Utils.stringToRunes("rBpYv#>j_7G[7");
      Utils.isalnum(1758);
      Utils.isWordRune((-1));
      Utils.emptyOpContext(0, 16);
      Utils.isalnum(32);
      Utils.indexOf(byteArray0, byteArray0, 16);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "rBpYv#>j_7G[7");
      // Undeclared exception!
      try { 
        stringBuilder0.insert(460, (-2183));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 460
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune((-28));
      Utils.unhex(953);
      Utils.escapeRune(stringBuilder0, 953);
      assertEquals("\u03B9", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Utils.unhex(0);
      Utils.emptyOpContext((-1), 1292);
      Utils.stringToRunes("OC@jI-If{)j]/5a");
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 1292);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-1412));
      Utils.isalnum((-1130));
      Utils.indexOf(byteArray0, byteArray0, (-1130));
      Utils.stringToRunes("[mvr{61b:Nm");
      Utils.emptyOpContext(383, 0);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      stringBuilder0.append((CharSequence) "yd{Uop&lqR");
      stringBuilder0.append((long) 0);
      stringBuilder0.replace(0, 0, "yd{Uop&lqR");
      Utils.escapeRune(stringBuilder0, 0);
      Utils.runeToString(0);
      int int1 = Utils.unhex((-1130));
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)103;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)103;
      byteArray1[1] = (byte)103;
      byteArray1[2] = (byte)103;
      byteArray1[3] = (byte)103;
      Utils.indexOf(byteArray0, byteArray1, (byte)103);
      Utils.stringToRunes("");
      Utils.indexOf(byteArray1, byteArray0, (byte)103);
      Utils.emptyOpContext(125, (-1));
      Utils.runeToString(1213);
      Utils.runeToString(0);
      Utils.subarray(byteArray0, (byte)103, (byte)103);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "\u04BD");
      stringBuilder0.appendCodePoint((byte)103);
      StringBuilder stringBuilder1 = stringBuilder0.append((double) (-1));
      Utils.escapeRune(stringBuilder1, (-2771));
      assertEquals("\u04BDg-1.0\\xfffff52d", stringBuilder0.toString());
      
      int int0 = Utils.unhex(65535);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Utils.indexOf(byteArray0, byteArray0, 4);
      Utils.stringToRunes("");
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)101;
      byteArray1[1] = (byte)101;
      byteArray1[2] = (byte)101;
      byteArray1[3] = (byte)101;
      byteArray1[4] = (byte)101;
      byteArray1[5] = (byte)101;
      byteArray1[6] = (byte)101;
      Utils.indexOf(byteArray0, byteArray1, 105);
      Utils.emptyOpContext(102, (byte)101);
      Utils.runeToString((-1));
      Utils.runeToString(32);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, 1213, 10);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      Utils.isalnum(92);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(48);
      Utils.emptyOpContext((-606), (byte)101);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray1, (byte)7, (-2054));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Utils.isWordRune(498);
      Utils.isalnum(65535);
      Utils.isWordRune((-118));
      Utils.isWordRune(0);
      Utils.emptyOpContext((byte)88, 1451);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, 66599, 498);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Utils.isalnum(92);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(1);
      Utils.runeToString(92);
      Utils.unhex(65);
      Utils.escapeRune(stringBuilder0, 10);
      assertEquals("\\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(1);
      Utils.runeToString(1);
      Utils.unhex(2451);
      Utils.escapeRune(stringBuilder0, 2684);
      assertEquals("\\x{a7c}", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Utils.isalnum(92);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(1);
      Utils.runeToString(1749);
      Utils.unhex(5);
      Utils.escapeRune(stringBuilder0, 13);
      // Undeclared exception!
      try { 
        Utils.indexOf((byte[]) null, (byte[]) null, 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 83;
      Utils.isalnum(83);
      int int1 = (-606);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-606));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Utils.isalnum(92);
      Utils.isalnum(9);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(5937);
      Utils.runeToString((-2572));
      Utils.unhex(1012);
      Utils.escapeRune(stringBuilder0, 12);
      assertEquals("\\f", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(57);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.isWordRune(1);
      Utils.unhex(65);
      Utils.escapeRune(stringBuilder0, 10);
      Utils.unhex(2);
      Utils.escapeRune(stringBuilder0, 4);
      Utils.escapeRune(stringBuilder0, 8);
      assertEquals("\\n\\x04\\b", stringBuilder0.toString());
      
      int int0 = Utils.unhex(10);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Utils.isalnum(7154);
      StringBuilder stringBuilder0 = new StringBuilder(7154);
      Utils.runeToString(122);
      Utils.unhex(13);
      Utils.escapeRune(stringBuilder0, 7154);
      Utils.escapeRune(stringBuilder0, 9);
      Utils.escapeRune(stringBuilder0, 11744);
      assertEquals("\u1BF2\\t\u2DE0", stringBuilder0.toString());
  }
}
