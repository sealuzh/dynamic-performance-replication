/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:11:29 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      assertSame(charClass1, charClass2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(513, 513);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, (-941));
      int[][] intArray1 = new int[1][3];
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[21];
      intArray0[0] = 423;
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 444;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      int[][] intArray2 = new int[0][5];
      CharClass charClass1 = charClass0.appendTable(intArray2);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(1114109, 1114109);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      charClass0.appendLiteral(9827, 9827);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(42, 42);
      charClass1.toString();
      CharClass charClass2 = charClass0.appendLiteral(42, 65);
      int[] intArray0 = new int[2];
      intArray0[0] = 42;
      intArray0[1] = 65;
      charClass2.appendFoldedClass(intArray0);
      charClass1.toArray();
      charClass2.appendLiteral(65, 42);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[][] intArray0 = new int[5][4];
      int[] intArray1 = new int[6];
      intArray1[0] = 190;
      intArray1[1] = 190;
      intArray1[2] = 1114111;
      intArray1[3] = 1114111;
      intArray1[2] = 10100;
      intArray1[5] = (-2632);
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[1] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.cleanClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 607;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 536);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][1];
      charClass0.appendNegatedTable(intArray1);
      // Undeclared exception!
      try { 
        charClass0.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendRange(2247, 2247);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = (-483);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendRange((-483), (-483));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      CharClass charClass1 = new CharClass();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[1] = (-527);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendRange((-527), (-527));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendFoldedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      charClass0.appendNegatedClass(intArray0);
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[4];
      intArray1[0] = 193;
      intArray1[1] = (-3072);
      intArray1[2] = (-976);
      intArray1[3] = (-626);
      intArray0[0] = intArray1;
      charClass0.appendTable(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 513;
      intArray0[1] = 513;
      intArray0[2] = 513;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, 11516);
      // Undeclared exception!
      try { 
        charClass2.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][1];
      charClass0.appendTableWithSign(intArray1, 0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClass(intArray0);
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(513, 513);
      charClass1.negateClass();
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 444;
      int int0 = 1299;
      intArray0[2] = 1299;
      intArray0[3] = 181;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendRange(329, 181);
      CharClass charClass2 = charClass1.cleanClass();
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign(intArray1, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[9];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, (-476));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, 3965);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedRange(58, 58);
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 1114111;
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-5997), 1114111);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, (-2433));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 1299;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass0.negateClass();
      int[][] intArray1 = new int[6][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass1.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[12];
      intArray0[0] = 417;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[0] = 417;
      intArray2[1] = 417;
      intArray2[4] = (-469);
      intArray2[5] = 417;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 6668;
      int int1 = 120302;
      // Undeclared exception!
      charClass0.appendFoldedRange(6668, 120302);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass2.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 907;
      intArray0[0] = 907;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendLiteral((-708), 1205);
      int[][] intArray1 = new int[3][5];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[0];
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[4] = 1299;
      intArray0[3] = 0;
      int int0 = 157;
      intArray0[3] = 157;
      int int1 = (-1428);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray1 = new int[5][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, (-1503));
      CharClass charClass3 = charClass2.appendRange(int0, intArray0[3]);
      int int2 = 7679;
      int int3 = 924;
      CharClass charClass4 = charClass3.appendLiteral(int2, int3);
      int int4 = (-1604);
      CharClass charClass5 = charClass4.appendFoldedRange(int4, intArray0[3]);
      CharClass charClass6 = charClass5.cleanClass();
      int int5 = 4268;
      charClass4.appendClassWithSign(intArray1[4], int5);
      int[] intArray2 = new int[3];
      intArray2[0] = int3;
      int int6 = 10176;
      intArray2[1] = int6;
      intArray2[2] = int0;
      charClass1.appendFoldedClass(intArray2);
      CharGroup charGroup0 = null;
      CharClass.charClassToString(intArray1[3], int1);
      boolean boolean0 = true;
      charClass5.appendGroup(charGroup0, boolean0);
      boolean boolean1 = true;
      charClass6.appendGroup(charGroup0, boolean1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 444;
      intArray0[2] = 1299;
      intArray0[3] = 1299;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.appendTableWithSign(intArray1, 5012);
      charClass1.appendTableWithSign(intArray1, 444);
      charClass1.negateClass();
      charClass0.appendLiteral(1299, 890);
      CharClass charClass2 = charClass0.negateClass();
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      charClass3.negateClass();
      charClass0.appendLiteral((-1782), 5012);
      charClass0.appendClass(intArray0);
      CharClass charClass4 = new CharClass();
  }
}
