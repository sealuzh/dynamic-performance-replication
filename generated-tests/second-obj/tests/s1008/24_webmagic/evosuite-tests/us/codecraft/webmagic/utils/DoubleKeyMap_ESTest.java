/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:40:26 GMT 2018
 */

package us.codecraft.webmagic.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.utils.DoubleKeyMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DoubleKeyMap_ESTest extends DoubleKeyMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoubleKeyMap<Object, Integer, Object> doubleKeyMap0 = new DoubleKeyMap<Object, Integer, Object>();
      Object object0 = new Object();
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Integer, Object, Object> doubleKeyMap1 = new DoubleKeyMap<Integer, Object, Object>(class0);
      Map<Integer, Object> map0 = doubleKeyMap1.newMap();
      // Undeclared exception!
      try { 
        doubleKeyMap0.put(object0, map0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Object, Map<String, String>> hashMap0 = new HashMap<Object, Map<String, String>>();
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap0 = new DoubleKeyMap<Object, String, String>(hashMap0, class0);
      doubleKeyMap0.get((Object) hashMap0, (String) null);
      DoubleKeyMap<Object, Object, Object> doubleKeyMap1 = new DoubleKeyMap<Object, Object, Object>(class0);
      Object object0 = new Object();
      doubleKeyMap0.put((Object) "wrong proto type map ", "", "wrong proto type map ");
      Object object1 = new Object();
      Object object2 = new Object();
      hashMap0.put("wrong proto type map ", (Map<String, String>) null);
      doubleKeyMap1.put(object1, (Object) null, object2);
      Object object3 = new Object();
      Object object4 = new Object();
      doubleKeyMap1.remove(object1, object3);
      HashMap<Integer, Map<String, String>> hashMap1 = new HashMap<Integer, Map<String, String>>();
      DoubleKeyMap<Integer, String, String> doubleKeyMap2 = new DoubleKeyMap<Integer, String, String>(hashMap1);
      doubleKeyMap2.put((Integer) null, "", (String) null);
      DoubleKeyMap<Integer, String, Object> doubleKeyMap3 = new DoubleKeyMap<Integer, String, Object>();
      DoubleKeyMap<Integer, String, String> doubleKeyMap4 = new DoubleKeyMap<Integer, String, String>(hashMap1);
      doubleKeyMap2.put((Integer) null, "", "7TS?<A");
      DoubleKeyMap<Integer, String, Object> doubleKeyMap5 = new DoubleKeyMap<Integer, String, Object>();
      Integer integer0 = new Integer(480);
      doubleKeyMap3.remove((Integer) null, "OHI0mbr~ X8TBTHD");
      DoubleKeyMap<Object, Integer, String> doubleKeyMap6 = new DoubleKeyMap<Object, Integer, String>(class0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<Object, Map<String, String>> hashMap0 = new HashMap<Object, Map<String, String>>();
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap0 = new DoubleKeyMap<Object, String, String>(hashMap0, class0);
      doubleKeyMap0.get((Object) hashMap0, (String) null);
      DoubleKeyMap<Object, Object, Object> doubleKeyMap1 = new DoubleKeyMap<Object, Object, Object>(class0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      doubleKeyMap0.put(object2, "", (String) null);
      Object object3 = new Object();
      Object object4 = new Object();
      hashMap0.put("", (Map<String, String>) null);
      doubleKeyMap1.put(object1, (Object) null, (Object) null);
      Object object5 = new Object();
      Object object6 = new Object();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      doubleKeyMap1.remove((Object) null, (Object) hashMap1);
      HashMap<Integer, Map<String, String>> hashMap2 = new HashMap<Integer, Map<String, String>>();
      DoubleKeyMap<Integer, String, String> doubleKeyMap2 = new DoubleKeyMap<Integer, String, String>(hashMap2);
      Integer integer0 = new Integer(1);
      doubleKeyMap2.put(integer0, "tHq[U", "tHq[U");
      DoubleKeyMap<Integer, String, Object> doubleKeyMap3 = new DoubleKeyMap<Integer, String, Object>();
      doubleKeyMap3.put(integer0, (String) null, (Object) "tHq[U");
      Integer integer1 = new Integer(2571);
      DoubleKeyMap<Object, Integer, String> doubleKeyMap4 = new DoubleKeyMap<Object, Integer, String>(class0);
      HashMap<String, Map<String, Map<String, Integer>>> hashMap3 = new HashMap<String, Map<String, Map<String, Integer>>>();
      HashMap<String, Map<String, Integer>> hashMap4 = new HashMap<String, Map<String, Integer>>();
      String string0 = doubleKeyMap2.get(integer0, "rtQRmL=>hUv)Vgc");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Object, Map<String, String>> hashMap0 = new HashMap<Object, Map<String, String>>();
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap0 = new DoubleKeyMap<Object, String, String>(hashMap0, class0);
      doubleKeyMap0.get((Object) hashMap0, (String) null);
      DoubleKeyMap<Object, Object, Object> doubleKeyMap1 = new DoubleKeyMap<Object, Object, Object>(class0);
      Object object0 = new Object();
      doubleKeyMap0.put((Object) "wrong proto type map ", "", "wrong proto type map ");
      Object object1 = new Object();
      Object object2 = new Object();
      hashMap0.put("wrong proto type map ", (Map<String, String>) null);
      doubleKeyMap1.put(object1, (Object) null, object2);
      Object object3 = new Object();
      Object object4 = new Object();
      doubleKeyMap1.remove(object1, object3);
      HashMap<Integer, Map<String, String>> hashMap1 = new HashMap<Integer, Map<String, String>>();
      DoubleKeyMap<Integer, String, String> doubleKeyMap2 = new DoubleKeyMap<Integer, String, String>(hashMap1);
      doubleKeyMap2.put((Integer) null, "", (String) null);
      DoubleKeyMap<Integer, String, Object> doubleKeyMap3 = new DoubleKeyMap<Integer, String, Object>();
      Integer integer0 = new Integer(0);
      doubleKeyMap3.put(integer0, (String) null, object1);
      doubleKeyMap3.remove(integer0, (String) null);
      HashMap<String, Integer> hashMap2 = new HashMap<String, Integer>();
      String string0 = doubleKeyMap0.get((Object) hashMap2, "");
      assertNull(string0);
  }
}
