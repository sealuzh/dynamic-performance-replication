/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:56:54 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-835));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "RuntimeVisibleAnnotations", "ConstantValue", "ConstantValue");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-835), "RuntimeVisibleAnnotations", "G", "G", "RuntimeVisibleAnnotations");
      Attribute attribute0 = new Attribute("6,ie-Y5A");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldWriter1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      Label label0 = new Label();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 81, "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", "7 Pb'7", "");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "0b");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.HiddenFileFilter");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter1.put(byteVector0);
      fieldWriter1.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2279));
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2279), "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "0b", (Object) null);
      Attribute attribute0 = new Attribute("0b");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-16), "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "]AaX n8d#V", "org.apache.commons.io.filefilter.HiddenFileFilter", "]AaX n8d#V", "0b");
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.HiddenFileFilter", true);
      Attribute attribute0 = new Attribute("/v5");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-835));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(2, "L:", "L:", "", "L:");
      classWriter0.newInteger((-835));
      Attribute attribute0 = new Attribute("XbFoxY<SzmA");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "]AaX n8d#V", "org.apch).commons.io.filefilter.HiddenFileFilter", "]AaX n8d#V", "0b");
      fieldWriter0.visitAnnotation("]AaX n8d#V", false);
      Attribute attribute0 = new Attribute("org.apch).commons.io.filefilter.HiddenFileFilter");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      classWriter0.firstField.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.HiddenFileFilter", false);
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("T`P3=|H#\"G!>Lhbh", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-618));
      classWriter0.version = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "|,", "", (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(188, (-302));
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("q");
      fieldWriter1.visitAnnotation("q", false);
      fieldWriter1.visitEnd();
      fieldWriter0.visitEnd();
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "0b");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.HiddenFileFilter");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L,W+7A1?jmC!@8)");
      fieldWriter1.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      classWriter0.invalidFrames = true;
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-16), "org.apache.commons.io.filefilter.HiddenFileFilter", "Synthetic", "org.apache.commons.io.filefilter.HiddenFileFilter", "Synthetic");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.next = fieldWriter0;
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.HiddenFileFilter", true);
      int int0 = fieldWriter1.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Label label0 = new Label();
      Object object0 = label0.info;
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 1, "", "Synthetic", (String) null, (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("|,");
      AnnotationVisitor annotationVisitor1 = classWriter0.visitAnnotation("|,", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }
}
