/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 02:21:33 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2390), "AMa9hrx");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[24];
      byteArray0[1] = (byte)50;
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField(32844, (byte)50, fieldTypeLong0.SRATIONAL, 1400L, (-2363L), byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2456), 37395, fieldTypeLong0, 1L, (-1027L), byteArray0, byteOrder0, 3693);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(37395, tiffField0.getDirectoryType());
      assertEquals((-1027), tiffField0.getOffset());
      assertEquals((-2456), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(3693, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1431655764), fieldTypeByte0.SRATIONAL, 0L, 493L, byteArray0, byteOrder0, 1901);
      String string0 = tiffField0.toString();
      assertEquals(1901, tiffField0.getSortHint());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (0 SRational)", string0);
      assertEquals(493, tiffField0.getOffset());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(Integer.MIN_VALUE, Integer.MIN_VALUE, fieldTypeShort0.FLOAT, Integer.MIN_VALUE, Integer.MIN_VALUE, byteArray0, byteOrder0, Integer.MIN_VALUE);
      String string0 = tiffField0.getValueDescription();
      assertEquals(Integer.MIN_VALUE, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 3041, fieldTypeLong0, 3041, 3041, byteArray0, byteOrder0, 65535);
      tiffField0.getValue();
      assertEquals(3041, tiffField0.getDirectoryType());
      assertEquals(3041, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-58), (byte)104, fieldTypeShort0, 1L, 3148L, byteArray0, byteOrder0, 1508);
      tiffField0.getTagInfo();
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(1508, tiffField0.getSortHint());
      assertEquals((-58), tiffField0.getTag());
      assertEquals(3148, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, (-971), fieldTypeShort0, 0L, 1048L, byteArray0, byteOrder0, 959);
      int int0 = tiffField0.getTag();
      assertEquals(48323, int0);
      assertEquals(1048, tiffField0.getOffset());
      assertEquals(959, tiffField0.getSortHint());
      assertEquals((-971), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1085), (-1085), fieldTypeAscii0, 2046L, (-2098L), byteArray0, byteOrder0, (byte)123);
      int int0 = tiffField0.getTag();
      assertEquals((-2098), tiffField0.getOffset());
      assertEquals((-1085), tiffField0.getDirectoryType());
      assertEquals((-1085), int0);
      assertEquals(123, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4641, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 1189, fieldTypeAscii0, 4L, 43, byteArray0, byteOrder0, 1447);
      String string0 = tiffField0.getStringValue();
      assertEquals(1447, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(43, tiffField0.getTag());
      assertEquals(1189, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-172), 1, fieldTypeByte0, 1, (-172), byteArray0, byteOrder0, 1529);
      int int0 = tiffField0.getSortHint();
      assertEquals(1529, int0);
      assertEquals((-172), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-172), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34377, "~]gY");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-904), (-5321), fieldTypeShort0, 50, 4L, byteArray0, byteOrder0, (byte) (-119));
      int int0 = tiffField0.getSortHint();
      assertEquals((-5321), tiffField0.getDirectoryType());
      assertEquals((-119), int0);
      assertEquals((-904), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getOffset();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-217), (-217), (FieldType) null, (-217), (-139L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals((-217), tiffField0.getDirectoryType());
      assertEquals((-217), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-139), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)68, (byte) (-58), fieldTypeShort0, (byte)68, (-1052L), byteArray0, byteOrder0, (-2112278997));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(198, int0);
      assertEquals(68, tiffField0.getTag());
      assertEquals((-2112278997), tiffField0.getSortHint());
      assertEquals((-1052), tiffField0.getOffset());
      assertEquals((-58), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37382, (byte) (-58), fieldTypeShort0, 1L, (byte) (-58), byteArray0, byteOrder0, 2147281531);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2147281531, tiffField0.getSortHint());
      assertEquals((-58), tiffField0.getDirectoryType());
      assertEquals(37382, tiffField0.getTag());
      assertEquals((-58), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37382, (-2112278997), fieldTypeByte0, 1L, 37382, byteArray0, byteOrder0, (-2112278997));
      tiffField0.getIntValue();
      assertEquals(37382, tiffField0.getOffset());
      assertEquals((-2112278997), tiffField0.getSortHint());
      assertEquals((-2112278997), tiffField0.getDirectoryType());
      assertEquals(37382, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(241, (byte)104, fieldTypeShort0, 1L, (-214L), byteArray0, byteOrder0, (byte) (-58));
      tiffField0.getIntValue();
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(241, tiffField0.getTag());
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals((-214), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-58), (byte)104, fieldTypeShort0, 1L, 3148L, byteArray0, byteOrder0, 1508);
      tiffField0.getIntValue();
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(1508, tiffField0.getSortHint());
      assertEquals((-58), tiffField0.getTag());
      assertEquals(3148, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, (String) null);
      TiffField tiffField0 = new TiffField((-2292), 1901, fieldTypeDouble0, 1235L, (-1383L), byteArray0, byteOrder0, 24);
      tiffField0.getFieldTypeName();
      assertEquals((-2292), tiffField0.getTag());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals((-1383), tiffField0.getOffset());
      assertEquals(1901, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1918, "");
      TiffField tiffField0 = new TiffField(1918, 2085, fieldTypeRational0, (-8589934508L), (-2046L), byteArray0, byteOrder0, 39);
      tiffField0.getFieldTypeName();
      assertEquals(1918, tiffField0.getTag());
      assertEquals(2085, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals((-2046), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-491), (-491), (FieldType) null, 3802L, 1L, byteArray0, (ByteOrder) null, (-1226));
      tiffField0.getFieldType();
      assertEquals((-491), tiffField0.getDirectoryType());
      assertEquals((-1226), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-491), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Hv[5%8");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeDouble0, 1623L, 3129L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(3129, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(75, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4641, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 1189, fieldTypeAscii0, 4L, 43, byteArray0, byteOrder0, 1447);
      tiffField0.getFieldType();
      assertEquals(43, tiffField0.getTag());
      assertEquals(1447, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(1189, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37382, (-2112278997), fieldTypeByte0, 1L, 37382, byteArray0, byteOrder0, (-2112278997));
      tiffField0.getDoubleValue();
      assertEquals(37382, tiffField0.getOffset());
      assertEquals(37382, tiffField0.getTag());
      assertEquals((-2112278997), tiffField0.getDirectoryType());
      assertEquals((-2112278997), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)25;
      TiffField tiffField0 = new TiffField(2142074369, 924, fieldTypeShort0, 1L, 767L, byteArray0, byteOrder0, (byte)25);
      tiffField0.getDoubleValue();
      assertEquals(2142074369, tiffField0.getTag());
      assertEquals(767, tiffField0.getOffset());
      assertEquals(924, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37382, (byte) (-58), fieldTypeShort0, 1L, (byte) (-58), byteArray0, byteOrder0, 2147281531);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-58), tiffField0.getOffset());
      assertEquals(2147281531, tiffField0.getSortHint());
      assertEquals((-58), tiffField0.getDirectoryType());
      assertEquals(37382, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 963);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(963, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-1), (byte)50, fieldTypeByte0.LONG, (byte)50, (byte)50, byteArray0, byteOrder0, 747);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(747, tiffField0.getSortHint());
      assertEquals(50, int0);
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-79), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, (-2424), fieldTypeShort0.FLOAT, 2142430745, 4L, byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals((-2424), tiffField0.getDirectoryType());
      assertEquals(2142430745L, long0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50937, 1, fieldTypeShort0, (byte) (-28), 3336L, byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-28L), long0);
      assertEquals(3336, tiffField0.getOffset());
      assertEquals(50937, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField(2871, 65001, fieldTypeByte0.LONG, 51022, 2142430745, byteArray0, byteOrder0, (-6510));
      tiffField0.getBytesLength();
      assertEquals(2142430745, tiffField0.getOffset());
      assertEquals(65001, tiffField0.getDirectoryType());
      assertEquals(2871, tiffField0.getTag());
      assertEquals((-6510), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, (-2424), fieldTypeShort0.FLOAT, 2142430745, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-2424), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1248), 0, fieldTypeShort0, 0, 4L, byteArray0, (ByteOrder) null, (byte)41);
      tiffField0.getByteOrder();
      assertEquals((-1248), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 0, fieldTypeByte0, 5, 0L, byteArray0, byteOrder0, 5);
      tiffField0.getByteOrder();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37382, (-2112278997), fieldTypeByte0, 1L, 37382, byteArray0, byteOrder0, (-2112278997));
      tiffField0.getByteArrayValue();
      assertEquals(37382, tiffField0.getOffset());
      assertEquals(37382, tiffField0.getTag());
      assertEquals((-2112278997), tiffField0.getDirectoryType());
      assertEquals((-2112278997), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 375);
      tiffField0.getByteArrayValue();
      assertEquals(375, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2574, 544, fieldTypeShort0, 2574, 2574, byteArray0, (ByteOrder) null, (byte) (-77));
      MockFile mockFile0 = new MockFile("Invalid value: ", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(2574, tiffField0.getTag());
      assertEquals(49L, mockFile0.length());
      assertEquals(544, tiffField0.getDirectoryType());
      assertEquals((-77), tiffField0.getSortHint());
      assertEquals(2574, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2775, 2775, fieldTypeShort0, 2775, 2775, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(2147483641, 2147483641, fieldTypeShort0.FLOAT, 2147483641, 2147483641, byteArray0, byteOrder0, 2147483641);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1885, 1885, fieldTypeByte0, 1L, 1885, byteArray0, byteOrder0, 1885);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeShort0.RATIONAL, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1901, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40093, 2301, fieldTypeRational0, 2301, (-2147483648L), byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(959, 959, (FieldType) null, 959, 959, byteArray0, byteOrder0, 959);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1068, 1068, fieldTypeShort0, (-6704L), (-6704L), byteArray0, byteOrder0, 1068);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(643, 643, fieldTypeShort0, 643, 643, (byte[]) null, byteOrder0, 643);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-514), (-514), fieldTypeShort0, (-514), (-514), byteArray0, byteOrder0, (-514));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeRational0, 1L, 1194, byteArray0, byteOrder0, 1194);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(306, 626, fieldTypeShort0, 306, 0L, (byte[]) null, byteOrder0, 306);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(88, 88, (FieldType) null, 88, 88, byteArray0, byteOrder0, 88);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146906212, 2146906212, fieldTypeShort0, 2146906212, 2146906212, byteArray0, byteOrder0, 2146906212);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1221, byteArray0, byteOrder0, 1221);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-3560), fieldTypeShort0, 27, 27, byteArray0, byteOrder0, (-3560));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1901, 50708, fieldTypeShort0, 1901, 1901, (byte[]) null, byteOrder0, 50708);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-75), (-75), fieldTypeShort0, (-75), (-75), byteArray0, byteOrder0, (-75));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 83);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1L, 108, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1925, 1925, fieldTypeShort0, 1925, 1925, (byte[]) null, byteOrder0, 1925);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1832), (-1832), fieldTypeShort0.RATIONAL, (-1832), (-1832), byteArray0, byteOrder0, (-1832));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3105), 583, (FieldType) null, (-3105), 583, (byte[]) null, byteOrder0, 1962);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 65535, fieldTypeShort0, 40094, 65535, byteArray0, byteOrder0, 1675);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(658, 658, fieldTypeShort0, 658, 658, (byte[]) null, byteOrder0, 658);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2611), (-2611), fieldTypeShort0, (-2611), (-2611), byteArray0, byteOrder0, (-2611));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(624, 624, (FieldType) null, 624, 624, byteArray0, byteOrder0, 624);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3320), (-3320), fieldTypeShort0, (-3320), (-3320), byteArray0, byteOrder0, (-3320));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(624, 624, fieldTypeShort0, 1L, 624, byteArray0, byteOrder0, 624);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3621, 3621, fieldTypeShort0, 3621, 3621, (byte[]) null, byteOrder0, 3621);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2542), (-2542), fieldTypeDouble0, (-2542), (-2542), byteArray0, byteOrder0, 1150);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(4456, (-2788), fieldTypeShort0, (-2788), (-2788), byteArray0, byteOrder0, 4456);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("e");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "e");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[84];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-3705), (-3705), fieldTypeDouble0, (-3705), (-3705), byteArray0, byteOrder0, (-3705));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(624, 926, (FieldType) null, 926, 624, byteArray0, byteOrder0, 624);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2551), (-2551), fieldTypeShort0, (-2551), (-2551), byteArray0, byteOrder0, (-2551));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 657, fieldTypeShort0.DOUBLE, 1, 895L, byteArray0, byteOrder0, 214);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "-k,Tl}");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1732, 1732, fieldTypeLong0, 969L, 0, (byte[]) null, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1732, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1732, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-79), "Hv[5%8");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-79), (-79), fieldTypeDouble0, 3129L, (-79), byteArray0, byteOrder0, (byte) (-6));
      tiffField0.getFieldType();
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals((-79), tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getTag());
      assertEquals((-79), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1930, 1930, fieldTypeShort0, 1930, 1930, byteArray0, byteOrder0, 1930);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-713), (-713), fieldTypeShort0, 1L, 1901, byteArray0, byteOrder0, 1901);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "zAy3");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146930029), (-1059), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).DOUBLE).SBYTE, 2283L, 1599L, (byte[]) null, byteOrder0, 50737);
      int int0 = tiffField0.getOffset();
      assertEquals((-1059), tiffField0.getDirectoryType());
      assertEquals((-2146930029), tiffField0.getTag());
      assertEquals(1599, int0);
      assertEquals(50737, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(273, 5, fieldTypeRational0, 1911, (-764L), byteArray0, byteOrder0, 495);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(495, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(273, tagInfo0.tag);
      assertEquals(273, tiffField0.getTag());
      assertEquals((-764), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-3874L), (-3874L), byteArray0, byteOrder0, 554);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(554, tiffField0.getSortHint());
      assertEquals((-3874), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 963);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(963, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(624, 624, fieldTypeShort0, 624, 624, byteArray0, byteOrder0, 624);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeByte0, 255, 255, byteArray0, byteOrder0, 255);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1251), (-1251), fieldTypeFloat0.IFD, 1923L, 1923L, byteArray0, byteOrder0, (-1251));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1251), tiffField0.getSortHint());
      assertEquals((-1251), tiffField0.getDirectoryType());
      assertEquals((-1251), tiffField0.getTag());
      assertEquals(1923, tiffField0.getOffset());
      assertEquals(1923L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1948, 1948, fieldTypeByte0, 1948, 1948, byteArray0, byteOrder0, 1948);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@47377860 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1911, 1911, fieldTypeRational0, 1911, 1911, byteArray0, byteOrder0, 1911);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1911, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1911L, tiffField0.getCount());
      assertEquals(1911, tiffField0.getSortHint());
      assertEquals(1911, tiffField0.getDirectoryType());
      assertEquals(1911, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(74, 74, fieldTypeByte0, 74, 74, byteArray0, byteOrder0, 74);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@79f849d3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[190];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(160, 160, fieldTypeDouble0, 160, 160, byteArray0, byteOrder0, 160);
      tiffField0.getDoubleArrayValue();
      assertEquals(160, tiffField0.getTag());
      assertEquals(160, tiffField0.getOffset());
      assertEquals(160, tiffField0.getSortHint());
      assertEquals(160, tiffField0.getDirectoryType());
      assertEquals(160L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[153];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1251), (-1251), fieldTypeFloat0.IFD, 597L, 597L, byteArray0, byteOrder0, (-1251));
      tiffField0.getDoubleArrayValue();
      assertEquals(597L, tiffField0.getCount());
      assertEquals((-1251), tiffField0.getSortHint());
      assertEquals((-1251), tiffField0.getTag());
      assertEquals(597, tiffField0.getOffset());
      assertEquals((-1251), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(624, 24, fieldTypeShort0.IFD, 24, 24, byteArray0, byteOrder0, 624);
      tiffField0.getDoubleArrayValue();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(624, tiffField0.getTag());
      assertEquals(624, tiffField0.getSortHint());
      assertEquals(24L, tiffField0.getCount());
      assertEquals(24, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(614, 614, fieldTypeShort0, 614, 614, byteArray0, byteOrder0, 614);
      tiffField0.getDoubleArrayValue();
      assertEquals(614, tiffField0.getDirectoryType());
      assertEquals(614L, tiffField0.getCount());
      assertEquals(614, tiffField0.getTag());
      assertEquals(614, tiffField0.getOffset());
      assertEquals(614, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1886, 1886, fieldTypeRational0, 1886, 1886, byteArray0, byteOrder0, 1886);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1886, tiffField0.getDirectoryType());
      assertEquals(1886L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1886, tiffField0.getOffset());
      assertEquals(1886, tiffField0.getTag());
      assertEquals(1886, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 41, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField((-2147483625), (-2147483625), fieldTypeShort0.FLOAT, (-2147483625), (-2147483625), byteArray0, byteOrder0, (-2147483625));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2147483625), tiffField0.getOffset());
      assertEquals((-2147483625), tiffField0.getSortHint());
      assertEquals((-2147483625), tiffField0.getDirectoryType());
      assertEquals((-2147483625), tiffField0.getTag());
      assertEquals((-2147483625L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[123];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-913), 34017, fieldTypeLong0, 34017, 34017, byteArray0, byteOrder0, (-913));
      tiffField0.getIntArrayValue();
      assertEquals(34017, tiffField0.getOffset());
      assertEquals((-913), tiffField0.getTag());
      assertEquals((-913), tiffField0.getSortHint());
      assertEquals(34017L, tiffField0.getCount());
      assertEquals(34017, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(614, 614, fieldTypeShort0, 614, 614, byteArray0, byteOrder0, 614);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(614, tiffField0.getDirectoryType());
      assertEquals(614, tiffField0.getSortHint());
      assertEquals(614, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(614, tiffField0.getOffset());
      assertEquals(614L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1886, 1886, fieldTypeRational0, 1886, 1886, byteArray0, byteOrder0, 1886);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1921, 1921, fieldTypeShort0.SRATIONAL, 1921, 1921, byteArray0, byteOrder0, 1921);
      tiffField0.getIntArrayValue();
      assertEquals(1921, tiffField0.getDirectoryType());
      assertEquals(1921L, tiffField0.getCount());
      assertEquals(1921, tiffField0.getTag());
      assertEquals(1921, tiffField0.getSortHint());
      assertEquals(1921, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1930, 1930, fieldTypeShort0, 1L, 1930, byteArray0, byteOrder0, 1930);
      tiffField0.getIntArrayValue();
      assertEquals(1930, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1930, tiffField0.getOffset());
      assertEquals(1930, tiffField0.getTag());
      assertEquals(1930, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeByte0, 255, 255, byteArray0, byteOrder0, 255);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4021dfb1 for: 255 (0xff: SubfileType): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 3668, fieldTypeAscii0, 0, 3668, byteArray0, byteOrder0, 3668);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(3668, tiffField0.getSortHint());
      assertEquals(3668, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(3668, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(614, 614, fieldTypeShort0, 614, 614, byteArray0, byteOrder0, 614);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@78dcdfe1
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-954), (-954), (FieldType) null, (-954), (-954), (byte[]) null, byteOrder0, 1193);
      String string0 = tiffField0.getTagName();
      assertEquals(1193, tiffField0.getSortHint());
      assertEquals((-954), tiffField0.getDirectoryType());
      assertEquals((-954), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffffc46)", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48323, 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("AlphaByteCount", string0);
      assertEquals(48323, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField((-2147483618), (-2147483618), fieldTypeShort0.FLOAT, (-2147483618), (-2147483618), byteArray0, byteOrder0, (-2147483618));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1911, 1911, fieldTypeFloat0, 510L, 2215L, byteArray0, byteOrder0, 23);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1911, tiffField0.getDirectoryType());
      assertEquals(1911, tiffField0.getTag());
      assertEquals(2215, tiffField0.getOffset());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(510L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[317];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1908, 1908, fieldTypeByte0, 1908, (-1481L), byteArray0, byteOrder0, 1908);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1908, tiffField0.getTag());
      assertEquals(1908L, tiffField0.getCount());
      assertEquals(1908, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1481), tiffField0.getOffset());
      assertEquals(1908, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeByte0, 255, 255, byteArray0, byteOrder0, 255);
      String string0 = tiffField0.toString();
      assertEquals("255 (0xff: SubfileType): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (255 Undefined)", string0);
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2147483618), (-2147483618), fieldTypeLong0, (-2147483618), (-2147483618), byteArray0, byteOrder0, (-2147483618));
      assertEquals(120, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147483618), tiffField0.getTag());
      assertEquals((-2147483618L), tiffField0.getCount());
      assertEquals((-2147483618), tiffField0.getSortHint());
      assertEquals((-2147483618), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-2147483618), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[276];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(78, 78, fieldTypeLong0, 78, 78, byteArray0, byteOrder0, 78);
      String string0 = tiffField0.getValueDescription();
      assertEquals(78, tiffField0.getOffset());
      assertEquals(78, tiffField0.getTag());
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(78L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (69)", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[150];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1887, 1887, fieldTypeShort0, 1887, (-345L), byteArray0, byteOrder0, 1887);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1887, tiffField0.getSortHint());
      assertEquals(1887, tiffField0.getDirectoryType());
      assertEquals(1887, tiffField0.getTag());
      assertEquals(3774, tiffField0.getBytesLength());
      assertEquals(1887L, tiffField0.getCount());
      assertEquals((-345), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1911, 50, fieldTypeAscii0, 1911, (-3134L), byteArray0, byteOrder0, 1911);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1911, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-3134), tiffField0.getOffset());
      assertEquals(1911, tiffField0.getSortHint());
      assertEquals(1911, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 3668, fieldTypeAscii0, 0, 3668, byteArray0, byteOrder0, 3668);
      tiffField0.toString();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(3668, tiffField0.getOffset());
      assertEquals(3668, tiffField0.getSortHint());
      assertEquals(3668, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(Integer.MIN_VALUE, Integer.MIN_VALUE, fieldTypeShort0.FLOAT, Integer.MIN_VALUE, Integer.MIN_VALUE, byteArray0, byteOrder0, Integer.MIN_VALUE);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(Integer.MIN_VALUE, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-172), 1, fieldTypeByte0, 1, (-172), byteArray0, byteOrder0, 1529);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(11, 1529);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1529, tiffField0.getSortHint());
      assertEquals((-172), tiffField0.getTag());
      assertEquals((-172), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 963);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(963, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(963, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(659, 659, fieldTypeShort0, 659, 659, byteArray0, byteOrder0, 659);
      tiffField0.getFieldTypeName();
      assertEquals(659, tiffField0.getSortHint());
      assertEquals(659, tiffField0.getDirectoryType());
      assertEquals(659, tiffField0.getTag());
      assertEquals(659, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-954), (-954), (FieldType) null, (-954), (-954), (byte[]) null, byteOrder0, 1193);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-954), tiffField0.getOffset());
      assertEquals((-954), int0);
      assertEquals(1193, tiffField0.getSortHint());
      assertEquals((-954), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeByte0, 255, 255, byteArray0, byteOrder0, 255);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("255 (0xff: SubfileType): ", string0);
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(624, 624, fieldTypeShort0, 624, 624, byteArray0, byteOrder0, 624);
      tiffField0.dump();
      assertEquals(1248, tiffField0.getBytesLength());
      assertEquals(624L, tiffField0.getCount());
      assertEquals(624, tiffField0.getTag());
      assertEquals(624, tiffField0.getSortHint());
      assertEquals(624, tiffField0.getOffset());
      assertEquals(624, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[66];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1918, 1918, fieldTypeDouble0, 1918, 1918, byteArray0, byteOrder0, 1918);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1918, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1918L, tiffField0.getCount());
      assertEquals(1918, tiffField0.getSortHint());
      assertEquals(1918, tiffField0.getTag());
      assertEquals(15344, tiffField0.getBytesLength());
      assertEquals(1918, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1918, 1918, fieldTypeShort0.SRATIONAL, 1918, 1918, byteArray0, byteOrder0, 1918);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(1918, tiffField0.getTag());
      assertEquals(1918L, tiffElement0.offset);
      assertEquals(1918, tiffField0.getDirectoryType());
      assertEquals(1918, tiffField0.getSortHint());
  }
}
