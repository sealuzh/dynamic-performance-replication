/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 01:17:25 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)58;
      TiffField tiffField0 = new TiffField(3897, 96, fieldTypeShort0, 96, 255L, byteArray0, (ByteOrder) null, (byte) (-87));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(3897, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(58, int0);
      assertEquals(96, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[7] = (byte)80;
      byteArray0[1] = (byte)80;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 3, fieldTypeRational0, 40L, 1421L, byteArray0, byteOrder0, (-1749));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(65536, int0);
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-1749), tiffField0.getSortHint());
      assertEquals(1421, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[7] = (byte)80;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 3, fieldTypeRational0, 40L, 1421L, byteArray0, byteOrder0, (-1749));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-1749), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(1421, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(123, (-1537), fieldTypeShort0.ASCII, 4L, 4L, byteArray0, byteOrder0, 41992);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(123, tiffField0.getTag());
      assertEquals(41992, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1537), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37510, (-445), fieldTypeShort0, (byte)0, (byte)58, byteArray0, byteOrder0, (-1181));
      String string0 = tiffField0.toString();
      assertEquals((-1181), tiffField0.getSortHint());
      assertEquals("37510 (0x9286: UserComment): Invalid value: GPS text field not encoded as bytes. (0 Short)", string0);
      assertEquals((-445), tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1741, 1741, fieldTypeByte0.RATIONAL, (byte)3, 0L, byteArray0, (ByteOrder) null, (byte) (-28));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-28), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1741, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("", string0);
      assertEquals(1741, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37510, (-445), fieldTypeShort0, (byte)0, (byte)58, byteArray0, byteOrder0, (-1181));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(37510, tagInfo0.tag);
      assertEquals(58, tiffField0.getOffset());
      assertEquals((-445), tiffField0.getDirectoryType());
      assertEquals(37510, tiffField0.getTag());
      assertEquals((-1181), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeLong0, 400, 400, byteArray0, byteOrder0, (byte) (-97));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tiffField0.getOffset());
      assertEquals((-97), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1942, fieldTypeRational0, 2005L, 2841L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(1942, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2841, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, (-1747), fieldTypeShort0, 2048L, (-1128L), byteArray0, byteOrder0, (byte) (-82));
      int int0 = tiffField0.getTag();
      assertEquals((-1747), tiffField0.getDirectoryType());
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals((-1128), tiffField0.getOffset());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(676, (-815), fieldTypeShort0.ASCII, 2739L, (-5392L), byteArray0, byteOrder0, (-548));
      String string0 = tiffField0.getStringValue();
      assertEquals((-548), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-815), tiffField0.getDirectoryType());
      assertEquals((-5392), tiffField0.getOffset());
      assertEquals(676, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1025, 1025, fieldTypeByte0, 1L, 1025, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(1025, tiffField0.getOffset());
      assertEquals(1025, tiffField0.getTag());
      assertEquals(1025, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1741, 1741, fieldTypeByte0.RATIONAL, (byte)3, 0L, byteArray0, (ByteOrder) null, (byte) (-28));
      int int0 = tiffField0.getSortHint();
      assertEquals(1741, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1741, tiffField0.getDirectoryType());
      assertEquals((-28), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1741, 1741, fieldTypeRational0, (byte)60, 0L, byteArray0, (ByteOrder) null, (byte) (-28));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(1741, tiffField0.getTag());
      assertEquals(1741, tiffField0.getDirectoryType());
      assertEquals((-28), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, (byte)60, fieldTypeByte0, (byte)60, (byte)60, byteArray0, byteOrder0, 9);
      int int0 = tiffField0.getOffset();
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(60, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65107, 4155, fieldTypeLong0, (byte)1, (byte)0, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4155, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(65107, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-101);
      TiffField tiffField0 = new TiffField((-1610612735), 47, fieldTypeLong0, 2385L, 1024L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(1024, tiffField0.getOffset());
      assertEquals((-1610612735), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)80;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-2144569829), (-2144569829), fieldTypeByte0, 1L, (byte)80, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getIntValue();
      assertEquals(80, tiffField0.getOffset());
      assertEquals((-2144569829), tiffField0.getTag());
      assertEquals((-2144569829), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-15);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (byte) (-117), fieldTypeShort0, (byte)1, 255L, byteArray0, byteOrder0, 340);
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-117), tiffField0.getDirectoryType());
      assertEquals(340, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(41484, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41484, 41484, fieldTypeLong0, 41484, 41484, byteArray0, byteOrder0, 41484);
      tiffField0.getFieldTypeName();
      assertEquals(41484, tiffField0.getSortHint());
      assertEquals(41484, tiffField0.getTag());
      assertEquals(41484, tiffField0.getOffset());
      assertEquals(41484, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1072), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2324, 1488, fieldTypeFloat0, 1488, 50733, byteArray0, byteOrder0, 1488);
      tiffField0.getFieldTypeName();
      assertEquals(1488, tiffField0.getSortHint());
      assertEquals(1488, tiffField0.getDirectoryType());
      assertEquals(2324, tiffField0.getTag());
      assertEquals(50733, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2137401565, 581, (FieldType) null, 2144893197L, 1L, byteArray0, byteOrder0, (-274));
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(581, tiffField0.getDirectoryType());
      assertEquals((-274), tiffField0.getSortHint());
      assertEquals(2137401565, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "$4");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(123, (-1537), fieldTypeAscii0, 4L, 4L, byteArray0, byteOrder0, 41992);
      tiffField0.getFieldType();
      assertEquals((-1537), tiffField0.getDirectoryType());
      assertEquals(41992, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(123, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3831), "4+#u");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 416, fieldTypeByte0, (-326L), (-738L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getFieldType();
      assertEquals(416, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-738), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-24);
      TiffField tiffField0 = new TiffField(359, 33467, fieldTypeShort0, 1L, 33467, byteArray0, byteOrder0, (byte) (-24));
      tiffField0.getDoubleValue();
      assertEquals(33467, tiffField0.getOffset());
      assertEquals(33467, tiffField0.getDirectoryType());
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(359, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-88);
      TiffField tiffField0 = new TiffField((-1745), (-3398), fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 70);
      tiffField0.getDoubleValue();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals((-1745), tiffField0.getTag());
      assertEquals((-3398), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-732), 625, fieldTypeByte0, 815, 1468L, byteArray0, byteOrder0, (-1142));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-732), tiffField0.getTag());
      assertEquals(625, int0);
      assertEquals((-1142), tiffField0.getSortHint());
      assertEquals(1468, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3165), "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(745, (-2144569829), fieldTypeByte0, (-3531L), 0L, byteArray0, byteOrder0, (-2144569829));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2144569829), int0);
      assertEquals(745, tiffField0.getTag());
      assertEquals((-2144569829), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2546, "O'^8;iw:N");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-2123L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2123), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1415, (-434), fieldTypeRational0, 332L, 1185L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getCount();
      assertEquals(1415, tiffField0.getTag());
      assertEquals(1185, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-434), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)58, (byte)58, fieldTypeShort0, (-2147483648L), (-1223L), byteArray0, (ByteOrder) null, 50);
      tiffField0.getBytesLength();
      assertEquals((-1223), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(58, tiffField0.getTag());
      assertEquals(58, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2142981585, (-1002), fieldTypeByte0, (-493L), (-1002), byteArray0, byteOrder0, (byte)1);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1002), tiffField0.getOffset());
      assertEquals(2142981585, tiffField0.getTag());
      assertEquals((-1002), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)58, (byte)58, fieldTypeShort0, (-2147483648L), (-1223L), byteArray0, (ByteOrder) null, 50);
      tiffField0.getByteOrder();
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(58, tiffField0.getTag());
      assertEquals((-1223), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3165), "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-3165));
      tiffField0.getByteArrayValue();
      assertEquals((-3165), tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getDirectoryType());
      assertEquals(50217, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeRational0, 26, 44L, byteArray0, byteOrder0, (-61));
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("26 (0x1a: Unknown Tag): ", "26 (0x1a: Unknown Tag): ", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(42L, file0.length());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(539, 0, fieldTypeLong0, 0L, 0, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-605), (byte)64, fieldTypeRational0, (-1L), 2147483647L, byteArray0, byteOrder0, (-370));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(248, 248, fieldTypeByte0, 3918L, 2371L, (byte[]) null, byteOrder0, 248);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3180, 65535, fieldTypeShort0.FLOAT, (-1426L), 111, byteArray0, byteOrder0, (-2013));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2617), 0, fieldTypeRational0, (-2617), (-2617), byteArray0, byteOrder0, 3813);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-267), fieldTypeLong0, 0L, 0L, (byte[]) null, byteOrder0, (-184));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3256), " ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-3256), fieldTypeShort0, (-1L), 0L, byteArray0, byteOrder0, (byte) (-84));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1942, fieldTypeRational0, 2005L, 2841L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1091), (-1091), fieldTypeFloat0, (-1091), 0L, byteArray0, byteOrder0, (-788));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-51), (byte)60, fieldTypeByte0, 4L, (byte)0, byteArray0, byteOrder0, 1186);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[346];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), 1388, fieldTypeDouble0, (byte) (-1), (-893L), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(70, 32898, (FieldType) null, 4L, 70, byteArray0, byteOrder0, (byte) (-97));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-1937), fieldTypeShort0, (-169L), 70, byteArray0, byteOrder0, (-3398));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)24, fieldTypeShort0, 2385L, 0L, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "-1 (0xffffffff: Unknown Tag): ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-101), (byte)120, fieldTypeLong0, (byte) (-101), 900, byteArray0, byteOrder0, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(384, 0, fieldTypeAscii0.SRATIONAL, 0, (byte)50, byteArray0, (ByteOrder) null, 752);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(384, tiffField0.getTag());
      assertEquals(752, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-267), fieldTypeLong0, 0L, 0L, (byte[]) null, byteOrder0, (-184));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-267), tiffField0.getDirectoryType());
      assertEquals((-184), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1745), (-3398), fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 70);
      tiffField0.getByteArrayValue();
      assertEquals((-1745), tiffField0.getTag());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals((-3398), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 961, fieldTypeAscii0, 1L, 6780L, byteArray0, byteOrder0, (-996));
      tiffField0.getFieldType();
      assertEquals((-996), tiffField0.getSortHint());
      assertEquals(6780, tiffField0.getOffset());
      assertEquals(961, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(384, 0, fieldTypeAscii0.SRATIONAL, 0, (byte)50, byteArray0, (ByteOrder) null, 752);
      tiffField0.getValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(752, tiffField0.getSortHint());
      assertEquals(384, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-28), (-2121), fieldTypeLong0, (byte)86, (byte)86, byteArray0, byteOrder0, (-936));
      int int0 = tiffField0.getTag();
      assertEquals((-28), int0);
      assertEquals((-2121), tiffField0.getDirectoryType());
      assertEquals((-936), tiffField0.getSortHint());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-276), (-276), fieldTypeByte0, (-276), (-276), byteArray0, byteOrder0, (-2343));
      tiffField0.getCount();
      assertEquals((-276), tiffField0.getTag());
      assertEquals((-276), tiffField0.getDirectoryType());
      assertEquals((-276), tiffField0.getOffset());
      assertEquals((-2343), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)60, 50, fieldTypeByte0, 1L, 50, byteArray0, (ByteOrder) null, (byte)60);
      tiffField0.getBytesLength();
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146923823), 324, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-2228));
      tiffField0.getIntValue();
      assertEquals((-2146923823), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(324, tiffField0.getDirectoryType());
      assertEquals((-2228), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1030, 1030, fieldTypeByte0, 1030, (-736L), byteArray0, byteOrder0, (-1717986917));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@52497a1e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2138961887, (-1745), fieldTypeRational0, (byte)80, 2147483647L, byteArray0, byteOrder0, (byte)64);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 4041, fieldTypeDouble0, 416, 0L, byteArray0, byteOrder0, (byte) (-121));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals(4041, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4516, (-2129129085), fieldTypeRational0.FLOAT, (byte)60, (byte)60, byteArray0, byteOrder0, (byte)60);
      tiffField0.getDoubleArrayValue();
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(4516, tiffField0.getTag());
      assertEquals(60, tiffField0.getOffset());
      assertEquals((-2129129085), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)86, (byte)86, fieldTypeLong0, 1263L, (byte)1, byteArray0, byteOrder0, 195);
      tiffField0.getDoubleArrayValue();
      assertEquals(195, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(86, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 1126, fieldTypeShort0, 4314L, 4946L, byteArray0, byteOrder0, 1678);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(1126, tiffField0.getDirectoryType());
      assertEquals(1678, tiffField0.getSortHint());
      assertEquals(4946, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(384, 961, fieldTypeAscii0, 961, (-2021L), byteArray0, byteOrder0, 2793);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@63d8563c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1745), (-3398), fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 70);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3398), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals((-1745), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 235, fieldTypeAscii0.RATIONAL, 2040L, 1741, byteArray0, (ByteOrder) null, (byte)50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(235, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1741, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)58, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2082408385, (byte)0, fieldTypeLong0, 824L, (-1L), byteArray0, byteOrder0, 528);
      tiffField0.getIntArrayValue();
      assertEquals(2082408385, tiffField0.getTag());
      assertEquals(528, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-51), (byte)60, fieldTypeByte0, 4L, (byte)0, byteArray0, byteOrder0, 1186);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@b6cc41a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 235, fieldTypeAscii0.SRATIONAL, 2040L, 1741, byteArray0, (ByteOrder) null, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)29, 2703, fieldTypeByte0.SSHORT, 115L, 0L, byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2703, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(29, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(346, 346, fieldTypeFloat0, 1L, (-1326L), byteArray0, byteOrder0, (byte)32);
      tiffField0.getIntArrayValue();
      assertEquals(346, tiffField0.getTag());
      assertEquals(346, tiffField0.getDirectoryType());
      assertEquals((-1326), tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(384, 0, fieldTypeAscii0.RATIONAL, 0, (byte)50, byteArray0, (ByteOrder) null, 752);
      tiffField0.getIntArrayValue();
      assertEquals(384, tiffField0.getTag());
      assertEquals(752, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      TiffField tiffField0 = new TiffField(2141186041, 2137401565, fieldTypeAscii0, 2141186041, 2145001007, byteArray0, byteOrder0, 51);
      String string0 = tiffField0.getStringValue();
      assertEquals(2141186041, tiffField0.getTag());
      assertEquals(51, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2137401565, tiffField0.getDirectoryType());
      assertEquals(2145001007, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2141186041, 2137401565, fieldTypeAscii0, 2141186041, 2145001007, byteArray0, byteOrder0, 51);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@18eaf809
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(384, 0, fieldTypeAscii0.SRATIONAL, 0, (byte)50, byteArray0, (ByteOrder) null, 752);
      String string0 = tiffField0.getTagName();
      assertEquals(752, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x180)", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3165), "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-3165));
      String string0 = tiffField0.getTagName();
      assertEquals((-3165), tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getDirectoryType());
      assertEquals(50217, tiffField0.getTag());
      assertEquals("Oce Identification Number", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 416, fieldTypeDouble0.SBYTE, (-326L), (-738L), byteArray0, byteOrder0, (-1717986917));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4+#u");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "4+#u");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(84, 1942, fieldTypeShort0.FLOAT, 65L, 84, byteArray0, byteOrder0, 117);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1942, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getTag());
      assertEquals(84, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 181, fieldTypeFloat0, 4L, 50734, byteArray0, byteOrder0, 1103);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1103, tiffField0.getSortHint());
      assertEquals(50734, tiffField0.getOffset());
      assertEquals(181, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2574, "i;0@O< gG+ZPbbnv2");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 2574, fieldTypeByte0, 607L, (byte)60, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(2574, tiffField0.getDirectoryType());
      assertEquals("14 (0xe: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (63) (607 i;0@O< gG+ZPbbnv2)", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[424];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1388, (-1237), fieldTypeDouble0, 1388, (-1237), byteArray0, byteOrder0, (-1237));
      tiffField0.dump();
      assertEquals(1388, tiffField0.getTag());
      assertEquals((-1237), tiffField0.getSortHint());
      assertEquals((-1237), tiffField0.getDirectoryType());
      assertEquals((-1237), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, (-32), fieldTypeDouble0, (-2144569829), 1480L, byteArray0, byteOrder0, (-2147085743));
      assertEquals(23310552, tiffField0.getBytesLength());
      
      String string0 = tiffField0.toString();
      assertEquals(1480, tiffField0.getOffset());
      assertEquals((-32), tiffField0.getDirectoryType());
      assertEquals((-2147085743), tiffField0.getSortHint());
      assertEquals("1 (0x1: InteroperabilityIndex): 0.0 (-2144569829 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)64, (byte)64, fieldTypeShort0.IFD, (byte)64, 2582L, byteArray0, byteOrder0, (byte)64);
      tiffField0.dump();
      assertEquals(64, tiffField0.getTag());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(2582, tiffField0.getOffset());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(64, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)86, (byte)86, fieldTypeLong0, 1263L, (byte)1, byteArray0, byteOrder0, 195);
      String string0 = tiffField0.toString();
      assertEquals(5052, tiffField0.getBytesLength());
      assertEquals("86 (0x56: Unknown Tag): 0, 0 (1263 SLong)", string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(195, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[104];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)64, fieldTypeShort0, 34882, 0L, byteArray0, byteOrder0, 4235);
      tiffField0.dump();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(69764, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(4235, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1030, 1030, fieldTypeByte0, 1030, (-736L), byteArray0, byteOrder0, (-1717986917));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown Tag (0x1d)");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1030, tiffField0.getBytesLength());
      assertEquals(1030, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(1030, tiffField0.getDirectoryType());
      assertEquals((-736), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3180, 48131, fieldTypeShort0.ASCII, 123L, 4L, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(48131, tiffField0.getDirectoryType());
      assertEquals(3180, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(123, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 961, fieldTypeAscii0, 1L, 6780L, byteArray0, byteOrder0, (-996));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("L<@");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-996), tiffField0.getSortHint());
      assertEquals(961, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(6780, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)60, 50, fieldTypeByte0, 1L, 50, byteArray0, (ByteOrder) null, (byte)60);
      String string0 = tiffField0.getValueDescription();
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 2157L, 0L, byteArray0, byteOrder0, (byte)12);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0L, tiffElement0.offset);
      assertEquals(0, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1741, 1741, fieldTypeByte0.SRATIONAL, (byte)3, 0L, byteArray0, (ByteOrder) null, (byte) (-28));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2144569829), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertEquals((-28), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1741, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(1741, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1745), (-3398), fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 70);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1745), tiffField0.getTag());
      assertEquals(70, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-3398), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145276572), (byte)60, fieldTypeByte0, (byte)60, 2147483647L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2145276572), tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getBytesLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals(50217, tiffField0.getTag());
      assertEquals(50217, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "i;0@O< gG+ZPbbnv2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)5, 333, fieldTypeByte0, 626L, (-990L), byteArray0, byteOrder0, 41730);
      int int0 = tiffField0.getOffset();
      assertEquals(41730, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-990), int0);
      assertEquals(626, tiffField0.getBytesLength());
      assertEquals(333, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(384, 0, fieldTypeAscii0.SRATIONAL, 0, (byte)50, byteArray0, (ByteOrder) null, 752);
      int int0 = tiffField0.getDirectoryType();
      assertTrue(tiffField0.isLocalValue());
      assertEquals(0, int0);
      assertEquals(384, tiffField0.getTag());
      assertEquals(752, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(384, 0, fieldTypeAscii0.SRATIONAL, 0, (byte)50, byteArray0, (ByteOrder) null, 752);
      int int0 = tiffField0.getSortHint();
      assertEquals(384, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(752, int0);
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3165), "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-3165));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-3165), tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getDirectoryType());
      assertEquals("50217 (0xc429: Oce Identification Number): ", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)29, 2703, fieldTypeByte0.SSHORT, 115L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(230, tiffField0.getBytesLength());
      assertEquals(29, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2703, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1745), (-3398), fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 70);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1745), tiffField0.getTag());
      assertEquals((-3398), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 235, fieldTypeAscii0.SRATIONAL, 2040L, 1741, byteArray0, (ByteOrder) null, (byte)50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-3071));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(235, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(1741, tiffField0.getOffset());
      assertEquals(2040L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }
}
