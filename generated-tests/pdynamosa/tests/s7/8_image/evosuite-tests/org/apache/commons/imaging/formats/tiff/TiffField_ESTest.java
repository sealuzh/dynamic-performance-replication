/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 15:47:49 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, (-861), fieldTypeLong0, 1, 2273L, byteArray0, byteOrder0, (-1831));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-861), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-1831), tiffField0.getSortHint());
      assertEquals(2273, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-2147274161), fieldTypeLong0, 5912L, 236L, byteArray0, byteOrder0, 334);
      String string0 = tiffField0.toString();
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (5912 SLong)", string0);
      assertEquals(334, tiffField0.getSortHint());
      assertEquals((-2147274161), tiffField0.getDirectoryType());
      assertEquals(236, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 2535L, 0L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeFloat0.IFD, 40965, 40965, byteArray0, byteOrder0, 40965);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(40965, tiffField0.getSortHint());
      assertEquals(1, tagInfo0.length);
      assertEquals(40965, tiffField0.getOffset());
      assertEquals(40965, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (-2147372476), fieldTypeRational0, (-1281L), (-2910L), byteArray0, byteOrder0, (byte)111);
      int int0 = tiffField0.getTag();
      assertEquals((-2147372476), tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals((-2910), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, (byte)113, fieldTypeShort0, (byte)0, 54L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(54, tiffField0.getOffset());
      assertEquals(107, int0);
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)11;
      TiffField tiffField0 = new TiffField(50, 291, fieldTypeAscii0, 291, 2378L, byteArray0, byteOrder0, 291);
      String string0 = tiffField0.getStringValue();
      assertEquals(291, tiffField0.getDirectoryType());
      assertEquals(2378, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(291, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-588), fieldTypeLong0, (-588), 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-588), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-588), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2147274161), 1809, fieldTypeFloat0, 1809, 620L, byteArray0, byteOrder0, (-2108));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2108), int0);
      assertEquals((-2147274161), tiffField0.getTag());
      assertEquals(620, tiffField0.getOffset());
      assertEquals(1809, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147274197), (-2147274197), fieldTypeLong0, (-476L), 1478, byteArray0, byteOrder0, (-2147274197));
      int int0 = tiffField0.getOffset();
      assertEquals((-2147274197), tiffField0.getTag());
      assertEquals((-2147274197), tiffField0.getSortHint());
      assertEquals(1478, int0);
      assertEquals((-2147274197), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2767), "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5597, 941, fieldTypeAscii0, 941, (-1607L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(5597, tiffField0.getTag());
      assertEquals((-1607), int0);
      assertEquals(941, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)62;
      byteArray0[4] = (byte)38;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)32, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, 1453);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1453, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(106927, int0);
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-19);
      TiffField tiffField0 = new TiffField(400, 0, fieldTypeFloat0.SHORT, 1155L, 0L, byteArray0, (ByteOrder) null, (byte)66);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(400, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-4864), int0);
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      byteArray0[2] = (byte)94;
      TiffField tiffField0 = new TiffField(2147188542, 2147188542, fieldTypeLong0, 1L, 2147188542, byteArray0, byteOrder0, 322);
      tiffField0.getIntValue();
      assertEquals(2147188542, tiffField0.getTag());
      assertEquals(2147188542, tiffField0.getDirectoryType());
      assertEquals(2147188542, tiffField0.getOffset());
      assertEquals(322, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-109);
      TiffField tiffField0 = new TiffField(0, (-1062), fieldTypeLong0, 1L, (-4532L), byteArray0, byteOrder0, (byte)37);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals((-4532), tiffField0.getOffset());
      assertEquals((-1062), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 1, fieldTypeLong0, 1, (-2147483648L), byteArray0, byteOrder0, 32);
      tiffField0.getFieldTypeName();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getTag());
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-653), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 50341, fieldTypeShort0, (-653), (-545L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(50341, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50341, tiffField0.getTag());
      assertEquals((-545), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(325, 1807, (FieldType) null, (-77L), (-77L), byteArray0, byteOrder0, (-839));
      tiffField0.getFieldType();
      assertEquals(1807, tiffField0.getDirectoryType());
      assertEquals((-77), tiffField0.getOffset());
      assertEquals(325, tiffField0.getTag());
      assertEquals((-839), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "[double[]: ");
      TiffField tiffField0 = new TiffField(3983, 0, fieldTypeDouble0, 3983, 0, byteArray0, byteOrder0, 3983);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3983, tiffField0.getTag());
      assertEquals(3983, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-653), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 50341, fieldTypeShort0, (-653), (-545L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50341, tiffField0.getDirectoryType());
      assertEquals(50341, tiffField0.getTag());
      assertEquals((-545), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)25;
      TiffField tiffField0 = new TiffField(0, (-2146583234), fieldTypeLong0.SHORT, 1L, 64L, byteArray0, byteOrder0, 2145285609);
      tiffField0.getDoubleValue();
      assertEquals(2145285609, tiffField0.getSortHint());
      assertEquals((-2146583234), tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-47);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1144, 1, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (byte) (-47));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1144, tiffField0.getTag());
      assertEquals((-47), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, (-150L), byteArray0, byteOrder0, 38);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-150), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(38, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-653), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 50341, fieldTypeShort0, (-653), (-545L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50341, tiffField0.getTag());
      assertEquals(50341, int0);
      assertEquals((-545), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1618, 2137401565, fieldTypeFloat0, 0, 1183, byteArray0, byteOrder0, 2137401565);
      tiffField0.getCount();
      assertEquals(2137401565, tiffField0.getSortHint());
      assertEquals(1183, tiffField0.getOffset());
      assertEquals(1618, tiffField0.getTag());
      assertEquals(2137401565, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34911, "Me}({ZcT-E");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(327, (-2509), fieldTypeShort0, 34911, (-970L), byteArray0, byteOrder0, (byte)63);
      tiffField0.getCount();
      assertEquals((-970), tiffField0.getOffset());
      assertEquals((-2509), tiffField0.getDirectoryType());
      assertEquals(327, tiffField0.getTag());
      assertEquals(63, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-588), fieldTypeLong0, (-588), 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-588), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-588), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, "V&M0g");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2, (-1), fieldTypeShort0, 0L, (byte)0, byteArray0, byteOrder0, (byte)114);
      tiffField0.getBytesLength();
      assertEquals(114, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-653), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 50341, fieldTypeShort0, (-653), (-545L), byteArray0, byteOrder0, 50);
      tiffField0.getBytesLength();
      assertEquals(50341, tiffField0.getDirectoryType());
      assertEquals(50341, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-545), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-528), 3317, fieldTypeFloat0.SBYTE, 16L, 2021161080, byteArray0, (ByteOrder) null, 3317);
      tiffField0.getByteOrder();
      assertEquals((-528), tiffField0.getTag());
      assertEquals(3317, tiffField0.getSortHint());
      assertEquals(3317, tiffField0.getDirectoryType());
      assertEquals(2021161080, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3203), 181, fieldTypeByte0, (-3203), (-140), byteArray0, byteOrder0, (-3203));
      tiffField0.getByteOrder();
      assertEquals((-3203), tiffField0.getSortHint());
      assertEquals((-3203), tiffField0.getTag());
      assertEquals((-140), tiffField0.getOffset());
      assertEquals(181, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-1183), fieldTypeLong0, 200L, 0L, byteArray0, byteOrder0, (-2179));
      tiffField0.getByteArrayValue();
      assertEquals((-2179), tiffField0.getSortHint());
      assertEquals((-588), tiffField0.getTag());
      assertEquals((-1183), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, (byte)113, fieldTypeShort0, (byte)0, 54L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(107, tiffField0.getTag());
      assertEquals(54, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(113, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-1L), 0, byteArray0, byteOrder0, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("mZwg#_./Uvlvd\\,");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-528), 3317, fieldTypeFloat0.BYTE, 16L, 2021161080, byteArray0, (ByteOrder) null, 3317);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Unknown Tag (0xfffffdf0)");
      assertEquals((-528), tiffField0.getTag());
      assertEquals(2021161080, tiffField0.getOffset());
      assertEquals(3317, tiffField0.getSortHint());
      assertEquals(3317, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(79, "#{Uh}w@ZO");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-925), (-1717986917), fieldTypeShort0, (-2542L), (-212L), byteArray0, byteOrder0, 41996);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 1, fieldTypeLong0, 1, (-2147483648L), byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-42), 2147179859, fieldTypeLong0, (byte) (-42), (-2858L), byteArray0, byteOrder0, (-226));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4226, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-794), 4226, fieldTypeAscii0, (-794), (-794), byteArray0, byteOrder0, 728);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-588), fieldTypeLong0, (-588), 0L, byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-390), fieldTypeShort0.DOUBLE, (-390), 0L, byteArray0, byteOrder0, (-1220));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-2147274161), fieldTypeLong0, 5912L, 236L, byteArray0, byteOrder0, 334);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, "V&M0g");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-475), 39, fieldTypeShort0, (-827L), 1L, byteArray0, byteOrder0, (byte) (-45));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-1842), fieldTypeFloat0.RATIONAL, 20L, 20L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34908, 456, (FieldType) null, (-1L), 4L, byteArray0, byteOrder0, 34908);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1020, 1020, fieldTypeAscii0, (-1752L), 1020, byteArray0, byteOrder0, 1020);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4772, (-4429), fieldTypeAscii0, 1002, (-12079L), byteArray0, byteOrder0, (-516));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, "V&M0g");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-39), (byte) (-39), fieldTypeShort0, (-501L), (byte) (-45), byteArray0, byteOrder0, (byte) (-39));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-5), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)23, (-284), fieldTypeFloat0, (byte) (-69), (byte) (-87), byteArray0, byteOrder0, 50828);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2137008117), 65535, fieldTypeShort0, (byte) (-100), 314, byteArray0, byteOrder0, (byte) (-100));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147274197), (-2147274197), fieldTypeLong0, (-476L), 1478, byteArray0, byteOrder0, (-2147274197));
      tiffField0.getFieldType();
      assertEquals((-2147274197), tiffField0.getDirectoryType());
      assertEquals((-2147274197), tiffField0.getSortHint());
      assertEquals(1478, tiffField0.getOffset());
      assertEquals((-2147274197), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-2147274161), fieldTypeLong0, 5912L, 236L, byteArray0, byteOrder0, 334);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(236, tiffField0.getOffset());
      assertEquals((-2147274161), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals(334, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, "V&M0g");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-39), (byte) (-39), fieldTypeShort0, (-501L), (byte) (-45), byteArray0, byteOrder0, (byte) (-39));
      int int0 = tiffField0.getTag();
      assertEquals((-39), int0);
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals((-39), tiffField0.getDirectoryType());
      assertEquals((-45), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-2414), fieldTypeFloat0, 3, 138L, byteArray0, byteOrder0, (-2414));
      tiffField0.getBytesLength();
      assertEquals((-2414), tiffField0.getDirectoryType());
      assertEquals(138, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-2414), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146714766), 65535, fieldTypeLong0, 1L, 65535, byteArray0, byteOrder0, 1496);
      tiffField0.getDoubleValue();
      assertEquals(1496, tiffField0.getSortHint());
      assertEquals((-2146714766), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(3498, 2212, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 3498);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(2212, tiffField0.getDirectoryType());
      assertEquals(3498, tiffField0.getTag());
      assertEquals(3498, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, "V&M0g");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3, (byte)121, fieldTypeShort0.SLONG, 39, (-209L), byteArray0, byteOrder0, (-68));
      tiffField0.getIntValueOrArraySum();
      assertEquals(121, tiffField0.getDirectoryType());
      assertEquals((-209), tiffField0.getOffset());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals(39L, tiffField0.getCount());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-81), (byte)10, fieldTypeAscii0, 0L, 65106, byteArray0, byteOrder0, (byte) (-81));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)32, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, 1453);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146714766), 65535, fieldTypeLong0, 1L, 65535, byteArray0, byteOrder0, 1496);
      tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1496, tiffField0.getSortHint());
      assertEquals((-2146714766), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6555, 6555, fieldTypeAscii0, 6555, 190L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1928b9a7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(3983, 0, fieldTypeShort0.DOUBLE, 3983, 0, byteArray0, byteOrder0, 3983);
      tiffField0.getDoubleArrayValue();
      assertEquals(3983, tiffField0.getSortHint());
      assertEquals(3983, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3983L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50, 41495, fieldTypeLong0, (byte)5, (-2836L), byteArray0, byteOrder0, 2145619512);
      tiffField0.getDoubleArrayValue();
      assertEquals(5L, tiffField0.getCount());
      assertEquals((-2836), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(41495, tiffField0.getDirectoryType());
      assertEquals(2145619512, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50938, 3, fieldTypeShort0, 107, (byte)111, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(107L, tiffField0.getCount());
      assertEquals(50938, tiffField0.getTag());
      assertEquals(111, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, (byte)113, fieldTypeShort0, (byte)0, 54L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(107, tiffField0.getTag());
      assertEquals(54, tiffField0.getOffset());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147397448, 50706, fieldTypeLong0.RATIONAL, 20L, (-1116L), byteArray0, byteOrder0, 50706);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50706, tiffField0.getDirectoryType());
      assertEquals(50706, tiffField0.getSortHint());
      assertEquals((-1116), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(20L, tiffField0.getCount());
      assertEquals(2147397448, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)3, 38, fieldTypeRational0, 1L, 38, byteArray0, byteOrder0, 3);
      tiffField0.getDoubleArrayValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals(38, tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 4L, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(332, 332, fieldTypeLong0, 0L, (-2L), byteArray0, byteOrder0, 332);
      tiffField0.getIntArrayValue();
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(332, tiffField0.getDirectoryType());
      assertEquals(332, tiffField0.getTag());
      assertEquals((-2), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50938, 3, fieldTypeShort0, 107, (byte)111, byteArray0, byteOrder0, 1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50938, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(111, tiffField0.getOffset());
      assertEquals(107L, tiffField0.getCount());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(37396, "");
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147475455, (-920), fieldTypeRational0, 941L, 2463L, byteArray0, byteOrder0, (byte) (-87));
      tiffField0.getIntArrayValue();
      assertEquals(2463, tiffField0.getOffset());
      assertEquals((-920), tiffField0.getDirectoryType());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(941L, tiffField0.getCount());
      assertEquals(2147475455, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)3, (byte)47, fieldTypeRational0, 255L, 7968L, byteArray0, byteOrder0, (-2140349149));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[12];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1738), (-2147274197), fieldTypeLong0, (byte)1, 10884L, byteArray0, byteOrder0, (-1025));
      tiffField0.getIntArrayValue();
      assertEquals((-1025), tiffField0.getSortHint());
      assertEquals(10884, tiffField0.getOffset());
      assertEquals((-2147274197), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1738), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 2535L, 0L, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3f214dab for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4772, (-4429), fieldTypeAscii0, 1002, (-12079L), byteArray0, byteOrder0, (-516));
      String string0 = tiffField0.getStringValue();
      assertEquals((-516), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-12079), tiffField0.getOffset());
      assertEquals((-4429), tiffField0.getDirectoryType());
      assertEquals(4772, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeAscii0, 65520, (-2147274145), byteArray0, byteOrder0, (-2147274145));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@7c589e8f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147274161), (-2147274161), fieldTypeLong0, (-2147274161), (-2147274161), byteArray0, byteOrder0, (-2147274161));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x8003324f)", string0);
      assertEquals((-2147274161), tiffField0.getDirectoryType());
      assertEquals((-2147274161), tiffField0.getSortHint());
      assertEquals((-2147274161), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(79, "#{Uh}w@ZO");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeShort0, 4L, 79, byteArray0, byteOrder0, 79);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSVersionID", string0);
      assertEquals(79, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(419, 419, fieldTypeLong0.FLOAT, 419, 419, byteArray0, (ByteOrder) null, 419);
      String string0 = tiffField0.getValueDescription();
      assertEquals(419, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(419, tiffField0.getTag());
      assertEquals(419, tiffField0.getSortHint());
      assertEquals(419L, tiffField0.getCount());
      assertEquals(419, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2428, 2428, fieldTypeByte0, 2428, 47L, byteArray0, byteOrder0, (-2207));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2428, tiffField0.getDirectoryType());
      assertEquals(2428L, tiffField0.getCount());
      assertEquals((-2207), tiffField0.getSortHint());
      assertEquals(47, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2428, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42161, 42161, fieldTypeDouble0, 42161, 42161, byteArray0, byteOrder0, 42161);
      String string0 = tiffField0.getValueDescription();
      assertEquals(42161, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(42161, tiffField0.getTag());
      assertEquals(42161, tiffField0.getDirectoryType());
      assertEquals(42161, tiffField0.getSortHint());
      assertEquals(42161L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147274161), (-2147274161), fieldTypeLong0, (-2147274161), (-2147274161), byteArray0, byteOrder0, (-2147274161));
      assertEquals(837948, tiffField0.getBytesLength());
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ND3Dx\"Ia<");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2147274161), tiffField0.getTag());
      assertEquals((-2147274161), tiffField0.getSortHint());
      assertEquals((-2147274161), tiffField0.getDirectoryType());
      assertEquals((-2147274161), tiffField0.getOffset());
      assertEquals((-2147274161L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2391, 2391, fieldTypeLong0, 2391, (-714L), byteArray0, byteOrder0, 3024);
      String string0 = tiffField0.getValueDescription();
      assertEquals(9564, tiffField0.getBytesLength());
      assertEquals(3024, tiffField0.getSortHint());
      assertEquals(2391L, tiffField0.getCount());
      assertEquals(2391, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-714), tiffField0.getOffset());
      assertEquals(2391, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-897), 12, fieldTypeShort0, 464, 12, byteArray0, byteOrder0, 12);
      String string0 = tiffField0.getValueDescription();
      assertEquals(12, tiffField0.getOffset());
      assertEquals((-897), tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(928, tiffField0.getBytesLength());
      assertEquals(464L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1506, 1506, fieldTypeShort0, 1506, 1506, byteArray0, byteOrder0, 1506);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1506L, tiffField0.getCount());
      assertEquals(1506, tiffField0.getTag());
      assertEquals(1506, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1506, tiffField0.getSortHint());
      assertEquals(1506, tiffField0.getDirectoryType());
      assertEquals(3012, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-528), 2021161080, fieldTypeFloat0.SRATIONAL, 262140L, (-1283L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals((-1283), tiffField0.getOffset());
      assertEquals(2021161080, tiffField0.getDirectoryType());
      assertEquals("-528 (0xfffffdf0: Unknown Tag):  (262140 SRational)", string0);
      assertEquals(2097120, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeAscii0, 65520, (-2147274145), byteArray0, byteOrder0, (-2147274145));
      String string0 = tiffField0.getValueDescription();
      assertEquals(65520, tiffField0.getTag());
      assertEquals(65520, tiffField0.getBytesLength());
      assertEquals(65520, tiffField0.getDirectoryType());
      assertEquals((-2147274145), tiffField0.getSortHint());
      assertEquals((-2147274145), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(811, ", ");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ", ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(811, 811, fieldTypeAscii0, 0L, 1L, byteArray0, byteOrder0, 811);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(811, tiffField0.getDirectoryType());
      assertEquals(811, tiffField0.getTag());
      assertEquals(811, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146714766), 65535, fieldTypeLong0, 1L, 65535, byteArray0, byteOrder0, 1496);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-2146714766), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1496, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeShort0, (-1L), 363L, byteArray0, byteOrder0, (-861));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(363, tiffField0.getOffset());
      assertEquals((-861), tiffField0.getSortHint());
      assertEquals((-42), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-1L), tiffField0.getCount());
      assertEquals((-42), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2463, 50834, fieldTypeAscii0, 2463, 50834, byteArray0, byteOrder0, (byte) (-89));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals(50834L, tiffElement0.offset);
      assertEquals(2463, tiffField0.getTag());
      assertEquals(50834, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3203), 181, fieldTypeByte0, (-3203), (-140), byteArray0, byteOrder0, (-3203));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147155887, 2147155887);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-3203), tiffField0.getSortHint());
      assertEquals((-140), tiffField0.getOffset());
      assertEquals(181, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-3203), tiffField0.getBytesLength());
      assertEquals((-3203), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3203), 181, fieldTypeByte0, (-3203), (-140), byteArray0, byteOrder0, (-3203));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147155887, 2147155887);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(181, tiffField0.getDirectoryType());
      assertEquals((-3203), tiffField0.getTag());
      assertEquals((-3203), tiffField0.getSortHint());
      assertEquals((-140), tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, "V&M0g");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-39), (byte) (-39), fieldTypeShort0, (-501L), (byte) (-45), byteArray0, byteOrder0, (byte) (-39));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-39), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals((-39), tiffField0.getDirectoryType());
      assertEquals((-45), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2463, 50834, fieldTypeAscii0, 2463, 50834, byteArray0, byteOrder0, (byte) (-89));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals(50834, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(50834, tiffField0.getOffset());
      assertEquals(2463, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-1183), fieldTypeLong0, 200L, 0L, byteArray0, byteOrder0, (-2179));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-588), tiffField0.getTag());
      assertEquals((-2179), tiffField0.getSortHint());
      assertEquals((-1183), tiffField0.getDirectoryType());
      assertEquals(800, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2147475455, (-2147274197), fieldTypeLong0, (-3352L), 0L, byteArray0, byteOrder0, (-2147274197));
      int int0 = tiffField0.getOffset();
      assertEquals((-2147274197), tiffField0.getSortHint());
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals((-3352L), tiffField0.getCount());
      assertEquals((-2147274197), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-588), fieldTypeLong0, (-588), 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-588), int0);
      assertEquals((-588), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(325, 1807, (FieldType) null, (-77L), (-77L), byteArray0, byteOrder0, (-839));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1958), "");
      TiffField tiffField0 = new TiffField(2146984581, 2146984581, fieldTypeFloat0, (-1958), 2146984581, byteArray0, byteOrder0, 2146984581);
      int int0 = tiffField0.getSortHint();
      assertEquals(2146984581, tiffField0.getDirectoryType());
      assertEquals(2146984581, tiffField0.getTag());
      assertEquals(2146984581, int0);
      assertEquals(2146984581, tiffField0.getOffset());
      assertEquals((-7832), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-588), (-588), fieldTypeLong0, (-588), 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-588), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("-588 (0xfffffdb4: Unknown Tag): ", string0);
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-397), fieldTypeFloat0, 2535L, 343L, byteArray0, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146189202), 45, fieldTypeFloat0, 0L, (-3203L), byteArray0, byteOrder0, (-1));
      tiffField0.getValue();
      assertEquals((-3203), tiffField0.getOffset());
      assertEquals((-2146189202), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }
}
