/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 20:54:14 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3232));
      classWriter0.index = (-3232);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aixWW", "9c44aixWW", "9c44aixWW", "9c44aixWW");
      ByteVector byteVector0 = new ByteVector(131072);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3232));
      classWriter0.index = (-3232);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aixWW", "9c44aixWW", "9c44aixWW", "9c44aixWW");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`(j", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`(j", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1829));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)2, ")eY9H`E/\"Kr#~i406j", ".h|Q#P:3cg: }NCI.4.", "", ".h|Q#P:3cg: }NCI.4.");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`(j", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, "o", "The prefix must not be null", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1832), "QbC8V4S;*)of", "/4D)?qfzdc?", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5cad2a15
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "U", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3232));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aixWW", "9c44aixWW", "9c44aixWW", "9c44aixWW");
      fieldWriter0.visitAnnotation("9c44aixWW", false);
      ByteVector byteVector0 = new ByteVector(131072);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aix6W", "9c44aix6W", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("=QWlyw%Ur^8=b[ iZ/2", true);
      ByteVector byteVector0 = new ByteVector(32);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aix6W", "9c44aix6W", (String) null, (Object) null);
      classWriter0.version = (-1077);
      ByteVector byteVector0 = new ByteVector(32);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9)44aix6W", "9)44aix6W", (String) null, (Object) null);
      classWriter0.version = (-1077);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "U", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3232));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aixWW", "9c44aixWW", "9c44aixWW", "9c44aixWW");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3232));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aixWW", "9c44aixWW", "9c44aixWW", "9c44aixWW");
      fieldWriter0.visitAnnotation("9c44aixWW", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1077), "9c44aix6W", "9c44aix6W", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("=QWlyw%Ur^8=b[ iZ/2", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1829));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1829), "", "", ".Ar{\"G7c+&", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "The array of prefixes must not be null", "s:RH", "c-", "c-");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1829));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)2, ")eY9H`E/\"Kr#~i406j", ".h|Q#P:3cg: }NCI.4.", "", ".h|Q#P:3cg: }NCI.4.");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "U", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
