/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:25:46 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class2HTML.toHTML("_code.html\"\n^MARGINWIDTH=0 MiRGINHEIGHT=0 FRAMEBORDER=1 S(ROLLING=\"AUTO\">\n<FRAME NAME=\"Methods\" SRv=\"");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      classLoaderRepository0.getClassPath();
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Class<SequenceInputStream> class0 = SequenceInputStream.class;
      syntheticRepository0.loadClass(class0);
      ClassLoaderRepository classLoaderRepository1 = new ClassLoaderRepository(classLoader0);
      SyntheticRepository.getInstance((ClassPath) null);
      Class2HTML.referenceType("java.time.temporal.TemporalQuery");
      java.lang.ClassLoader classLoader1 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository2 = new ClassLoaderRepository(classLoader1);
      Class<Object> class1 = Object.class;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/java.time.ZoneIdjava.lang.Object_cp.html");
      FileSystemHandling.createFolder(evoSuiteFile0);
      JavaClass javaClass0 = classLoaderRepository2.loadClass(class1);
      javaClass0.getSuperClass();
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "java.time.ZoneId");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = Class2HTML.referenceType("@N\"fr[?E#SO");
      assertEquals("<A HREF=\"@N\"fr.html\" TARGET=_top>@N\"fr[?E#SO</A>", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "#L}2I/qInI%RK";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-6";
      stringArray0[1] = "-6";
      stringArray0[2] = "-6";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "McqWy2r4q}";
      stringArray0[1] = "ifne";
      stringArray0[2] = ".html\" TARGET=_top>";
      stringArray0[3] = "tUXE31Fb<X";
      stringArray0[4] = "`#>^]ybX{~s4C";
      stringArray0[5] = "//";
      stringArray0[6] = "-zip";
      stringArray0[7] = "}QSt:*";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // }QSt:* (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "xn%H6";
      stringArray0[1] = "yb._hS@";
      stringArray0[2] = "<A HREF=\"";
      stringArray0[3] = "-d";
      stringArray0[4] = "java.time.temporal.TemporalAccessor";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class2HTML.toHTML("-d");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<InputStream> class0 = InputStream.class;
      syntheticRepository0.loadClass(class0);
      String string0 = "-d";
      java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class2HTML.toHTML("-d");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = "";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<InputStream> class0 = InputStream.class;
      syntheticRepository0.loadClass(class0);
      java.lang.ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class2HTML.toHTML("-d");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = ">/";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
