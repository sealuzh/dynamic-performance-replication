/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 06:16:35 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)113;
      byteArray0[4] = (byte)112;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)70, 0, fieldTypeRational0, (byte)70, (byte)71, byteArray0, byteOrder0, (byte)113);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(70, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(71, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)112;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)70, 0, fieldTypeRational0, (byte)70, (byte)71, byteArray0, byteOrder0, (byte)113);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(71, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(70, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)86, (byte)40, fieldTypeByte0, (byte)86, (-1151L), byteArray0, (ByteOrder) null, 2552);
      String string0 = tiffField0.getValueDescription();
      assertEquals(40, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(86, tiffField0.getTag());
      assertEquals((-1151), tiffField0.getOffset());
      assertEquals(2552, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[225];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(27, (-1055), fieldTypeByte0, (-17L), 27, byteArray0, byteOrder0, 8);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(8, tiffField0.getSortHint());
      assertEquals((-1055), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeDouble0.FLOAT, 400, 400, byteArray0, byteOrder0, 400);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getOffset());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 42112, fieldTypeLong0, 424L, 0, byteArray0, byteOrder0, (-718));
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(42112, tiffField0.getDirectoryType());
      assertEquals((-718), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-406), "JPEGInterchangeFormatLength");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-406), (-406), fieldTypeShort0, (-593L), (-593L), byteArray0, (ByteOrder) null, (-3042));
      int int0 = tiffField0.getTag();
      assertEquals((-406), tiffField0.getDirectoryType());
      assertEquals((-3042), tiffField0.getSortHint());
      assertEquals((-593), tiffField0.getOffset());
      assertEquals((-406), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-56);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeAscii0, 58, 58, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.getStringValue();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(58, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34028, 32998, fieldTypeShort0, 699L, 255L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(34028, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(32998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 514, fieldTypeShort0, 514, 700, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(700, tiffField0.getOffset());
      assertEquals(700, tiffField0.getTag());
      assertEquals(514, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2412), 1486, fieldTypeShort0, 0L, 224L, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals(224, int0);
      assertEquals((-2412), tiffField0.getTag());
      assertEquals(1486, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1982292598, fieldTypeFloat0, (-1728L), (-4512L), byteArray0, byteOrder0, 1665);
      int int0 = tiffField0.getOffset();
      assertEquals(1982292598, tiffField0.getDirectoryType());
      assertEquals(1665, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4512), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)104;
      TiffField tiffField0 = new TiffField((-1788), (-977), fieldTypeByte0, 1L, 702, byteArray0, byteOrder0, 702);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1788), tiffField0.getTag());
      assertEquals(702, tiffField0.getSortHint());
      assertEquals(702, tiffField0.getOffset());
      assertEquals((-977), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-16);
      TiffField tiffField0 = new TiffField(288, 2088, fieldTypeShort0, 288, 224L, byteArray0, byteOrder0, (byte) (-126));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2088, tiffField0.getDirectoryType());
      assertEquals((-126), tiffField0.getSortHint());
      assertEquals((-4096), int0);
      assertEquals(288, tiffField0.getTag());
      assertEquals(224, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)104;
      TiffField tiffField0 = new TiffField((-1788), (-977), fieldTypeByte0, 1L, 702, byteArray0, byteOrder0, 702);
      tiffField0.getIntValue();
      assertEquals((-1788), tiffField0.getTag());
      assertEquals((-977), tiffField0.getDirectoryType());
      assertEquals(702, tiffField0.getOffset());
      assertEquals(702, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-84);
      TiffField tiffField0 = new TiffField((-2147173167), (-2147173167), fieldTypeByte0, 1, (-4L), byteArray0, byteOrder0, 37);
      tiffField0.getIntValue();
      assertEquals((-2147173167), tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-2147173167), tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2147173164), (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2031), 10, fieldTypeLong0, 10L, 0L, byteArray0, byteOrder0, (byte) (-17));
      tiffField0.getFieldTypeName();
      assertEquals((-2031), tiffField0.getTag());
      assertEquals((-17), tiffField0.getSortHint());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50737, "");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-192), (-1552), fieldTypeAscii0, (-1424L), (-176L), byteArray0, byteOrder0, 41994);
      tiffField0.getFieldTypeName();
      assertEquals((-176), tiffField0.getOffset());
      assertEquals((-1552), tiffField0.getDirectoryType());
      assertEquals(41994, tiffField0.getSortHint());
      assertEquals((-192), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, ", fieldType: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 0, fieldTypeRational0, 2332L, 2332L, byteArray0, byteOrder0, (byte) (-79));
      tiffField0.getFieldType();
      assertEquals(2332, tiffField0.getOffset());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1145L, 0L, byteArray0, byteOrder0, (byte)97);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1379), "");
      TiffField tiffField0 = new TiffField(6, 42033, fieldTypeAscii0, 6, (-16112L), byteArray0, byteOrder0, 77);
      tiffField0.getFieldType();
      assertEquals(77, tiffField0.getSortHint());
      assertEquals((-16112), tiffField0.getOffset());
      assertEquals(42033, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      TiffField tiffField0 = new TiffField((-5474), 2, fieldTypeFloat0, 1, (-1596), byteArray0, byteOrder0, 4530);
      tiffField0.getDoubleValue();
      assertEquals(4530, tiffField0.getSortHint());
      assertEquals((-1596), tiffField0.getOffset());
      assertEquals((-5474), tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-17);
      TiffField tiffField0 = new TiffField(41483, 41483, fieldTypeAscii0.IFD, 1L, 1L, byteArray0, byteOrder0, (-871));
      tiffField0.getDoubleValue();
      assertEquals(41483, tiffField0.getTag());
      assertEquals((-871), tiffField0.getSortHint());
      assertEquals(41483, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)110, byteArray0, (ByteOrder) null, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(110, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1256, (-71), fieldTypeRational0, 1256, (-620L), byteArray0, (ByteOrder) null, (-128));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1256, tiffField0.getTag());
      assertEquals((-620), tiffField0.getOffset());
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals((-71), int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4662, 2332, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals(4662, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2332, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-440), (-440), fieldTypeFloat0, (byte)1, (byte)0, byteArray0, byteOrder0, (byte)1);
      tiffField0.getCount();
      assertEquals((-440), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-440), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1499, 1499, fieldTypeLong0, 1499, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(1499, tiffField0.getTag());
      assertEquals(1499, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, (-16L), 2035L, byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getBytesLength();
      assertEquals(2035, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-101), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1982292598, fieldTypeFloat0, (-1728L), (-4512L), byteArray0, byteOrder0, 1665);
      tiffField0.getByteOrder();
      assertEquals(1982292598, tiffField0.getDirectoryType());
      assertEquals(1665, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4512), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1379), "");
      TiffField tiffField0 = new TiffField(6, 42033, fieldTypeAscii0, 6, (-16112L), byteArray0, byteOrder0, 77);
      tiffField0.getByteArrayValue();
      assertEquals((-16112), tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(42033, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32998, 3842, fieldTypeShort0, 32998, 699L, byteArray0, byteOrder0, 32998);
      tiffField0.getByteArrayValue();
      assertEquals(3842, tiffField0.getDirectoryType());
      assertEquals(32998, tiffField0.getTag());
      assertEquals(32998, tiffField0.getSortHint());
      assertEquals(699, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)3, (-1153), (FieldType) null, (byte)60, (byte)3, byteArray0, byteOrder0, (byte) (-16));
      MockFile mockFile0 = new MockFile("K2[");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(122, "_A4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1324), 122, fieldTypeShort0, (-1324), (-1324), byteArray0, byteOrder0, (-167));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5328, 5328, (FieldType) null, 493L, 5328, (byte[]) null, byteOrder0, 5328);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "0b=>wIAq?xh5Mn");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34911, 298, fieldTypeDouble0, (-1776L), 34911, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65, 50, fieldTypeShort0, (-672L), 1L, byteArray0, (ByteOrder) null, 65);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1153), (-2094), (FieldType) null, (-1153), (-2094), byteArray0, byteOrder0, (byte)102);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4394), (-4394), fieldTypeRational0, (-16L), (-4394), byteArray0, byteOrder0, (byte) (-68));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeByte0, 50, 0, byteArray0, byteOrder0, 117);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(5261, (-1437), fieldTypeRational0, (-1437), 0L, (byte[]) null, byteOrder0, (-1437));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1256, (-71), fieldTypeRational0, 1256, (-620L), byteArray0, (ByteOrder) null, (-128));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1870), 0, fieldTypeRational0, (-745L), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2805), 0, fieldTypeAscii0, (-1141L), (-1L), byteArray0, byteOrder0, (byte) (-111));
      MockFile mockFile0 = new MockFile(".VKmySz");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ".jib*h#3o0Z'");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-3822L), (-3822L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1865), (-1865), (FieldType) null, (-1269L), 477L, byteArray0, byteOrder0, (byte)17);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(5328, 397, fieldTypeShort0.SRATIONAL, (-672L), (-6912L), byteArray0, byteOrder0, 397);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(397, tiffField0.getSortHint());
      assertEquals(397, tiffField0.getDirectoryType());
      assertEquals(5328, tiffField0.getTag());
      assertEquals((-6912), tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2046), "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-6), 1405, fieldTypeRational0, 1405, (-2046), byteArray0, byteOrder0, (byte) (-6));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1405, tiffField0.getDirectoryType());
      assertEquals((-2046), tiffField0.getOffset());
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals((-6), tiffField0.getTag());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeFloat0, 0, 0, (byte[]) null, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5302, 5302, (FieldType) null, 5302, 5302, (byte[]) null, byteOrder0, 5302);
      tiffField0.getFieldType();
      assertEquals(5302, tiffField0.getDirectoryType());
      assertEquals(5302, tiffField0.getSortHint());
      assertEquals(5302, tiffField0.getTag());
      assertEquals(5302, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-178), "TargetPrinter");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2), 124, fieldTypeLong0, 2592L, 552L, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2), tiffField0.getTag());
      assertEquals(552, tiffField0.getOffset());
      assertEquals(124, int0);
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)86, (byte)40, fieldTypeByte0, (byte)86, (-1151L), byteArray0, (ByteOrder) null, 2552);
      tiffField0.getValue();
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(2552, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getTag());
      assertEquals((-1151), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-440), (-440), fieldTypeFloat0, 1428L, 0L, byteArray0, byteOrder0, (-440));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-440), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-440), tiffField0.getSortHint());
      assertEquals((-440), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-440), (-440), fieldTypeFloat0, (byte)1, (byte)0, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals((-440), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-440), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-795), fieldTypeFloat0, (-38L), 0L, (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-795), tiffField0.getDirectoryType());
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5328, (-1), (FieldType) null, (-3519L), (-16L), (byte[]) null, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals((-16), tiffField0.getOffset());
      assertEquals(5328, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)112, 1, fieldTypeRational0, 0L, (-1141L), byteArray0, (ByteOrder) null, 42032);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1141), tiffField0.getOffset());
      assertEquals(42032, tiffField0.getSortHint());
      assertEquals(112, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(296, "Du0,T");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(287, 296, fieldTypeByte0, 296, 1170L, byteArray0, byteOrder0, (-2558));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-2558), tiffField0.getSortHint());
      assertEquals(1170, tiffField0.getOffset());
      assertEquals("287 (0x11f: YPosition): ", string0);
      assertEquals(296, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-5474), 2, fieldTypeFloat0, 1, (-1596), byteArray0, byteOrder0, 4530);
      tiffField0.getDoubleValue();
      assertEquals((-5474), tiffField0.getTag());
      assertEquals((-1596), tiffField0.getOffset());
      assertEquals(4530, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((-753), (-1), fieldTypeByte0, 1L, (byte)40, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getOffset());
      assertEquals((-753), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(5, 5302, fieldTypeLong0, (byte)123, (-6912L), byteArray0, byteOrder0, 5);
      tiffField0.getIntValueOrArraySum();
      assertEquals(5, tiffField0.getTag());
      assertEquals((-6912), tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5302, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1036, "4<[kdO[~4D}");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeDouble0, 0L, 255L, byteArray0, byteOrder0, (byte) (-106));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@3f9f61a6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)115, 297, fieldTypeAscii0, (byte)0, (byte) (-37), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)21, (-2081), fieldTypeFloat0, (byte)92, (-440), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-440), tiffField0.getOffset());
      assertEquals((-2081), tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2), "4<[kdO[~4D}");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(32898, 1, fieldTypeDouble0, 32898, 32898, byteArray0, byteOrder0, (-2147173182));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(32898, tiffField0.getTag());
      assertEquals((-2147173182), tiffField0.getSortHint());
      assertEquals(32898, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-4057), (-4057), fieldTypeLong0, 5302, 1716L, byteArray0, byteOrder0, (byte)4);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-4057), tiffField0.getDirectoryType());
      assertEquals((-4057), tiffField0.getTag());
      assertEquals(1716, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1975), (-1975), fieldTypeFloat0.IFD, 2431L, (-908L), byteArray0, byteOrder0, (-4057));
      tiffField0.getDoubleArrayValue();
      assertEquals((-4057), tiffField0.getSortHint());
      assertEquals((-1975), tiffField0.getTag());
      assertEquals((-1975), tiffField0.getDirectoryType());
      assertEquals((-908), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)97, (byte)118, fieldTypeShort0, 4L, (byte)118, byteArray0, byteOrder0, (byte)118);
      tiffField0.getDoubleArrayValue();
      assertEquals(118, tiffField0.getOffset());
      assertEquals(97, tiffField0.getTag());
      assertEquals(118, tiffField0.getSortHint());
      assertEquals(118, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3, "YX9uQs9yt7\"y4c%gs7+");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)75, 0, fieldTypeRational0, 1250L, 0, byteArray0, byteOrder0, 51041);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(51041, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((-753), (-1), fieldTypeByte0, 1L, (byte)40, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-753), tiffField0.getTag());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(80, 0, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 1144);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 514, fieldTypeShort0, 514, 700, byteArray0, byteOrder0, (byte) (-1));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(514, tiffField0.getDirectoryType());
      assertEquals(700, tiffField0.getOffset());
      assertEquals(514L, tiffField0.getCount());
      assertEquals(700, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32998, 3842, fieldTypeShort0, 32998, 699L, byteArray0, byteOrder0, 32998);
      tiffField0.getIntArrayValue();
      assertEquals(699, tiffField0.getOffset());
      assertEquals(32998L, tiffField0.getCount());
      assertEquals(32998, tiffField0.getSortHint());
      assertEquals(32998, tiffField0.getTag());
      assertEquals(3842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)112, 1, fieldTypeRational0, 0L, (-1141L), byteArray0, (ByteOrder) null, 42032);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(112, tiffField0.getTag());
      assertEquals(42032, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1141), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1975), (-1975), fieldTypeFloat0.IFD, 2431L, (-908L), byteArray0, byteOrder0, (-4057));
      tiffField0.getIntArrayValue();
      assertEquals((-1975), tiffField0.getTag());
      assertEquals((-4057), tiffField0.getSortHint());
      assertEquals((-908), tiffField0.getOffset());
      assertEquals(2431L, tiffField0.getCount());
      assertEquals(9724, tiffField0.getBytesLength());
      assertEquals((-1975), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2362, 2362, fieldTypeLong0, 1L, (-1846L), byteArray0, byteOrder0, 2041);
      tiffField0.getIntArrayValue();
      assertEquals(2041, tiffField0.getSortHint());
      assertEquals(2362, tiffField0.getTag());
      assertEquals(2362, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1846), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(42034, (-1717986917), fieldTypeRational0, 42034, 6912L, byteArray0, (ByteOrder) null, 42034);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1050, 16, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@79c52188
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-932), 1780, fieldTypeAscii0, 0L, (-2620L), byteArray0, byteOrder0, (byte)64);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2620), tiffField0.getOffset());
      assertEquals(1780, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(64, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-932), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(39, " (");
      TiffField tiffField0 = new TiffField(65535, (-1324), fieldTypeFloat0, 65535, 344, byteArray0, byteOrder0, 33432);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffff)", string0);
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(344, tiffField0.getOffset());
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals((-1324), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)21, (-1736), fieldTypeFloat0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(21, tiffField0.getOffset());
      assertEquals(21, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("GPSDestLongitudeRef", string0);
      assertEquals((-1736), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(39, " (");
      TiffField tiffField0 = new TiffField(65535, (-1324), fieldTypeFloat0, 65535, 344, byteArray0, byteOrder0, 33432);
      tiffField0.dump();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals((-1324), tiffField0.getDirectoryType());
      assertEquals(33432, tiffField0.getSortHint());
      assertEquals(344, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[62];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1495L, 50, byteArray0, byteOrder0, 49);
      tiffField0.dump();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(1495L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1495, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(8, (byte)0, fieldTypeDouble0, (byte)118, (byte)0, byteArray0, byteOrder0, (byte)118);
      tiffField0.dump();
      assertEquals(944, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(118L, tiffField0.getCount());
      assertEquals(8, tiffField0.getTag());
      assertEquals(118, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-178), "TargetPrinter");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2), 124, fieldTypeLong0, 2592L, 552L, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.toString();
      assertEquals(552, tiffField0.getOffset());
      assertEquals(10368, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals("-2 (0xfffffffe: Unknown Tag):  (2592 TargetPrinter)", string0);
      assertEquals(124, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(122, "hYt1]!=u}");
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeLong0, 122, 122, byteArray0, byteOrder0, 122);
      tiffField0.dump();
      assertEquals(122, tiffField0.getTag());
      assertEquals(122, tiffField0.getOffset());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(488, tiffField0.getBytesLength());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(122L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32998, 3842, fieldTypeShort0, 32998, 699L, byteArray0, byteOrder0, 32998);
      tiffField0.dump();
      assertEquals(65996, tiffField0.getBytesLength());
      assertEquals(32998, tiffField0.getTag());
      assertEquals(32998, tiffField0.getSortHint());
      assertEquals(699, tiffField0.getOffset());
      assertEquals(32998L, tiffField0.getCount());
      assertEquals(3842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeDouble0.SSHORT, 2559, 4932L, byteArray0, byteOrder0, 3096);
      tiffField0.dump();
      assertEquals(5118, tiffField0.getBytesLength());
      assertEquals(2559L, tiffField0.getCount());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(4932, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(3096, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2137, 2137, fieldTypeShort0.ASCII, 3385, 4L, byteArray0, byteOrder0, 3385);
      tiffField0.dump();
      assertEquals(3385L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2137, tiffField0.getDirectoryType());
      assertEquals(2137, tiffField0.getTag());
      assertEquals(3385, tiffField0.getBytesLength());
      assertEquals(3385, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1982292632, 0, fieldTypeAscii0, 510L, 510L, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1982292632, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals(510, tiffField0.getOffset());
      assertEquals(510L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)75, 301, fieldTypeAscii0, (byte)0, (byte)34, byteArray0, byteOrder0, (byte) (-14));
      MockFile mockFile0 = new MockFile("IntergraphMatrixTag");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(64L, mockFile0.length());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(301, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(75, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2), "4<[kmO[~4D}");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(4, 35, fieldTypeDouble0, 1L, 1165L, byteArray0, byteOrder0, 32898);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(32898, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(1165, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)92, "BatteryLevel");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 1263, fieldTypeRational0, 1428L, 1036, byteArray0, byteOrder0, 401);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1036, (byte)21);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(401, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(1263, tiffField0.getDirectoryType());
      assertEquals(1036, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(11424, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)92, "BatteryLevel");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 1263, fieldTypeRational0, 1428L, 1036, byteArray0, byteOrder0, 401);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1036, (byte)21);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(1263, tiffField0.getDirectoryType());
      assertEquals(11424, tiffField0.getBytesLength());
      assertEquals(1036, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: BatteryLevel", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(401, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-440), (-440), fieldTypeFloat0, (byte)1, (byte)0, byteArray0, byteOrder0, (byte)1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-440), tiffField0.getDirectoryType());
      assertEquals((-440), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(5261, (-1437), fieldTypeRational0, (-1437), 0L, (byte[]) null, byteOrder0, (-1437));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-11496), tiffField0.getBytesLength());
      assertEquals((-1437), tiffField0.getSortHint());
      assertEquals(5261, tiffField0.getTag());
      assertEquals((-1437), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5328, 5328, (FieldType) null, 493L, 5328, (byte[]) null, byteOrder0, 5328);
      int int0 = tiffField0.getSortHint();
      assertEquals(5328, tiffField0.getTag());
      assertEquals(5328, tiffField0.getOffset());
      assertEquals(5328, int0);
      assertEquals(493L, tiffField0.getCount());
      assertEquals(5328, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[225];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(27, (-1055), fieldTypeByte0, (-17L), 27, byteArray0, byteOrder0, 8);
      tiffField0.dump();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
      assertEquals((-17L), tiffField0.getCount());
      assertEquals((-1055), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1, 1834, fieldTypeByte0, (-1017L), 1834, (byte[]) null, (ByteOrder) null, (-2929));
      tiffField0.getByteOrder();
      assertEquals(1834, tiffField0.getOffset());
      assertEquals(1834, tiffField0.getDirectoryType());
      assertEquals((-1017L), tiffField0.getCount());
      assertEquals((-2929), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1349, (byte)1, fieldTypeFloat0, 4L, (-440), byteArray0, byteOrder0, 1134);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-440L), tiffElement0.offset);
      assertEquals(1134, tiffField0.getSortHint());
      assertEquals(1349, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }
}
