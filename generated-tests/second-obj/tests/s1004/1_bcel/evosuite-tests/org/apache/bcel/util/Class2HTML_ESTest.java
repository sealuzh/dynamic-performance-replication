/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:26:43 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantMethodHandle;
import org.apache.bcel.classfile.ConstantNameAndType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class2HTML.referenceType("<P><B>Exceptions handled</B><UL>");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<A HREF=\"<P><B>Exceptions handled</B><UL>.html\" TARGET=_top><P><B>Exceptions handled<.B><UL></A>";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class2HTML.referenceType("");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Class2HTML.referenceType("invoedynaAyc");
      assertEquals("<A HREF=\"invoedynaAyc.html\" TARGET=_top>invoedynaAyc</A>", string0);
      
      String string1 = Class2HTML.toHTML("<A HREF=\"invoedynaAyc.html\" TARGET=_top>invoedynaAyc</A>");
      assertEquals("&lt;A HREF=\"invoedynaAyc.html\" TARGET=_top&gt;invoedynaAyc&lt;/A&gt;", string1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class2HTML.toHTML("java.lang.reflect.TypeVariable");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      classLoaderRepository0.clear();
      JavaClass javaClass0 = classLoaderRepository0.loadClass("java.lang.reflect.TypeVariable");
      Constant[] constantArray0 = new Constant[2];
      ConstantMethodHandle constantMethodHandle0 = new ConstantMethodHandle((byte)1, (byte)1);
      ConstantMethodHandle constantMethodHandle1 = new ConstantMethodHandle(constantMethodHandle0);
      constantArray0[0] = (Constant) constantMethodHandle1;
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType((byte)3, 91);
      constantArray0[1] = (Constant) constantNameAndType0;
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantPool constantPool1 = constantPool0.copy();
      javaClass0.setConstantPool(constantPool1);
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "java.lang.reflect.TypeVariable");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 3. Constant pool size is: 2
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = Class2HTML.referenceType("[xgRpR!");
      assertEquals("<A HREF=\".html\" TARGET=_top>[xgRpR!</A>", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "1e%_UTnJn yh";
      stringArray0[2] = "H-d";
      Class2HTML.referenceType("float");
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      String string0 = "sun.reflect.MethodAccessor";
      JavaClass javaClass0 = syntheticRepository0.loadClass("sun.reflect.MethodAccessor");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "sun.reflect.MethodAccessor");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "sun.reflect.MethodAccessor";
      stringArray0[2] = "sun.reflect.MethodAccessor";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "dZG";
      stringArray0[1] = "-d/";
      stringArray0[2] = "jav.tie.Clock";
      stringArray0[2] = "sun.reflect.generics.factory.GenericsFactory";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "-zip";
      String string1 = "F";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "F";
      stringArray0[1] = "-zip";
      stringArray0[2] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "F";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // -d (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "F";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/F");
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringArray0[0] = "F";
      stringArray0[1] = "1e%_UTnJn yh";
      stringArray0[2] = "-d";
      stringArray0[3] = "F";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "1e%_UTnJn yh";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "F";
      stringArray0[1] = "1e%_UTnJn yh";
      stringArray0[2] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "F";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/int");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "int";
      stringArray0[2] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "int";
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/4{ds&bu");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "multxianewarray");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      String string0 = "</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"";
      Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      // Undeclared exception!
      try { 
        Class2HTML.referenceType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "R$";
      stringArray0[1] = "1%_UTnJn yh";
      stringArray0[2] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "-d";
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class2HTML.toHTML("R$");
      Class2HTML.toHTML("R$");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-d";
      stringArray1[1] = ".";
      stringArray1[3] = "-d";
      stringArray1[4] = "R$";
      ClassPathRepository classPathRepository1 = new ClassPathRepository((ClassPath) null);
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      javaClass0.isStrictfp(true);
      javaClass0.setClassName("-d");
      javaClass0.setClassNameIndex((-1488));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/class");
      javaClass0.isStrictfp(true);
      FileSystemHandling.createFolder(evoSuiteFile0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "1%_UTnJn yh");
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "-d";
      String string1 = "/";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-d";
      stringArray0[1] = "%_Uce@\"TJn yh";
      stringArray0[2] = "-d";
      stringArray0[3] = "/";
      stringArray0[4] = "/";
      stringArray0[5] = "%_Uce@\"TJn yh";
      stringArray0[3] = "/";
      stringArray0[7] = "-d";
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Class2HTML.toHTML("%_Uce@\"TJn yh");
      Class2HTML.toHTML("-d");
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
