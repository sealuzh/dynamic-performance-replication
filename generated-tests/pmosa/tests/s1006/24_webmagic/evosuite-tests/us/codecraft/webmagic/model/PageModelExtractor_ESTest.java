/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 07:51:15 GMT 2018
 */

package us.codecraft.webmagic.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.model.FieldExtractor;
import us.codecraft.webmagic.model.PageModelExtractor;
import us.codecraft.webmagic.model.samples.DianpingFtlDataScanner;
import us.codecraft.webmagic.model.samples.OschinaAnswer;
import us.codecraft.webmagic.selector.Selector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PageModelExtractor_ESTest extends PageModelExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Field> class0 = Field.class;
      PageModelExtractor pageModelExtractor0 = PageModelExtractor.create(class0);
      Page page0 = new Page();
      Page page1 = page0.setRawText("Y+CgoX!]wS");
      Page page2 = page1.setSkip(true);
      Request request0 = new Request();
      Request request1 = request0.addHeader("Y+CgoX!]wS", "String {} is converted to {}");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Request request2 = request1.setExtras(hashMap0);
      Request request3 = request2.addCookie("_cycle_tried_times", ";{O}C&a?ll5`/NB");
      Request request4 = request3.setBinaryContent(true);
      page2.setRequest(request4);
      Page.fail();
      // Undeclared exception!
      try { 
        pageModelExtractor0.process(page2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.model.PageModelExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<String> class0 = String.class;
      PageModelExtractor pageModelExtractor0 = PageModelExtractor.create(class0);
      Selector selector0 = pageModelExtractor0.getHelpUrlRegionSelector();
      assertNull(selector0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PageModelExtractor pageModelExtractor0 = new PageModelExtractor();
      Class<String> class0 = String.class;
      PageModelExtractor.create(class0);
      Selector selector0 = pageModelExtractor0.getTargetUrlRegionSelector();
      assertNull(selector0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<OschinaAnswer> class0 = OschinaAnswer.class;
      // Undeclared exception!
      try { 
        PageModelExtractor.create(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Element
         //
         verifyException("us.codecraft.webmagic.model.PageModelExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PageModelExtractor pageModelExtractor0 = new PageModelExtractor();
      pageModelExtractor0.getHelpUrlPatterns();
      List<Pattern> list0 = pageModelExtractor0.getTargetUrlPatterns();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PageModelExtractor pageModelExtractor0 = new PageModelExtractor();
      pageModelExtractor0.getTargetUrlPatterns();
      Page page0 = new Page();
      pageModelExtractor0.process(page0);
      pageModelExtractor0.process(page0);
      Class<FieldExtractor> class0 = FieldExtractor.class;
      PageModelExtractor.create(class0);
      Object object0 = pageModelExtractor0.process(page0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      PageModelExtractor pageModelExtractor0 = PageModelExtractor.create(class0);
      PageModelExtractor pageModelExtractor1 = PageModelExtractor.create(class0);
      PageModelExtractor.create(class0);
      pageModelExtractor0.getHelpUrlRegionSelector();
      pageModelExtractor0.getClazz();
      Class class1 = pageModelExtractor0.getClazz();
      PageModelExtractor pageModelExtractor2 = PageModelExtractor.create(class1);
      pageModelExtractor0.getTargetUrlRegionSelector();
      pageModelExtractor0.getTargetUrlPatterns();
      pageModelExtractor2.getHelpUrlRegionSelector();
      pageModelExtractor2.getClazz();
      Page page0 = Page.fail();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)78;
      page0.setBytes(byteArray0);
      Page page1 = page0.setRawText("?wN[");
      // Undeclared exception!
      try { 
        pageModelExtractor1.process(page1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.model.PageModelExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PageModelExtractor pageModelExtractor0 = new PageModelExtractor();
      Page page0 = null;
      pageModelExtractor0.process((Page) null);
      pageModelExtractor0.process((Page) null);
      pageModelExtractor0.getTargetUrlPatterns();
      pageModelExtractor0.getTargetUrlPatterns();
      pageModelExtractor0.getClazz();
      pageModelExtractor0.getHelpUrlRegionSelector();
      pageModelExtractor0.getTargetUrlPatterns();
      pageModelExtractor0.process((Page) null);
      pageModelExtractor0.getHelpUrlPatterns();
      // Undeclared exception!
      try { 
        PageModelExtractor.getSetterMethod((Class) null, (Field) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.model.PageModelExtractor", e);
      }
  }
}
