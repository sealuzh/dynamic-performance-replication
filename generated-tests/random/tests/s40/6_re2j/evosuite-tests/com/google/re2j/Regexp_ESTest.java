/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 01:07:21 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexpArray0[3] = regexp2;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp1;
      Regexp regexp3 = new Regexp(regexp2);
      regexpArray0[7] = regexp3;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.flags = (-1098);
      Regexp regexp4 = new Regexp(regexp0);
      regexp4.max = (-1098);
      regexp1.equals(regexp4);
      regexp1.flags = (-1098);
      regexp4.max = 1573;
      Regexp regexp5 = new Regexp(regexp1);
      regexp5.reinit();
      regexp5.runes = null;
      regexp0.equals("CHAR_CLASS");
      regexp4.min = 1573;
      regexp5.max = 1573;
      Object object0 = new Object();
      regexp5.equals(object0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op0;
      Regexp[] regexpArray1 = new Regexp[3];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray1[0] = regexp1;
      regexpArray1[1] = regexp0;
      regexpArray1[2] = regexp0;
      regexp0.subs = regexpArray1;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Other_Lowercase");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Other_Lowercase
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.reinit();
      regexp2.name = ">m*:sFuy?>";
      regexp1.equals(regexp2);
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("y^ZeWUU_1yf0uWRlO");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.y^ZeWUU_1yf0uWRlO
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.runes = null;
      regexp1.max = 52;
      regexp1.equals(regexp0);
      regexp1.flags = 4;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[5];
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp2;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      Regexp[] regexpArray1 = new Regexp[3];
      regexpArray1[0] = regexp0;
      regexpArray1[1] = regexp2;
      regexpArray1[2] = regexp1;
      regexpArray0[0].subs = regexpArray1;
      regexpArray0[2].max = 607;
      regexpArray0[4] = regexp1;
      regexp1.subs = regexpArray0;
      regexp1.name = null;
      regexp1.toString();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      regexp0.reinit();
      regexp0.name = "BEGIN_LINE";
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      regexp_Op0.isPseudo();
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      intArray0[1] = 848;
      regexp1.runes = intArray0;
      regexp0.max = 3;
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.cap = 0;
      regexp1.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("I`_?-ENkv{CFm(z9~*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.I`_?-ENkv{CFm(z9~*
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      String string0 = "";
      regexp2.name = "";
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.name = "pNBEse2tRn|HzT7piO-";
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp1.op = regexp_Op1;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      intArray0[0] = 2727;
      intArray0[1] = 0;
      regexp1.runes = intArray0;
      regexp1.cap = (-255);
      Regexp regexp2 = new Regexp(regexp1);
      int[] intArray1 = new int[7];
      intArray1[0] = (-255);
      intArray1[1] = (-255);
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = (-839);
      intArray1[5] = (-255);
      intArray1[6] = (-255);
      regexp2.runes = intArray1;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp1.op = regexp_Op1;
      regexp1.equals("U8]gj)hmAj0*T-x|");
      regexp1.runes = null;
      regexp0.min = 1890;
      regexp1.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.toString();
      Object object0 = new Object();
      regexp0.equals(object0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[1];
      intArray0[0] = 13;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "~E";
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[7];
      intArray0[0] = 6;
      intArray0[1] = 42892;
      intArray0[2] = 4754;
      intArray0[3] = 5;
      intArray0[4] = 18;
      regexp0.cap = 5;
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexp0.subs = regexpArray0;
      intArray0[5] = (-1408);
      intArray0[6] = 0;
      regexp1.runes = intArray0;
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp0.runes = intArray0;
      regexp0.maxCap();
      Regexp regexp2 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      regexp0.equals(regexp1);
      regexp1.flags = (-1560);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      regexp1.op = regexp_Op1;
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[4];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp2;
      regexp2.subs = regexpArray0;
      int[] intArray0 = new int[2];
      intArray0[0] = (-1560);
      intArray0[1] = (-1560);
      regexpArray0[3].runes = intArray0;
      regexp2.reinit();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.cap = 8;
      regexp0.min = 8;
      regexp1.maxCap();
      regexp0.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp2);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp1.flags = (-2087);
      regexp1.toString();
      regexp0.min = 0;
      String string0 = "Other_Default_Ignorable_Code_Point";
      regexp0.equals("Other_Default_Ignorable_Code_Point");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Other_Default_Ignorable_Code_Point");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Other_Default_Ignorable_Code_Point
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      Regexp regexp2 = new Regexp(regexp1);
      regexpArray0[3] = regexp2;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp1;
      regexpArray0[6] = regexp1;
      regexpArray0[7] = regexp0;
      regexpArray0[8] = regexp1;
      regexp1.subs = regexpArray0;
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.min = 3276;
      regexp1.max = 3276;
      regexp1.cap = (-3560);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.equals(regexp0);
      int[] intArray0 = new int[7];
      intArray0[0] = 3276;
      intArray0[1] = 3276;
      intArray0[2] = 3276;
      intArray0[3] = 3276;
      intArray0[4] = (-426);
      intArray0[5] = 3276;
      intArray0[6] = 194;
      regexp2.runes = intArray0;
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      regexp2.op = regexp_Op1;
      regexp1.maxCap();
      regexp2.maxCap();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[0];
      regexp1.flags = 9140;
      regexp1.runes = intArray0;
      regexp1.toString();
      boolean boolean0 = regexp1.equals("(?-s:.)");
      regexp0.toString();
      boolean boolean1 = regexp1.equals(regexp0);
      assertFalse(boolean1 == boolean0);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp1.toString();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("]=q}gpX#7L1C$r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.]=q}gpX#7L1C$r
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = 1;
      regexp0.min = (-3796);
      regexp1.maxCap();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      regexp1.maxCap();
      boolean boolean0 = regexp1.equals("LEFT_PAREN");
      Regexp.Op.values();
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp2);
      boolean boolean1 = regexp1.equals(regexp3);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.equals(regexp_Op0);
      regexp1.equals(regexp_Op0);
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp0.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("\b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.\b
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = (-5494);
      regexp0.name = "Pattern_Syntax";
      regexp1.toString();
      regexp1.equals(regexp0);
      regexp1.subs = null;
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("6_#9m<i*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.6_#9m<i*
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.reinit();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[8];
      Regexp regexp2 = new Regexp(regexp0);
      regexpArray0[0] = regexp2;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      Regexp regexp3 = new Regexp(regexp0);
      regexpArray0[6] = regexp3;
      regexpArray0[7] = regexp1;
      regexpArray0[3].min = (-3406);
      regexp1.subs = regexpArray0;
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      String string0 = regexp0.toString();
      assertEquals("LEFT_PAREN", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals((Object) null);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.flags = 14;
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp0.toString();
      String string0 = "CmA";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("CmA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.CmA
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = 12;
      regexp1.cap = 12;
      Regexp regexp2 = new Regexp(regexp0);
      regexp1.equals(regexp2);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      regexp0.max = (-1061);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.reinit();
      regexp2.equals(regexp0);
      regexp2.min = 9;
      regexp2.max = 487;
      regexp2.max = 2004;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      regexp0.op = regexp_Op1;
      regexp_Op0.isPseudo();
      regexp1.flags = 8319;
      regexp0.equals(regexp2);
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp1.maxCap();
      boolean boolean0 = regexp0.op.isPseudo();
      assertFalse(regexp0.equals((Object)regexp2));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      regexpArray0[1].cap = (-1262);
      regexpArray0[0].min = 18;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      String string0 = "qgBl)PSS|{dm@'-EMk";
      int[] intArray0 = new int[1];
      intArray0[0] = (-185);
      regexpArray0[1].runes = intArray0;
      regexp1.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("qgBl)PSS|{dm@'-EMk");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.qgBl)PSS|{dm@'-EMk
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-1283);
      regexp0.cap = 2340;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1283);
      intArray0[1] = 2340;
      intArray0[2] = (-1283);
      intArray0[3] = 2340;
      regexp1.runes = intArray0;
      Regexp.Op.values();
      Regexp.Op.values();
      Object object0 = new Object();
      regexp1.toString();
      regexp1.reinit();
      regexp2.cap = 2340;
      regexp2.equals(object0);
      Object object1 = new Object();
      regexp1.runes = intArray0;
      regexp2.equals(object1);
      Object object2 = new Object();
      regexp2.equals(object2);
      Object object3 = new Object();
      regexp0.equals(object3);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("IDS_Trinary_Operator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.IDS_Trinary_Operator
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[4];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.op = regexp_Op0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      regexp0.min = 7;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp1.flags = 7;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp_Op0.isPseudo();
      String string0 = "";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals("J)M");
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.op = regexp_Op0;
      regexp0.reinit();
      regexp0.equals("B(");
      regexp0.flags = 0;
      regexp0.toString();
      String string0 = regexp0.toString();
      regexp0.reinit();
      regexp0.subs = regexpArray0;
      regexp0.toString();
      regexp0.maxCap();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp0.toString();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp0.min = 0;
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.runes = null;
      regexp1.max = 52;
      regexp1.min = 128549;
      regexp1.equals(regexp0);
      regexp1.flags = 4;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 964;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.op = regexp_Op0;
      regexp1.toString();
      regexp0.reinit();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.max = 92;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      regexp1.op = regexp_Op1;
      regexp0.cap = 1649;
      regexp1.max = 3123;
      regexp1.subs = null;
      int[] intArray0 = new int[6];
      regexp1.reinit();
      intArray0[0] = 1649;
      intArray0[1] = 1649;
      intArray0[2] = 3123;
      intArray0[3] = 1649;
      intArray0[4] = 1649;
      regexp0.op.isPseudo();
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.op = regexp_Op0;
      regexp1.equals(regexp0);
      regexp0.toString();
      regexp1.maxCap();
      Regexp.Op.values();
      Object object0 = new Object();
      regexp1.equals(object0);
      boolean boolean0 = regexp1.equals(regexp_Op0);
      assertFalse(regexp1.equals((Object)regexp0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.name = "EMPTY_MATCH";
      regexp0.equals(regexp1);
      regexp0.cap = (-333);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 16;
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      int[] intArray0 = new int[1];
      Object object0 = new Object();
      regexp0.equals(object0);
      intArray0[0] = 125;
      regexp1.runes = intArray0;
      regexp1.max = 125;
      regexp1.toString();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp2);
      assertFalse(regexp1.equals((Object)regexp0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      String string0 = regexp1.toString();
      assertEquals("(?:)", string0);
      
      Regexp regexp2 = new Regexp(regexp1);
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 6;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }
}
