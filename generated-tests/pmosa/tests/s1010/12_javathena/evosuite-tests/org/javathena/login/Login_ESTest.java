/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 17:33:17 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.SocketImplFactory;
import java.net.URI;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Map;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.IParse;
import org.javathena.core.data.SessionType;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      Login.mmo_auth_syncTXT();
      Login.display_title();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login.logUnknownPackets((Socket_data) null);
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login login0 = new Login();
      login0.server_fd = null;
      login0.save_config_in_log();
      login0.getOut();
      MockInetAddress.getLoopbackAddress();
      int int0 = Calendar.SHORT;
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`Y+we<\u0002->Xv,Hj(P/");
      Login.login_log("TCTYZT^'QUQOJPO98*G");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login.getDbManagemtType();
      // Undeclared exception!
      try { 
        Login.mmo_auth_syncTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      Login.End login_End0 = login0.new End();
      Thread[] threadArray0 = new Thread[6];
      threadArray0[0] = (Thread) login_End0;
      MockThread.interrupted();
      threadArray0[1] = (Thread) login_End0;
      threadArray0[2] = (Thread) login_End0;
      MockThread.enumerate(threadArray0);
      threadArray0[3] = (Thread) login_End0;
      threadArray0[4] = (Thread) login_End0;
      MockThread.reset();
      login_End0.getContextClassLoader();
      threadArray0[5] = (Thread) login_End0;
      MockThread.enumerate(threadArray0);
      login_End0.run();
      login_End0.run();
      login0.save_config_in_log();
      Login login1 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login1.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      assertEquals(0, login0.getAuth_max());
      
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login.getMd5Data(socket_data0);
      assertEquals(0, socket_data0.getEof());
      assertEquals("2345678910111213", socket_data0.getMd5key());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_ip("SxBP~[p_4{I");
      Login.auth_num = 2000000;
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      int int0 = (-1003);
      login0.setAuth_max((-1003));
      login0.do_initTXT();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("L% .}D]M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("CONF/SUBNET_ATHENA.CONF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      int int0 = Login.mmo_auth_initTXT();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      socket_data0.setNew_(2210);
      int[] intArray0 = new int[6];
      intArray0[0] = 2210;
      intArray0[1] = 2210;
      intArray0[2] = (-3707);
      intArray0[3] = 2210;
      intArray0[4] = 2210;
      intArray0[5] = 2210;
      socket_data0.func_send(intArray0);
      mockSocket0.setSoTimeout(387);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Login.mmo_auth_initXML();
      Login login0 = new Login();
      Login.auth_num = 91;
      // Undeclared exception!
      try { 
        login0.check_auth_sync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[7];
      intArray0[0] = 30;
      intArray0[1] = 191;
      intArray0[2] = 100000000;
      intArray0[3] = 50;
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login.getDbManagemtType();
      Login.display_title();
      Login.getPASSWORDENC();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data((Socket) null, fromAdmin0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-20);
      // Undeclared exception!
      try { 
        fromAdmin0.parse(socket_data0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.javathena.login.parse.FromAdmin", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[2];
      intArray0[0] = 100000000;
      intArray0[1] = 10;
      ConfigurationManagement.setSubnetmaski(intArray0);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("U#5]p]&bUf0c");
      Locale locale0 = Locale.ENGLISH;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "conf/subnet_athena.conf", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.ENGLISH;
      locale1.getDisplayCountry(locale2);
      PrintWriter printWriter1 = mockPrintWriter1.printf(locale1, "=l?2xG_.TjRK=)Jc#~", objectArray0);
      login0.setOut(printWriter1);
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      Login.mmo_auth_syncXML();
      // Undeclared exception!
      try { 
        login0.parse_console("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.addUserTXT("", "", "", 'A');
      Login.auth_num = 0;
      MySQLConfig.setLogin_server_ip("rwoHyh.'N7");
      login0.check_ipmask((-2818), "");
      login0.getServer_fd();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket((InetAddress) null, (-1379), (InetAddress) null, (-1379));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1379
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      Login.setPASSWORDENC(11);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.utiles.ConfigurationManagement", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      Login.setPASSWORDENC(11);
      int[] intArray0 = new int[5];
      intArray0[4] = 11;
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.utiles.ConfigurationManagement", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "conf/subnet_athena.conf");
      Login.setPASSWORDENC(100000000);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("0", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Login login0 = new Login();
      login0.getAuth_max();
      login0.setAuth_max(0);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = 2;
      intArray0[2] = 30;
      login0.setServer_fd(intArray0);
      login0.getAuth_num();
      Login.display_title();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket(inetAddress0, 2000000, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:2000000
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_ip("SxBP~[p_4{I");
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      login0.setAuth_max((-1003));
      login0.do_initTXT();
      login0.yesNoOnOffToBoolean("YES");
      // Undeclared exception!
      try { 
        login0.do_final();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      login0.setAuth_max(768);
      login0.do_initTXT();
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        Login.codingKey((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      int int0 = login0.check_auth_sync();
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_ip("SxBP~[p_4{I");
      Login.auth_num = 2000000;
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SxBP~[p_4{I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yUKe!G\"f");
      login0.setAuth_max((-1003));
      login0.do_initTXT();
      Login login1 = new Login();
      UserManagement.addAccountIdCount();
      Login.mmo_auth_syncXML();
      login0.check_auth_sync();
      assertEquals((-1003), login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Login login0 = new Login();
      login0.setAuth_max(31024);
      login0.getOut();
      Login.mmo_auth_syncTXT();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      login0.check_ip(inetAddress0);
      assertEquals(31024, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      UserManagement.addAccountIdCount(10);
      Login.mmo_auth_syncTXT();
      int int0 = FromClient.CONNECTION_OF_CLIENT;
      login0.getLog_fp();
      login0.setOut((PrintWriter) null);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      login0.parse_console("eWkS");
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      Login.mmo_auth_initTXT();
      login0.parse_console(" 9)t+?xI");
      login0.getLog_fp();
      Login.login_log("n6n){?>ogd.foVj#");
      login0.getAuth_max();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      login0.check_ip(inetAddress0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byte byte0 = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        login0.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      login0.setAuth_max((-3587));
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      Login.mmo_auth_initTXT();
      login0.parse_console(" 9)t+?xI");
      login0.getLog_fp();
      ConfigurationManagement.setAccess_deny("gf0%X&*-%4eyi<2");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "method");
      login0.check_auth_sync();
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(11);
      login0.do_initTXT();
      Login.mmo_auth_initTXT();
      UserManagement.addAccountIdCount(10);
      String string0 = " 9t+?}";
      login0.parse_console(" 9t+?}");
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum((-1719553632));
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte) (-43);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte) (-19);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UserManagement.addAccountIdCount(2000000);
      // Undeclared exception!
      try { 
        login0.parse_console("shutdown");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Login login0 = new Login();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UserManagement.addUserTXT("wc", "wc", "wc", '3');
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.addUserTXT("5e", "5e", "ON", ',');
      login0.do_initTXT();
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      login0.check_auth_sync();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.addUserTXT("w@", "w@", "w@", '3');
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.parse_console("w@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      boolean boolean0 = login0.yesNoOnOffToBoolean("NO");
      assertFalse(boolean0);
      
      login0.do_initXML();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Login login0 = new Login();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/12_javathena/save/account.txt");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UserManagement.setAccountIdCount(50);
      UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '3');
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.setAccountIdCount(50);
      ACO aCO0 = ACO.STRSIZE;
      ConfigurationManagement.setAccess_order(aCO0);
      UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '3');
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      int int0 = Calendar.SUNDAY;
      int int1 = login0.getAuth_max();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      // Undeclared exception!
      try { 
        login0.parse_console("exit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.setAccountIdCount((-574));
      UserManagement.addUserTXT("conf/inter_athena.conf", "help", "  /_____/  /__//_//_/     /_//_//__/ /_//_//____//_//_//__//_/  ", '-');
      login0.do_initTXT();
      assertEquals(2, Login.DEFAULT_PASSWORDENC);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_allownum(10);
      ACO aCO0 = ACO.STRSIZE;
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.STRSIZE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      ConfigurationManagement.setAccess_allownum(30);
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte)75;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte) (-113);
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)88;
      Login.showTab(byteArray0);
      URI uRI0 = null;
      // Undeclared exception!
      try { 
        MockURI.resolve((URI) null, (URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Login login0 = new Login();
      Login.auth_num = 14;
      ConfigurationManagement.setAccess_allownum(10);
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      assertEquals(10, Login.AUTH_BEFORE_SAVE_FILE);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      Login.auth_num = 30;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      ConfigurationManagement.setAccess_allownum(50);
      ACO aCO1 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO1);
      login0.do_initTXT();
      ConfigurationManagement.setAccess_order(aCO0);
      Login.mmo_auth_syncTXT();
      Login login1 = new Login();
      UserManagement.setAccountIdCount(1070);
      // Undeclared exception!
      try { 
        login1.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.STRSIZE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      ConfigurationManagement.setAccess_allownum(30);
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      int int0 = login0.parse_console("alive");
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Login login0 = new Login();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockSocket0.close();
      FromAdmin fromAdmin0 = new FromAdmin();
      FromAdmin fromAdmin1 = new FromAdmin();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromClient0);
      byte[] byteArray0 = new byte[1];
      Login.showTab(byteArray0);
      login0.parse_admin(409, socket_data0, login0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login login1 = new Login();
      int[] intArray0 = new int[9];
      intArray0[0] = 2000000;
      intArray0[1] = 2;
      intArray0[2] = 30;
      intArray0[3] = 50;
      mockSocket0.close();
      intArray0[4] = 100000000;
      intArray0[5] = (-1317);
      intArray0[6] = 50;
      intArray0[7] = (-1418);
      intArray0[8] = 10;
      ConfigurationManagement.setSubnetmaski(intArray0);
      login0.parse_admin((-1317), socket_data0, login1);
      assertEquals(0, login1.getAuth_max());
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Login login0 = new Login();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      ConfigurationManagement.setAccess_denynum(1);
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }
}
