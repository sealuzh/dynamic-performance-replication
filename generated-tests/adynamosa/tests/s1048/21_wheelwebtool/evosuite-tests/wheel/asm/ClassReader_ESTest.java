/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 07:26:48 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 146);
      classReader0.readInt(740);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 146);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      classAdapter0.visitAnnotation("java/lang/Object", true);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = 'B';
      charArray0[2] = '*';
      classReader0.readConst(22, charArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, 740);
      classReader0.getInterfaces();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      byteArrayInputStream0.reset();
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) null, attributeArray0, 153);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      long long0 = classReader0.readLong(356);
      assertEquals((-5260202505047900158L), long0);
      
      classReader0.getInterfaces();
      classReader0.getClassName();
      int int0 = classReader0.readUnsignedShort(356);
      assertEquals(46848, int0);
      
      ClassReader classReader1 = new ClassReader("wheel.asm.Handler");
      classReader1.getInterfaces();
      classReader0.getInterfaces();
      classReader1.readByte(273);
      int int1 = classReader0.readInt(0);
      assertEquals((-889275714), int1);
      
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      int int2 = classReader0.getAccess();
      assertEquals(32, int2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("java/lang/Object", "Exceptions");
      ClassWriter classWriter1 = new ClassWriter(2);
      classReader1.accept((ClassVisitor) classWriter1, (-1660));
      // Undeclared exception!
      try { 
        classReader0.readInt((-622));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      classReader0.copyPool(classWriter0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("java/lang/Object", "Exceptions");
      classReader1.accept((ClassVisitor) classAdapter0, (-3760));
      char[] charArray0 = null;
      Type type0 = (Type)classReader1.readConst(1, (char[]) null);
      classReader0.getClassName();
      classReader0.readConst(2, (char[]) null);
      type0.getInternalName();
      // Undeclared exception!
      try { 
        classReader1.readUTF8(4, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (-1185));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader1.b);
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      classReader0.getInterfaces();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      byteArrayInputStream0.reset();
      ClassReader classReader2 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader3 = new ClassReader("wheel.asm.Handler");
      classReader3.getSuperName();
      // Undeclared exception!
      try { 
        classReader3.readShort((-1185));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter1, (-587));
      classWriter0.visitSource("java/lang/Object", "org.apache.commons.io.filefilter.AbstractFileFilter");
      classWriter0.newClass("SourceDebugExtension");
      classReader0.readInt(2);
      Item[] itemArray0 = new Item[0];
      classWriter1.typeTable = itemArray0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(1);
      classReader0.readByte(82);
      ClassReader classReader1 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader1.getInterfaces();
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.AbstractFileFilter");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 1);
      int int0 = ClassReader.SKIP_CODE;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, (-2642));
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "wheel.asm.Handler";
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Object");
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classAdapter0, (-3754));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      char[] charArray0 = null;
      classReader1.readConst(1, (char[]) null);
      classReader0.getClassName();
      classReader0.readConst(2, (char[]) null);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader0.b, 532, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      ClassReader classReader1 = new ClassReader(classReader0.b, 273, 2);
      classReader1.getSuperName();
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1925);
      classWriter0.invalidFrames = true;
      ClassWriter classWriter1 = new ClassWriter((-1527));
      // Undeclared exception!
      try { 
        classReader1.copyPool(classWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      classReader0.getSuperName();
      char[] charArray0 = new char[9];
      charArray0[0] = 's';
      charArray0[1] = '.';
      charArray0[2] = '-';
      charArray0[3] = 'c';
      charArray0[4] = 'L';
      charArray0[6] = '+';
      charArray0[7] = 'H';
      charArray0[8] = 'T';
      // Undeclared exception!
      try { 
        classReader0.readConst(255, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "wheel.asm.Handler";
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, (-1184));
      classReader1.readInt(4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader1.b);
      classReader1.readByte(1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.readByte(64);
      ClassWriter classWriter0 = new ClassWriter(8);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.readShort(2);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 2, 273);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 418
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      int int0 = classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter1, (-587));
      classReader0.readInt(2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(1);
      classReader0.readByte(82);
      ClassReader classReader1 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader1.getInterfaces();
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.AbstractFileFilter");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 1);
      int int1 = classReader0.readByte(657);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[3];
      classReader0.getClassName();
      boolean boolean0 = ClassReader.FRAMES;
      classReader0.readConst(11, charArray0);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 11);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitAnnotation("wheel/asm/Handler", true);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      classReader0.readConst(2, charArray0);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 0);
      // Undeclared exception!
      try { 
        classReader0.readByte((-539));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -539
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
      
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, 146);
      classReader0.readInt(740);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(146);
      classReader0.readByte(251);
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader1.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 244);
      int int0 = classReader1.readByte(1);
      assertEquals(254, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[3];
      boolean boolean0 = ClassReader.FRAMES;
      classReader0.readConst(11, charArray0);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 11);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      classReader0.readConst(2, charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn(pipedInputStream0).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      assertEquals(612, classReader0.header);
      
      Label label0 = new Label();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
      
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 146);
      classReader0.readInt(740);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(146);
      int int0 = classReader0.readByte(251);
      assertEquals(97, int0);
      
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 242);
      int int1 = classReader1.readByte(1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.getClassName();
      classReader0.readLong(4);
      ClassWriter classWriter0 = new ClassWriter(269);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getSuperName();
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1581);
      classReader0.accept((ClassVisitor) classWriter1, 2);
      classReader0.readInt(1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(146);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.readByte(4);
      classReader0.accept((ClassVisitor) classAdapter0, 1);
      ClassReader classReader2 = new ClassReader("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter1, (Attribute[]) null, 714);
      // Undeclared exception!
      try { 
        classReader1.readByte(434);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 434
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.getClassName();
      classReader0.readLong(4);
      char[] charArray0 = new char[14];
      charArray0[0] = '~';
      charArray0[1] = '?';
      classReader0.readUTF8(13, charArray0);
      char[] charArray1 = new char[3];
      classReader0.readUTF8(13, charArray1);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1619);
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 1619);
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter(classReader1, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.getClassName();
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      ClassReader classReader1 = new ClassReader(classReader0.b, 273, 29);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, 120);
      classReader0.readInt(740);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(120);
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = '^';
      // Undeclared exception!
      try { 
        classReader0.readConst(3026, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3026
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      classReader1.getAccess();
      ClassWriter classWriter1 = new ClassWriter(4);
      ClassWriter classWriter2 = new ClassWriter(classReader1, 1);
      classWriter2.getCommonSuperClass("wheel.asm.Handler", "wheel.asm.Handler");
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter2);
      classReader0.accept((ClassVisitor) classWriter2, 8);
      classReader1.readInt(273);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(32);
      classReader0.readByte(1);
      classReader0.readByte(254);
      classReader0.readShort(1);
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(32, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      String string1 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string1);
      
      classReader0.accept((ClassVisitor) classWriter0, 146);
      classReader0.readInt(740);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(146);
      int int0 = classReader0.readByte(251);
      assertEquals(97, int0);
      
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter1);
      classReader0.accept((ClassVisitor) classAdapter1, (Attribute[]) null, 106);
      assertEquals(1057, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
      
      classReader0.accept((ClassVisitor) classWriter0, 146);
      classReader0.readInt(740);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(146);
      classReader0.readByte(251);
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader1.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 242);
      int int0 = classReader0.readByte(185);
      assertEquals(1057, classReader0.getAccess());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, (-1184));
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classAdapter0, 1);
      int int0 = ClassReader.EXPAND_FRAMES;
      Locale.getISOLanguages();
      classReader1.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readShort((-720));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getAccess();
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      classReader0.readLabel(2, labelArray0);
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassWriter classWriter1 = new ClassWriter(classReader1, 612);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      classReader0.accept((ClassVisitor) classAdapter0, (-3950));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader1.readByte(2);
      // Undeclared exception!
      try { 
        classReader1.readConst((-87), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -87
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("org.apache.commons.io.filefilter.AbstractFileFilter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, 146);
      classReader0.readInt(740);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readByte(146);
      classReader0.readByte(251);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-2793));
      assertEquals(612, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.getClassName();
      classReader0.readLong(4);
      char[] charArray0 = new char[14];
      charArray0[0] = '~';
      charArray0[1] = '?';
      classReader0.readUTF8(13, charArray0);
      char[] charArray1 = new char[4];
      charArray1[0] = '0';
      charArray1[1] = 'e';
      charArray1[2] = 'R';
      charArray1[3] = ' ';
      classReader0.readConst(13, charArray1);
      classReader0.readUnsignedShort(4);
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.readShort(0);
      // Undeclared exception!
      try { 
        classReader0.getItem((-666));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -666
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter((-2340));
      ClassWriter classWriter1 = new ClassWriter(classReader1, 612);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      classReader0.accept((ClassVisitor) classAdapter0, (-3950));
      classReader1.readInt(14);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.readByte(470417413);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 470417413
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "org.apache.commons.io.filefilter.AbstractFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      int int0 = 3357;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 3357, 146);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      Label label0 = new Label();
      classReader0.getInterfaces();
      assertEquals(273, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (-173));
      ClassReader classReader1 = new ClassReader(classReader0.b);
      String string0 = classReader1.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      short short0 = classReader1.readShort(2);
      assertEquals((short) (-17730), short0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      assertEquals(273, classReader0.header);
      
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getInterfaces();
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = classReader0.getItem(21);
      assertEquals(215, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertEquals(273, classReader1.header);
      
      classReader1.getInterfaces();
      classReader0.getInterfaces();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader2 = new ClassReader(classReader0.b);
      short short0 = classReader2.readShort(4);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.getClassName();
      classReader0.readLong(4);
      int int0 = 13;
      char[] charArray0 = new char[2];
      charArray0[0] = '~';
      charArray0[1] = '?';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(13, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      assertEquals(273, classReader0.header);
      
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = classReader0.readUnsignedShort(0);
      assertEquals(51966, int0);
      
      int int1 = classReader0.readInt(209);
      assertEquals(1699113324, int1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      classReader0.getClassName();
      classReader0.readConst(8, charArray0);
      classReader0.readUnsignedShort(8);
      classReader0.getSuperName();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readClass(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[5];
      classReader0.getClassName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel/asm/Handler");
      classReader0.readConst(11, charArray0);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 11);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      classReader0.readConst(2, charArray0);
      ClassWriter classWriter1 = new ClassWriter(1);
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readClass((-1317), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      int int0 = 1260;
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-412));
      classWriter0.visitSource("wheel.asm.ByteVector", "iL.u#rBtn&u+");
      classReader0.copyPool(classWriter0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'r';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = '-';
      charArray0[2] = '5';
      charArray0[3] = 'o';
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readConst(1260, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1260
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      assertEquals(273, classReader0.header);
      
      classReader0.getClassName();
      long long0 = classReader0.readLong(4);
      assertEquals(214750005760L, long0);
      
      classReader0.readUnsignedShort(4);
      classReader0.getInterfaces();
      classReader0.getSuperName();
      short short0 = classReader0.readShort(0);
      assertEquals((short) (-13570), short0);
      
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.readLong(2);
      classReader0.readUnsignedShort(8);
      assertEquals(273, classReader0.header);
      
      classReader0.getInterfaces();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      long long0 = classReader0.readLong(25);
      assertEquals(8386109823699128652L, long0);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      short short0 = classReader0.readShort(1);
      assertEquals((short) (-326), short0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      Label label0 = new Label();
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 252);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      ClassReader classReader1 = new ClassReader(classReader0.b, 273, 2);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1925);
      classWriter0.invalidFrames = true;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader1.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(247, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      Label label0 = new Label();
      int int0 = 3460;
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      charArray0[1] = 'X';
      charArray0[2] = '`';
      charArray0[3] = '<';
      charArray0[4] = '>';
      charArray0[5] = '';
      charArray0[6] = 's';
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      // Undeclared exception!
      try { 
        classReader0.readByte((-4487));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4487
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        classReader0.readUTF8(32, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      classReader0.readShort(74);
      // Undeclared exception!
      try { 
        classReader0.getItem((-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classReader0.readClass(273, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      Label label0 = new Label();
      classReader0.getInterfaces();
      classReader0.readUnsignedShort(4);
      assertEquals(273, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.readLong(2);
      classReader0.readUnsignedShort(8);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readShort((-224));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.readLong(2);
      classReader0.readUnsignedShort(8);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(158, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      classReader1.getSuperName();
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.readByte(4);
      ClassWriter classWriter0 = new ClassWriter(273);
      classReader1.copyPool(classWriter0);
      char[] charArray0 = new char[9];
      charArray0[0] = '.';
      charArray0[1] = 'p';
      charArray0[2] = 'Z';
      charArray0[3] = '(';
      charArray0[4] = '?';
      charArray0[5] = '9';
      charArray0[6] = '5';
      charArray0[7] = 'l';
      charArray0[8] = 'p';
      // Undeclared exception!
      try { 
        classReader1.readClass(248, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      int int0 = 94;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classReader0.readConst(1679, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1679
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, (-1184));
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classAdapter0, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[14];
      ClassWriter classWriter0 = new ClassWriter((-1487));
      classReader0.accept((ClassVisitor) classWriter0, 2694);
      Label label0 = new Label();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readClass(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.readUnsignedShort(273);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int0 = classReader0.readInt(2);
      classReader0.getSuperName();
      int int1 = classReader0.getAccess();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[14];
      ClassWriter classWriter0 = new ClassWriter((-1487));
      classReader0.accept((ClassVisitor) classWriter0, Integer.MAX_VALUE);
      Label label0 = new Label();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readClass(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      long long0 = classReader0.readLong(60);
      assertEquals(7954602024803303428L, long0);
      
      classReader0.getInterfaces();
      int int0 = classReader0.readUnsignedShort(60);
      assertEquals(28260, int0);
      
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int1 = classReader0.readByte(60);
      assertEquals(110, int1);
      
      classReader0.readInt(273);
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
      
      int int2 = classReader0.getAccess();
      assertEquals(32, int2);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-33);
      byteArray0[4] = (byte)116;
      // Undeclared exception!
      try { 
        classReader0.getItem((byte)116);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 116
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.readLong(60);
      classReader0.readUnsignedShort(60);
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        classReader0.readLabel((-529), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/Handler", string0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(32);
      classReader0.accept((ClassVisitor) classWriter0, 4);
      assertEquals(32, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      classReader0.getClassName();
      classReader0.readConst(8, charArray0);
      byte[] byteArray0 = new byte[15];
      ClassReader classReader1 = new ClassReader(byteArray0);
      int int0 = 94;
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader1, 94);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[13];
      Object object0 = new Object();
      classReader0.getInterfaces();
      Label label0 = new Label();
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      label0.info = (Object) label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      // Undeclared exception!
      try { 
        classReader0.readLabel((-1530), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1530
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(63, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 63
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[13];
      // Undeclared exception!
      try { 
        classReader0.readConst('\u0000', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      int int0 = 60;
      classReader0.readLong(60);
      classReader0.readUnsignedShort(60);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int1 = 430;
      classReader0.readInt(273);
      classReader0.getInterfaces();
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      // Undeclared exception!
      try { 
        classReader0.readClass(60, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[13];
      int int0 = 20;
      Label[] labelArray0 = new Label[7];
      // Undeclared exception!
      try { 
        classReader0.readLabel(20, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      int int0 = (-2624);
      char[] charArray0 = new char[8];
      charArray0[5] = 'V';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2624), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      classReader0.getInterfaces();
      int int0 = (-2624);
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = 'C';
      charArray0[1] = 'n';
      charArray0[3] = '<';
      classReader0.getClassName();
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      charArray0[6] = '&';
      // Undeclared exception!
      try { 
        classReader0.readInt((-190));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.readLong((-1157));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      classReader0.getClassName();
      classReader0.readConst(11, charArray0);
      // Undeclared exception!
      try { 
        classReader0.readConst(248, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 248
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'U';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 97);
      int int0 = 1028;
      // Undeclared exception!
      try { 
        classReader0.readConst(1028, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1028
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      assertEquals(273, classReader0.header);
      
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/Handler", string0);
      
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = 'I';
      charArray0[2] = 'u';
      charArray0[2] = 'o';
      long long0 = classReader0.readLong(3);
      assertEquals((-4755801205664376566L), long0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      int int0 = 60;
      classReader0.readLong(60);
      classReader0.readUnsignedShort(60);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readByte(430);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 430
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte byte0 = (byte) (-96);
      byte byte1 = (byte)79;
      byte byte2 = (byte)0;
      char[] charArray0 = new char[1];
      int int0 = 14;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'U';
      charArray0[2] = 'V';
      charArray0[3] = '<';
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      charArray0[6] = '&';
      ClassReader classReader1 = new ClassReader(classReader0.b);
      long long0 = classReader1.readLong(8);
      assertEquals(7047869584381447L, long0);
      assertEquals(273, classReader1.header);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      byteArrayInputStream0.skip(1120L);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 166);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 46660
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(182, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      classReader0.getClassName();
      int int0 = 18;
      // Undeclared exception!
      try { 
        classReader0.readConst(18, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      // Undeclared exception!
      try { 
        classReader0.readClass((-2624), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      char[] charArray0 = new char[9];
      charArray0[0] = 'V';
      charArray0[1] = '<';
      charArray0[2] = ']';
      classReader0.getSuperName();
      charArray0[3] = 'k';
      int int0 = 1212;
      // Undeclared exception!
      try { 
        classReader0.readConst(1212, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1212
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = 'C';
      charArray0[1] = 'n';
      charArray0[3] = '<';
      classReader0.getClassName();
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      charArray0[6] = '&';
      charArray0[7] = ',';
      // Undeclared exception!
      try { 
        classReader0.readConst((-2624), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2624
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = '%';
      charArray0[2] = 'W';
      charArray0[3] = '<';
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      charArray0[6] = '&';
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-1032));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = 'C';
      charArray0[2] = 'W';
      classReader0.getInterfaces();
      charArray0[3] = '<';
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      charArray0[6] = '&';
      charArray0[7] = 'i';
      // Undeclared exception!
      try { 
        classReader0.readConst((-2624), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2624
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = 'C';
      charArray0[2] = 'W';
      charArray0[3] = '<';
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      classReader0.readUnsignedShort(46);
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.copyPool(classWriter0);
      assertEquals(32, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = 'C';
      charArray0[2] = 'W';
      charArray0[3] = '<';
      charArray0[4] = 'i';
      charArray0[5] = 'v';
      charArray0[6] = '&';
      charArray0[7] = ',';
      // Undeclared exception!
      try { 
        classReader0.readConst((-2624), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2624
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 122, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte) (-96);
      byteArray0[6] = (byte)79;
      byteArray0[7] = (byte) (-107);
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)2);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pushbackInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      char[] charArray0 = new char[9];
      charArray0[0] = 'V';
      charArray0[1] = '<';
      charArray0[2] = '0';
      charArray0[3] = 'k';
      charArray0[4] = 'L';
      charArray0[5] = 'r';
      charArray0[6] = '_';
      charArray0[7] = '{';
      charArray0[8] = '4';
      // Undeclared exception!
      try { 
        classReader0.readClass(1511, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      String string0 = "M@|H'\"-";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("M@|H'\"-");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte) (-31);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
