/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:03:26 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BisectionSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondaryEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-453.5774591744), (-453.5774591744), 0.8, (-453.5774591744));
      graggBulirschStoerIntegrator0.setOrderControl(1054, 0.8, (-369.641));
      assertEquals(453.5774591744, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3397.343240901), (-1436.587920974), (-3397.343240901), (-3397.343240901));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      MullerSolver mullerSolver0 = new MullerSolver((-1436.587920974), (-3397.343240901));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 0.0, 3, (UnivariateSolver) mullerSolver0);
      assertEquals((-3397.343240901), mullerSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-5.23735298540578E-9), 2962.7273223310817, 2962.7273223310817, (-5.23735298540578E-9));
      graggBulirschStoerIntegrator0.setOrderControl(4, 4, 4);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 4);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1719.5, 0.0, (-3232.34878584212), 1719.5);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(145).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getCompleteState();
      expandableStatefulODE0.setTime(0.0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1719.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (1.72E03) reached, integration needs 0.00E00
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(744.6910535991824, 744.6910535991824, 744.6910535991824, 0.46486347913742065);
      graggBulirschStoerIntegrator0.setControlFactors(744.6910535991824, (-1432.0), (-553.1646), (-1432.0));
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 880.365);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-146.0), 0.0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(9).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getCompleteState();
      expandableStatefulODE0.setTime((-146.0));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1719.5, (-18.21565862535676), (-3232.34878584212), 1719.5);
      graggBulirschStoerIntegrator0.getStepHandlers();
      int int0 = (-47);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-47), (-1342), (-47));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(289).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getTotalDimension();
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1719.0));
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = 959.0317992865;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(959.0317992865, 959.0317992865, 959.0317992865, 959.0317992865);
      int int0 = 640;
      graggBulirschStoerIntegrator0.setOrderControl(640, (-3441.53228626753), 640);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(640).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 640);
      double double1 = (-3010.90582477823);
      double double2 = (-457185.2212906956);
      graggBulirschStoerIntegrator0.setControlFactors(int0, double1, double2, double0);
      double double3 = (-483849.76719167555);
      double double4 = (-516439.7677373177);
      double double5 = 2472.497770762477;
      graggBulirschStoerIntegrator0.setControlFactors(double3, double4, double2, double5);
      boolean boolean0 = true;
      double double6 = 1.0;
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int0, int0, double6);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 1.0E15, 1.0E15, 1.0E15);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getCompleteState();
      expandableStatefulODE0.setTime((-110.1917478551));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2863.75287520507);
      graggBulirschStoerIntegrator0.setControlFactors((-4508.527557648259), 0.94, 1.0E15, (-2293.0));
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      graggBulirschStoerIntegrator0.setControlFactors((-1948.4429375474879), 1406.5381978934122, 1.7976931348623157E308, 1406.5381978934122);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-2186));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2323.27062198691), (-1959.286618105675), (-1959.286618105675), 6.716441526213986E-8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(12).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getPrimaryState();
      expandableStatefulODE0.setTime(550.4879221429454);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-5.23735298540578E-9), 2954.13, (-7.962256961838823E292), (-5.23735298540578E-9));
      graggBulirschStoerIntegrator0.mainSetDimension = 1632;
      graggBulirschStoerIntegrator0.setOrderControl(4, 4, 4);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(518).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-7.962256961838823E292));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, 1.0E-4, 1.0E-4, 1.0E-4);
      graggBulirschStoerIntegrator0.setControlFactors((-226.4818), (-67.71678912), (-596.0165626773855), 448.6000896282756);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2323.27062198691), (-1959.286618105675), (-1959.286618105675), 6.716441526213986E-8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(12).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.955364187248884E203);
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      FixedStepHandler fixedStepHandler0 = null;
      double double0 = (-1356.61166494087);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer(double0, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = 2962.7273223310817;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-5.23735298540578E-9), 2962.7273223310817, (-7.962256961838823E292), (-5.23735298540578E-9));
      graggBulirschStoerIntegrator0.setOrderControl(4, 4, 4);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 51);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(51).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(4);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-7.962256961838823E292));
      int int0 = 657;
      boolean boolean0 = false;
      int int1 = (-1);
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int1, int0, double0);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      double double1 = 1.103661060333252;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(double1, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      double double2 = (-903.624027247574);
      FixedStepHandler fixedStepHandler1 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer1 = new StepNormalizer(double2, fixedStepHandler1);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer1);
      boolean boolean1 = true;
      int int2 = 1612;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean1, int2);
      double double3 = (-710.9352217);
      FixedStepHandler fixedStepHandler2 = null;
      StepNormalizer stepNormalizer2 = new StepNormalizer(double3, fixedStepHandler2, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2323.27062198691), (-1959.286618105675), (-1959.286618105675), 6.716441526213986E-8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getCompleteState();
      expandableStatefulODE0.setTime(550.3231653693);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2323.27062198691), (-1959.286618105675), (-1959.286618105675), 6.716441526213986E-8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(12).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getPrimaryState();
      expandableStatefulODE0.setTime((-2323.27062198691));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-10.9054617381));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-763.6439);
      doubleArray0[1] = (-763.6439);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-763.6439), (-763.6439), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(419.52711, (-763.6439), (-763.6439), (-763.6439));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 0.8;
      doubleArray0[2] = 0.8;
      doubleArray0[3] = (-773.8609988000455);
      doubleArray0[4] = 0.8;
      doubleArray0[5] = 0.8;
      doubleArray0[6] = 0.8;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-773.8609988000455), 0.8, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl((-2087), 4.0, 0.8);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-427.1648496483977), (-427.1648496483977), (-5.23735298540578E-9), (-5.23735298540578E-9));
      graggBulirschStoerIntegrator0.setOrderControl(3967, 1.078094720840454, 1.078094720840454);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 1568.0753981, 3682.0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(3682.0, 1.0E-15, 3682.0, 2.1782039447564253E47);
      graggBulirschStoerIntegrator0.setControlFactors(1568.0753981, 1.5917654037475586, 2093.9802447817, 2.1782039447564253E47);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1719.5, 0.7687229425574172, (-3232.34878584212), 1719.5);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2946);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 18, 821, 821);
      graggBulirschStoerIntegrator0.setControlFactors(0.7687229425574172, (-682.51321970405), 1182.9395332186457, (-682.51321970405));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1959.286618105675), (-1959.286618105675), (-1959.286618105675), (-1959.286618105675));
      SecondaryEquations secondaryEquations0 = mock(SecondaryEquations.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setControlFactors((-1959.286618105675), (-1959.286618105675), (-1959.286618105675), 0.9999);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 917, 2, 1.0E-4);
      graggBulirschStoerIntegrator0.setOrderControl((-1000), (-2745.773464), 0.9999);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 800, 2, (-2745.773464));
      graggBulirschStoerIntegrator0.setControlFactors(497.203364071261, 1.0E-4, 1.1589095247718807E59, 0.9999);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = (-5.23735298540578E-9);
      int int0 = 1104;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1104).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-432.533778), (-427.17055648), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors((-427.17055648), 961.6544287, 0.9999, 961.6544287);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1104);
      graggBulirschStoerIntegrator0.setControlFactors((-5.23735298540578E-9), 9.761163062156018E179, (-959.01714017), 1104.84125488663);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, 961.6544287);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2,208 != 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1719.5, (-18.21565862535676), (-3232.34878584212), 1719.5);
      graggBulirschStoerIntegrator0.getStepHandlers();
      int int0 = (-47);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-47), (-1342), (-47));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(289).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(0.6);
      expandableStatefulODE0.getTotalDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1719.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (1.72E03) reached, integration needs 3.85E01
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = 0.0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = expandableStatefulODE1.getCompleteState();
      ExpandableStatefulODE expandableStatefulODE2 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE2.setTime(0.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(6.493457409236137E-8, (-3918.57323621135), doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 89;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(89).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = expandableStatefulODE0.getCompleteState();
      double double0 = (-230.3811);
      expandableStatefulODE0.setTime((-230.3811));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, (-8.054981263802322E-8), doubleArray0, doubleArray0);
      double double1 = (-2455.97);
      graggBulirschStoerIntegrator0.setControlFactors((-2455.97), 0.9999, (-1948.4429375474879), 0.9999);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-110.1917478551));
      double double2 = 5192.970981915495;
      BisectionSolver bisectionSolver0 = new BisectionSolver(double2);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, double1, double0, int0, (UnivariateSolver) bisectionSolver0);
  }
}
