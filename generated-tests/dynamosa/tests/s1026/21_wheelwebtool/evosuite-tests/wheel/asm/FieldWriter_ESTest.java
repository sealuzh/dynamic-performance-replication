/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 16:12:34 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1859));
      classWriter0.version = (-1859);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1859), "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(798);
      classWriter0.index = (int) (byte) (-91);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 798, "RuntimenvisiblePrameterAnottos", "RuntimenvisiblePrameterAnottos", "RuntimenvisiblePrameterAnottos", "RuntimenvisiblePrameterAnottos");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1859));
      classWriter0.version = (-1859);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1859), "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1866));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1866), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2522, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, "vo7");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 32767, "wheel.asm.FieldWriter", "_;C0<G2X", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[2];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("H03j~Tzis}eaD0>N>", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "y[CuBSP", "y[CuBSP", "y[CuBSP", "y[CuBSP");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[0];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 50331648, "K-/G\"ph", "K-/G\"ph", "K-/G\"ph", "java/lang/String");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1859));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "E+'`E~j.H%Kqo", "E+'`E~j.H%Kqo", "E+'`E~j.H%Kqo", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(2419);
      byte[] byteArray0 = new byte[0];
      byteVector1.data = byteArray0;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "_;C0<G2X", "Deprecated", "Deprecated", "_;C0<G2X");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1652);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "yCuBSP", "yCuBSP", "yCuBSP", "yCuBSP");
      Attribute attribute0 = new Attribute("yCuBSP");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.visitAnnotation("8Kbz&X|6w~:WL;MJgFX", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", (Object) null);
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-994));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-994), "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2522, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, "vo7");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1859));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1859), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      Attribute attribute0 = new Attribute("8Kbz&X|6w~:WL;MJgFX");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-994));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-994), "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX", "8KbzXI6G~:3WL;MgFX");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2522, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, "vo7");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", (Object) null);
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 32767, "wheel.asm.FieldWriter", "_;C0<G2X", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "_;C0<G2X", "Deprecated", "Deprecated", "_;C0<G2X");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      fieldWriter0.visitEnd();
  }
}
