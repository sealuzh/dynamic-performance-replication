/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:57:45 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayReader;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextAction;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.ContextListener;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.ImporterTopLevel;
import org.mozilla.javascript.JavaAdapter;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.NativeJavaClass;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.RegExpProxy;
import org.mozilla.javascript.ScriptOrFnNode;
import org.mozilla.javascript.regexp.RegExpImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addError("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("debugger", "debugger", 1674);
      assertEquals("\u0087\u009FQ\u0001", parser0.getEncodedSource());
      assertEquals(1674, scriptOrFnNode0.getBaseLineno());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.setClassAssertionStatus("error reporter", false);
      compilerEnvirons0.setGeneratingSource(true);
      contextFactory0.createClassLoader(classLoader0);
      Context context1 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      Context.enter(context0, contextFactory0);
      // Undeclared exception!
      try { 
        parser0.parse("break", "sw3J6|)b)|2", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unlabelled break must be inside loop or switch (sw3J6|)b)|2#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.eof();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(9);
      // Undeclared exception!
      try { 
        parser0.parse(" === ", (String) null, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("0hvxSB", "error reporter", 160);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (error reporter#160)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("nul.&o]/Y*2Z^A", "nul.&o]/Y*2Z^A", (-9));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -9
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("language version", "6VML/", 16);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (6VML/#16)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "extends");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("default", "error reporter", 140);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@-.H<OmPl.*9Q[f", "@-.H<OmPl.*9Q[f", 1923);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (@-.H<OmPl.*9Q[f#1923)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.initGlobal(contextFactory0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      boolean boolean0 = false;
      compilerEnvirons0.setGenerateObserverCount(false);
      compilerEnvirons0.setXmlAvailable(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "getUTCMinutes");
      // Undeclared exception!
      try { 
        parser0.parse("msg.bad.return", "error reporter", 18);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (error reporter#18)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("7^`dDZ~#", "language version", 1309);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#1309)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGeneratingSource(true);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.unexpected.eof", "msg.generator.returns");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      context0.generateObserverCount = context0.generateObserverCount;
      // Undeclared exception!
      try { 
        parser0.parse("({sUg", "({sUg", 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing : after property id (({sUg#4)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.getParent();
      classLoader0.setClassAssertionStatus("error reporter", false);
      compilerEnvirons0.setGeneratingSource(true);
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(13);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons0.initFromContext(context0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FunctionNode functionNode0 = new FunctionNode("language version");
      // Undeclared exception!
      try { 
        parser0.parse("G*|#bty>'X x", "dS99#", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegal character (dS99##14)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      DefaultErrorReporter.forEval(errorReporter0);
      compilerEnvirons0.setGeneratingSource(true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("h-%x", "^~/,ZxKZ5/", (-2922));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2922
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("LYiA(?iR{CR-", "LYiA(?iR{CR-", (-1342));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1342
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = null;
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      FunctionNode functionNode0 = new FunctionNode("cl{KZ=+N6UP");
      ClassLoader.getSystemClassLoader();
      contextFactory0.enterContext();
      String string0 = "~r?H4";
      // Undeclared exception!
      try { 
        parser0.parse("~r?H4", "language version", 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.setClassAssertionStatus("error reporter", false);
      compilerEnvirons0.setGeneratingSource(true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("class", "zw!lT;", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (zw!lT;#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("QP+D4B \"ix", "QP+D4B \"ix", (-54));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -54
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("S<", ",$A2Abr)I&:e=z>cb", 146);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (,$A2Abr)I&:e=z>cb#146)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("throw", "language version", 26);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#26)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      Context context1 = contextFactory0.enterContext(context0);
      ErrorReporter errorReporter0 = context1.getErrorReporter();
      context1.getImplementationVersion();
      ErrorReporter errorReporter1 = context1.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("/U3=eRdz[h37", "language version", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (language version#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = new Context();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("4:y.4~", "error reporter", 150);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (error reporter#150)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@r(v@1HnZ_&", "@r(v@1HnZ_&", (-1878));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1878
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("const ", "const ", (-1815));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1815
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      compilerEnvirons0.initFromContext(context0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter1);
      contextFactory0.disableContextListening();
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("c /%9-Nd+", "debugger", 110);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (debugger#110)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Context context1 = new Context(contextFactory0);
      compilerEnvirons0.initFromContext(context1);
      ContextFactory.initGlobal(contextFactory0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons2.setGenerateObserverCount(false);
      String string0 = "?";
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("g$iG=cFCG", "language version", 99);
      PipedReader pipedReader0 = new PipedReader();
      compilerEnvirons0.setGenerateObserverCount(context0.generateObserverCount);
      String string1 = "1-l]c0(^Qf(";
      // Undeclared exception!
      try { 
        parser0.parse(string1, string0, scriptOrFnNode0.TARGETBLOCK_PROP);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (?#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("9&pSj+<eWA69", "language version", 3507);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (language version#3507)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Context context1 = contextFactory0.enter();
      compilerEnvirons0.initFromContext(context1);
      contextFactory0.enterContext(context0);
      compilerEnvirons0.setXmlAvailable(false);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*");
      // Undeclared exception!
      try { 
        parser0.parse("error reporter", "", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      String string0 = "ob93w,*|s=dewg";
      // Undeclared exception!
      try { 
        parser0.parse("ob93w,*|s=dewg", "ob93w,*|s=dewg", 1752);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (ob93w,*|s=dewg#1752)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "Q8v-4NaF2 `";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q8v-4NaF2 `");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("d.b['", "Q8v-4NaF2 `", 1024);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (Q8v-4NaF2 `#1024)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("-~%pviN4mH}l", "LYiA(?iR{CR-", (-1342));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1342
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      contextFactory0.makeContext();
      FunctionNode functionNode0 = new FunctionNode("language version");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "", 0);
      parser0.defineSymbol(121, false, "error reporter");
      // Undeclared exception!
      try { 
        parser0.defineSymbol(1, false, "error reporter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      PipedReader pipedReader0 = new PipedReader();
      ContextFactory.getGlobal();
      contextFactory0.exit();
      Context context0 = contextFactory0.enterContext();
      contextFactory0.enterContext(context0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      parser0.insideFunction();
      compilerEnvirons0.setGenerateObserverCount(true);
      // Undeclared exception!
      try { 
        parser0.parse("@~:X@!", ":!LmTMXRZx\"NVj3", 88);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (:!LmTMXRZx\"NVj3#88)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "language version");
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Context context1 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      ErrorReporter errorReporter2 = DefaultErrorReporter.forEval(errorReporter1);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter2);
      parser0.parse("eal_>$\r/pi1mUY", "error reporter", 110);
      String string0 = "KkDJkHuz";
      // Undeclared exception!
      try { 
        parser0.addWarning(context0.languageVersionProperty, string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-30));
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.getEncodedSource();
      compilerEnvirons0.setXmlAvailable(false);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "[}9bP[";
      parser0.insideFunction();
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser1.parse("6|'i(S", "[}9bP[", 98);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal ([}9bP[#98)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      Set<String> set0 = context0.activationNames;
      compilerEnvirons0.activationNames = null;
      Context context1 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setGenerateObserverCount(false);
      // Undeclared exception!
      try { 
        parser0.parse("W:*LSQl~zH%}Msh", "error reporter", 19);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (error reporter#19)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory1 = new ContextFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-10));
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FunctionNode functionNode0 = new FunctionNode("throw");
      // Undeclared exception!
      try { 
        parser0.parse("+Phl+9Uu1;J%BKd/", (String) null, 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(5);
      // Undeclared exception!
      try { 
        parser0.parse("[", (String) null, 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      compilerEnvirons0.initFromContext(context0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.initFromContext(context0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FunctionNode functionNode0 = new FunctionNode("2h[nO");
      ClassLoader.getSystemClassLoader();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      compilerEnvirons0.setGenerateObserverCount(false);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory.initGlobal(contextFactory0);
      FunctionNode functionNode1 = new FunctionNode("Kiys+V.8'Qq[`3");
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons0.initFromContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse("[7MG", "get", 85);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (get#85)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      compilerEnvirons0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "language version", 12);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(15, false, "kBjFcjC986&L");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      String string0 = ".%6";
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("{=j?9OHe*I}lCFRd", "|-)GV8fp", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (|-)GV8fp#100)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      compilerEnvirons0.initFromContext(context0);
      boolean boolean0 = true;
      compilerEnvirons0.setGenerateDebugInfo(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ContextFactory contextFactory1 = new ContextFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("-Zib1DK%d^8", (String) null, (-1958));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.getErrorReporter();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("-!]gSsIvW[U", "language version", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      parser0.createDecompiler(compilerEnvirons1);
      compilerEnvirons0.setGeneratingSource(true);
      // Undeclared exception!
      try { 
        parser0.parse("@a:Dd*^2RrBCp2l;]", "@a:Dd*^2RrBCp2l;]", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (@a:Dd*^2RrBCp2l;]#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      String string0 = "FXY3Q";
      int int0 = 102;
      parser0.parse("zL8YrV:YVJeW", "FXY3Q", 102);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(1, true, "get");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Context context1 = contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      ErrorReporter errorReporter1 = context1.setErrorReporter(errorReporter0);
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn("language version").when(contextAction0).run(any(org.mozilla.javascript.Context.class));
      contextFactory0.call(contextAction0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      contextFactory0.disableContextListening();
      contextFactory0.enterContext();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      contextFactory0.enterContext();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("{", "tJ=pTCStrng", 245);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing } in compound statement (tJ=pTCStrng#245)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      contextFactory0.getApplicationClassLoader();
      compilerEnvirons0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      FunctionNode functionNode0 = new FunctionNode("language version");
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = contextFactory1.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      JavaAdapter.getFunction(importerTopLevel0, "language version");
      context0.decompileFunctionBody((Function) null, 11);
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(140);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      compilerEnvirons0.initFromContext(context1);
      Node.Scope node_Scope0 = new Node.Scope((-2919), 160);
      FunctionNode functionNode1 = new FunctionNode("language version");
      node_Scope0.getParentScope();
      // Undeclared exception!
      try { 
        parser0.parse("$9?eR*&Y)", "$9?eR*&Y)", (-1272));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1272
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Context context0 = new Context();
      ClassLoader.getSystemClassLoader();
      compilerEnvirons0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)0;
      byteArray0[1] = (byte)0;
      compilerEnvirons0.initFromContext(context0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FunctionNode functionNode0 = new FunctionNode("set");
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter2);
      // Undeclared exception!
      try { 
        parser0.parse("ha ;#,`*c GIho", "x", 126);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (x#126)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode(")6zi.h{GXx)=O");
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = new Context(contextFactory1);
      // Undeclared exception!
      try { 
        parser1.parse("{n4}", ")6zi.h{GXx)=O", (-215));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      PipedReader pipedReader0 = new PipedReader();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory0.enter();
      compilerEnvirons0.initFromContext(context1);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      ClassLoader.getSystemClassLoader();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(2);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "V$!sfP";
      compilerEnvirons0.initFromContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse("([lOB*O,)Y e1O{0x", "V$!sfP", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (V$!sfP#7)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "language version");
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context.getCurrentContext();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.calledByCompileFunction = true;
      // Undeclared exception!
      try { 
        parser0.parse(";Ddfh", "+h733{G+E rQ%", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (+h733{G+E rQ%#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory1 = new ContextFactory();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      contextFactory0.createClassLoader(classLoader1);
      PipedWriter pipedWriter0 = new PipedWriter();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("q<{@[lm~YeO", (String) null, (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid property id
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.getErrorReporter();
      context0.instructionCount = 13;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      PipedReader pipedReader0 = new PipedReader();
      // Undeclared exception!
      try { 
        parser0.parse("continue", "set", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // continue must be inside loop (set#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ContextFactory.getGlobal();
      char[] charArray0 = new char[6];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[4] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      String string0 = "set";
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "set", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (set#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      RegExpImpl regExpImpl0 = new RegExpImpl();
      context0.setErrorReporter(defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser1.parse("resumeGenerator() not implemented", "msg.no.parm", (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ; before statement
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setReservedKeywordAsIdentifier(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      contextFactory0.enterContext(context0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      String string0 = NativeIterator.ITERATOR_PROPERTY_NAME;
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("KkDJkHuz", "msg.double.switch.default", 170);
      parser0.pushScope(scriptOrFnNode0);
      parser0.getCurrentLineNumber();
      Node node0 = new Node(1, scriptOrFnNode0, 4);
      // Undeclared exception!
      try { 
        parser0.pushScope(scriptOrFnNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      FileSystemHandling.shouldAllThrowIOExceptions();
      compilerEnvirons0.setGeneratingSource(true);
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      // Undeclared exception!
      try { 
        parser0.parse("Zz:bm:,EVSobEQ", "|R 667ZtYi", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (|R 667ZtYi#100)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory.getGlobal();
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "each";
      parser0.parse("msg.bad.throw.eol", "each", 10);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        parser1.addError("each");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property each
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory1);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      boolean boolean0 = parser0.calledByCompileFunction;
      compilerEnvirons0.setErrorReporter(errorReporter0);
      compilerEnvirons0.setXmlAvailable(false);
      parser0.addStrictWarning("language version", "");
      parser0.insideFunction();
      contextFactory0.enterContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse("<>", "~~KH3DG@e!OO%_", 110);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (~~KH3DG@e!OO%_#110)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FunctionNode functionNode0 = new FunctionNode("");
      // Undeclared exception!
      try { 
        parser0.parse("do ", "do ", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (do #11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextFactory contextFactory0 = new ContextFactory();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      String string0 = "([lOB*O,)Y e1O{0x";
      context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      classLoader0.setClassAssertionStatus("([lOB*O,)Y e1O{0x", true);
      compilerEnvirons0.setGeneratingSource(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse(" /= ", "o0?q.<ug", (-1345));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1345
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(13);
      scriptOrFnNode0.target = (Node) scriptOrFnNode0;
      parser0.parse("q===1", (String) null, 2);
      context0.addActivationName((String) null);
      String string0 = "R3'6S)Qa'5th!<";
      FunctionNode functionNode0 = new FunctionNode("R3'6S)Qa'5th!<");
      // Undeclared exception!
      try { 
        parser0.parse(".e&$X.X%", "language version", 33);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#33)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGenerateDebugInfo(true);
      ContextFactory.getGlobal();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(104);
      // Undeclared exception!
      try { 
        parser0.parse(" j==;", "org.mozilla.javascript.Parser", 27);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (org.mozilla.javascript.Parser#27)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode(")6zi.h{GXx)=O");
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = new Context(contextFactory1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser2 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser1.getEncodedSource();
      ContextFactory contextFactory2 = new ContextFactory();
      contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        parser1.parse("<0m D^h1N.>f{", "language version", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.getParent();
      classLoader0.setClassAssertionStatus("error reporter", false);
      compilerEnvirons0.setGeneratingSource(true);
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory1 = new ContextFactory();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setGenerateDebugInfo(false);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser1 = new Parser((CompilerEnvirons) null, errorReporter0);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser2 = new Parser(compilerEnvirons1, errorReporter1);
      // Undeclared exception!
      try { 
        parser2.parse("++", "c%1ffs8)m)9K6\"Yp#V", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file (c%1ffs8)m)9K6\"Yp#V#9)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }
}
