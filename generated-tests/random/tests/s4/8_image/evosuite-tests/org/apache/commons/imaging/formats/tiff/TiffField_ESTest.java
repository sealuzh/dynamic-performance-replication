/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 12:26:51 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)41;
      byteArray0[4] = (byte)78;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 1, fieldTypeRational0, 6, 6, byteArray0, byteOrder0, (byte)19);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(6, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(134, int0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1773), 0, fieldTypeRational0, 0, 3000L, byteArray0, byteOrder0, 2581);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3000, tiffField0.getOffset());
      assertEquals(2581, tiffField0.getSortHint());
      assertEquals((-1773), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)38, fieldTypeLong0, 727L, (-11024L), byteArray0, byteOrder0, (byte) (-26));
      int int0 = tiffField0.getTag();
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-11024), tiffField0.getOffset());
      assertEquals(38, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-296), 51009, fieldTypeLong0, 51009, 51009, byteArray0, byteOrder0, 41489);
      int int0 = tiffField0.getSortHint();
      assertEquals(41489, int0);
      assertEquals(51009, tiffField0.getOffset());
      assertEquals((-296), tiffField0.getTag());
      assertEquals(51009, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-154), (-154), fieldTypeAscii0, 255L, (-1238L), byteArray0, byteOrder0, 918);
      int int0 = tiffField0.getOffset();
      assertEquals((-154), tiffField0.getDirectoryType());
      assertEquals((-1238), int0);
      assertEquals((-154), tiffField0.getTag());
      assertEquals(918, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "WhiteBalance");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-715), 3430, fieldTypeShort0, 2262L, (-971L), byteArray0, byteOrder0, 547);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(547, tiffField0.getSortHint());
      assertEquals((-715), tiffField0.getTag());
      assertEquals(255, int0);
      assertEquals((-971), tiffField0.getOffset());
      assertEquals(3430, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-49);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 34911);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(34911, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte) (-59));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-59), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-413), 34858, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 34712);
      tiffField0.getCount();
      assertEquals(34712, tiffField0.getSortHint());
      assertEquals(34858, tiffField0.getDirectoryType());
      assertEquals((-413), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-642), 1111, fieldTypeAscii0, (-144L), 1111, byteArray0, byteOrder0, (byte)125);
      tiffField0.getCount();
      assertEquals(1111, tiffField0.getOffset());
      assertEquals(125, tiffField0.getSortHint());
      assertEquals((-642), tiffField0.getTag());
      assertEquals(1111, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-381), (FieldType) null, 15656L, (-2147483648L), byteArray0, byteOrder0, 431);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1277), (-1277), fieldTypeShort0, (-1277), 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 1, fieldTypeRational0, 6, 6, byteArray0, byteOrder0, (byte)19);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      tiffField0.getByteOrder();
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1529), tiffField0.getTag());
      assertEquals((-1529), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 34911);
      fieldTypeByte0.getValue(tiffField0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(34911, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 140, fieldTypeShort0, 65535, 140, byteArray0, byteOrder0, (-1016));
      tiffField0.getFieldType();
      assertEquals(140, tiffField0.getOffset());
      assertEquals((-1016), tiffField0.getSortHint());
      assertEquals(140, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      int int0 = tiffField0.getOffset();
      assertEquals((-1529), tiffField0.getSortHint());
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals((-1529), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      tiffField0.getTagInfo();
      assertEquals((-1529), tiffField0.getTag());
      assertEquals((-1529), tiffField0.getSortHint());
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 34911);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(34911, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      tiffField0.getCount();
      assertEquals((-1529), tiffField0.getSortHint());
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1529), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3743), (-4407), fieldTypeDouble0, 315L, (-5311L), byteArray0, byteOrder0, (byte) (-54));
      tiffField0.getBytesLength();
      assertEquals((-5311), tiffField0.getOffset());
      assertEquals((-4407), tiffField0.getDirectoryType());
      assertEquals((-3743), tiffField0.getTag());
      assertEquals((-54), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2146816104), "JpgFromRawStart");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1649, (-2146816104), fieldTypeFloat0, (-2146816104), 1649, byteArray0, byteOrder0, (byte) (-39));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "WhiteBalance");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-715), 3430, fieldTypeShort0, 2262L, (-971L), byteArray0, byteOrder0, 547);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147166395, 34023, fieldTypeDouble0, 2199L, 34023, byteArray0, byteOrder0, 878);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@66d6a84a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "WhiteBalance");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-715), 3430, fieldTypeShort0, 2262L, (-971L), byteArray0, byteOrder0, 547);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-715), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(3430, tiffField0.getDirectoryType());
      assertEquals(547, tiffField0.getSortHint());
      assertEquals((-971), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)38, fieldTypeLong0, 727L, (-11024L), byteArray0, byteOrder0, (byte) (-26));
      tiffField0.getIntValueOrArraySum();
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-11024), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeDouble0, (-1431655764), 2099L, byteArray0, byteOrder0, (byte)19);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(2099, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), ")>,k~zg$,");
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(1134, 1134, fieldTypeFloat0, 1134, (-1), byteArray0, (ByteOrder) null, 1134);
      tiffField0.getDoubleArrayValue();
      assertEquals(1134, tiffField0.getSortHint());
      assertEquals(1134, tiffField0.getTag());
      assertEquals(1134, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-154), (-154), fieldTypeAscii0, 255L, (-1238L), byteArray0, byteOrder0, 918);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@11c59b83 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(234, "N");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1754, 50, fieldTypeShort0, 234, 50, byteArray0, (ByteOrder) null, 61);
      tiffField0.getDoubleArrayValue();
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1754, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(300, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4394, 4394, fieldTypeRational0, 3335L, 4L, byteArray0, byteOrder0, (byte) (-52));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-52), tiffField0.getSortHint());
      assertEquals(4394, tiffField0.getDirectoryType());
      assertEquals(4394, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2142019313, "Z5");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1058, 323, fieldTypeShort0, 1L, 396L, byteArray0, byteOrder0, 323);
      tiffField0.getDoubleArrayValue();
      assertEquals(323, tiffField0.getDirectoryType());
      assertEquals(396, tiffField0.getOffset());
      assertEquals(1058, tiffField0.getTag());
      assertEquals(323, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)38, fieldTypeLong0, 727L, (-11024L), byteArray0, byteOrder0, (byte) (-26));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-11024), tiffField0.getOffset());
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(38, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3762, 37381, fieldTypeLong0, 37381, 37381, byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(37381, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(3762, tiffField0.getTag());
      assertEquals(37381, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 4L, 26, byteArray0, byteOrder0, (byte)6);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(26, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4398), (-4398), fieldTypeAscii0, 0L, 2147483647L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147065685), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146767103, 476, fieldTypeRational0, 476, (-80L), byteArray0, byteOrder0, 65);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-413), 34858, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 34712);
      tiffField0.getIntArrayValue();
      assertEquals(34858, tiffField0.getDirectoryType());
      assertEquals((-413), tiffField0.getTag());
      assertEquals(34712, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 34911);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(34911, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(927, ":)r;U)");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, Integer.MAX_VALUE, fieldTypeAscii0, 927, 927, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(927, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@27f6e72c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3743), (-4407), fieldTypeDouble0, 315L, (-5311L), byteArray0, byteOrder0, (byte) (-54));
      String string0 = tiffField0.getTagName();
      assertEquals((-4407), tiffField0.getDirectoryType());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals((-5311), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffff161)", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (-381), (FieldType) null, 15656L, (-2147483648L), byteArray0, byteOrder0, 431);
      String string0 = tiffField0.getTagName();
      assertEquals(3, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(431, tiffField0.getSortHint());
      assertEquals("GPSLongitudeRef", string0);
      assertEquals((-381), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeLong0, 2, 3000L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "i89HA%[dx}/}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 929L, 65535, byteArray0, byteOrder0, (byte)20);
      String string0 = tiffField0.toString();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0 (929 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2146816104), "JpgFromRawStart");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1649, (-2146816104), fieldTypeFloat0, (-2146816104), 1649, byteArray0, byteOrder0, (byte) (-39));
      assertEquals(2670176, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2146816104), tiffField0.getDirectoryType());
      assertEquals(1649, tiffField0.getOffset());
      assertEquals((-2146816104L), tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals(1649, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1187, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1187, fieldTypeByte0, 1187, 1187, byteArray0, byteOrder0, (-782));
      MockFile mockFile0 = new MockFile("N^-6#w P");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1187, tiffField0.getBytesLength());
      assertEquals((-782), tiffField0.getSortHint());
      assertEquals(1187, tiffField0.getOffset());
      assertEquals(35L, mockFile0.length());
      assertEquals(1187, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)38, fieldTypeLong0, 727L, (-11024L), byteArray0, byteOrder0, (byte) (-26));
      MockPrintStream mockPrintStream0 = new MockPrintStream("The prefix must not be null");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-11024), tiffField0.getOffset());
      assertEquals(727L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2908, tiffField0.getBytesLength());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(53, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, 773L, (-769L), byteArray0, (ByteOrder) null, 106);
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0 (773 )", string0);
      assertEquals(106, tiffField0.getSortHint());
      assertEquals(1546, tiffField0.getBytesLength());
      assertEquals((-769), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3743), (-4407), fieldTypeDouble0, 315L, (-5311L), byteArray0, byteOrder0, (byte) (-54));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2264), "ocWQ`QSX~");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeAscii0, 73, 8583500184L, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-6434408), tiffField0.getOffset());
      assertEquals(73, tiffField0.getBytesLength());
      assertEquals(73, tiffField0.getTag());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(73L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte) (-86);
      byteArray0[4] = (byte) (-17);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-154), (-154), fieldTypeAscii0, 255L, (-1238L), byteArray0, byteOrder0, 918);
      tiffField0.toString();
      assertEquals((-154), tiffField0.getTag());
      assertEquals((-1238), tiffField0.getOffset());
      assertEquals(918, tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-154), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 34911);
      tiffField0.dump();
      assertEquals(34911, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (-40L), 1839L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-426));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(1839, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1440, 1, (FieldType) null, (-2807L), (-2807L), byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2099761789, (byte)104);
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-413), 34858, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 34712);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(34712, tiffField0.getSortHint());
      assertEquals(34858, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-413), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-309), 2581, fieldTypeRational0, 2581, 4L, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-309), tiffField0.getTag());
      assertEquals(2581L, tiffField0.getCount());
      assertEquals(2581, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-413), 34858, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 34712);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(34712, tiffField0.getSortHint());
      assertEquals((-413), tiffField0.getTag());
      assertEquals(34858, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 140, fieldTypeShort0, 65535, 140, byteArray0, byteOrder0, (-1016));
      int int0 = tiffField0.getSortHint();
      assertEquals(140, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals((-1016), int0);
      assertEquals(140, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-413), 34858, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 34712);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(34858, tiffField0.getDirectoryType());
      assertEquals(34712, tiffField0.getSortHint());
      assertEquals("-413 (0xfffffe63: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      tiffField0.getValue();
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1529), tiffField0.getSortHint());
      assertEquals((-1529), tiffField0.getTag());
      assertEquals(396, tiffField0.getBytesLength());
      assertEquals(99L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1529), (-1529), fieldTypeLong0, 99L, 0L, byteArray0, byteOrder0, (-1529));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals((-1529), tiffField0.getSortHint());
      assertEquals((-1529), tiffField0.getTag());
      assertEquals(0L, tiffElement0.offset);
  }
}
