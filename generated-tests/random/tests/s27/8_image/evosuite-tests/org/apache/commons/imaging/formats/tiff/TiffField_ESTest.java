/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 11:27:50 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)117;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147292538), (byte)1, fieldTypeShort0, 1781L, (byte)117, byteArray0, byteOrder0, (-2147292538));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(117, tiffField0.getOffset());
      assertEquals(29952, int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2147292538), tiffField0.getTag());
      assertEquals((-2147292538), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2147356041, "StripByteCounts");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-80);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147292538), (-193), fieldTypeRational0, 1322L, (-1L), byteArray0, byteOrder0, 738);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-2147292538), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(738, tiffField0.getSortHint());
      assertEquals((-193), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-101);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      String string0 = tiffField0.getStringValue();
      assertEquals(1001, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2490, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-533), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2174, (-1727), fieldTypeRational0, 184L, (-1727), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(2174, tiffField0.getTag());
      assertEquals((-1727), int0);
      assertEquals((-1727), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-70);
      TiffField tiffField0 = new TiffField(32909, 32909, fieldTypeLong0, 32909, (-219L), byteArray0, (ByteOrder) null, (byte) (-127));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals(32909, tiffField0.getDirectoryType());
      assertEquals((-219), tiffField0.getOffset());
      assertEquals(32909, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3284), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1678, (-305), fieldTypeShort0, 1678, 1678, (byte[]) null, byteOrder0, (-92));
      tiffField0.getFieldTypeName();
      assertEquals((-92), tiffField0.getSortHint());
      assertEquals(1678, tiffField0.getOffset());
      assertEquals(1678, tiffField0.getTag());
      assertEquals((-305), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1715), "R");
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3492, (-1715), fieldTypeRational0, 0L, 3492, byteArray0, byteOrder0, (byte)27);
      tiffField0.getFieldType();
      assertEquals(3492, tiffField0.getTag());
      assertEquals(3492, tiffField0.getOffset());
      assertEquals((-1715), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)58);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1558, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1064, 1064, fieldTypeRational0, 1558, (-2484L), byteArray0, byteOrder0, 699);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1064, tiffField0.getTag());
      assertEquals(699, tiffField0.getSortHint());
      assertEquals(1064, int0);
      assertEquals((-2484), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40, ">w4u'W[");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 40, fieldTypeDouble0, 4L, (byte) (-104), byteArray0, byteOrder0, 40);
      tiffField0.getByteOrder();
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-104), tiffField0.getOffset());
      assertEquals(40, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37384, 37384, fieldTypeShort0, 37384, 37384, byteArray0, byteOrder0, (byte) (-111));
      tiffField0.getByteArrayValue();
      assertEquals(37384, tiffField0.getTag());
      assertEquals(37384, tiffField0.getDirectoryType());
      assertEquals(37384, tiffField0.getOffset());
      assertEquals((-111), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34911, 2145646621, fieldTypeFloat0, 0L, 2145646621, byteArray0, byteOrder0, (-1883));
      tiffField0.getByteArrayValue();
      assertEquals((-1883), tiffField0.getSortHint());
      assertEquals(2145646621, tiffField0.getOffset());
      assertEquals(2145646621, tiffField0.getDirectoryType());
      assertEquals(34911, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1346), (-1), fieldTypeDouble0, 0L, (-4160L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147292538), (byte)1, fieldTypeShort0, 1781L, (byte)117, byteArray0, byteOrder0, (-2147292538));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeRational0, 0L, (-2619L), byteArray0, byteOrder0, 1014);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, Integer.MAX_VALUE, fieldTypeShort0, Integer.MAX_VALUE, 2016L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37384, 37384, fieldTypeShort0, 37384, 37384, byteArray0, byteOrder0, (byte) (-111));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(37384, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(37384, tiffField0.getTag());
      assertEquals(37384, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40, ">w4u'W[");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 40, fieldTypeDouble0, 4L, (byte) (-104), byteArray0, byteOrder0, 40);
      fieldTypeDouble0.getValue(tiffField0);
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals((-104), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)58);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(219, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3390), (-3390), fieldTypeDouble0, 846L, (-3390), byteArray0, byteOrder0, 1);
      tiffField0.getBytesLength();
      assertEquals((-3390), tiffField0.getOffset());
      assertEquals((-3390), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3390), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40, ">w4u'W[");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 40, fieldTypeDouble0, 4L, (byte) (-104), byteArray0, byteOrder0, 40);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3390), (-3390), fieldTypeDouble0, 846L, (-3390), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3390), tiffField0.getTag());
      assertEquals((-3390), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3390), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(48322, "<k2<qLQ~b");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2144842215), (-2144842215), fieldTypeFloat0, (-2144842215), 2040L, byteArray0, byteOrder0, (-865));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2144842215), tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getOffset());
      assertEquals((-2144842215), tiffField0.getTag());
      assertEquals((-865), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34018, (-1908874352), fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@c07c968 for: 34018 (0x84e2: IT8Header): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 4L, 1977L, byteArray0, byteOrder0, (byte)47);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1977, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(282, "T:'%UfVc,C#oV");
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeRational0, 737L, (-2064L), byteArray0, byteOrder0, (byte)120);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(282, tiffField0.getTag());
      assertEquals(120, tiffField0.getSortHint());
      assertEquals((-2064), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(282, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37383, 37383, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(37383, tiffField0.getDirectoryType());
      assertEquals(37383, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37384, 37384, fieldTypeShort0, 37384, 37384, byteArray0, byteOrder0, (byte) (-111));
      tiffField0.getDoubleArrayValue();
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(37384, tiffField0.getOffset());
      assertEquals(37384, tiffField0.getTag());
      assertEquals(37384, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(745, 2535, fieldTypeFloat0, 948L, 2535, byteArray0, byteOrder0, (-1562));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5a752921 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4063), (-2147168997), fieldTypeLong0, (-2147168997), (-4063), byteArray0, byteOrder0, (-2147168997));
      tiffField0.getIntArrayValue();
      assertEquals((-2147168997), tiffField0.getDirectoryType());
      assertEquals((-2147168997), tiffField0.getSortHint());
      assertEquals((-4063), tiffField0.getOffset());
      assertEquals((-4063), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1917L, 50, byteArray0, (ByteOrder) null, 50);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1917L, 50, byteArray0, (ByteOrder) null, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(219, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37384, 37384, fieldTypeShort0, 37384, 37384, byteArray0, byteOrder0, (byte) (-111));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(37384, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(37384L, tiffField0.getCount());
      assertEquals(37384, tiffField0.getTag());
      assertEquals(37384, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 1004, fieldTypeFloat0, 1004, 1004, byteArray0, (ByteOrder) null, (-36));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@4e59f42e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals((-533), tiffField0.getTag());
      assertEquals(2490, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      String string0 = tiffField0.getTagName();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2490, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffffdeb)", string0);
      assertEquals(1001, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33405, 33405, fieldTypeByte0, 33405, 33405, byteArray0, byteOrder0, (byte)121);
      String string0 = tiffField0.getTagName();
      assertEquals(33405, tiffField0.getOffset());
      assertEquals(33405, tiffField0.getDirectoryType());
      assertEquals("Model2", string0);
      assertEquals(33405, tiffField0.getTag());
      assertEquals(121, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(170, ".Un-X");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(41490);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(41490, 41490, fieldTypeFloat0, 4L, 41490, byteArray0, byteOrder0, (byte) (-124));
      String string0 = tiffField0.toString();
      assertEquals(41490, tiffField0.getOffset());
      assertEquals(41490, tiffField0.getDirectoryType());
      assertEquals("41490 (0xa212: SecurityClassification): 0.0, 0.0 (4 .Un-X)", string0);
      assertEquals((-124), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33405, 33405, fieldTypeByte0, 33405, 33405, byteArray0, byteOrder0, (byte)121);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(42, byteArrayOutputStream0.size());
      assertEquals("33405 (0x827d: Model2): 0, 0 (33405 Byte)\n", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146536367), (-2146536367), fieldTypeDouble0, (-2146536367), (-1412L), byteArray0, byteOrder0, (-413));
      assertEquals(7578248, tiffField0.getBytesLength());
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("VssNz=F?*\"2mNvn");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2146536367L), tiffField0.getCount());
      assertEquals((-413), tiffField0.getSortHint());
      assertEquals((-1412), tiffField0.getOffset());
      assertEquals((-2146536367), tiffField0.getTag());
      assertEquals((-2146536367), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50781, 50781, fieldTypeLong0, 50781, 50781, byteArray0, byteOrder0, (byte)124);
      String string0 = tiffField0.toString();
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(50781, tiffField0.getOffset());
      assertEquals("50781 (0xc65d: RawDataUniqueID): 0, 0 (50781 IFD)", string0);
      assertEquals(50781, tiffField0.getDirectoryType());
      assertEquals(203124, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)58);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)99);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(248, 1951, fieldTypeFloat0, 248, 1951, byteArray0, byteOrder0, (byte) (-23));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("=CJB@?>X");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals(1951, tiffField0.getOffset());
      assertEquals(1951, tiffField0.getDirectoryType());
      assertEquals(248L, tiffField0.getCount());
      assertEquals(248, tiffField0.getTag());
      assertEquals(992, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1516, ": ");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ": ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1516, 1516, fieldTypeAscii0, 2072L, 1516, byteArray0, byteOrder0, 2147363683);
      tiffField0.toString();
      assertEquals(2072, tiffField0.getBytesLength());
      assertEquals(2072L, tiffField0.getCount());
      assertEquals(1516, tiffField0.getDirectoryType());
      assertEquals(1516, tiffField0.getTag());
      assertEquals(2147363683, tiffField0.getSortHint());
      assertEquals(1516, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeRational0, 66, 2020L, byteArray0, byteOrder0, (-3285));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3285), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2020, tiffField0.getOffset());
      assertEquals(66, tiffField0.getTag());
      assertEquals(528, tiffField0.getBytesLength());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(66L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1001);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "I[M>O%*xK");
      assertEquals(82, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 219L, byteArray0, byteOrder0, 65535);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)58);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)99);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(248, 1951, fieldTypeFloat0, 248, 1951, byteArray0, byteOrder0, (byte) (-23));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147483646, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(248, tiffField0.getTag());
      assertEquals(1951, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(1951, tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2490, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-533), tiffField0.getTag());
      assertEquals(1001, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37384, 37384, fieldTypeShort0, 37384, 37384, byteArray0, byteOrder0, (byte) (-111));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(37384, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(37384L, tiffElement0.offset);
      assertEquals(37384, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1908874352), (-1908874352), fieldTypeShort0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldTypeName();
      assertEquals((-1908874352), tiffField0.getDirectoryType());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      int int0 = tiffField0.getOffset();
      assertEquals((-533), tiffField0.getTag());
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2490, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), int0);
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals((-533), tiffField0.getTag());
      assertEquals(2490, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      int int0 = tiffField0.getSortHint();
      assertEquals((-533), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1001, int0);
      assertEquals(2490, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2490, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-1), fieldTypeAscii0, 1L, 2490, byteArray0, byteOrder0, 1001);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-533 (0xfffffdeb: Unknown Tag): ", string0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2490, tiffField0.getOffset());
      assertEquals(1001, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37384, 37384, fieldTypeShort0, 37384, 37384, byteArray0, byteOrder0, (byte) (-111));
      tiffField0.dump();
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(37384, tiffField0.getDirectoryType());
      assertEquals(74768, tiffField0.getBytesLength());
      assertEquals(37384L, tiffField0.getCount());
      assertEquals(37384, tiffField0.getTag());
      assertEquals(37384, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34911, 2145646621, fieldTypeFloat0, 0L, 2145646621, byteArray0, byteOrder0, (-1883));
      tiffField0.getValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1883), tiffField0.getSortHint());
      assertEquals(2145646621, tiffField0.getDirectoryType());
      assertEquals(34911, tiffField0.getTag());
      assertEquals(2145646621, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34018, (-1908874352), fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)50, (byte)50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(34018, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
  }
}
