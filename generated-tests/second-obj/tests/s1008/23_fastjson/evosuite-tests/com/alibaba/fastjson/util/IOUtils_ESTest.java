/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:56:59 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.ObjectStreamConstants;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars(2846, 51, iOUtils0.ASCII_CHARS);
      int int0 = IOUtils.stringSize(51);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[1];
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 2, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      int int1 = IOUtils.stringSize((-142L));
      assertEquals(1, int1);
      
      boolean boolean0 = IOUtils.firstIdentifier('f');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.getChars((byte)2, 2, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'F';
      charArray0[1] = 'Z';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-458), 4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOUtils.firstIdentifier('}');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((-438L), (-1696), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1697
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[7];
      int int0 = (-1696);
      // Undeclared exception!
      try { 
        IOUtils.getChars(3702L, (-1696), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1697
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-4197), (-1322), iOUtils0.specicalFlags_doubleQuotes);
      iOUtils0.UTF8.newDecoder();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      assertEquals(0, byteBuffer0.arrayOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(":=");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam((String) null);
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.replaceChars);
      charArrayReader0.read();
      IOUtils.readAll(charArrayReader0);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 2147, 105, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOUtils.getStringProperty("UTF-8");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("UTF-8");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[7];
      IOUtils.getChars((long) 5, 5, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '5', '\u0000', '\u0000'}, charArray0);
      
      boolean boolean0 = IOUtils.isIdent('r');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties", 2, 2);
      assertArrayEquals(new byte[] {(byte) (-78)}, byteArray0);
      
      int int1 = IOUtils.stringSize((long) 2);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("sw3J6|)b)|2", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOUtils.decodeBase64("");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", (-198), (-198));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      IOUtils.stringSize((long) 8);
      IOUtils.stringSize((-1468));
      IOUtils.getChars((long) (byte)26, (int) (byte)26, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOUtils.stringSize(1654L);
      IOUtils.isValidJsonpQueryParam("+*_xKU!gRm~wm");
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 46, 46);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      CharsetDecoder charsetDecoder0 = iOUtils0.UTF8.newDecoder();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      IOUtils.getChars((-591), 35, iOUtils0.ASCII_CHARS);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, (-2835), 2146721047, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2835
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils.stringSize(88L);
      IOUtils.firstIdentifier('j');
      IOUtils.decodeBase64("?OG1^w[W.]2,");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.unmappableCharacterAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onMalformedInput(codingErrorAction0);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("l$$c`_<l-:'");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      CharBuffer charBuffer1 = uTF8Decoder0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer1);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOUtils.close((Closeable) null);
      int int0 = 34;
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars(0L, 34, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("om.aliZaba.fast,son.JSONEGcAption", 13, 18);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = IOUtils.stringSize(13);
      assertEquals(2, int0);
      
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      char[] charArray0 = new char[2];
      int int1 = IOUtils.decodeUTF8(byteArray0, 5, 2, charArray0);
      assertEquals((-1), int1);
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[18];
      charArray0[0] = '}';
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      int int2 = IOUtils.decodeUTF8(byteArray0, 1, '\u0004', charArray0);
      long long0 = (-1L);
      IOUtils.getChars(long0, int0, charArray0);
      assertFalse(int0 == int2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("3{AS0]HHaq9bE++");
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 2, 3774, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.JSONException", 0, 12);
      Charset.defaultCharset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 55, 0);
      IOUtils.isValidJsonpQueryParam("m");
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      assertEquals("fastjson.compatibleWithFieldName", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.isValidJsonpQueryParam(".\"I");
      StringReader stringReader0 = new StringReader("read string from reader error");
      IOUtils.readAll(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'P';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-16), 12, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 6, (byte)30, iOUtils0.CA);
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars((byte)30, 30, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'R';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = 'e';
      charArray0[2] = 'N';
      charArray0[3] = 'n';
      charArray0[4] = 'N';
      charArray0[5] = '';
      charArray0[6] = 'h';
      charArray0[7] = '';
      charArray0[8] = 'E';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-88), 2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "I";
      IOUtils.decodeBase64("I");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        uTF8Decoder0.detectedCharset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[1];
      charArray0[0] = '}';
      byte[] byteArray0 = IOUtils.decodeBase64("y`r#k5\"sn", 0, 2);
      Charset.defaultCharset();
      IOUtils.stringSize(2);
      IOUtils.encodeUTF8(charArray0, 0, (-5141), byteArray0);
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("#D>fu7Wk$tX&1kgQ=", 2, 2);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[5];
      charArray0[4] = '\u0084';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, '\u0084', byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      char[] charArray0 = new char[30];
      charArray0[0] = '\u008A';
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("Y>Lu7WDtkgQ=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.decodeUTF8(byteArray0, 1, '\u008A', charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(8257536, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOUtils.stringSize(2147483647L);
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[0];
      IOUtils.decodeUTF8(byteArray0, 5, 3552, charArray0);
      IOUtils.firstIdentifier(']');
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)0, 7, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils.stringSize(2147483647L);
      char[] charArray0 = new char[2];
      charArray0[1] = 'N';
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, 10, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 8, 81);
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      iOUtils0.UTF8.encode("69$a-q:{ZEX>fJ");
      boolean boolean0 = IOUtils.firstIdentifier('s');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOUtils.getStringProperty("!=vm0& /EVZ2");
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[6];
      charArray0[1] = '|';
      charArray0[3] = 'x';
      charArray0[4] = '=';
      charArray0[5] = '`';
      // Undeclared exception!
      try { 
        IOUtils.getChars(3678080, 3678080, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3678079
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPORT;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction1 = CodingErrorAction.IGNORE;
      uTF8Decoder0.unmappableCharacterAction();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      IOUtils.firstIdentifier('\u00D2');
      uTF8Decoder0.charset();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder3 = new UTF8Decoder();
      char[] charArray0 = new char[1];
      charArray0[0] = '\u00D2';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1L), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      IOUtils.stringSize(2147483658L);
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483658L, 10, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-72);
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-3508), (-3508), byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      IOUtils.close(pipedOutputStream0);
      IOUtils.stringSize(1592L);
      IOUtils.firstIdentifier('\u0090');
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("fastjson.properties");
      IOUtils.close(mockFileOutputStream0);
      byte[] byteArray1 = IOUtils.specicalFlags_doubleQuotes;
      String string1 = "aDf+";
      IOUtils.getStringProperty("aDf+");
      IOUtils.decodeUTF8(byteArray1, 4, 4, iOUtils0.CA);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 76, 76, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 93
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[18];
      charArray0[0] = '}';
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("Y>Lu7WDtkgQ=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Y>Lu7WDtkgQ=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.decodeUTF8(byteArray0, 2, 2, charArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      uTF8Decoder1.reset();
      uTF8Decoder0.unmappableCharacterAction();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-1), (int) (byte)18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[18];
      String string0 = "Y>Lu7WDtkgQ=";
      byte[] byteArray0 = IOUtils.decodeBase64("Y>Lu7WDtkgQ=");
      IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        uTF8Decoder1.onUnmappableCharacter((CodingErrorAction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null action
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[18];
      charArray0[0] = '}';
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("YwLu7WDtkgQ=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.decodeUTF8(byteArray0, 1, '\u0002', charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      CodingErrorAction codingErrorAction1 = CodingErrorAction.REPLACE;
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      uTF8Decoder1.charset();
      String string0 = IOUtils.getStringProperty("YwLu7WDtkgQ=");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.compatibleWithJavaBean");
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byteBuffer0.rewind();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.decodeUTF8(byteArray0, 8, 8, iOUtils0.ASCII_CHARS);
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      uTF8Decoder0.decode(byteBuffer0, charBuffer0, false);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (-3234), 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3234
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
