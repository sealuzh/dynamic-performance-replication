/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 09:46:46 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.lang.reflect.Method;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class2HTML.referenceType("java.lang.StringBuffer");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "}5`Ij8~Z!";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((java.lang.ClassLoader) null);
      classLoaderRepository0.getClassPath();
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<Method> class0 = Method.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, (String) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/java.lang.reflect.AnnotatedTypejava.lang.reflect.AnnotatedType_cp.html");
      FileSystemHandling.createFolder(evoSuiteFile0);
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("java.lang.reflect.AnnotatedType");
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "java.lang.reflect.AnnotatedType");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("sun.reflect.generics.tree.ReturnType");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "A-qLtft");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class2HTML.referenceType("java.lang.StringBuffer");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<A HREF=\"java.lang.StringBuffer.html\" TARGET=_top>StringBuffer</A>";
      stringArray0[1] = "<A HREF=\"java.lang.StringBuffer.html\" TARGET=_top>StringBuffer</A>";
      stringArray0[2] = "<A HREF=\"java.lang.StringBuffer.html\" TARGET=_top>StringBuffer</A>";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = " but failed";
      String string0 = ".html";
      stringArray0[1] = ".html";
      stringArray0[2] = "";
      String string1 = "Dont call getValueByte() on a non BYTE ElementValue";
      stringArray0[3] = " but failed";
      Class2HTML.toHTML("@1d2)O6!D%");
      Class2HTML.toHTML("<TH>default</TH></TR>\n<TR>");
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class2HTML.toHTML("-,Yx");
      Class2HTML.toHTML("<<Y_8@Z~Yq");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "D.kU\"_LSmI*$";
      stringArray0[1] = "D.kU\"_LSmI*$";
      stringArray0[2] = "-,Yx";
      String string0 = "x=|6JO!nU4pf";
      stringArray0[3] = "x=|6JO!nU4pf";
      stringArray0[4] = "&lt;&lt;Y_8@Z~Yq";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-zi";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-zip";
      stringArray0[1] = "_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"";
      stringArray0[2] = ")JL\"Q+ei>Ra";
      stringArray0[3] = "float";
      stringArray0[4] = "java.lang.StringBuilder";
      stringArray0[5] = "!/";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // _cp.html\"
         //  MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">
         // <FRAME NAME=\"Attributes\" SRC=\" (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "dstore_2";
      stringArray0[1] = "-d";
      stringArray0[2] = "%";
      stringArray0[3] = "java.io.Serializable";
      stringArray0[4] = "VQc";
      stringArray0[5] = "short";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "%";
      stringArray0[1] = "-d";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "%";
      stringArray1[1] = "-d";
      stringArray1[2] = "%";
      stringArray1[3] = "short";
      stringArray1[4] = "-d";
      stringArray1[5] = "%";
      stringArray1[6] = "Pl~Mjw$N,V%cmDQ";
      stringArray1[7] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      ClassLoaderRepository classLoaderRepository1 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository1.loadClass(class0);
      javaClass0.setClassName("S");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "-zip");
      String string0 = Class2HTML.referenceClass((byte)2);
      assertEquals("<A HREF=\"S_cp.html#cp2\" TARGET=ConstantPool>org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate</A>", string0);
      
      String string1 = Class2HTML.referenceType("S");
      assertEquals("<A HREF=\"S.html\" TARGET=_top>S</A>", string1);
      
      String string2 = Class2HTML.referenceType("");
      assertEquals("<A HREF=\".html\" TARGET=_top></A>", string2);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-d";
      stringArray0[1] = "/";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
