/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:35:24 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = new RE2("m");
      rE2_0.reset();
      assertEquals("m", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = RE2.match("com.google.re2j.RE2", "com.google.re2j.RE2");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("bad inst");
      String string0 = rE2_0.replaceFirst("bad inst", "bad inst");
      assertEquals("bad inst", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      String string0 = rE2_0.replaceAll("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = new RE2("2%p`px}f6");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("2%p`px}f6", 2147483645);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("bad inst");
      byte[] byteArray0 = new byte[1];
      byte[][] byteArray1 = rE2_0.findUTF8Submatch(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("J^ciy=aJ=-");
      List<int[]> list0 = rE2_0.findAllIndex("J^ciy=aJ=-", (-1441));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("bad inst");
      String string0 = rE2_0.replaceAll("bad inst", "bad inst");
      assertEquals("bad inst", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = RE2.match("l/`!-jNda.-Rz}$L#", "l/`!-jNda.-Rz}$L#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("n");
      rE2_0.numberOfCapturingGroups();
      List<String[]> list0 = rE2_0.findAllSubmatch("n", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("bad inst");
      List<int[]> list0 = rE2_0.findAllIndex("bad inst", 1);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("bad inst");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("bad inst", 7);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("bad inst");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("bad inst", 1);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      int[] intArray0 = rE2_0.findSubmatchIndex("");
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[2];
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, 1568);
      assertEquals(3, list0.size());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllSubmatchIndex("", (-45));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAllSubmatchIndex("", 7);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("L?");
      rE2_0.findAllSubmatch("L?", 1308);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = new RE2("B");
      int int0 = RE2.UNANCHORED;
      int[] intArray0 = new int[16];
      rE2_0.match("B", 0, 0, 0, intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("bad inst");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8SubmatchIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = new RE2("\n");
      rE2_0.findSubmatchIndex("\n");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, (-11));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("C");
      byte[] byteArray0 = new byte[15];
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 1938);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = new RE2("\t");
      byte[] byteArray0 = new byte[12];
      rE2_0.findAllUTF8Index(byteArray0, 6);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[12];
      rE2_0.findAllUTF8Index(byteArray0, 12);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("$zR!fEh/");
      rE2_0.find("$zR!fEh/");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RE2 rE2_0 = new RE2("7v<LL\"npK|N %}OhAp");
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = new RE2("Cherok,^~ee");
      rE2_0.findSubmatch("Cherok,^~ee");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("_bad inst");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, 7);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = rE2_0.prefixUTF8;
      rE2_0.findAllUTF8Submatch(byteArray0, 2);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findUTF8(byteArray0);
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("2\"ZQVe%MI'$&eMYwxw");
      rE2_0.findAll("2\"ZQVe%MI'$&eMYwxw", (-249));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("U");
      byte[] byteArray0 = rE2_0.prefixUTF8;
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("|x");
      rE2_0.replaceAll("|x", "|x");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Saurashtra");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8(byteArray0, 11);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("q#.]Vw:CclJQBP");
      rE2_0.findAll("q#.]Vw:CclJQBP", (-825));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("1");
      rE2_0.findIndex("1");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      RE2 rE2_0 = new RE2("[:alpha:]");
      rE2_0.findUTF8Index(byteArray0);
      rE2_0.findSubmatchIndex("[:alpha:]");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compile("R~r");
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllSubmatch("", 2451);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2.quoteMeta("-))k>!c");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.match("", 2448, (-273), 2448, (int[]) null, 2448);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("can't happen");
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = new RE2("j?");
      rE2_0.find("j?");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("xQljE?n");
      rE2_0.findIndex("xQljE?n");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      RE2 rE2_0 = new RE2("");
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      RE2.quoteMeta("");
      byte[] byteArray0 = new byte[0];
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      int int0 = RE2.UNANCHORED;
      int[] intArray0 = new int[16];
      rE2_0.match("", 0, 0, 0, intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      int int0 = RE2.UNANCHORED;
      rE2_0.match("", 0, 0, 0, (int[]) null, 0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("9?");
      Machine machine0 = new Machine(rE2_0);
      rE2_0.put(machine0);
      RE2 rE2_1 = RE2.compilePOSIX("9?");
      rE2_0.replaceAll("9?", "9?");
      rE2_1.match("9?");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("|;S:8Pk'?wX(Z9]Y|)");
      rE2_0.get();
      rE2_0.findSubmatch("");
      byte[] byteArray0 = new byte[0];
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RE2 rE2_0 = new RE2("|;S:8Pk'?wX(Z9]Y|)");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[2] = (byte) (-108);
      rE2_0.findAllIndex("|;S:8Pk'?wX(Z9]Y|)", (byte)4);
      byteArray0[3] = (byte)4;
      rE2_0.findAllUTF8Submatch(byteArray0, (byte) (-108));
      rE2_0.get();
      rE2_0.findAllSubmatch("T{<sj_iuc~", 1980);
      rE2_0.findSubmatch("Rc*");
      rE2_0.findUTF8Submatch(byteArray0);
  }
}
