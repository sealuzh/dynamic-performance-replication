/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:08:06 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.replaceFirst("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = new RE2("'Xv");
      rE2_0.findSubmatch("'Xv");
      // Undeclared exception!
      try { 
        rE2_0.findUTF8SubmatchIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("ve3hrqv;Pb");
      int[] intArray0 = rE2_0.findSubmatchIndex("ve3hrqv;Pb");
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {0, 10}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("FZ.6?TJoauYy]MlM");
      int[] intArray0 = rE2_0.findSubmatchIndex("FZ.6?TJoauYy]MlM");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = new RE2("<oUOXe!VqGb8Ks2");
      List<int[]> list0 = rE2_0.findAllIndex(">qTiW-:rm", 1407);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<String[]> list0 = rE2_0.findAllSubmatch("", (-1424));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.match("");
      Machine machine0 = rE2_0.get();
      assertNotNull(machine0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = RE2.quoteMeta(",_(8");
      assertEquals(",_\\(8", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Hq,`}br9Y/?H8");
      int[] intArray0 = rE2_0.findIndex("Hq,`}br9Y/?H8");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      List<String> list0 = rE2_0.findAll("", 385);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<String> list0 = rE2_0.findAll("", (-616));
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Z9a'TC");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("Z9a'TC", 127799);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllIndex("", (-1189));
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("e//8/");
      byte[] byteArray0 = new byte[6];
      byte[][] byteArray1 = rE2_0.findUTF8Submatch(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", (-1161));
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("=kQE?ec");
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
      
      String string0 = rE2_0.find("=kQE?ec");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("nl/u'LyZi");
      rE2_0.toString();
      String string0 = rE2_0.replaceFirst("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = RE2.match("W/oU0?6Bf&Umpe>N`", "W/oU0?6Bf&Umpe>N`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = RE2.match("", "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = new RE2("MATCH");
      int[] intArray0 = rE2_0.findIndex("MATCH");
      assertArrayEquals(new int[] {0, 5}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = new RE2("M");
      rE2_0.reset();
      assertEquals("M", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = new RE2("<oUOXe!VqGb8Ks2");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex(">qTiW-:rm", 1407);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.replaceFirst("R]uD}UVZ9ih8V", "R]uD}UVZ9ih8V");
      assertEquals("R]uD}UVZ9ih8VR]uD}UVZ9ih8V", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("t");
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("t");
      String[] stringArray0 = rE2_0.findSubmatch("t");
      assertNotNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compile("Lm");
      String string0 = rE2_0.toString();
      assertNotNull(string0);
      
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      try { 
        RE2.compile("\\");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: trailing backslash at end of expression
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = new RE2("B~,;r!QUj_Nt}IsCPas");
      // Undeclared exception!
      try { 
        rE2_0.match("B~,;r!QUj_Nt}IsCPas", 1637, 1637, 1637, (int[]) null, 1637);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2.quoteMeta("");
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.reset();
      byte[] byteArray0 = new byte[13];
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.find("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.replaceAll("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[0];
      List<int[]> list0 = rE2_0.findAllUTF8Index(byteArray0, (-252));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2.quoteMeta("");
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-12);
      byteArray0[4] = (byte)0;
      List<int[]> list0 = rE2_0.findAllUTF8Index(byteArray0, (byte)1);
      assertEquals(1, list0.size());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("VU\"bGg~;WoD&nt");
      List<String[]> list0 = rE2_0.findAllSubmatch("com.google.re2j.RE2", 775);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = new RE2("=Vt?%*z3");
      String[] stringArray0 = rE2_0.findSubmatch("=Vt?%*z3");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2.quoteMeta("M");
      RE2 rE2_0 = RE2.compile("M");
      byte[] byteArray0 = new byte[0];
      List<byte[][]> list0 = rE2_0.findAllUTF8Submatch(byteArray0, 593);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("T");
      rE2_0.replaceFirst("T", "T");
      List<String> list0 = rE2_0.findAll("", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, (-239));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-3);
      List<byte[][]> list0 = rE2_0.findAllUTF8Submatch(byteArray0, 12);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2.quoteMeta("UTF-8");
      RE2 rE2_0 = RE2.compileImpl("UTF-8", 1599, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-128);
      rE2_0.findAllUTF8(byteArray0, (-1137));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = new RE2("sj!lejf5:p&>4$L%");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, (-252));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "";
      RE2 rE2_0 = RE2.compileImpl("", 91, true);
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 8252);
      // Undeclared exception!
      try { 
        rE2_0.findAllUTF8((byte[]) null, 197);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("sA\" !y");
      byte[] byteArray0 = new byte[1];
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 3036);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[13];
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      int[] intArray0 = new int[4];
      intArray0[0] = 7155;
      intArray0[3] = 129;
      rE2_0.match("", 7155, 129, 7155, intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2 rE2_0 = new RE2("$");
      rE2_0.replaceAll("D", "D");
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = new RE2("<oUOXe!VqGb8Ks2");
      rE2_0.replaceAll("<oUOXe!VqGb8Ks2", "<oUOXe!VqGb8Ks2");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("O*");
      byte[] byteArray0 = new byte[1];
      rE2_0.findSubmatch("KTBC5");
      rE2_0.match("%G", (-23), (-23), 0, (int[]) null, 128);
      RE2.quoteMeta("");
      // Undeclared exception!
      try { 
        rE2_0.replaceAll((String) null, "O*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.RE2", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", (-582), false);
      String string0 = rE2_0.prefix;
      int[] intArray0 = rE2_0.findIndex("");
      String string1 = "=~r12[Iq-";
      int int0 = 0;
      rE2_0.match("=~r12[Iq-", 0, 2472, 0, intArray0, 0);
      // Undeclared exception!
      try { 
        RE2.compile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      int[] intArray0 = new int[9];
      intArray0[2] = (-2);
      intArray0[4] = (-2);
      intArray0[7] = (-2);
      intArray0[8] = (-2);
      rE2_0.match("", (-2), (-2), (-2), intArray0, 2842);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RE2 rE2_0 = new RE2("(?-m:$)");
      rE2_0.findAllSubmatch("(?-m:$)", 158);
  }
}
