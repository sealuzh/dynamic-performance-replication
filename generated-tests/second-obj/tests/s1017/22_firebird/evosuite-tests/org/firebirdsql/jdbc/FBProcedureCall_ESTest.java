/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:41:57 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParams();
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition((-1975));
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam((-2936));
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(32, "o9");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(32, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getName();
      try { 
        fBProcedureCall0.registerOutParam(1322, 1322);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(32, "o9");
      try { 
        fBProcedureCall0.registerOutParam(2047, 32);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(3492, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(40);
      Object object0 = new Object();
      try { 
        fBProcedureParam0.setValue(object0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
      
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(false);
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(15);
      assertEquals((-1), fBProcedureParam0.getIndex());
      
      fBProcedureParam0.setIndex(15);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(15);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(37, "out");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam0);
      assertFalse(boolean0);
      assertEquals(37, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1247, " ");
      fBProcedureCall0.setName(" ");
      assertEquals(" ", fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1955), "3`");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1955
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall1.mapOutParamIndexToPosition((-485));
      // Undeclared exception!
      try { 
        fBProcedureCall1.registerOutParam((-485), (-485));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -486
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2, "org.firebirdsql.jdbc.FBProcedureCall$NullParam");
      assertEquals(2, fBProcedureParam1.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null, org.firebirdsql.jdbc.FBProcedureCall$NullParam)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1, "07006");
      assertEquals(1, fBProcedureParam1.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1427, "HY105");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      fBProcedureCall1.addParam(1427, "HY105");
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertNotSame(fBProcedureCall1, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2659, "Specified parameter does not exist.");
      fBProcedureParam0.setType(2659);
      fBProcedureParam0.setType(2659);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(31, true);
      assertEquals(31, int0);
      
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(2659, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      Object object0 = fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(37, "^DE.5-Sl&/");
      assertEquals(37, fBProcedureParam1.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-2633));
      assertEquals((-2633), int0);
      
      fBProcedureCall0.getName();
      fBProcedureCall0.registerOutParam((-1), (-1393));
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(31);
      fBProcedureCall0.mapOutParamIndexToPosition(31, true);
      fBProcedureCall0.setName("8ENb,Om|1B22?Ix");
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "8ENb,Om|1B22?Ix");
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-3006), true);
      assertEquals((-3006), int0);
      
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.hashCode();
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE 8ENb,Om|1B22?Ix(null)", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "Ilq,\"8+-OaA?a,");
      assertEquals(1, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(Ilq,\"8+-OaA?a,)", string0);
      
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(624, "2MgW1S|ae?8_D1]!Q}");
      fBProcedureParam0.setIndex(624);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = new Object();
      fBProcedureCall1.getName();
      fBProcedureCall1.clone();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.clone();
      Object object1 = new Object();
      fBProcedureCall0.mapOutParamIndexToPosition(624, false);
      fBProcedureCall1.hashCode();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam(624, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "jn`*|lK5dOq");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(39);
      fBProcedureCall0.registerOutParam(39, 2049);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.getName();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.getInputParam(3120);
      fBProcedureParam0.setType(26);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(26, "3`Ui6^l-H<v?Z__3Ai");
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 26
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(593, "2MgW1S|ae?8_D1]!Q}");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.getName();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.hashCode();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("m%");
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall1.getName();
      int int0 = (-852);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      try { 
        fBProcedureParam0.setValue("m%");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertTrue(boolean0);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3652, "?dr");
      fBProcedureParam0.setType(3652);
      Object object0 = new Object();
      fBProcedureParam0.setValue(object0);
      fBProcedureParam0.setValue("RmQL RMl");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall1.setName("?dr");
      fBProcedureCall1.addParam(3652, "?dr");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getOutputParam(3652);
      fBProcedureCall1.clone();
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 15;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(15);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType((-1146));
      fBProcedureCall0.mapOutParamIndexToPosition(15, true);
      fBProcedureCall0.setName("=&HT^EW4m-u?s`T");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getName();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(15, "SELECT * FROM =&HT^EW4m-u?s`T(null)");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addParam(301, "SELECT * FROM =&HT^EW4m-u?s`T(null)");
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(624, "2MgW1S|ae?8_D1]!Q}");
      fBProcedureCall1.getOutputParam((-850));
      fBProcedureParam2.setType(624);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }
}
