/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:50:33 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondaryEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1306.2930023266;
      doubleArray0[1] = 1306.2930023266;
      doubleArray0[2] = 1306.2930023266;
      doubleArray0[3] = 1306.2930023266;
      doubleArray0[4] = 1306.2930023266;
      doubleArray0[5] = 1306.2930023266;
      doubleArray0[6] = 1306.2930023266;
      doubleArray0[7] = 1306.2930023266;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1306.2930023266, 1306.2930023266, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1057, 1306.2930023266, 436.71569004);
      assertEquals(1306.2930023266, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.0E-4;
      doubleArray0[1] = 1.0E-4;
      doubleArray0[2] = 1.0E-4;
      doubleArray0[3] = 1.0E-4;
      doubleArray0[4] = 1.0E-4;
      doubleArray0[5] = 1.0E-4;
      doubleArray0[6] = 1.0E-4;
      doubleArray0[7] = 1.0E-4;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, 1.0E-4, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(3560, 1.0, 1.996521234512329);
      assertEquals(1.0E-4, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 598.3292;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(598.3292, 1.7976931348623157E308, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-4115), (-4115), 598.3292);
      assertEquals(Double.POSITIVE_INFINITY, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(715.252164043705, 715.252164043705, 1.8631451577542948E-8, (-789.61265765));
      graggBulirschStoerIntegrator0.setOrderControl((-3982), 1.8631451577542948E-8, 715.252164043705);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = new double[0];
      expandableStatefulODE0.computeDerivatives(3807.1479, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 468.60737746147, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2.1141094074221325E-276));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = (-1173.22);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-1173.22), 0.0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(88).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.setOrderControl(6, 6, 0.0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
      int int0 = (-346);
      boolean boolean0 = false;
      double double1 = (-82.5798249081);
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int0, int0, double1);
      BrentSolver brentSolver0 = new BrentSolver(double0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-906.92814), 0.02, 1.0E-15, 9.39987974788905E-8);
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(9).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, (-2294.682334425976), (-2294.682334425976), 1.0E-4);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1.0E15, (-408.16956203578), (-408.16956203578), (-408.16956203578));
      graggBulirschStoerIntegrator1.resetInternalState();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1447, 2489, 1046);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(50).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.5176268538776042E-84);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-244.61), (-244.61), (-244.61), 1.014756202697754);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver mullerSolver0 = new MullerSolver(6278.689561498105, (-244.61));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-681.48317221464), 1.014756202697754, 1306, (UnivariateSolver) mullerSolver0);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.672812341879918E178, 5.672812341879918E178, doubleArray0, doubleArray0);
      boolean boolean0 = false;
      int int0 = 4857;
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (double) 4857, doubleArray0, 5.672812341879918E178, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1284.6331959;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1.177739474561431E-7, 0.0, 1284.6331959);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 3, 0.19370205146);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-134.3), 1532.0);
      assertEquals(0, illinoisSolver0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-535.692), (-535.692), 4462.0, 1861.24901575767);
      graggBulirschStoerIntegrator0.setControlFactors(1861.24901575767, 1861.24901575767, 1861.24901575767, 1861.24901575767);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2);
      graggBulirschStoerIntegrator0.setOrderControl(79, 0.01, (-2029.9975));
      assertEquals(535.692, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0E-15, 4.0E-15, 4.0E-15, 1972.06167);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1873.0742594405315;
      doubleArray0[1] = 4.0E-15;
      doubleArray0[2] = 2874.64643;
      doubleArray0[3] = (-338.0);
      doubleArray0[4] = 643.3287663729354;
      doubleArray0[5] = 0.5;
      doubleArray0[6] = 1972.06167;
      doubleArray0[7] = 1873.0742594405315;
      graggBulirschStoerIntegrator0.setStepSizeControl(643.3287663729354, 1873.0742594405315, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(0.5, 643.3287663729354, 1873.0742594405315, 1873.0742594405315);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-343));
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 6, 6, 47.3);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, (-252.256806246903), 0.6773988008499146, 47.3);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.91811711984), 584.64662879307, 2010.3687317357, (-3272.0));
      graggBulirschStoerIntegrator0.setControlFactors((-3430.127035384435), 1.0E-4, 2672.4689154712332, (-277.4076909));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = 0.02;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(9.37721319457112E-9, 4.0, 1.0E-15, 0.02);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      int int0 = 512;
      int int1 = 409;
      graggBulirschStoerIntegrator0.setOrderControl(409, 0.02, 0.02);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        expandableStatefulODE0.computeDerivatives(4.0, (double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = 9.39987974788905E-8;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-906.92814), 0.02, 1.0E-15, 9.39987974788905E-8);
      DummyStepHandler.getInstance();
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      int int0 = 49;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(49).when(secondOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1286.005400501), (-1286.005400501), 1698.555857576977, 914.715385);
      graggBulirschStoerIntegrator1.resetInternalState();
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 49);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 69, (-1905), 1698.555857576977);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double1 = 10.0;
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 10.0);
      double double2 = 1408.0;
      graggBulirschStoerIntegrator1.setControlFactors(double0, double1, double2, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = 1.0E-15;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-906.92814), 0.02, 1.0E-15, 9.39987974788905E-8);
      DummyStepHandler.getInstance();
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      int int0 = 49;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(49).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      SecondOrderDifferentialEquations secondOrderDifferentialEquations2 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(49).when(secondOrderDifferentialEquations2).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations2);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double1 = (-435.3744091489289);
      expandableStatefulODE0.setTime(9.39987974788905E-8);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(3601.54, 0.02, (-435.3744091489289), 0.02);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3293.56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (9.07E02) reached, integration needs 4.22E-02
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2294.682334425976), (-2294.682334425976), (-2294.682334425976), (-2294.682334425976));
      graggBulirschStoerIntegrator0.resetInternalState();
      int int0 = 1046;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(26).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double0 = (-2953.585959);
      expandableStatefulODE0.setTime((-2953.585959));
      double double1 = (-1173.59334131105);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1173.59334131105), (-1173.59334131105), (-2294.682334425976), (-1173.59334131105));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 1046);
      graggBulirschStoerIntegrator1.setControlFactors((-1173.59334131105), 1211.0, (-2294.682334425976), 1.0E15);
      graggBulirschStoerIntegrator1.setMaxEvaluations(257);
      double double2 = 3.3855429446520427E-49;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(3.3855429446520427E-49, 3.3855429446520427E-49, 1211.0, 2.192160831263035E-8);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE1.getTotalDimension();
      SecondaryEquations secondaryEquations0 = mock(SecondaryEquations.class, new ViolatedAssumptionAnswer());
      doReturn((-3447)).when(secondaryEquations0).getDimension();
      // Undeclared exception!
      try { 
        expandableStatefulODE1.addSecondaryEquations(secondaryEquations0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, (-2294.682334425976), (-2294.682334425976), 1.0E-4);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1.0E15, (-408.16956203578), (-408.16956203578), (-408.16956203578));
      graggBulirschStoerIntegrator1.setMaxEvaluations(2417);
      graggBulirschStoerIntegrator1.resetInternalState();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(26).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-2953.585959));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-1173.59334131105), (-1173.59334131105), 1.0E-4, (-1173.59334131105));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 1046);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator2.integrate(expandableStatefulODE0, (-2294.682334425976));
      graggBulirschStoerIntegrator2.setMaxEvaluations((-2581));
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 1046, 36, (-2.9020908354550263E-153));
      ExpandableStatefulODE expandableStatefulODE2 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE1, (-2953.585959));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.2405235318540593, (-2294.682334425976), (-2294.682334425976), 1.2405235318540593);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1.0E15, (-408.16956203578), (-408.16956203578), (-408.16956203578));
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-408.16956203578);
      doubleArray0[1] = (-2294.682334425976);
      doubleArray0[2] = (-408.16956203578);
      doubleArray0[3] = 1.0E15;
      doubleArray0[4] = (-408.16956203578);
      doubleArray0[5] = (-408.16956203578);
      doubleArray0[6] = 999.9;
      graggBulirschStoerIntegrator1.vecRelativeTolerance = doubleArray0;
      graggBulirschStoerIntegrator1.resetInternalState();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(26).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-2953.585959));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-1173.59334131105), (-1173.59334131105), 1.2405235318540593, (-1173.59334131105));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 1046);
      graggBulirschStoerIntegrator2.setControlFactors((-1173.59334131105), 1211.0, 1.0E15, 1.0E15);
      graggBulirschStoerIntegrator2.setMaxEvaluations(257);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator3 = new GraggBulirschStoerIntegrator(3.3855429446520427E-49, 3.3855429446520427E-49, 1211.0, 2.192160831263035E-8);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator3.setOrderControl(1, (-1173.59334131105), (-408.16956203578));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, 1872.9502047026674);
  }
}
