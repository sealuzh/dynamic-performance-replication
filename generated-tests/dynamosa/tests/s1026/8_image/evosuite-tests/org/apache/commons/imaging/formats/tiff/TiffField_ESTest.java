/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 16:46:40 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-77);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-31), 1, fieldTypeShort0, 4L, 1084L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-31), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1084, tiffField0.getOffset());
      assertEquals(179, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1845, "dD`9U$2^P^8ea");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40094, 110, fieldTypeLong0, 1109L, 40094, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(110, tiffField0.getDirectoryType());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(40094, tiffField0.getTag());
      assertEquals(40094, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 915, fieldTypeLong0, 271L, 271L, byteArray0, byteOrder0, (-4345));
      String string0 = tiffField0.toString();
      assertEquals((-4345), tiffField0.getSortHint());
      assertEquals(271, tiffField0.getOffset());
      assertEquals("46 (0x2e: Unknown Tag):  (271 )", string0);
      assertEquals(915, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-3062), 520, fieldTypeLong0.SBYTE, 16000L, 1943L, byteArray0, (ByteOrder) null, 520);
      String string0 = tiffField0.getValueDescription();
      assertEquals(520, tiffField0.getDirectoryType());
      assertEquals(520, tiffField0.getSortHint());
      assertEquals(1943, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-3062), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-253), "|H");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-3072L), byteArray0, byteOrder0, 101);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3072), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-253), "|H");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-3072L), byteArray0, byteOrder0, 101);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3072), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)54);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(28, (-177), fieldTypeRational0, (-177), 356L, byteArray0, byteOrder0, 4096);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(4096, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-177), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(356, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40965, (byte)18, fieldTypeRational0, (-4291961780L), 28064L, byteArray0, byteOrder0, (byte) (-103));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-103), tiffField0.getSortHint());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(40965, tagInfo0.tag);
      assertEquals(28064, tiffField0.getOffset());
      assertEquals(40965, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeLong0, 46, 1460L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1460, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37397, (-4960), fieldTypeShort0, 184L, 0L, byteArray0, byteOrder0, (-123));
      int int0 = tiffField0.getTag();
      assertEquals(37397, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals((-4960), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(888, "7!B");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte) (-92);
      byteArray0[2] = (byte) (-125);
      TiffField tiffField0 = new TiffField(1386, (-1), fieldTypeAscii0, 1386, 888, byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(1386, tiffField0.getTag());
      assertEquals(888, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(131, 283, fieldTypeByte0, 283, (-3062), byteArray0, (ByteOrder) null, 2434);
      int int0 = tiffField0.getSortHint();
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(2434, int0);
      assertEquals((-3062), tiffField0.getOffset());
      assertEquals(131, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "~eU,r3~W%z");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1603, 2214, fieldTypeShort0, (byte)41, (-377), byteArray0, byteOrder0, (byte) (-101));
      int int0 = tiffField0.getSortHint();
      assertEquals(1603, tiffField0.getTag());
      assertEquals((-101), int0);
      assertEquals((-377), tiffField0.getOffset());
      assertEquals(2214, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37397, (-4960), fieldTypeShort0, 184L, 0L, byteArray0, byteOrder0, (-123));
      int int0 = tiffField0.getOffset();
      assertEquals((-4960), tiffField0.getDirectoryType());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(37397, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-60), (byte)1, fieldTypeByte0, 1773L, (byte) (-60), byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getOffset();
      assertEquals((-60), tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-60), int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2058005161), "%");
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-106);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2058005161), (-2058005161), fieldTypeLong0, (-2058005161), (-2010L), byteArray0, byteOrder0, (-249));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2058005161), tiffField0.getTag());
      assertEquals((-2058005161), tiffField0.getDirectoryType());
      assertEquals((-2010), tiffField0.getOffset());
      assertEquals((-249), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte)102;
      TiffField tiffField0 = new TiffField(2147194268, 470, fieldTypeRational0, 470, (-1L), byteArray0, byteOrder0, (byte) (-9));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1480342), int0);
      assertEquals((-9), tiffField0.getSortHint());
      assertEquals(2147194268, tiffField0.getTag());
      assertEquals(470, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37397, (-3255), fieldTypeShort0, (byte)1, 37397, byteArray0, byteOrder0, (-2135748763));
      tiffField0.getIntValue();
      assertEquals((-3255), tiffField0.getDirectoryType());
      assertEquals(37397, tiffField0.getTag());
      assertEquals((-2135748763), tiffField0.getSortHint());
      assertEquals(37397, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[26];
      byteArray0[1] = (byte) (-12);
      byteArray0[4] = (byte)120;
      TiffField tiffField0 = new TiffField((byte)0, 19, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, (-2));
      tiffField0.getIntValue();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-89);
      TiffField tiffField0 = new TiffField((-2145980892), (-2145980892), fieldTypeShort0, 1L, (-2145980892), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals((-2145980892), tiffField0.getDirectoryType());
      assertEquals((-2145980892), tiffField0.getTag());
      assertEquals((-2145980892), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte) (-113), (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(103, (byte) (-19), fieldTypeByte0, (byte) (-113), 68719476704L, byteArray0, byteOrder0, 9);
      tiffField0.getFieldTypeName();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(103, tiffField0.getTag());
      assertEquals((-32), tiffField0.getOffset());
      assertEquals((-19), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 915, fieldTypeLong0, 271L, 271L, byteArray0, byteOrder0, (-4345));
      tiffField0.getFieldTypeName();
      assertEquals(915, tiffField0.getDirectoryType());
      assertEquals((-4345), tiffField0.getSortHint());
      assertEquals(271, tiffField0.getOffset());
      assertEquals(46, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2144488552, 0, (FieldType) null, (-3062L), 2147483647L, byteArray0, byteOrder0, (byte)55);
      tiffField0.getFieldType();
      assertEquals(2144488552, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-377), 1603, fieldTypeShort0, 1603, (-1276L), byteArray0, byteOrder0, 37388);
      tiffField0.getFieldType();
      assertEquals((-377), tiffField0.getTag());
      assertEquals(1603, tiffField0.getDirectoryType());
      assertEquals(37388, tiffField0.getSortHint());
      assertEquals((-1276), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2264), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1698), (-1651), fieldTypeShort0, 37397, (-2558L), byteArray0, byteOrder0, 662);
      tiffField0.getFieldType();
      assertEquals((-1698), tiffField0.getTag());
      assertEquals((-1651), tiffField0.getDirectoryType());
      assertEquals((-2558), tiffField0.getOffset());
      assertEquals(662, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      CharBuffer charBuffer0 = CharBuffer.allocate(143);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(663, 47, fieldTypeShort0.SLONG, 1L, 4880, byteArray0, byteOrder0, 663);
      tiffField0.getDoubleValue();
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(663, tiffField0.getTag());
      assertEquals(663, tiffField0.getSortHint());
      assertEquals(4880, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)107;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-5), (byte) (-5), fieldTypeShort0, 1L, (byte)107, byteArray0, byteOrder0, 853);
      tiffField0.getDoubleValue();
      assertEquals((-5), tiffField0.getTag());
      assertEquals(853, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getOffset());
      assertEquals((-5), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1418), 519, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte) (-2));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(519, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getSortHint());
      assertEquals((-1418), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33422, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(33422, (byte)0, fieldTypeShort0, 1L, 1300L, byteArray0, byteOrder0, (byte)120);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(1300, tiffField0.getOffset());
      assertEquals(33422, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 271L, 271L, byteArray0, byteOrder0, (byte) (-117));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(46, tiffField0.getTag());
      assertEquals(46, int0);
      assertEquals(271, tiffField0.getOffset());
      assertEquals((-117), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1083, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(6637, 1083, fieldTypeShort0, 0L, (-1869L), byteArray0, byteOrder0, (-2147101736));
      tiffField0.getCount();
      assertEquals((-2147101736), tiffField0.getSortHint());
      assertEquals(6637, tiffField0.getTag());
      assertEquals((-1869), tiffField0.getOffset());
      assertEquals(1083, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(915, (-348), fieldTypeLong0, 102L, 1084L, byteArray0, byteOrder0, (byte)21);
      long long0 = tiffField0.getCount();
      assertEquals(915, tiffField0.getTag());
      assertEquals(1084, tiffField0.getOffset());
      assertEquals(102L, long0);
      assertEquals((-348), tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "~eU,r3~W%z");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3255), 37397, fieldTypeShort0, (-2147483648L), (-5618L), byteArray0, byteOrder0, 2115903006);
      long long0 = tiffField0.getCount();
      assertEquals(2115903006, tiffField0.getSortHint());
      assertEquals((-3255), tiffField0.getTag());
      assertEquals((-5618), tiffField0.getOffset());
      assertEquals(37397, tiffField0.getDirectoryType());
      assertEquals((-2147483648L), long0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-132), 0, fieldTypeDouble0, 0L, 1160L, byteArray0, byteOrder0, (byte) (-15));
      tiffField0.getBytesLength();
      assertEquals((-132), tiffField0.getTag());
      assertEquals(1160, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2612, 2612, fieldTypeRational0, 2612, 510L, byteArray0, byteOrder0, (byte)73);
      tiffField0.getBytesLength();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(510, tiffField0.getOffset());
      assertEquals(2612, tiffField0.getTag());
      assertEquals(2612, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(494, 494, fieldTypeRational0, 0L, 2284L, byteArray0, (ByteOrder) null, 494);
      tiffField0.getByteOrder();
      assertEquals(494, tiffField0.getDirectoryType());
      assertEquals(2284, tiffField0.getOffset());
      assertEquals(494, tiffField0.getTag());
      assertEquals(494, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 915, fieldTypeLong0, 271L, 271L, byteArray0, byteOrder0, (-4345));
      tiffField0.getByteOrder();
      assertEquals(46, tiffField0.getTag());
      assertEquals(271, tiffField0.getOffset());
      assertEquals((-4345), tiffField0.getSortHint());
      assertEquals(915, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeFloat0, 35, 35, byteArray0, byteOrder0, 35);
      tiffField0.getByteArrayValue();
      assertEquals(35, tiffField0.getOffset());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[316];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(15, (-1874), fieldTypeDouble0, (-1874), (-1874), byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1960), (-1960), fieldTypeRational0, 1L, (-1960), byteArray0, byteOrder0, (-1960));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2662, 2147454927, (FieldType) null, 2234L, 2234L, byteArray0, byteOrder0, (byte) (-53));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-11), (-11), fieldTypeShort0, (-11), (-11), byteArray0, byteOrder0, (-11));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(471, 471, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 471);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 1231L, 1231L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2824), (-2824), fieldTypeShort0, (-2824), (-2824), byteArray0, byteOrder0, (-2824));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980816), 815, fieldTypeShort0, 1L, (-2145980816), byteArray0, byteOrder0, (-2145980816));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2593, 2593, fieldTypeRational0, 2593, 2593, (byte[]) null, byteOrder0, 2593);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeRational0, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TiffField tiffField0 = new TiffField(440, 440, (FieldType) null, 1L, 1L, (byte[]) null, (ByteOrder) null, 440);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2824), (-2824), fieldTypeShort0, (-2824), (-2824), byteArray0, byteOrder0, (-2824));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145980892), (-2145980892), fieldTypeShort0, 1L, (-2145980892), byteArray0, byteOrder0, (-2145980892));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeShort0, (-1204), 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145980892), (-2145980892), fieldTypeShort0, (-2145980892), (-2145980892), (byte[]) null, byteOrder0, (-2145980892));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5), (-5), fieldTypeRational0, (-5), (-5), byteArray0, byteOrder0, (-5));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[316];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "UM");
      TiffField tiffField0 = new TiffField((-2145980874), 283, fieldTypeRational0, 1L, (-2145980874), byteArray0, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, (byte[]) null, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeRational0, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, (byte) (-97), (FieldType) null, (-1062L), (-1327L), byteArray0, byteOrder0, 2147454927);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2145980827), fieldTypeRational0, (-2145980827), (-1L), byteArray0, byteOrder0, (-2145980827));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(562, 562, fieldTypeShort0, 562, 562, (byte[]) null, byteOrder0, 562);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-26), (-26), fieldTypeRational0, (-26), (-26), byteArray0, byteOrder0, (-26));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(480, 480, fieldTypeRational0, 480, 480, (byte[]) null, byteOrder0, 480);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-452), (-452), fieldTypeRational0, (-452), (-452), byteArray0, byteOrder0, (-452));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2238, 1, fieldTypeShort0, 1, 2238, byteArray0, byteOrder0, 2238);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 1, 1, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37380, 37380, fieldTypeRational0, 37380, 644L, (byte[]) null, byteOrder0, 37380);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2960), (-2960), fieldTypeShort0, (-2960), (-2960), byteArray0, byteOrder0, (-1579));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2824), (-2824), fieldTypeShort0, (-2824), (-2824), byteArray0, byteOrder0, (-2824));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ";W;6M'` K2");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1581), (-1581), fieldTypeRational0, (-1581), 2160L, byteArray0, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeRational0, 1L, 0L, byteArray0, (ByteOrder) null, (byte)30);
      MockFileWriter mockFileWriter0 = new MockFileWriter("5>P#.A ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2824), (-2824), fieldTypeShort0, (-2824), (-2824), byteArray0, byteOrder0, (-2824));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33422, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1908874352), (-1908874352), fieldTypeShort0, 817L, 2138718408, byteArray0, byteOrder0, (-1908874352));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("l]tC?wvp_o2Mg{~yo");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(817L, tiffField0.getCount());
      assertEquals(2138718408, tiffField0.getOffset());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-3062), 50, fieldTypeByte0, 4L, 2022, byteArray0, (ByteOrder) null, 486);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3062), tiffField0.getTag());
      assertEquals(2022, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(486, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1142), "ZgB#_YNb6S/z");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(498, (-377), fieldTypeDouble0, 2147483647L, (-938), byteArray0, byteOrder0, (-2070));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-377), tiffField0.getDirectoryType());
      assertEquals((-938), tiffField0.getOffset());
      assertEquals((-2070), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(498, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1751), 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, (-1751));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(46, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(915, (-348), fieldTypeLong0, 102L, 1084L, byteArray0, byteOrder0, (byte)21);
      tiffField0.getFieldType();
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(1084, tiffField0.getOffset());
      assertEquals((-348), tiffField0.getDirectoryType());
      assertEquals(915, tiffField0.getTag());
      assertEquals(408, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3208, (byte) (-127), fieldTypeRational0, (-2147483648L), (-1096), byteArray0, byteOrder0, (byte) (-81));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1096), tiffField0.getOffset());
      assertEquals(3208, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-127), int0);
      assertEquals((-81), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980890), (-2145980890), fieldTypeShort0, (-2145980890), (-2145980890), byteArray0, byteOrder0, (-2145980890));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1033, 1033, fieldTypeFloat0, 1033, 1033, (byte[]) null, byteOrder0, 1033);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)2, (byte)1, fieldTypeByte0.DOUBLE, (-2147483648L), 647L, byteArray0, byteOrder0, 2925);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2925, tiffField0.getSortHint());
      assertEquals(647, int0);
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-132), 0, fieldTypeDouble0, 0L, 1160L, byteArray0, byteOrder0, (byte) (-15));
      int int0 = tiffField0.getTag();
      assertEquals(1160, tiffField0.getOffset());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-132), int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147101736), 2115903006, fieldTypeByte0, (-2054L), 1796L, byteArray0, byteOrder0, (-1528));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2054), int0);
      assertEquals((-1528), tiffField0.getSortHint());
      assertEquals(1796, tiffField0.getOffset());
      assertEquals((-2147101736), tiffField0.getTag());
      assertEquals(2115903006, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145980872), (-2145980872), fieldTypeShort0, (-2145980872), (-2145980872), byteArray0, byteOrder0, (-2145980872));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-2145980872), tiffField0.getDirectoryType());
      assertEquals((-2145980872), tiffField0.getSortHint());
      assertEquals("-2145980872 (0x8016ee38: Unknown Tag): ", string0);
      assertEquals((-2145980872), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeDouble0, (-1431655764), (-1431655764), byteArray0, byteOrder0, (-1431655764));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(343, 343, fieldTypeLong0, 343, 343, byteArray0, byteOrder0, 343);
      tiffField0.getIntValueOrArraySum();
      assertEquals(343, tiffField0.getDirectoryType());
      assertEquals(343, tiffField0.getTag());
      assertEquals(343, tiffField0.getOffset());
      assertEquals(343, tiffField0.getSortHint());
      assertEquals(343L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeDouble0, (-1431655764), (-1431655764), byteArray0, byteOrder0, (-1431655764));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@28ba3f1c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980853), (-2145980853), fieldTypeRational0, (-2145980853), (-2145980853), byteArray0, byteOrder0, (-2145980853));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3cd6c4e2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeDouble0, (-1431655764), (-1431655764), byteArray0, byteOrder0, (-1431655764));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals((-1431655764), tiffField0.getOffset());
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals((-1431655764L), tiffField0.getCount());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50710, 50710, fieldTypeLong0, 50710, 50710, byteArray0, byteOrder0, 50710);
      tiffField0.getDoubleArrayValue();
      assertEquals(50710, tiffField0.getOffset());
      assertEquals(50710L, tiffField0.getCount());
      assertEquals(50710, tiffField0.getDirectoryType());
      assertEquals(50710, tiffField0.getSortHint());
      assertEquals(50710, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980853), (-2145980853), fieldTypeShort0, (-2145980853), (-2145980853), byteArray0, byteOrder0, (-2145980853));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2145980853L), tiffField0.getCount());
      assertEquals((-2145980853), tiffField0.getSortHint());
      assertEquals((-2145980853), tiffField0.getTag());
      assertEquals((-2145980853), tiffField0.getDirectoryType());
      assertEquals((-2145980853), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeFloat0, 57, 57, byteArray0, byteOrder0, 57);
      tiffField0.getDoubleArrayValue();
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getTag());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980853), (-2145980853), fieldTypeRational0, (-2145980853), (-2145980853), byteArray0, byteOrder0, (-2145980853));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2145980853), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals((-2145980853), tiffField0.getTag());
      assertEquals((-2145980853), tiffField0.getSortHint());
      assertEquals((-2145980853), tiffField0.getOffset());
      assertEquals((-2145980853L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeDouble0, (-1431655764), (-1431655764), byteArray0, byteOrder0, (-1431655764));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@12958ae6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980853), (-2145980853), fieldTypeShort0, (-2145980853), (-2145980853), byteArray0, byteOrder0, (-2145980853));
      tiffField0.getIntArrayValue();
      assertEquals((-2145980853), tiffField0.getOffset());
      assertEquals((-2145980853L), tiffField0.getCount());
      assertEquals((-2145980853), tiffField0.getDirectoryType());
      assertEquals((-2145980853), tiffField0.getSortHint());
      assertEquals((-2145980853), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeLong0, 57, 57, byteArray0, byteOrder0, 57);
      tiffField0.getIntArrayValue();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getTag());
      assertEquals(57, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980872), (-2145980872), fieldTypeRational0, (-2145980872), (-2145980872), byteArray0, byteOrder0, (-2145980872));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@64ab9ddc
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, (byte[]) null, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50726, 50726, fieldTypeShort0, 50726, 50726, byteArray0, byteOrder0, 50726);
      String string0 = tiffField0.getTagName();
      assertEquals(50726, tiffField0.getTag());
      assertEquals(50726, tiffField0.getDirectoryType());
      assertEquals("ReductionMatrix2", string0);
      assertEquals(50726, tiffField0.getSortHint());
      assertEquals(50726, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980892), (-2145980892), fieldTypeShort0, (-2145980892), (-2145980892), byteArray0, byteOrder0, (-2145980892));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, ";+MGXRwXK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[233];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1596, 90, fieldTypeFloat0, 3318, 31, byteArray0, byteOrder0, 330);
      tiffField0.dump();
      assertEquals(1596, tiffField0.getTag());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(90, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(3318L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(0, 41493, fieldTypeByte0, 41493, 41493, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(41493, tiffField0.getDirectoryType());
      assertEquals(41493, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(41493L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), fieldTypeDouble0, (-1431655764), (-1431655764), byteArray0, byteOrder0, (-1431655764));
      tiffField0.dump();
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals((-1431655764), tiffField0.getOffset());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals((-1431655764L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(217, 217, fieldTypeDouble0, 217, 217, byteArray0, byteOrder0, 217);
      tiffField0.dump();
      assertEquals(217L, tiffField0.getCount());
      assertEquals(217, tiffField0.getOffset());
      assertEquals(217, tiffField0.getSortHint());
      assertEquals(217, tiffField0.getDirectoryType());
      assertEquals(217, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[274];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(169, (-3247), fieldTypeLong0, 169, 169, byteArray0, byteOrder0, 169);
      tiffField0.dump();
      assertEquals(169, tiffField0.getSortHint());
      assertEquals(169, tiffField0.getTag());
      assertEquals(169L, tiffField0.getCount());
      assertEquals((-3247), tiffField0.getDirectoryType());
      assertEquals(169, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeFloat0, 57, 57, byteArray0, byteOrder0, 57);
      tiffField0.dump();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getTag());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[268];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980909), (-2145980909), fieldTypeShort0, (-2145980909), (-2145980909), byteArray0, byteOrder0, (-2145980909));
      assertEquals(3005478, tiffField0.getBytesLength());
      
      tiffField0.dump();
      assertEquals((-2145980909), tiffField0.getOffset());
      assertEquals((-2145980909L), tiffField0.getCount());
      assertEquals((-2145980909), tiffField0.getDirectoryType());
      assertEquals((-2145980909), tiffField0.getTag());
      assertEquals((-2145980909), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[328];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(41519, 41519, fieldTypeAscii0, 41519, 41519, byteArray0, byteOrder0, 41519);
      tiffField0.dump();
      assertEquals(41519, tiffField0.getBytesLength());
      assertEquals(41519, tiffField0.getTag());
      assertEquals(41519L, tiffField0.getCount());
      assertEquals(41519, tiffField0.getDirectoryType());
      assertEquals(41519, tiffField0.getSortHint());
      assertEquals(41519, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(443, 443, fieldTypeRational0, 443, 443, byteArray0, byteOrder0, 443);
      tiffField0.dump();
      assertEquals(443L, tiffField0.getCount());
      assertEquals(443, tiffField0.getDirectoryType());
      assertEquals(443, tiffField0.getTag());
      assertEquals(443, tiffField0.getOffset());
      assertEquals(3544, tiffField0.getBytesLength());
      assertEquals(443, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(407, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeFloat0, 35, 35, byteArray0, byteOrder0, 35);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(35, 35);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getOffset());
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertNotNull(string0);
      assertEquals(35L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145980853), (-2145980853), fieldTypeShort0, (-2145980853), (-2145980853), byteArray0, byteOrder0, (-2145980853));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2145980853), tiffField0.getSortHint());
      assertEquals((-2145980853), tiffField0.getDirectoryType());
      assertEquals((-2145980853), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-2145980853), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(519, 0, fieldTypeRational0, 519, 519, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(519, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(519, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2145980763), (FieldType) null, (-2145980763), 28, byteArray0, byteOrder0, 3140);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145980845), (-2145980845), (FieldType) null, (-2145980845), (-2145980845), byteArray0, byteOrder0, (-2145980845));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeRational0, 53, 53, byteArray0, byteOrder0, 53);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals(53, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(53L, tiffElement0.offset);
      assertEquals(53, tiffField0.getTag());
  }
}
