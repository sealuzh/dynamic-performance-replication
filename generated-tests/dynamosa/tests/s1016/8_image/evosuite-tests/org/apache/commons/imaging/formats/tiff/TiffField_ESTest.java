/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 22:47:01 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)37;
      byteArray0[4] = (byte) (-58);
      TiffField tiffField0 = new TiffField(65535, (byte)37, fieldTypeRational0, 65535, (byte)0, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(47, int0);
      assertEquals(37, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte)37;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1120, 1120, fieldTypeRational0, 1120, 1120, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1120, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1120, tiffField0.getDirectoryType());
      assertEquals(1120, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-53), 299, fieldTypeFloat0, 1L, 1208L, byteArray0, byteOrder0, (byte) (-53));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(299, tiffField0.getDirectoryType());
      assertEquals((-53), tiffField0.getTag());
      assertEquals((-53), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(1208, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (byte) (-125), fieldTypeRational0, 28, 28, byteArray0, byteOrder0, 402);
      String string0 = tiffField0.toString();
      assertEquals((-125), tiffField0.getDirectoryType());
      assertEquals(402, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getOffset());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (28 Rational)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "kM>");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 65535, byteArray0, byteOrder0, 2145701503);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2145701503, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 266, fieldTypeShort0, 266, 266, byteArray0, byteOrder0, 267);
      tiffField0.getValue();
      assertEquals(266, tiffField0.getDirectoryType());
      assertEquals(267, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(266, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-374), fieldTypeRational0.IFD, (-620L), (-620L), byteArray0, byteOrder0, (-3106));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3106), tiffField0.getSortHint());
      assertEquals((-374), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-620), tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(400, 65535, fieldTypeShort0, 4L, 82L, byteArray0, byteOrder0, (byte) (-85));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(400, tagInfo0.tag);
      assertEquals((-85), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "kM");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeFloat0.RATIONAL, 350L, 350L, byteArray0, byteOrder0, 517);
      int int0 = tiffField0.getTag();
      assertEquals(517, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(350, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1982292598, (byte)29, fieldTypeLong0, 144864L, (-15448L), byteArray0, byteOrder0, 1982292598);
      int int0 = tiffField0.getTag();
      assertEquals(1982292598, int0);
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals((-15448), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeAscii0, 2, 2, byteArray0, byteOrder0, (byte)2);
      assertEquals(2, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(344, (byte) (-79), fieldTypeFloat0, 344, (-1865L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1865), tiffField0.getOffset());
      assertEquals((-79), tiffField0.getDirectoryType());
      assertEquals(344, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1120, 1120, fieldTypeRational0, 1120, 1120, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(1120, tiffField0.getTag());
      assertEquals(1120, tiffField0.getDirectoryType());
      assertEquals(1120, tiffField0.getOffset());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3509, 3509, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-814));
      tiffField0.getOffset();
      assertEquals((-814), tiffField0.getSortHint());
      assertEquals(3509, tiffField0.getTag());
      assertEquals(3509, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)33, (byte)18, fieldTypeLong0, (-378L), (-8L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getOffset();
      assertEquals(33, tiffField0.getTag());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals((-8), int0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)37;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1076), (byte)0, fieldTypeRational0.SHORT, (byte)37, (-1L), byteArray0, byteOrder0, (-2147470057));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(9472, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(74, tiffField0.getBytesLength());
      assertEquals((-1076), tiffField0.getTag());
      assertEquals((-2147470057), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-53);
      TiffField tiffField0 = new TiffField((byte) (-53), 299, fieldTypeFloat0, 1L, 1208L, byteArray0, byteOrder0, (byte) (-53));
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-53), tiffField0.getTag());
      assertEquals(299, tiffField0.getDirectoryType());
      assertEquals((-53), tiffField0.getSortHint());
      assertEquals(1208, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeShort0, 1, (byte)18, byteArray0, byteOrder0, (byte)18);
      tiffField0.getIntValue();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(2723, 38, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)119);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2723, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1360), fieldTypeFloat0, 1L, (-1336L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1336), tiffField0.getOffset());
      assertEquals((-1360), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2686, (String) null);
      TiffField tiffField0 = new TiffField((-295), 3488, fieldTypeFloat0, 843L, 83L, byteArray0, byteOrder0, (-295));
      tiffField0.getFieldTypeName();
      assertEquals(3488, tiffField0.getDirectoryType());
      assertEquals((-295), tiffField0.getSortHint());
      assertEquals(83, tiffField0.getOffset());
      assertEquals((-295), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      tiffField0.getFieldTypeName();
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getTag());
      assertEquals(111, tiffField0.getOffset());
      assertEquals(111, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "");
      TiffField tiffField0 = new TiffField((byte)74, 41989, fieldTypeByte0, 41989, (-22560L), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(74, tiffField0.getTag());
      assertEquals(41989, tiffField0.getDirectoryType());
      assertEquals((-22560), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(236, 2146715866, (FieldType) null, (-1L), (-250L), byteArray0, byteOrder0, (byte)78);
      tiffField0.getFieldType();
      assertEquals(2146715866, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals((-250), tiffField0.getOffset());
      assertEquals(236, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "kM>");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 65535, byteArray0, byteOrder0, 2145701503);
      tiffField0.getFieldType();
      assertEquals(2145701503, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(339, 25, fieldTypeShort0.ASCII, 0L, (-1693L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1693), tiffField0.getOffset());
      assertEquals(339, tiffField0.getTag());
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2731), fieldTypeShort0, 1L, (-2731), byteArray0, byteOrder0, (byte)18);
      tiffField0.getDoubleValue();
      assertEquals((-2731), tiffField0.getOffset());
      assertEquals((-2731), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)124;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 34030, fieldTypeByte0, 1L, 34030, byteArray0, byteOrder0, 1078);
      tiffField0.getDoubleValue();
      assertEquals(1078, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(34030, tiffField0.getDirectoryType());
      assertEquals(34030, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-2);
      TiffField tiffField0 = new TiffField(300, (-157), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 2);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-157), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(300, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)98, (byte)98, fieldTypeRational0, (byte)98, (byte)98, byteArray0, byteOrder0, (byte)98);
      tiffField0.getDoubleArrayValue();
      assertEquals(98, tiffField0.getDirectoryType());
      assertEquals(784, tiffField0.getBytesLength());
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(98, tiffField0.getTag());
      assertEquals(98, tiffField0.getOffset());
      assertEquals(98L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 588, 50L, byteArray0, byteOrder0, 588);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(588, tiffField0.getSortHint());
      assertEquals(1176, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)1, (-2124878555), fieldTypeByte0, (-651L), 28504L, byteArray0, (ByteOrder) null, (byte) (-86));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals(28504, tiffField0.getOffset());
      assertEquals((-651L), tiffField0.getCount());
      assertEquals((-2124878555), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-58), (-2124878555), fieldTypeShort0, 0L, 28504L, byteArray0, byteOrder0, (byte) (-69));
      long long0 = tiffField0.getCount();
      assertEquals(0L, long0);
      assertEquals((-69), tiffField0.getSortHint());
      assertEquals((-2124878555), tiffField0.getDirectoryType());
      assertEquals(28504, tiffField0.getOffset());
      assertEquals((-58), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(281, 281, fieldTypeShort0, 281, 281, byteArray0, byteOrder0, (byte) (-25));
      long long0 = tiffField0.getCount();
      assertEquals(281, tiffField0.getOffset());
      assertEquals(281, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(281, tiffField0.getTag());
      assertEquals(281L, long0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1875), (-1875), fieldTypeByte0, (-1875), (-1875), byteArray0, byteOrder0, (byte)50);
      long long0 = tiffField0.getCount();
      assertEquals((-1875), tiffField0.getDirectoryType());
      assertEquals((-1875), tiffField0.getTag());
      assertEquals((-1875), tiffField0.getOffset());
      assertEquals((-1875L), long0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(727, 727, fieldTypeFloat0, 0, 727, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(727, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(727, tiffField0.getDirectoryType());
      assertEquals(727, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2146715866, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, 48323, fieldTypeByte0, (-1141L), (-1141L), byteArray0, byteOrder0, (-2147388478));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1141), int0);
      assertEquals(48323, tiffField0.getTag());
      assertEquals(48323, tiffField0.getDirectoryType());
      assertEquals((-1141), tiffField0.getOffset());
      assertEquals((-2147388478), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(17, 3509, fieldTypeShort0, 3509, 0L, byteArray0, (ByteOrder) null, 2);
      tiffField0.getByteOrder();
      assertEquals(3509, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3509L, tiffField0.getCount());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)12, fieldTypeByte0, (byte)12, (byte)54, byteArray0, byteOrder0, 40965);
      tiffField0.getByteOrder();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getOffset());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(40965, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(345, 1951, fieldTypeByte0, 2763L, 1951, byteArray0, byteOrder0, (byte)127);
      tiffField0.getByteArrayValue();
      assertEquals(2763, tiffField0.getBytesLength());
      assertEquals(345, tiffField0.getTag());
      assertEquals(1951, tiffField0.getDirectoryType());
      assertEquals(1951, tiffField0.getOffset());
      assertEquals(127, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(101, (-1456), fieldTypeAscii0, 5963L, 5963L, byteArray0, byteOrder0, (-2147436057));
      tiffField0.getByteArrayValue();
      assertEquals(5963, tiffField0.getOffset());
      assertEquals(5963, tiffField0.getBytesLength());
      assertEquals((-2147436057), tiffField0.getSortHint());
      assertEquals((-1456), tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2144936217, 2144936217, fieldTypeByte0, (-2102L), (-2102L), byteArray0, byteOrder0, (byte)67);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(44, 75, fieldTypeShort0, (-45120L), 70, byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("FocalPlaneXResolution");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeRational0, 73, 73, (byte[]) null, byteOrder0, 73);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 424L, byteArray0, byteOrder0, (byte)94);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(17, 17, (FieldType) null, (byte) (-122), (byte) (-122), (byte[]) null, byteOrder0, 17);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 35, (FieldType) null, 35, 35, byteArray0, byteOrder0, 35);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4361), (-4361), fieldTypeShort0.FLOAT, (-4361), (-4361), byteArray0, byteOrder0, (-4361));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (byte) (-125), fieldTypeRational0, 28, 28, byteArray0, byteOrder0, 402);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-386), (-386), fieldTypeRational0, (-386), (-386), byteArray0, byteOrder0, (-386));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37394, 1, fieldTypeRational0, 1, 37394, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeRational0, 73, 73, (byte[]) null, byteOrder0, 73);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-126), (byte) (-126), fieldTypeRational0, (byte) (-126), (byte) (-126), byteArray0, byteOrder0, (byte) (-126));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-871), (-871), fieldTypeRational0, 1L, (-871), byteArray0, byteOrder0, (-871));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeRational0, 37313, 26, (byte[]) null, byteOrder0, 45);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1690, 1690, (FieldType) null, 1690, 1690, byteArray0, byteOrder0, 1690);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-125), (byte) (-125), fieldTypeRational0, (byte) (-125), (byte) (-125), byteArray0, byteOrder0, (byte) (-125));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)80, (byte)80, fieldTypeRational0, 1L, (byte)80, byteArray0, byteOrder0, (byte)80);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-879), fieldTypeShort0, 46L, 2525L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2723, 2723, fieldTypeShort0, 2723, 2723, (byte[]) null, byteOrder0, 2723);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-118), (byte) (-118), fieldTypeRational0, (byte) (-118), (byte) (-118), byteArray0, byteOrder0, (byte) (-118));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(11, 0, fieldTypeRational0, 1L, 0, byteArray0, byteOrder0, (-1133));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[316];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1143, 1143, (FieldType) null, 1143, 1143, byteArray0, byteOrder0, 1143);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-125), (byte) (-125), fieldTypeRational0, (byte) (-125), (byte) (-125), byteArray0, byteOrder0, (byte) (-125));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)94, (byte)94, fieldTypeRational0, (byte)94, (byte)94, (byte[]) null, byteOrder0, (byte)94);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-30), (byte) (-30), fieldTypeRational0, (byte) (-30), (byte) (-30), byteArray0, byteOrder0, (byte) (-30));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1427, 1427, fieldTypeByte0, 1427, 1427, (byte[]) null, byteOrder0, 1427);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-125), (byte) (-125), fieldTypeRational0, (byte) (-125), (byte) (-125), byteArray0, byteOrder0, (byte) (-125));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2881), 0, (FieldType) null, (-2881), (-2881), byteArray0, byteOrder0, (byte) (-50));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2723, 2723, fieldTypeShort0, 2723, 1008L, (byte[]) null, byteOrder0, 2723);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-91), (-91), fieldTypeShort0, (-91), (-91), byteArray0, byteOrder0, (-91));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(21, (-530), fieldTypeRational0, (-1424L), (-1L), byteArray0, byteOrder0, 21);
      MockPrintStream mockPrintStream0 = new MockPrintStream("gQA5#E'P/");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "gQA5#E'P/");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-669), fieldTypeShort0, (-669), 300, byteArray0, byteOrder0, 300);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37385, 37385, fieldTypeRational0, 37385, 1108L, (byte[]) null, byteOrder0, 37385);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, (-1551L), (-1551L), byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 15, fieldTypeByte0, 1L, (-17179869184L), byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(69, (-1752), fieldTypeAscii0, 0L, 69, byteArray0, (ByteOrder) null, 21);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(69, tiffField0.getTag());
      assertEquals(69, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1752), tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2196, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2945, fieldTypeRational0, (-2820L), 2945, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(2945, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2945, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "kM>");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)2, 4, fieldTypeFloat0, 5372, 5372, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5372, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2352), "#,9'F&u");
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeLong0, 17, 255L, byteArray0, byteOrder0, 1717986918);
      tiffField0.getFieldType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getTag());
      assertEquals(17L, tiffField0.getCount());
      assertEquals(1717986918, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(75, tiffField0.getTag());
      assertEquals(75, int0);
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1447), (-1447), (FieldType) null, (-1447), (-1447), byteArray0, byteOrder0, 1815);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(727, 727, fieldTypeFloat0, 0, 727, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(727, int0);
      assertEquals(727, tiffField0.getDirectoryType());
      assertEquals(727, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-791), (-791), fieldTypeDouble0, (-791), (-1L), byteArray0, (ByteOrder) null, (byte)12);
      int int0 = tiffField0.getTag();
      assertEquals((-791), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals((-791L), tiffField0.getCount());
      assertEquals((-791), int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-326), 727, fieldTypeFloat0, 727, (-326), byteArray0, byteOrder0, (-1873));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1873), tiffField0.getSortHint());
      assertEquals(2908, int0);
      assertEquals(727, tiffField0.getDirectoryType());
      assertEquals((-326), tiffField0.getTag());
      assertEquals((-326), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2723, 2723, fieldTypeShort0, 2723, 2723, byteArray0, byteOrder0, 2723);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2723, tiffField0.getSortHint());
      assertEquals(2723, tiffField0.getDirectoryType());
      assertEquals(2723, tiffField0.getOffset());
      assertEquals("2723 (0xaa3: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(206, 206, fieldTypeShort0.FLOAT, 206, 206, byteArray0, byteOrder0, 206);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@173fc4ab for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[134];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)34, (byte)34, fieldTypeShort0.SLONG, (byte)34, (byte)34, byteArray0, byteOrder0, (byte)34);
      tiffField0.getIntValueOrArraySum();
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34L, tiffField0.getCount());
      assertEquals(136, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(172, (-18), fieldTypeLong0.ASCII, 172, (-18), byteArray0, byteOrder0, (-18));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7b656f7a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(206, 206, fieldTypeShort0.FLOAT, 206, 206, byteArray0, byteOrder0, 206);
      tiffField0.getDoubleArrayValue();
      assertEquals(824, tiffField0.getBytesLength());
      assertEquals(206, tiffField0.getOffset());
      assertEquals(206, tiffField0.getDirectoryType());
      assertEquals(206, tiffField0.getSortHint());
      assertEquals(206, tiffField0.getTag());
      assertEquals(206L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[134];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeShort0.DOUBLE, 25, 25, byteArray0, byteOrder0, 25);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(16, doubleArray0.length);
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2723, 2723, fieldTypeShort0, 2723, 2723, byteArray0, byteOrder0, 2723);
      tiffField0.getDoubleArrayValue();
      assertEquals(2723L, tiffField0.getCount());
      assertEquals(2723, tiffField0.getTag());
      assertEquals(2723, tiffField0.getOffset());
      assertEquals(2723, tiffField0.getDirectoryType());
      assertEquals(2723, tiffField0.getSortHint());
      assertEquals(5446, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeShort0.SLONG, (byte)36, (byte)36, byteArray0, byteOrder0, (byte)36);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(25, doubleArray0.length);
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)98, (byte)98, fieldTypeRational0, (byte)98, (byte)98, byteArray0, byteOrder0, (byte)98);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(98, tiffField0.getTag());
      assertEquals(98L, tiffField0.getCount());
      assertEquals(784, tiffField0.getBytesLength());
      assertEquals(98, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(98, tiffField0.getOffset());
      assertEquals(98, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(181, 181, fieldTypeShort0.FLOAT, 181, 181, byteArray0, byteOrder0, 181);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@654fd5f5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2723, 2723, fieldTypeShort0, 2723, 2723, byteArray0, byteOrder0, 2723);
      tiffField0.getIntArrayValue();
      assertEquals(2723, tiffField0.getDirectoryType());
      assertEquals(5446, tiffField0.getBytesLength());
      assertEquals(2723, tiffField0.getTag());
      assertEquals(2723L, tiffField0.getCount());
      assertEquals(2723, tiffField0.getSortHint());
      assertEquals(2723, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      tiffField0.getIntArrayValue();
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getTag());
      assertEquals(111L, tiffField0.getCount());
      assertEquals(888, tiffField0.getBytesLength());
      assertEquals(111, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (byte)27, fieldTypeShort0.SLONG, (byte)27, (byte)27, byteArray0, byteOrder0, (byte)27);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(27, tiffField0.getOffset());
      assertEquals(25, intArray0.length);
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[93];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)110, (byte)110, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)110);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(110, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(110, tiffField0.getSortHint());
      assertEquals(110, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34910, 34910, fieldTypeRational0.ASCII, 26L, 26L, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(26, tiffField0.getBytesLength());
      assertEquals(34910, tiffField0.getTag());
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@31e9654d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      String string0 = tiffField0.getTagName();
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x6f)", string0);
      assertEquals(111, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50972, 50972, fieldTypeShort0, 50972, 50972, byteArray0, byteOrder0, 50972);
      String string0 = tiffField0.getTagName();
      assertEquals(50972, tiffField0.getSortHint());
      assertEquals(50972, tiffField0.getTag());
      assertEquals(50972, tiffField0.getDirectoryType());
      assertEquals("RawImageDigest", string0);
      assertEquals(50972, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50982, 50982, fieldTypeShort0, 50982, 50982, byteArray0, byteOrder0, 50982);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "org.apache.commons.imaging.formats.tiff.constants.ExifTagConstants");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(300, 2610, fieldTypeFloat0, 2610, 2610, byteArray0, byteOrder0, 300);
      String string0 = tiffField0.toString();
      assertEquals(2610, tiffField0.getDirectoryType());
      assertEquals(10440, tiffField0.getBytesLength());
      assertEquals(2610, tiffField0.getOffset());
      assertEquals("300 (0x12c: ColorResponseUnit): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (2610 Float)", string0);
      assertEquals(300, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[377];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeByte0, 17, 17, byteArray0, byteOrder0, 17);
      String string0 = tiffField0.toString();
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals("17 (0x11: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (17 SByte)", string0);
      assertEquals(17, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[342];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(42035, 134, fieldTypeByte0, 42035, 134, byteArray0, byteOrder0, 134);
      String string0 = tiffField0.getValueDescription();
      assertEquals(42035, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(134, tiffField0.getDirectoryType());
      assertEquals(42035, tiffField0.getBytesLength());
      assertEquals(42035L, tiffField0.getCount());
      assertEquals(134, tiffField0.getSortHint());
      assertEquals(134, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2429, 2429, fieldTypeLong0.DOUBLE, 2429, 2429, byteArray0, (ByteOrder) null, 2429);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2429L, tiffField0.getCount());
      assertEquals(2429, tiffField0.getDirectoryType());
      assertEquals(2429, tiffField0.getSortHint());
      assertEquals(19432, tiffField0.getBytesLength());
      assertEquals(2429, tiffField0.getTag());
      assertEquals(2429, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[244];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3500, 3500, fieldTypeLong0.DOUBLE, 3500, 3500, byteArray0, byteOrder0, 3500);
      String string0 = tiffField0.toString();
      assertEquals(3500, tiffField0.getDirectoryType());
      assertEquals(28000, tiffField0.getBytesLength());
      assertEquals(3500, tiffField0.getOffset());
      assertEquals("3500 (0xdac: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (3500 Double)", string0);
      assertEquals(3500, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[342];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(42035, 42035, fieldTypeLong0, 42035, 42035, byteArray0, byteOrder0, 42035);
      String string0 = tiffField0.toString();
      assertEquals(168140, tiffField0.getBytesLength());
      assertEquals(42035, tiffField0.getDirectoryType());
      assertEquals(42035, tiffField0.getOffset());
      assertEquals("42035 (0xa433: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (85) (42035 Long)", string0);
      assertEquals(42035, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[128];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37393, 37393, fieldTypeShort0, 37393, 37393, byteArray0, byteOrder0, 37393);
      String string0 = tiffField0.toString();
      assertEquals("37393 (0x9211: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (64) (37393 Short)", string0);
      assertEquals(37393, tiffField0.getOffset());
      assertEquals(37393, tiffField0.getDirectoryType());
      assertEquals(74786, tiffField0.getBytesLength());
      assertEquals(37393, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[87];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (byte)27, fieldTypeShort0.SLONG, (byte)27, (byte)27, byteArray0, byteOrder0, (byte)27);
      String string0 = tiffField0.toString();
      assertEquals(27, tiffField0.getOffset());
      assertEquals("27 (0x1b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (27 SLong)", string0);
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[304];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1745, 8, fieldTypeAscii0, 1745, 8, byteArray0, byteOrder0, 1745);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1745, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1745, tiffField0.getTag());
      assertEquals(1745, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)80, 1, fieldTypeRational0, 1, (byte)80, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(80, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (-2193), fieldTypeShort0, (-243L), 12, byteArray0, byteOrder0, 82);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2193), (-2134));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(82, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals((-2193), tiffField0.getDirectoryType());
      assertNull(string0);
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3689, 2234, fieldTypeShort0, 2234, 2234, byteArray0, byteOrder0, 5214);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(4562, (-1118));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(5214, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(2234, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3689, tiffField0.getTag());
      assertEquals(2234, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37385, 49, (FieldType) null, (-1803L), 3594L, byteArray0, byteOrder0, 40);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 0L, (-1274L), byteArray0, byteOrder0, (-822));
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1274), tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-822), int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-3221), fieldTypeRational0, 28, (-3221), (byte[]) null, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2748, 2748, fieldTypeShort0, 2748, 2748, byteArray0, byteOrder0, 2748);
      tiffField0.dump();
      assertEquals(2748, tiffField0.getOffset());
      assertEquals(5496, tiffField0.getBytesLength());
      assertEquals(2748, tiffField0.getTag());
      assertEquals(2748, tiffField0.getSortHint());
      assertEquals(2748, tiffField0.getDirectoryType());
      assertEquals(2748L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0, (byte)111, (byte)111, byteArray0, byteOrder0, (byte)111);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(111L, tiffElement0.offset);
      assertEquals(111, tiffField0.getTag());
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getSortHint());
  }
}
