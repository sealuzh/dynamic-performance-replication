/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:40:19 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.ObjectStreamConstants;
import java.io.PrintStream;
import java.io.Reader;
import java.io.StringReader;
import java.util.Locale;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = null;
      XPathParserTokenManager xPathParserTokenManager0 = null;
      try {
        xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 116);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 116. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<:4? WcyFqG`Pr@~}");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null, 635, 0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      XPathParserTokenManager xPathParserTokenManager1 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      // Undeclared exception!
      try { 
        xPathParserTokenManager1.ReInit((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 24);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 24. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      xPathParserTokenManager0.jjmatchedKind = 88;
      XPathParserTokenManager xPathParserTokenManager1 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      xPathParserTokenManager1.setDebugStream(xPathParserTokenManager0.debugStream);
      assertFalse(xPathParserTokenManager0.equals((Object)xPathParserTokenManager1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1s");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.jxpath.ri.parser.XPathParserConstants");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte) (-35);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)77, (byte)77, (byte) (-35));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte) (-15), 23, (byte)99);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-114);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 1, (byte) (-114), 1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-35);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)56, (byte)56, (byte) (-35));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"la-st\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y]N<");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache(comm^ns.jxpath.ri.parser.XPathParserConstants");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?sl2m<5#RqoXL{]eJ{");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[22];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[17] = '/';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2$OmPIa,e9KFN00&=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 8, 8, 8);
      simpleCharStream0.backup((-1480));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 2147418113, 32);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[35];
      charArray0[2] = '\u0000';
      StringReader stringReader0 = new StringReader("following::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descendant::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("substring-before");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"last\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      StringReader stringReader0 = new StringReader("true");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 111, 4, 111);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q'1BJ8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y& n");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<:4? WcyFqG`Pr@~}");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@4t_a[txt^AB>y!");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<=Mj{[#0jIpynI+Ri");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g<O;@CCjHoUZYFcUEw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HxRm~J0pX|5");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EEI.lkGn?Q>8}J,k\"Kv");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|mFe)Km7=[A=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lexcal error at line ");
      char[] charArray0 = new char[8];
      charArray0[2] = 'G';
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V3S");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<=Mj{[#0jIpynI+Ri");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'P<|LRGM$B");
      StringReader stringReader1 = new StringReader("&>I}`d3L ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[22];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '/';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 84, 67, (byte)15);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, 67, (byte)33);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V3S");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("true");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 11, 11, 11);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("div");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("true");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 11, 11, 11);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|Fe)Km7=[A=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("div");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1, 2290, 41, 11);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[4];
      char[] charArray1 = new char[29];
      charArray1[0] = 'x';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 4, 111, 111);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|mFe)Km7=[A=");
      char[] charArray0 = new char[7];
      charArray0[0] = 'h';
      charArray0[1] = 'R';
      charArray0[2] = '\'';
      charArray0[3] = 'h';
      charArray0[4] = ')';
      charArray0[5] = 't';
      charArray0[6] = 'q';
      stringReader0.read(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<=MjU[#0jIpynI+Ri");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V3S");
      StringReader stringReader1 = new StringReader("name");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q'1BJ8");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)46, (byte)46, 9);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)46, (byte)46);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("true");
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      stringReader0.read(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[)Pui{rH+#S");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2, 118, 123);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1178), 50, 81);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'A';
      charArray0[1] = 'H';
      charArray0[2] = ',';
      charArray0[3] = 'L';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)85, (byte)118, 51);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      char[] charArray1 = new char[29];
      charArray1[0] = '\u0087';
      charArray1[1] = 'E';
      charArray1[2] = 'B';
      charArray1[3] = '\u0087';
      charArray1[4] = '\u0087';
      charArray1[5] = 'E';
      charArray1[6] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      charArrayReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '\u0084';
      charArray0[1] = '[';
      charArray0[2] = 'G';
      charArray0[3] = '<';
      charArray0[4] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"string\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-1581), 543, 24);
      simpleCharStream0.BeginToken();
      stringReader0.mark(543);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)85, (byte)85, 51);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g;G1SQ6");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      char[] charArray0 = new char[22];
      charArray0[0] = '/';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte)73;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)60, (-1637), (-972));
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      char[] charArray1 = new char[29];
      charArray1[0] = 'x';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte) (-52);
      byteArray0[3] = (byte)108;
      byteArray0[4] = (byte) (-31);
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte)99;
      byteArray0[8] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (-957), (byte) (-62), (-563));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (byte)108, (-1653));
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 60, 60, 118);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'z';
      charArray0[1] = 'P';
      charArray0[2] = 'E';
      charArray0[3] = 'f';
      charArray0[4] = 'D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      StringReader stringReader0 = new StringReader("\"contains\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (byte)46, 41, 476);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\b");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '`';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0);
  }
}
