/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 00:18:50 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Locale;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1097), (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte) (-119);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("sAfI'vQ#di-pJ8cU*");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (byte) (-119), fieldTypeShort0, (byte)0, 1L, byteArray0, byteOrder0, (-1333));
      fieldTypeShort0.getValue(tiffField0);
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField((-1407), 0, fieldTypeShort0, (-1097), (-1097), byteArray0, byteOrder1, (byte) (-119));
      tiffField1.getDirectoryType();
      tiffField1.getTagName();
      // Undeclared exception!
      try { 
        tiffField1.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x1)", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51008, 51008, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 51008);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(51008, tiffField0.getDirectoryType());
      assertEquals(51008, tiffField0.getSortHint());
      assertEquals(51008, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeFloat0, 24, 24, byteArray0, byteOrder0, 24);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeDouble0, 4L, (-1L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)9;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)9;
      byteArray1[1] = (byte) (-15);
      byteArray1[2] = (byte)9;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)9, 50, fieldTypeByte0, 689L, 0, byteArray1, byteOrder0, 4249);
      fieldTypeByte0.getValue(tiffField0);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)103;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      tiffField0.getDescriptionWithoutValue();
      TiffField tiffField1 = new TiffField(50728, 0, fieldTypeByte0, 0, 50728, byteArray0, byteOrder1, (byte)9);
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      try { 
        tiffField1.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@65e0f4d4 for: 50728 (0xc628: AsShotNeutral): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0L, byteArray0, byteOrder0, (-865));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1807), 1456, fieldTypeRational0, 2233L, 661L, byteArray0, byteOrder0, 1456);
      tiffField0.getDoubleArrayValue();
      assertEquals(1456, tiffField0.getSortHint());
      assertEquals(1456, tiffField0.getDirectoryType());
      assertEquals((-1807), tiffField0.getTag());
      assertEquals(661, tiffField0.getOffset());
      assertEquals(17864, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-569), "jnm^@ofv");
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 0L, 0L, (byte[]) null, (ByteOrder) null, (-353));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-585), (-353));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(65535, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: jnm^@ofv", string0);
      assertNotNull(string0);
      assertEquals((-353), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeFloat0, 24, 24, byteArray0, byteOrder0, 24);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(24, 24);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getOffset());
      assertEquals(96, tiffField0.getBytesLength());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Unknown: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1303), fieldTypeDouble0, 2596L, (-316L), byteArray0, byteOrder0, (-1303));
      MockFile mockFile0 = new MockFile("='29>/i lco", "Unknown: ");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      boolean boolean0 = true;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      mockFileWriter0.close();
      mockPrintWriter0.print(3L);
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf("ProfileToneCurve", objectArray0);
      tiffField0.dump(printWriter0);
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 970, fieldTypeDouble0, 970, (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(7760, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(970, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)81;
      byteArray0[6] = (byte)30;
      byteArray0[7] = (byte) (-113);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 54, fieldTypeLong0, 1032L, 2631L, byteArray0, byteOrder0, 451);
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2045222520), "*}tY#K/)&2.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField(2132253267, (-2045222520), fieldTypeLong0, 3588L, (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2045222520), tiffField0.getDirectoryType());
      assertEquals(2132253267, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(14352, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-96), (-1), fieldTypeDouble0, 2224L, 1366L, byteArray0, byteOrder0, (-1789569705));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@870b89 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Unknown: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1303), fieldTypeDouble0, 2596L, (-316L), byteArray0, byteOrder0, (-1303));
      MockFile mockFile0 = new MockFile("='29>/i lco", "Unknown: ");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)31;
      byteArray1[1] = (byte) (-120);
      byteArray1[2] = (byte) (-120);
      byteArray1[3] = (byte)31;
      byteArray1[4] = (byte)31;
      byteArray1[5] = (byte)31;
      TiffField tiffField1 = new TiffField((-353), (byte) (-120), fieldTypeDouble0, (-316L), (-316L), byteArray1, byteOrder1, 0);
      assertEquals((-120), tiffField1.getDirectoryType());
      assertEquals((-353), tiffField1.getTag());
      assertEquals(0, tiffField1.getSortHint());
      
      String string0 = tiffField0.getTagName();
      assertEquals((-316), tiffField0.getOffset());
      assertEquals((-1303), tiffField0.getSortHint());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, int0);
      
      tiffField0.getFieldTypeName();
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "tV");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2069), (-1789569705), fieldTypeRational0, 5276L, (byte)0, byteArray0, byteOrder1, (byte) (-8));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      TiffField tiffField1 = new TiffField(1036, 50, fieldTypeRational0, 2882L, (-2464L), byteArray0, byteOrder0, (-1789569705));
      int[] intArray0 = tiffField1.getIntArrayValue();
      assertEquals((-2464), tiffField1.getOffset());
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteOrder0;
      objectArray0[2] = (Object) byteOrder1;
      objectArray0[3] = (Object) fieldTypeRational0;
      objectArray0[4] = (Object) fieldTypeRational0;
      objectArray0[5] = (Object) byteOrder1;
      objectArray0[6] = (Object) byteOrder0;
      objectArray0[7] = (Object) intArray0;
      objectArray0[8] = (Object) "";
      PrintWriter printWriter0 = mockPrintWriter0.format(")", objectArray0);
      tiffField0.dump(printWriter0);
      assertEquals((-8), tiffField0.getSortHint());
      assertEquals((-1789569705), tiffField0.getDirectoryType());
      assertEquals(42208, tiffField0.getBytesLength());
      assertEquals((-2069), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)76;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41494, 41494, fieldTypeRational0, 41494, 1L, byteArray0, byteOrder0, (-2871));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2626, 398);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(331952, tiffField0.getBytesLength());
      assertEquals(41494, tiffField0.getDirectoryType());
      assertEquals((-2871), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(41494, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-10);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(334, 334, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)23);
      tiffField0.getDoubleArrayValue();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(334, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(334, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(23, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2082, "o");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)65;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      TiffField tiffField0 = new TiffField((-3082), (-3082), fieldTypeLong0, 4L, 0L, byteArray0, byteOrder0, (byte)65);
      tiffField0.getDoubleArrayValue();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals((-3082), tiffField0.getTag());
      assertEquals((-3082), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33919, ")");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte) (-101);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33919, 33919, fieldTypeDouble0, 33919, 33919, byteArray0, byteOrder0, (-927));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-927), tiffField0.getSortHint());
      assertEquals(33919, tiffField0.getDirectoryType());
      assertEquals(33919L, tiffElement0.offset);
      assertEquals(33919, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@311d6dcb
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte)50;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)9;
      byteArray1[1] = (byte) (-15);
      byteArray1[2] = (byte)9;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)9, 50728, fieldTypeByte0, 689L, 0, byteArray1, byteOrder0, 4249);
      Object object0 = fieldTypeByte0.getValue(tiffField0);
      byteArray0[3] = (byte)58;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("fF3 }yLx=|e;K+/s");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) fieldTypeByte0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) byteArray1;
      mockPrintWriter0.format("-:&X`EiP", objectArray0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(4249, tiffField0.getSortHint());
      assertEquals(50728, tiffField0.getDirectoryType());
      assertEquals(689, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2479), (-2479), fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte)74);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-2479 (0xfffff651: Unknown Tag): ", string0);
      
      String string1 = tiffField0.getValueDescription();
      assertEquals("", string1);
      assertNotNull(string1);
      
      tiffField0.getIntArrayValue();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals((-2479), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1264, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2348, 1264, fieldTypeShort0, 178L, 262140L, byteArray0, byteOrder0, 2147441536);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2147441536, tiffField0.getSortHint());
      assertEquals(1264, tiffField0.getDirectoryType());
      assertEquals(356, tiffField0.getBytesLength());
      assertEquals(262140, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(2348, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)74;
      TiffField tiffField0 = new TiffField(20, (byte)74, fieldTypeShort0, 2985L, 0L, byteArray0, byteOrder0, 568);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("20 (0x14: Unknown Tag): ", string0);
      
      String string1 = tiffField0.getValueDescription();
      assertEquals(568, tiffField0.getSortHint());
      assertEquals(5970, tiffField0.getBytesLength());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2479), (-2479), fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte)74);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-2479 (0xfffff651: Unknown Tag): ", string0);
      
      tiffField0.getDoubleArrayValue();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2479), tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1160, (byte) (-1), fieldTypeDouble0, 1366L, (-1789569705), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDescriptionWithoutValue();
      tiffField0.getValueDescription();
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@706e468 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte)87;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-554), fieldTypeLong0, 4138L, 2987L, byteArray0, byteOrder0, (byte)87);
      tiffField0.getIntValueOrArraySum();
      tiffField0.getByteArrayValue();
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(16552, tiffField0.getBytesLength());
      assertEquals((-554), tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(2987, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0.ASCII, 200L, 200L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(19, "tV");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50879, (-3998), fieldTypeAscii0, 4L, (byte) (-8), byteArray0, byteOrder0, (byte) (-8));
      tiffField0.getDescriptionWithoutValue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      tiffField0.getValueDescription();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5300be8c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(625, 9, fieldTypeShort0, 46, 9, byteArray0, byteOrder0, (byte) (-14));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertNotNull(string0);
      
      TiffField tiffField1 = new TiffField(37379, 9, fieldTypeShort0, 37379, 46, byteArray0, byteOrder0, 9);
      int int0 = tiffField1.getIntValueOrArraySum();
      assertEquals(37379, tiffField1.getTag());
      assertEquals(46, tiffField1.getOffset());
      assertEquals(0, int0);
      assertEquals(74758, tiffField1.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 970, fieldTypeDouble0, 970, (-634L), byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(7760, tiffField0.getBytesLength());
      assertEquals(970, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-634), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeFloat0, 65535L, 5, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 2147475455, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 8);
      tiffField0.getStringValue();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
