/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 14:41:17 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-823));
      classWriter0.index = (-823);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "SenitLive", "SenitLive", "SenitLive", "SenitLive");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-823));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "SenitLive", "SenitLive", "SenitLive", "SenitLive");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("Deprecated", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(894);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2891), "@Pf*)Z?\"", "", "wheel.asm.Type", "u-Apq3-}");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1958);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "&(4of", "&(4of", "-1j[VC", "-1j[VC");
      Attribute attribute0 = new Attribute("AN']");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-3475), "+>+VOhQB", "^N< ds_Qip", "hx4RWl6|V2d> 6@YllR", "hx4RWl6|V2d> 6@YllR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1694));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1694), "", "[SOlw BH(/*qz]M9]DT", "]", "Signature");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(92);
      classWriter0.version = 92;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), ".", ".", ".", ".");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1680));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "\"T?", "$", "$", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2891), "java/lang/Class", "no;xL1]K&d,HuJ'q", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(92);
      classWriter0.version = 92;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), ".", ".", ".", ".");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(894);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(247);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f", "Bwi8XzCQnW}9f");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1918), "K.:KM?Y|X%s|Z", "qY|)&}\"'J", "]<KIlkxX#4ycnyT", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1680));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "\"T?", "$", "$", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(92);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1287), ".", ".", ".", ".");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
