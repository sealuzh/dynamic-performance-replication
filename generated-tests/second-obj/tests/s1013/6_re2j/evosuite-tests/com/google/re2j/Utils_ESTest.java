/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:28:11 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Utils.runeToString((-1451));
      assertEquals("\uFA55", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(0);
      boolean boolean1 = Utils.isalnum(0);
      assertTrue(boolean1 == boolean0);
      
      String string0 = Utils.runeToString(0);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utils.stringToRunes("");
      // Undeclared exception!
      try { 
        Utils.subarray((byte[]) null, (-2275), 619);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Utils.runeToString(1604);
      assertEquals("\u0644", string0);
      
      boolean boolean0 = Utils.isWordRune(1604);
      assertFalse(boolean0);
      
      int[] intArray0 = Utils.stringToRunes("\u0644");
      assertArrayEquals(new int[] {1604}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, 2345);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.indexOf(byteArray0, byteArray0, 70);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = Utils.isalnum((-2190));
      assertFalse(boolean0);
      
      int int0 = Utils.emptyOpContext((-2190), (-2190));
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = Utils.EMPTY_WORD_BOUNDARY;
      int int1 = Utils.emptyOpContext(16, 16);
      assertEquals(32, int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-1090));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-1126));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = Utils.unhex(8);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(3686);
      assertFalse(boolean0);
      
      int int0 = Utils.unhex(3686);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = Utils.stringToRunes("");
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, (-4660), 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4660
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(1540);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = Utils.runeToString(256);
      assertEquals("\u0100", string0);
      
      int[] intArray0 = new int[0];
      int[] intArray1 = Utils.subarray(intArray0, 256, 256);
      assertArrayEquals(new int[] {}, intArray1);
      assertNotSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = Utils.subarray(byteArray0, 11503, 11503);
      assertNotSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = Utils.unhex(48);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = Utils.emptyOpContext(95, (-477));
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(53);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = Utils.EMPTY_BEGIN_TEXT;
      byte[] byteArray0 = new byte[10];
      int int1 = Utils.indexOf(byteArray0, byteArray0, 4);
      assertEquals((-1), int1);
      
      String string0 = Utils.runeToString(4);
      assertEquals("\u0004", string0);
      
      int[] intArray0 = Utils.stringToRunes("\u0004");
      assertArrayEquals(new int[] {4}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = Utils.runeToString(95);
      assertEquals("_", string0);
      
      boolean boolean0 = Utils.isWordRune(95);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Utils.isalnum(90);
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 90);
      assertEquals("Z", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Utils.runeToString(95);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "_");
      Utils.escapeRune(stringBuilder0, 95);
      assertEquals("__", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = Utils.runeToString(10);
      assertEquals("\n", string0);
      
      int int0 = Utils.emptyOpContext(10, (-2189));
      assertEquals(43, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = Utils.EMPTY_END_TEXT;
      StringBuilder stringBuilder0 = new StringBuilder(8);
      stringBuilder0.chars();
      Utils.escapeRune(stringBuilder0, (-22));
      assertEquals("\\xffffffea", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(122);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = Utils.isalnum((-2190));
      assertFalse(boolean0);
      
      int int0 = Utils.emptyOpContext((-2190), 10);
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Utils.isalnum(65502);
      StringBuilder stringBuilder0 = new StringBuilder(65502);
      Utils.escapeRune(stringBuilder0, 12);
      assertEquals("\\f", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Utils.isalnum(2151);
      byte byte0 = (byte) (-1);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 2151);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = Utils.runeToString(71);
      assertEquals("G", string0);
      
      boolean boolean0 = Utils.isWordRune(71);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Utils.runeToString(10);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(90);
      Utils.escapeRune(stringBuilder0, 5);
      assertEquals("\\x05", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)66;
      byte[] byteArray1 = new byte[5];
      int int0 = Utils.indexOf(byteArray0, byteArray1, (-566));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[4] = (byte)66;
      byte[] byteArray1 = new byte[5];
      int int0 = Utils.indexOf(byteArray0, byteArray1, (-566));
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)66;
      byte[] byteArray1 = new byte[5];
      byteArray1[2] = (byte)0;
      int int0 = Utils.indexOf(byteArray0, byteArray1, (-566));
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = Utils.EMPTY_WORD_BOUNDARY;
      boolean boolean0 = Utils.isalnum('g');
      assertTrue(boolean0);
      
      String string0 = Utils.runeToString(102);
      assertEquals("f", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(57);
      assertTrue(boolean0);
      
      String string0 = Utils.runeToString(57);
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = Utils.unhex(97);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = Utils.runeToString(70);
      assertEquals("F", string0);
      
      int int0 = Utils.unhex(70);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 13);
      int int0 = Utils.EMPTY_NO_WORD_BOUNDARY;
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 9;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }
}
