/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 20:14:03 GMT 2019
 */

package org.firebirdsql.gds.impl.wire;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.BlobParameterBuffer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.EventHandle;
import org.firebirdsql.gds.EventHandler;
import org.firebirdsql.gds.IscBlobHandle;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.IscStmtHandle;
import org.firebirdsql.gds.IscSvcHandle;
import org.firebirdsql.gds.IscTrHandle;
import org.firebirdsql.gds.ServiceParameterBuffer;
import org.firebirdsql.gds.ServiceRequestBuffer;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.DbAttachInfo;
import org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl;
import org.firebirdsql.gds.impl.wire.BlobParameterBufferImp;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.EventHandleImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.ServiceParameterBufferImp;
import org.firebirdsql.gds.impl.wire.ServiceRequestBufferImp;
import org.firebirdsql.gds.impl.wire.WireXdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractJavaGDSImpl_ESTest extends AbstractJavaGDSImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 69);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      AbstractJavaGDSImpl.EventCoordinatorImp abstractJavaGDSImpl_EventCoordinatorImp0 = javaGDSImpl0.new EventCoordinatorImp(69, "PURE_JAVA", 69);
      assertNotNull(abstractJavaGDSImpl_EventCoordinatorImp0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(xSQLDA0.blr, 0, 3393);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket((XdrOutputStream) null, (XdrInputStream) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream();
      assertNotNull(xdrOutputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream();
      assertNotNull(xdrInputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket(xdrOutputStream0, xdrInputStream0, " or: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.XdrOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 5);
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse((isc_svc_handle_impl) null, (-782));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle((-757));
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertTrue(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, (-2685));
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertTrue(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_object(1);
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(1, isc_svc_handle_impl0.getResp_object());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, (-1100));
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(1, isc_svc_handle_impl0.getResp_object());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_blob_id((-1021L));
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals((-1021L), isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 0);
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals((-1021L), isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-2095246234));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals((-2095246234), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (-1871));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals((-2095246234), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("Unsupported encoding: ", (Integer) xSQLDA0.sqln, "B");
      assertEquals("Unsupported encoding: ", dbAttachInfo0.getServer());
      assertEquals("B", dbAttachInfo0.getFileName());
      assertEquals(0, dbAttachInfo0.getPort());
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, dbAttachInfo0, true, 0, 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2c44b56d
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer(129);
      assertEquals(129, (int)integer0);
      assertNotNull(integer0);
      
      isc_db_handle_impl0.setResp_object((-1124834622));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals((-1124834622), isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", integer0, "isc_info_sql_alias ");
      assertEquals(129, dbAttachInfo0.getPort());
      assertEquals("isc_info_sql_alias ", dbAttachInfo0.getFileName());
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.openSocket(isc_db_handle_impl0, dbAttachInfo0, true, 129, (-312));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2c44c50c
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      isc_db_handle_impl0.setODSMinorVersion((byte) (-74));
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals((-74), isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      try { 
        javaGDSImpl0.openSocket(isc_db_handle_impl0, dbAttachInfo0, false, 6, 5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@2c4626c3
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.nextOperation((XdrInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[9];
      int int0 = javaGDSImpl0.iscVaxInteger(byteArray0, (byte)23, (byte) (-89));
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      int int0 = javaGDSImpl0.iscVaxInteger(byteArray0, 0, (-90));
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[9];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, (-1));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, byteArray0, 43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(82);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(82, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, (TransactionParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(2);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(2, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, (TransactionParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(3051);
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isValid());
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(73);
      assertEquals(73, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceStart(isc_svc_handle_impl0, serviceRequestBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(3432);
      assertEquals(3432, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, serviceParameterBufferImp0, serviceRequestBufferImp0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBuffer serviceParameterBuffer0 = javaGDSImpl0.createServiceParameterBuffer();
      assertNotNull(serviceParameterBuffer0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(2);
      assertEquals(2, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, serviceParameterBuffer0, serviceRequestBufferImp0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      byte[] byteArray0 = new byte[9];
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, serviceParameterBufferImp0, (ServiceRequestBuffer) null, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(68);
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(1240);
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      
      try { 
        javaGDSImpl0.iscServiceAttach("PURE_JAVA", isc_svc_handle_impl0, (ServiceParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // service PURE_JAVA is not defined
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = (ServiceParameterBufferImp)javaGDSImpl0.createServiceParameterBuffer();
      assertNotNull(serviceParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceAttach("", isc_svc_handle_impl0, serviceParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // service  is not defined
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 6, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd(6);
      assertTrue(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 0, 3387);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(3);
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(3L, isc_blob_handle_impl0.getBlobId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 6, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-2L));
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals((-2L), isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 2048, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(1, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, 529L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      try { 
        javaGDSImpl0.iscQueueEvents((IscDbHandle) null, (EventHandle) null, eventHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventId(500);
      assertEquals((-1), eventHandleImp0.getSize());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals(500, eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      try { 
        javaGDSImpl0.iscQueueEvents((IscDbHandle) null, eventHandleImp0, eventHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertNull(eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventCount(1289);
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertNull(eventHandleImp0.getEventName());
      assertEquals(1289, eventHandleImp0.getEventCount());
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-2844));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-2844), isc_db_handle_impl0.getODSMajorVersion());
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(255L);
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(255L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-2L));
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals((-2L), isc_blob_handle_impl0.getBlobId());
      
      byte[] byteArray0 = new byte[5];
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      BlobParameterBuffer blobParameterBuffer0 = javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBuffer0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, (IscTrHandle) null, (IscBlobHandle) null, blobParameterBuffer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd((-1961));
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertTrue(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(1);
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(1L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2((IscDbHandle) null, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-1026));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals((-1026), isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscInteger(byteArray0, (byte)29, 2839);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd(2389);
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertTrue(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 2389);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(4);
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(4L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 5);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[4];
      Object[] objectArray0 = new Object[0];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, (-1116), (byte)16, objectArray0);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertNotNull(byteArray1);
      assertEquals(4, byteArray0.length);
      assertEquals(0, objectArray0.length);
      assertEquals(4, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      Object[] objectArray0 = new Object[8];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 3139, (-4354), objectArray0);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray1);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray0.length);
      assertEquals(8, objectArray0.length);
      assertEquals(1, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, (byte)64, 3, (Object[]) null);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertNotNull(byteArray1);
      assertEquals(5, byteArray0.length);
      assertEquals(5, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = javaGDSImpl0.iscExpandDpb((byte[]) null, (-2005214929), 130, (Object[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventId(2);
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals(2, eventHandleImp0.getEventId());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts(eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertNull(eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventCount(75);
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals(75, eventHandleImp0.getEventCount());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertNull(eventHandleImp0.getEventName());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts(eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.iscEventBlock((EventHandle) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("PURE_JAVA");
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventCount(290);
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals(290, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals(290, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, byteArray0, (-2086306298));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo((IscStmtHandle) null, byteArray0, (byte)104);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, (String) null, 14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "", 3841);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[5];
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, "M`-pv|I?+sD@", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, (String) null, (-90));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, "", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) null, (String) null, "isc_info_sql_alias ", 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(2);
      assertEquals(2, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "' at beginning or end of: ", "org.irbirdsql.gds.impl.wre.WireGDSFctoryPlugin$GD!Holder", 62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "", 3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-1662));
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals((-1662), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, 54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, (-356));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 1650);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(64);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(64, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 129);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 0, xSQLDA0, (-2014136919));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, (-251), (XSQLDA) null, (-1404));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SQLDA missing or incorrect version, or incorrect number/type of variables
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-1451966149));
      assertEquals((-1451966149), isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 1, xSQLDA0, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, byteArray0, 5, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(500);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(500, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (byte[]) null, 0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(1892);
      assertEquals(1892, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (byte[]) null, 1, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[4];
      isc_db_handle_impl0.setDialect(751);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(751, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, byteArray0, (int) (byte) (-115), (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "org.firebirdsql.gds.impl.wire.WireGDSFactoryPlugin$GDSHolder", "org.firebirdsql.gds.impl.wire.WireGDSFactoryPlugin$GDSHolder", 0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "PURE_JAVA", "", 1, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(133);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(133, isc_db_handle_impl0.getODSMajorVersion());
      
      Integer integer0 = new Integer(133);
      assertEquals(133, (int)integer0);
      assertNotNull(integer0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      int int0 = databaseParameterBufferImp0.getArgumentAsInt(133);
      assertEquals(0, int0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      assertNotSame(databaseParameterBufferImp0, databaseParameterBuffer0);
      assertNotSame(databaseParameterBuffer0, databaseParameterBufferImp0);
      assertTrue(databaseParameterBuffer0.equals((Object)databaseParameterBufferImp0));
      assertNotNull(databaseParameterBuffer0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(335544721);
      assertEquals(335544721, xSQLDA0.sqln);
      assertEquals(335544721, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, ":Rs\"Yf", ":Rs\"Yf", 6, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(1);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(1, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "//", "org.firebirdsql.gdUimpl.wire.WireGDSFctoryPlugin$GDSHolder", 550, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, (String) null, 0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "op_sql_response ", (-3530), (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "", 46, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2((IscTrHandle) null, isc_stmt_handle_impl0, 3064, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2((IscTrHandle) null, isc_stmt_handle_impl0, 0, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute((IscTrHandle) null, isc_stmt_handle_impl0, (-940), (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(42);
      assertEquals(42, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(42, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute((IscTrHandle) null, isc_stmt_handle_impl0, 42, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (String) null, ")3Da~e%@S}Rn", 71, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "", "", (-2086306298), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "op_drop_database ", (-3499), xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "f GzYoz", 0, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, (-286));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(32);
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(32, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, (-1961));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(60000);
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(60000, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(538);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(538, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-65));
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals((-65), isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(335544559);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(335544559, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(2906);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(2906, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(45);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(45, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(3);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(3, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-2676));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-2676), isc_db_handle_impl0.getProtocol());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(68);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(68, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-4838));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-4838), isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(44);
      assertEquals(44, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-1934));
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-1934), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 4);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      isc_db_handle_impl0.setODSMajorVersion(3279);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(3279, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, byteArray0, (-1934744534));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-2888));
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals((-2888), isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateDatabase("64`as+VdUgx+sh3oNYb", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase((String) null, (IscDbHandle) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("", (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of:335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-2752L));
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals((-2752L), isc_blob_handle_impl0.getBlobId());
      
      BlobParameterBufferImp blobParameterBufferImp0 = (BlobParameterBufferImp)javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd((-451));
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertTrue(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(1000L);
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(1000L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventId(5035);
      assertEquals(5035, eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(5035, eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.calculateCount();
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals(0, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals(0, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventCount(1);
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals(1, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-2582));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-2582), isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, (EventHandle) null);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-2582), isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, (byte[]) null, 3089);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[6];
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd((byte) (-2));
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertTrue(isc_blob_handle_impl0.isEof());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, (byte)54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-1542L));
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals((-1542L), isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, 124);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1093);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(1093, isc_db_handle_impl0.getODSMajorVersion());
      
      try { 
        javaGDSImpl0.iscAttachDatabase(":", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of::335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase("", (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of:335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo((String) null, (Integer) 0, ")3Da~e%@S}Rn");
      assertEquals(")3Da~e%@S}Rn", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals(0, dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) null, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-551));
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-551), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(",l_hsyh", (Integer) 2, "MfcE|D<d7f\"4q7%%", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer(69);
      assertEquals(69, (int)integer0);
      assertNotNull(integer0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(30);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(30, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("isc_info_ods_version:", integer0, "isc_info_ods_version:", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"isc_info_ods_version:\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer(335544332);
      assertEquals(335544332, (int)integer0);
      assertNotNull(integer0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("&<`, m@rfy", integer0, (String) null, (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("", (Integer) 4, "", (IscDbHandle) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(71);
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(71, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-1792));
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals((-1792), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-1529));
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals((-1529), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(452);
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(452, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-1911206314));
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals((-1911206314), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(39);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(39, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, (-1326));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_object(106);
      assertEquals(106, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_blob_id(1036L);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(1036L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(133);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(133, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(753);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(753, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-351));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals((-351), isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(0);
      assertEquals(0, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("M`-pv|I?+sD@");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("M`-pv|I?+sD@", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscEventCounts(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("M`-pv|I?+sD@", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals(0, eventHandleImp0.getEventCount());
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("M`-pv|I?+sD@", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals(0, eventHandleImp0.getEventCount());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, (DbAttachInfo) null, databaseParameterBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("org.firebirdsql.gds.impl.jni.isc_db_handle_impl", (Integer) 0, "org.firebirdsql.gds.impl.jni.isc_db_handle_impl");
      assertEquals("org.firebirdsql.gds.impl.jni.isc_db_handle_impl", dbAttachInfo0.getFileName());
      assertEquals("org.firebirdsql.gds.impl.jni.isc_db_handle_impl", dbAttachInfo0.getServer());
      assertEquals(0, dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message (getMessage() has thrown an exception)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer(2069);
      assertEquals(2069, (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo((String) null, integer0, "PURE_JAVA");
      assertEquals(2069, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_data_len((-1883667334));
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-1883667334), isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer(58);
      assertEquals(58, (int)integer0);
      assertNotNull(integer0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      assertNotNull(fBConnectionRequestInfo0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, "org.firebirdsql.gds.impl.jni.isc_svc_handle_impl", integer0, "", fBConnectionRequestInfo0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, (String) null, (Integer) 0, "isc_info_sql_alias ", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer(65);
      assertEquals(65, (int)integer0);
      assertNotNull(integer0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "", integer0, "q6QkFd_SQ,1oh9lx@`", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_object(47);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(47, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "PURE_JAVA", (Integer) null, "PURE_JAVA", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-1453));
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-1453), isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "PURE_JAVA", (Integer) null, "PURE_JAVA", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(61);
      assertEquals(61, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "PURE_JAVA", (Integer) null, "PURE_JAVA", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(44);
      assertEquals(44, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "t'5d?7cbF1hR#e", (Integer) null, (String) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(1461);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(1461, isc_db_handle_impl0.getDialect());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "PURE_JAVA", (Integer) null, "PURE_JAVA", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateIOLength((XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.addProcessName((DatabaseParameterBuffer) null);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.addProcessId((DatabaseParameterBuffer) null);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, (DbAttachInfo) null, true, (-1375), (-1375));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-654));
      assertEquals((-654), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("y;^NK9PU$!", integer0, "PURE_JAVA");
      assertEquals("y;^NK9PU$!", dbAttachInfo0.getServer());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals((-654), dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, dbAttachInfo0, false, (-410), 3387);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-654
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      WireXdrInputStream wireXdrInputStream0 = new WireXdrInputStream();
      assertNotNull(wireXdrInputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.nextOperation(wireXdrInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.XdrInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(byteArray0, (-1984), 570);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1984
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction((IscTrHandle) null, (IscDbHandle) null, transactionParameterBufferImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl cannot be cast to org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceAttach((String) null, isc_svc_handle_impl0, serviceParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob((IscBlobHandle) null, (-2585), (-2585));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, (IscDbHandle) null, 4);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment((IscBlobHandle) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, (byte[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscInteger(byteArray0, (-438), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -438
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment((IscBlobHandle) null, (-4805));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, (-1));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, (byte[]) null, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "('cD0DU2mQ}[c", (String) null, 4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "", "&:$", 300);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, byteArray0, 9, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, (String) null, (String) null, (-1123453032), xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2((IscTrHandle) null, isc_stmt_handle_impl0, (-438), xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      XSQLDA xSQLDA0 = new XSQLDA(859);
      assertEquals(1, xSQLDA0.version);
      assertEquals(859, xSQLDA0.sqln);
      assertEquals(859, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, byteArray0, 5, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, byteArray0, (-1291), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, "y", "readStatusVector arg:isc_arg_gds int: ", 0, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "NONE", "NONE", 153, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "Qk^HJu", 3, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "org.firebirdsql.gds.impl.wire.ParameterBufferBase$NumericArgument", 2147483645, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe((IscStmtHandle) null, (-2241));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo((IscDbHandle) null, byteArray0, (byte)50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("NONE", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob((IscBlobHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo((IscBlobHandle) null, byteArray0, (byte)40);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, (-1230));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscAttachDatabase("Trying to register a cancelled event handler", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-1717986916));
      assertEquals((-1717986916), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", integer0, "PURE_JAVA");
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals((-1717986916), dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1717986916
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, databaseParameterBuffer0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-1228));
      assertEquals((-1228), (int)integer0);
      assertNotNull(integer0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("NONE", integer0, "4jt&yXy~t8a;(&~w", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1228
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect((isc_db_handle_impl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.createEventHandle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.EventHandleImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-2974));
      assertEquals((-2974), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("\"", integer0, "\"");
      assertEquals("\"", dbAttachInfo0.getFileName());
      assertEquals("\"", dbAttachInfo0.getServer());
      assertEquals((-2974), dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2974
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer(9);
      assertEquals(9, (int)integer0);
      assertNotNull(integer0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, (String) null, integer0, "z-bRHyn[n)z|x&fahAI", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-1349));
      assertEquals((-1349), (int)integer0);
      assertNotNull(integer0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "readStatusVector arg:isc_arg_gds int: ", integer0, "OOREMOTE", databaseParameterBufferImp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1349
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(1012);
      assertEquals(1, xSQLDA0.version);
      assertEquals(1012, xSQLDA0.sqln);
      assertEquals(1012, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[3];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqlscale);
      assertEquals(0, xSQLVAR0.sqltype);
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVARArray0[1] = xSQLVAR0;
      xSQLVARArray0[2] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, (byte[]) null, (-4456));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      XSQLDA xSQLDA0 = new XSQLDA(65);
      assertEquals(1, xSQLDA0.version);
      assertEquals(65, xSQLDA0.sqln);
      assertEquals(65, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, byteArray0, (-1580), xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (byte[]) null, 3, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2(isc_tr_handle_impl0, (IscStmtHandle) null, 3, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase((DbAttachInfo) null, (IscDbHandle) null, (DatabaseParameterBuffer) databaseParameterBufferImp0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer(1622);
      assertEquals(1622, (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("S]xr]}N(S#:", integer0, "S]xr]}N(S#:");
      assertEquals(1622, dbAttachInfo0.getPort());
      assertEquals("S]xr]}N(S#:", dbAttachInfo0.getFileName());
      assertEquals("S]xr]}N(S#:", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.fbCancelOperation((IscDbHandle) null, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCancelEvents((IscDbHandle) null, (EventHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("Database name/path is required.");
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("Database name/path is required.", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      try { 
        javaGDSImpl0.iscQueueEvents((IscDbHandle) null, eventHandleImp0, (EventHandler) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getSize());
      assertNull(eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(995);
      assertEquals(995, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      byte[] byteArray0 = new byte[3];
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, (ServiceParameterBuffer) null, serviceRequestBufferImp0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      File file0 = MockFile.createTempFile("PURE_JAVA", "PURE_JAVA");
      assertEquals("/tmp/PURE_JAVA0PURE_JAVA", file0.toString());
      assertTrue(file0.exists());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getTotalSpace());
      assertTrue(file0.canRead());
      assertEquals("PURE_JAVA0PURE_JAVA", file0.getName());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canExecute());
      assertEquals("/tmp", file0.getParent());
      assertEquals(0L, file0.length());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.isAbsolute());
      assertNotNull(file0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      assertNotNull(mockFileOutputStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockFileOutputStream0);
      assertEquals("/tmp/PURE_JAVA0PURE_JAVA", file0.toString());
      assertTrue(file0.exists());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getTotalSpace());
      assertTrue(file0.canRead());
      assertEquals("PURE_JAVA0PURE_JAVA", file0.getName());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canExecute());
      assertEquals("/tmp", file0.getParent());
      assertEquals(0L, file0.length());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.isAbsolute());
      assertNotNull(xdrOutputStream0);
      
      isc_svc_handle_impl0.out = xdrOutputStream0;
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals("/tmp/PURE_JAVA0PURE_JAVA", file0.toString());
      assertTrue(file0.exists());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getTotalSpace());
      assertTrue(file0.canRead());
      assertEquals("PURE_JAVA0PURE_JAVA", file0.getName());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canExecute());
      assertEquals("/tmp", file0.getParent());
      assertEquals(0L, file0.length());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.isAbsolute());
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(656);
      assertEquals(656, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceStart(isc_svc_handle_impl0, serviceRequestBufferImp0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This database handle is invalid and cannot be used anymore.
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      File file0 = MockFile.createTempFile("PURE_JAVA", "PURE_JAVA");
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertEquals("PURE_JAVA0PURE_JAVA", file0.getName());
      assertEquals("/tmp", file0.getParent());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.length());
      assertEquals("/tmp/PURE_JAVA0PURE_JAVA", file0.toString());
      assertTrue(file0.exists());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertNotNull(file0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      assertNotNull(mockFileOutputStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockFileOutputStream0);
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertEquals("PURE_JAVA0PURE_JAVA", file0.getName());
      assertEquals("/tmp", file0.getParent());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.length());
      assertEquals("/tmp/PURE_JAVA0PURE_JAVA", file0.toString());
      assertTrue(file0.exists());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertNotNull(xdrOutputStream0);
      
      isc_svc_handle_impl0.out = xdrOutputStream0;
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertEquals("PURE_JAVA0PURE_JAVA", file0.getName());
      assertEquals("/tmp", file0.getParent());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.canWrite());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.length());
      assertEquals("/tmp/PURE_JAVA0PURE_JAVA", file0.toString());
      assertTrue(file0.exists());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscServiceDetach((IscSvcHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceAttach("Q5", (IscSvcHandle) null, serviceParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(1012);
      assertEquals(1, xSQLDA0.version);
      assertEquals(1012, xSQLDA0.sqld);
      assertEquals(1012, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[3];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqlscale);
      assertEquals(0, xSQLVAR0.sqltype);
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      AbstractJavaGDSImpl.calculateBLR((XSQLDA) null);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse((isc_db_handle_impl) null, 0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      File file0 = MockFile.createTempFile("jdbc:firebird:oo:", "PURE_JAVA");
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertEquals("jdbc:firebird:oo:0PURE_JAVA", file0.getName());
      assertEquals("/tmp", file0.getParent());
      assertTrue(file0.canExecute());
      assertEquals("/tmp/jdbc:firebird:oo:0PURE_JAVA", file0.toString());
      assertTrue(file0.isFile());
      assertTrue(file0.exists());
      assertTrue(file0.canRead());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.length());
      assertFalse(file0.isDirectory());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.isAbsolute());
      assertNotNull(file0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      assertNotNull(mockFileOutputStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockFileOutputStream0);
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertEquals("jdbc:firebird:oo:0PURE_JAVA", file0.getName());
      assertEquals("/tmp", file0.getParent());
      assertTrue(file0.canExecute());
      assertEquals("/tmp/jdbc:firebird:oo:0PURE_JAVA", file0.toString());
      assertTrue(file0.isFile());
      assertTrue(file0.exists());
      assertTrue(file0.canRead());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.length());
      assertFalse(file0.isDirectory());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.isAbsolute());
      assertNotNull(xdrOutputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket(xdrOutputStream0, (XdrInputStream) null, "jdbc:firebird:oo:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "ISO8859_3", "ISO8859_3", 5, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "v!DZmfE\"VoW%,:", (String) null, 4, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2((IscDbHandle) null, isc_tr_handle_impl0, isc_blob_handle_impl0, (BlobParameterBuffer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscInteger(xSQLDA0.blr, 0, 472);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      int int0 = javaGDSImpl0.iscInteger(byteArray0, (-1911438740), (-1911438740));
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(xSQLDA0.blr, 0, 3393);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      int int0 = javaGDSImpl0.iscVaxInteger(byteArray0, 0, 0);
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertTrue(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlSetCursorName((IscStmtHandle) null, "2Ic+HUrSJ<Mr", (-1082511014));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertTrue(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 496);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[5];
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) null, byteArray0, 3259);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlFreeStatement((IscStmtHandle) null, 249);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(43);
      assertEquals(43, xSQLDA0.sqld);
      assertEquals(43, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqltype);
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertEquals(0, xSQLVAR0.sqlscale);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateIOLength(xSQLDA0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      AbstractJavaGDSImpl.calculateIOLength(xSQLDA0);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch((IscStmtHandle) null, 2479, xSQLDA0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(335544332);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(byteArrayOutputStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(byteArrayOutputStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "#yNaOMNE.|q  p", 335544332, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (byte[]) null, 0, (XSQLDA) null, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement((IscDbHandle) null, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, (byte[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      byte[] byteArray0 = new byte[3];
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscPrepareTransaction2((IscTrHandle) null, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, (byte[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, (IscDbHandle) null, (-1855L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction((IscTrHandle) null, isc_db_handle_impl0, 0L);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setState(4);
      assertEquals(4, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, (TransactionParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, (IscDbHandle) null, (TransactionParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.iscStartTransaction((IscTrHandle) null, isc_db_handle_impl0, (TransactionParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDropDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(335544332);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(byteArrayOutputStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(byteArrayOutputStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDetachDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      javaGDSImpl0.addProcessId(databaseParameterBufferImp0);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      javaGDSImpl0.addProcessName(databaseParameterBufferImp0);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase((String) null, (Integer) 0, "u#/!s_i[", (IscDbHandle) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      TransactionParameterBuffer transactionParameterBuffer0 = javaGDSImpl0.newTransactionParameterBuffer();
      assertNotNull(transactionParameterBuffer0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceParameterBuffer serviceParameterBuffer0 = javaGDSImpl0.createServiceParameterBuffer();
      assertNotNull(serviceParameterBuffer0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer((-4));
      assertEquals((-4), serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      byte[] byteArray0 = new byte[2];
      try { 
        javaGDSImpl0.iscServiceQuery((IscSvcHandle) null, serviceParameterBuffer0, serviceRequestBufferImp0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      BlobParameterBuffer blobParameterBuffer0 = javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, (IscTrHandle) null, (IscBlobHandle) null, blobParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer((-580));
      assertEquals((-580), serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceStart((IscSvcHandle) null, serviceRequestBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "PURE_JAVA", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, (String) null, (-2014097069), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, (IscStmtHandle) null, 0, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind((IscStmtHandle) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = AbstractJavaGDSImpl.sql_prepare_info15;
      assertNotNull(byteArray0);
      assertEquals(13, byteArray0.length);
      
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 0, 0, (Object[]) null);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(13, byteArray0.length);
      assertEquals(13, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, (BlobParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) null, "NONE", (-2296));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message (getMessage() has thrown an exception)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase((String) null, (IscDbHandle) null, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("");
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("|UVGc=MTH", (Integer) null, "org.firebirdsql.gds.impl.wire.ParameterBufferBase$ByteArrayArgument", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts((EventHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      try { 
        javaGDSImpl0.iscServiceStart(isc_svc_handle_impl0, (ServiceRequestBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket((XdrOutputStream) null, (XdrInputStream) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      AbstractJavaGDSImpl.EventCoordinatorImp abstractJavaGDSImpl_EventCoordinatorImp0 = null;
      try {
        abstractJavaGDSImpl_EventCoordinatorImp0 = javaGDSImpl0.new EventCoordinatorImp(69, "PURE_JAVA", 69);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      AbstractJavaGDSImpl.EventGlob abstractJavaGDSImpl_EventGlob0 = new AbstractJavaGDSImpl.EventGlob(eventHandler0, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(abstractJavaGDSImpl_EventGlob0);
      
      EventHandleImp eventHandleImp1 = abstractJavaGDSImpl_EventGlob0.getEventHandle();
      assertSame(eventHandleImp0, eventHandleImp1);
      assertSame(eventHandleImp1, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp1.getEventId());
      assertEquals((-1), eventHandleImp1.getEventCount());
      assertEquals((-1), eventHandleImp1.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp1.getEventName());
      assertNotNull(eventHandleImp1);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventHandleImp eventHandleImp0 = new EventHandleImp("('cD0DU2mQ}[c");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("('cD0DU2mQ}[c", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      AbstractJavaGDSImpl.EventGlob abstractJavaGDSImpl_EventGlob0 = new AbstractJavaGDSImpl.EventGlob(eventHandler0, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("('cD0DU2mQ}[c", eventHandleImp0.getEventName());
      assertNotNull(abstractJavaGDSImpl_EventGlob0);
      
      EventHandler eventHandler1 = abstractJavaGDSImpl_EventGlob0.getEventHandler();
      assertSame(eventHandler1, eventHandler0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("('cD0DU2mQ}[c", eventHandleImp0.getEventName());
      assertNotNull(eventHandler1);
  }
}
