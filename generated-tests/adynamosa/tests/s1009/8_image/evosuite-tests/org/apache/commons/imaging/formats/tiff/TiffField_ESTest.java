/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 11:58:30 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)38;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)38, (-1228), fieldTypeShort0, 4810L, 31360L, byteArray0, byteOrder0, 1717986918);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(9728, int0);
      assertEquals(38, tiffField0.getTag());
      assertEquals((-1228), tiffField0.getDirectoryType());
      assertEquals(31360, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2141451389), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(702, 1, fieldTypeByte0.SLONG, 1L, 1046L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(702, tiffField0.getTag());
      assertEquals(1046, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(840, "/g7");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, (byte)50, fieldTypeDouble0, (byte)50, 684L, byteArray0, byteOrder0, 1);
      tiffField0.getValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(684, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-78), fieldTypeLong0, (-8583441816L), (byte) (-78), byteArray0, (ByteOrder) null, 50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-78), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-78), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(400, 1355, fieldTypeLong0.SBYTE, 16376L, 50, byteArray0, byteOrder0, (-1));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tagInfo0.tag);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1355, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(250, (-393), fieldTypeLong0, 250, 0L, byteArray0, byteOrder0, (byte)7);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals((-393), tiffField0.getDirectoryType());
      assertEquals(250, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-83), (byte)0, fieldTypeRational0, 65864L, 1L, byteArray0, byteOrder0, (byte) (-108));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-83), int0);
      assertEquals((-108), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(868, "The array of suffixes must not be null");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4338), 2571, fieldTypeAscii0, 868, 868, byteArray0, byteOrder0, 868);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(868, tiffField0.getSortHint());
      assertEquals(868, tiffField0.getOffset());
      assertEquals((-4338), tiffField0.getTag());
      assertEquals(2571, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2141451389), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(702, 1, fieldTypeByte0.SLONG, 1L, 1046L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(702, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1046, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1228), 3046, fieldTypeShort0, 31360L, 3302L, byteArray0, byteOrder0, 243);
      int int0 = tiffField0.getSortHint();
      assertEquals(3046, tiffField0.getDirectoryType());
      assertEquals(243, int0);
      assertEquals((-1228), tiffField0.getTag());
      assertEquals(3302, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)59, (byte)0, fieldTypeFloat0.SBYTE, (byte)59, 5697L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(5697, int0);
      assertEquals(59, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)59, (byte)42, fieldTypeByte0.FLOAT, (byte)42, (-333L), byteArray0, byteOrder0, 1982292598);
      int int0 = tiffField0.getOffset();
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getTag());
      assertEquals((-333), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-62);
      byteArray0[4] = (byte) (-62);
      TiffField tiffField0 = new TiffField((-3477), (-1950), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).DOUBLE).RATIONAL, 65, 65, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3477), tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(65, tiffField0.getOffset());
      assertEquals((-1950), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-18);
      TiffField tiffField0 = new TiffField((-1427), 6, fieldTypeByte0.LONG, 17728L, 4L, byteArray0, byteOrder0, 4271);
      tiffField0.getIntValueOrArraySum();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(4271, tiffField0.getSortHint());
      assertEquals((-1427), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1, 4L, byteArray0, (ByteOrder) null, (-1));
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)79;
      TiffField tiffField0 = new TiffField((-3238), (-3238), fieldTypeLong0, 1, 2147483647L, byteArray0, (ByteOrder) null, (-3238));
      tiffField0.getIntValue();
      assertEquals((-3238), tiffField0.getSortHint());
      assertEquals((-3238), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-3238), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-459), (String) null);
      TiffField tiffField0 = new TiffField((byte)0, (byte)18, fieldTypeFloat0, 8L, 4L, byteArray0, byteOrder0, (byte)18);
      tiffField0.getFieldTypeName();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2145860454), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147478356, 2073432487, fieldTypeFloat0, (-1027L), 2196L, byteArray0, byteOrder0, 2143037512);
      tiffField0.getFieldTypeName();
      assertEquals(2196, tiffField0.getOffset());
      assertEquals(2147478356, tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(2143037512, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 2143037512, (FieldType) null, (-2167L), 41484, byteArray0, byteOrder0, 3);
      tiffField0.getFieldType();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2143037512, tiffField0.getDirectoryType());
      assertEquals(41484, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 853, fieldTypeDouble0, 147L, 147L, byteArray0, byteOrder0, 1374);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(147, tiffField0.getOffset());
      assertEquals(1374, tiffField0.getSortHint());
      assertEquals(853, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1915), "");
      TiffField tiffField0 = new TiffField(2147478356, (-892), fieldTypeByte0, 872, 2604L, byteArray0, byteOrder0, 2146834665);
      tiffField0.getFieldType();
      assertEquals(2147478356, tiffField0.getTag());
      assertEquals((-892), tiffField0.getDirectoryType());
      assertEquals(2604, tiffField0.getOffset());
      assertEquals(2146834665, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)47;
      TiffField tiffField0 = new TiffField(1462, (byte) (-62), fieldTypeFloat0, 1L, 11, byteArray0, byteOrder0, 1462);
      tiffField0.getDoubleValue();
      assertEquals(1462, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getOffset());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(1462, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-62);
      TiffField tiffField0 = new TiffField(1462, (byte) (-62), fieldTypeFloat0, 1L, 11, byteArray0, byteOrder0, 1462);
      tiffField0.getDoubleValue();
      assertEquals(1462, tiffField0.getTag());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(1462, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)59, (byte)0, fieldTypeFloat0.BYTE, (byte)59, 5697L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5697, tiffField0.getOffset());
      assertEquals(59, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3660, "?iP");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-4753), (-4753), fieldTypeAscii0, (-734L), 1L, byteArray0, (ByteOrder) null, (-2378));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-4753), int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-4753), tiffField0.getTag());
      assertEquals((-2378), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2672), fieldTypeShort0, 0, (-2672), (byte[]) null, byteOrder0, (-3368));
      tiffField0.getCount();
      assertEquals((-3368), tiffField0.getSortHint());
      assertEquals((-2672), tiffField0.getOffset());
      assertEquals((-2672), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(325, (byte)42, fieldTypeByte0, 334, (-362L), byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals((-362), tiffField0.getOffset());
      assertEquals(325, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 41497);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(41497, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "=");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeDouble0, (byte) (-1), (byte) (-62), byteArray0, byteOrder0, (byte)78);
      tiffField0.getBytesLength();
      assertEquals((-62), tiffField0.getOffset());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (-2511L), 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-876), 0, fieldTypeFloat0, 208L, (byte)127, byteArray0, byteOrder0, (byte)44);
      tiffField0.getByteOrder();
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-876), tiffField0.getTag());
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 1646);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1646, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-899), (FieldType) null, 194, 2635L, (byte[]) null, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(35, 1, fieldTypeRational0, (-79L), (-79L), byteArray0, (ByteOrder) null, (-3296));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 28, fieldTypeFloat0.RATIONAL, (-7L), 1, byteArray0, byteOrder0, (byte)47);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(94, "&DA\"7a=Zt5-Q=39B7{");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 1717986918, fieldTypeRational0, (-4993L), 2507L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(517, 517, (FieldType) null, 899L, 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-926), (-291), fieldTypeShort0, 2147483647L, 34724, (byte[]) null, byteOrder0, (byte)48);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147441556, (-1), fieldTypeByte0.DOUBLE, (-4514L), 4L, byteArray0, byteOrder0, 61);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1812), (-1812), (FieldType) null, (-1812), (-1812), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 41497);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(41485, (-264), fieldTypeLong0, (-288L), 2106L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)18, fieldTypeByte0.FLOAT, 8L, 4L, byteArray0, byteOrder0, (byte)18);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(334, (-1610612735), fieldTypeByte0, (-351L), (-351L), byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 41497);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown Tag (0x0)");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.io.filefilter.SuffixFileFilter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-740), 315, fieldTypeByte0, 8375186224L, 315, byteArray0, byteOrder0, (byte)18);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "L3'%K]");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147437251, (-2141451389), fieldTypeByte0, 3328L, (-2141451389), byteArray0, byteOrder0, (-2141451389));
      tiffField0.getByteArrayValue();
      assertEquals(2147437251, tiffField0.getTag());
      assertEquals((-2141451389), tiffField0.getDirectoryType());
      assertEquals((-2141451389), tiffField0.getOffset());
      assertEquals((-2141451389), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "L3'%K]");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147437251, (-2141451389), fieldTypeByte0, 3328L, (-2141451389), byteArray0, byteOrder0, (-2141451389));
      tiffField0.getFieldType();
      assertEquals((-2141451389), tiffField0.getOffset());
      assertEquals(2147437251, tiffField0.getTag());
      assertEquals((-2141451389), tiffField0.getDirectoryType());
      assertEquals((-2141451389), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 617, fieldTypeDouble0, 617, (byte) (-51), byteArray0, byteOrder0, (-1815));
      int int0 = tiffField0.getTag();
      assertEquals((-51), tiffField0.getOffset());
      assertEquals((-1815), tiffField0.getSortHint());
      assertEquals(617, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, (-1081L), 1, byteArray0, byteOrder0, (byte)4);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "L3'%K]");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2586L, 0, byteArray0, byteOrder0, (-1222));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1222), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1462, (byte) (-62), fieldTypeFloat0, 1L, 11, byteArray0, byteOrder0, 1462);
      tiffField0.getDoubleValue();
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(1462, tiffField0.getSortHint());
      assertEquals(1462, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-865), 41986, fieldTypeByte0.RATIONAL, (byte)0, 14L, byteArray0, byteOrder0, 2228);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1427), 6, fieldTypeByte0.SLONG, 17728L, 4L, byteArray0, byteOrder0, 4271);
      tiffField0.getIntValueOrArraySum();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1427), tiffField0.getTag());
      assertEquals(4271, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3477), (-1950), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).DOUBLE).RATIONAL, 65, 65, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1318), 1, fieldTypeLong0, 1, 1198L, byteArray0, byteOrder0, (-1318));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1318), tiffField0.getSortHint());
      assertEquals((-1318), tiffField0.getTag());
      assertEquals(1198, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(74, "],`rI");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-727), 17, fieldTypeAscii0, 2999L, (-1429L), byteArray0, byteOrder0, 2141501799);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@4cc909c0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "L3'%K]");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147437251, (-2141451389), fieldTypeByte0, 3328L, 1198L, byteArray0, byteOrder0, 50728);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@166ed5a4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2640, (-2146959998), fieldTypeLong0.FLOAT, 743L, 2147437251L, byteArray0, byteOrder0, 700);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2146959998), tiffField0.getDirectoryType());
      assertEquals(2640, tiffField0.getTag());
      assertEquals(700, tiffField0.getSortHint());
      assertEquals(2147437251, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-2130964542), fieldTypeFloat0, 51022, (byte)1, byteArray0, byteOrder0, 51022);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2130964542), tiffField0.getDirectoryType());
      assertEquals(51022, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2141451389), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeByte0.LONG, 2280L, (byte)87, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(87, tiffField0.getOffset());
      assertEquals(40, tiffField0.getTag());
      assertEquals(40, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2141451389), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2141451389), (-2141451389), fieldTypeByte0.DOUBLE, (-2141451389), (-2141451389), byteArray0, byteOrder0, (-921));
      tiffField0.getDoubleArrayValue();
      assertEquals((-921), tiffField0.getSortHint());
      assertEquals((-2141451389), tiffField0.getOffset());
      assertEquals((-2141451389), tiffField0.getDirectoryType());
      assertEquals((-2141451389), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(3369, 3369, fieldTypeShort0, 72, 832L, byteArray0, byteOrder0, 72);
      tiffField0.getDoubleArrayValue();
      assertEquals(832, tiffField0.getOffset());
      assertEquals(72, tiffField0.getSortHint());
      assertEquals(3369, tiffField0.getTag());
      assertEquals(3369, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (-498), fieldTypeRational0, 255L, (-2629L), byteArray0, byteOrder0, (byte)50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-498), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2629), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-3238), (-3238), fieldTypeLong0, 1, 2147483647L, byteArray0, (ByteOrder) null, (-3238));
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-3238), tiffField0.getDirectoryType());
      assertEquals((-3238), tiffField0.getSortHint());
      assertEquals((-3238), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1427), 6, fieldTypeByte0.SLONG, 17728L, 4L, byteArray0, byteOrder0, 4271);
      tiffField0.getIntArrayValue();
      assertEquals(4271, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1427), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-264), 34724, fieldTypeShort0, 4L, (-72), byteArray0, byteOrder0, 33002);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(33002, tiffField0.getSortHint());
      assertEquals((-72), tiffField0.getOffset());
      assertEquals(34724, tiffField0.getDirectoryType());
      assertEquals((-264), tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-2130964542), fieldTypeFloat0, 51022, (byte)1, byteArray0, byteOrder0, 51022);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4b1b99cd for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)112, (-1), fieldTypeRational0, 4L, (-2147483648L), byteArray0, byteOrder0, (-609));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-865), 41986, fieldTypeByte0.RATIONAL, (byte)0, 14L, byteArray0, byteOrder0, 2228);
      tiffField0.getIntArrayValue();
      assertEquals((-865), tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(41986, tiffField0.getDirectoryType());
      assertEquals(2228, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1462, (byte) (-62), fieldTypeFloat0, 1L, 11, byteArray0, byteOrder0, 1462);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(1462, tiffField0.getTag());
      assertEquals(1462, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(74, "],`rI");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte) (-79);
      byteArray0[6] = (byte) (-79);
      TiffField tiffField0 = new TiffField((-727), 17, fieldTypeAscii0, 2999L, (-1429L), byteArray0, byteOrder0, 2141501799);
      String string0 = tiffField0.getStringValue();
      assertEquals((-727), tiffField0.getTag());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(2141501799, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1429), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(74, "],`rI");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-727), 17, fieldTypeAscii0, 2999L, (-1429L), byteArray0, byteOrder0, 2141501799);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@5d4ea615
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(840, "/g7");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, (byte)50, fieldTypeDouble0, (byte)50, 684L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(684, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x7fffffff)", string0);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-78), fieldTypeLong0, (-8583441816L), (byte) (-78), byteArray0, (ByteOrder) null, 50);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-78), tiffField0.getOffset());
      assertEquals("GPSProcessingMethod", string0);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-78), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-291), 34671, fieldTypeShort0.FLOAT, 33002, 20L, byteArray0, byteOrder0, 33002);
      String string0 = tiffField0.toString();
      assertEquals(34671, tiffField0.getDirectoryType());
      assertEquals("-291 (0xfffffedd: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (33002 Float)", string0);
      assertEquals(33002, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(23, "DefaultImageColor");
      TiffField tiffField0 = new TiffField(23, 34661, fieldTypeByte0, 255L, (byte)50, byteArray0, byteOrder0, 34661);
      String string0 = tiffField0.toString();
      assertEquals(34661, tiffField0.getSortHint());
      assertEquals(34661, tiffField0.getDirectoryType());
      assertEquals("23 (0x17: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (72) (255 DefaultImageColor)", string0);
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)59, (byte)42, fieldTypeByte0.FLOAT, (byte)42, (-333L), byteArray0, byteOrder0, 1982292598);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(59, tiffField0.getTag());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals((-333), tiffField0.getOffset());
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals(42L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2317), (-2562), fieldTypeDouble0, 248L, (-498), byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-498), tiffField0.getOffset());
      assertEquals(248L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-2317), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2562), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)59, (byte)0, fieldTypeFloat0.BYTE, (byte)59, 5697L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5697, tiffField0.getOffset());
      assertEquals(59, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(59L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(34724, 34724, fieldTypeShort0.SLONG, 33002, (-291), byteArray0, byteOrder0, (-291));
      String string0 = tiffField0.toString();
      assertEquals((-291), tiffField0.getSortHint());
      assertEquals("34724 (0x87a4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (33002 SLong)", string0);
      assertEquals((-291), tiffField0.getOffset());
      assertEquals(34724, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42112, (-432), fieldTypeLong0, 42112, 0L, byteArray0, byteOrder0, (-432));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(42112, tiffField0.getTag());
      assertEquals((-432), tiffField0.getSortHint());
      assertEquals((-432), tiffField0.getDirectoryType());
      assertEquals(42112L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(5, (-291), fieldTypeShort0, 1837L, 3499L, byteArray0, byteOrder0, 32);
      tiffField0.dump();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(3499, tiffField0.getOffset());
      assertEquals(1837L, tiffField0.getCount());
      assertEquals((-291), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)112, (byte)112, fieldTypeRational0.SHORT, (byte)112, 3317L, byteArray0, byteOrder0, (byte)34);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(253, (byte)18, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).FLOAT).SSHORT, (byte)18, 2147483647L, byteArray0, byteOrder0, 253);
      String string0 = tiffField0.getValueDescription();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(253, tiffField0.getSortHint());
      assertEquals(253, tiffField0.getTag());
      assertEquals(18L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2019), (byte)72, fieldTypeAscii0, 2147483647L, 0, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals((-2019), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      assertEquals(2147483647L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3660, "?iP");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-79), (-2147483646), fieldTypeAscii0, 165968L, 1L, byteArray0, (ByteOrder) null, (byte) (-79));
      tiffField0.dump();
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(165968, tiffField0.getBytesLength());
      assertEquals((-79), tiffField0.getTag());
      assertEquals(165968L, tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(93, (-1), fieldTypeByte0.ASCII, 203112L, 1685L, byteArray0, byteOrder0, (-684));
      MockFile mockFile0 = new MockFile("", "n|Z%");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals((-684), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1685, tiffField0.getOffset());
      assertEquals(71L, mockFile0.length());
      assertEquals(93, tiffField0.getTag());
      assertEquals(203112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(334, (-1610612735), fieldTypeByte0, (-351L), (-351L), byteArray0, (ByteOrder) null, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(334, tiffField0.getTag());
      assertEquals((-351), tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1610612735), 2670, fieldTypeByte0, 362, 362, byteArray0, (ByteOrder) null, (byte)6);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2670, tiffField0.getDirectoryType());
      assertEquals((-1610612735), tiffField0.getTag());
      assertEquals(362L, tiffElement0.offset);
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42112, (-432), fieldTypeLong0, 42112, 0L, byteArray0, byteOrder0, (-432));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50982, (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-432), tiffField0.getSortHint());
      assertEquals(42112, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-432), tiffField0.getDirectoryType());
      assertEquals(42112L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1351), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2282), (-1351), fieldTypeAscii0, (-1351), (-2282), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2282), tiffField0.getTag());
      assertEquals((-1351), tiffField0.getDirectoryType());
      assertEquals((-2282), tiffField0.getOffset());
      assertEquals((-1351), tiffField0.getBytesLength());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1982292598, (-2146679948), fieldTypeByte0.SHORT, 31360L, 1982292598, byteArray0, byteOrder0, (-2146679948));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(31360L, tiffField0.getCount());
      assertEquals(1982292598, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(1982292598, tiffField0.getOffset());
      assertEquals((-2146679948), tiffField0.getSortHint());
      assertEquals((-2146679948), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 55L, 50, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)59, 324, fieldTypeFloat0.BYTE, 1L, 0, byteArray0, byteOrder0, (byte)59);
      int int0 = tiffField0.getOffset();
      assertEquals(324, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)59, 324, fieldTypeFloat0.BYTE, 1L, 0, byteArray0, byteOrder0, (byte)59);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(324, int0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 41485);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2141451389), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2141451389), (-1), fieldTypeByte0.LONG, 0L, 1L, byteArray0, byteOrder0, (-1363));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2141451389), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-1363), int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)59, 324, fieldTypeFloat0.UNDEFINED, 1L, 0, byteArray0, byteOrder0, (byte)59);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("59 (0x3b: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(324, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 853, fieldTypeDouble0, 147L, 147L, byteArray0, byteOrder0, 1374);
      StringWriter stringWriter0 = new StringWriter((byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("0 (0x0: Unknown Tag):  (147 )\n", stringWriter0.toString());
      assertEquals(1374, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1462, (byte) (-62), fieldTypeFloat0, 1L, 11, byteArray0, byteOrder0, 1462);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1462, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(11, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(1462, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)59, (byte)42, fieldTypeByte0.FLOAT, (byte)42, (-333L), byteArray0, byteOrder0, 1982292598);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1610612735), 1982292598);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertNotNull(string0);
      assertEquals(59, tiffField0.getTag());
      assertEquals(168, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals((-333), tiffField0.getOffset());
  }
}
