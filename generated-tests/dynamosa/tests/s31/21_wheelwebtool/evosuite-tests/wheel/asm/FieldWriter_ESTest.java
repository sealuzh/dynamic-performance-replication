/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 20:04:20 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"M6_", " }>Ri\"M6_", (String) null, " }>Ri\"M6_");
      classWriter0.visit(49, (-2785), "", "", (String) null, (String[]) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      classWriter0.index = (-2785);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "System", "/`Tw4y?w8@}", "", "D1/a{%V>_mX");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"M6_", " }>Ri\"M6_", (String) null, " }>Ri\"M6_");
      classWriter0.visit(49, (-2785), "", "", (String) null, (String[]) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      classWriter0.index = (-2785);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "System", "/`Tw4y?w8@}", "", "D1/a{%V>_mX");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"M6_", " }>Ri\"M6_", (String) null, " }>Ri\"M6_");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "9kP(YgzvQFbQZ(", "9kP(YgzvQFbQZ(", "9kP(YgzvQFbQZ(", "9kP(YgzvQFbQZ(");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "W]q4w)", "W]q4w)", "W]q4w)", "W]q4w)");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "9kP(YgzvQFbQa(", "9kP(YgzvQFbQa(", (String) null, "9kP(YgzvQFbQa(");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "9kP(YgzvQFbQZ(", "9kP(YgzvQFbQZ(", "9kP(YgzvQFbQZ(", "9kP(YgzvQFbQZ(");
      Attribute attribute0 = new Attribute("9kP(YgzvQFbQZ(");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(635);
      byteVector0.length = (-496);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "_fm.", "_fm.", "_fm.", "_fm.");
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-52), "", "", "", "Cb5@2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "#A%WRL! h=Idg']_", "#A%WRL! h=Idg']_", "#A%WRL! h=Idg']_", "#A%WRL! h=Idg']_");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "#A%WRL! h=Idg']_", "#A%WRL! h=Idg']_", "#A%WRL! h=Idg']_", fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"M6_", "&'", ",4+z]c", " }>Ri\"M6_");
      Attribute attribute0 = new Attribute("%hb/jCu`DPc'1$w `");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), "!3Z+La(Im#ovv.vgqx", "!3Z+La(Im#ovv.vgqx", (String) null, "!3Z+La(Im#ovv.vgqx");
      fieldWriter0.visitAnnotation("}=6OcT", false);
      ByteVector byteVector0 = new ByteVector(16777215);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"6#_", " }>Ri\"6#_", (String) null, " }>Ri\"6#_");
      fieldWriter0.visitAnnotation("The list of names must not be null", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"6#_", " }>Ri\"6#_", (String) null, " }>Ri\"6#_");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "/`Tw4y?w8@}";
      stringArray0[1] = "JHy";
      stringArray0[2] = "System";
      classWriter0.visit(73, 73, "JHy", "/`Tw4y?w8@}", "JHy", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "2=@^!rsQZ", "2=@^!rsQZ", "2=@^!rsQZ", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"M6_", " }>Ri\"M6_", (String) null, " }>Ri\"M6_");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"6#_", " }>Ri\"6#_", (String) null, " }>Ri\"6#_");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "/`Tw4y?w8@}";
      stringArray0[1] = "JHy";
      stringArray0[2] = "System";
      classWriter0.visit(73, 73, "JHy", "/`Tw4y?w8@}", "JHy", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "2=@^!rsQZ", "2=@^!rsQZ", "2=@^!rsQZ", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), " }>Ri\"6#_", " }>Ri\"6#_", (String) null, " }>Ri\"6#_");
      fieldWriter0.visitAnnotation("The list of names must not be null", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), "!3Z+La(Im#ovv.vgqx", "!3Z+La(Im#ovv.vgqx", (String) null, "!3Z+La(Im#ovv.vgqx");
      fieldWriter0.visitAnnotation("}=6OcT", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2785), "!3Z+La(Im#ovv.vgqx", "!3Z+La(Im#ovv.vgqx", (String) null, "!3Z+La(Im#ovv.vgqx");
      fieldWriter0.visitEnd();
  }
}
