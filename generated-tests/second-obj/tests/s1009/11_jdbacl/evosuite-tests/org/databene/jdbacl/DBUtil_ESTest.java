/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:12:54 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainerSupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.jdbc.FBArray;
import org.h2.engine.SessionRemote;
import org.h2.tools.Recover;
import org.h2.value.ValueDecimal;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;
import org.postgresql.util.PSQLException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.checkReadOnly("=vJ4aSlt?J\"@pwS[", false);
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("=vJ4aSlt?J\"@pwS[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '=vJ4aSlt?J\"@pwS[.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect("#3", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '#3.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "y)&";
      DBUtil.available("y)&", "getResourceAsStream({}, {})", "getResourceAsStream({}, {})", "getResourceAsStream({}, {})");
      DBUtil.getOpenResultSetCount();
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setPrepareThreshold(0);
      try { 
        pGConnectionPoolDataSource0.getPooledConnection();
        fail("Expecting exception: PSQLException");
      
      } catch(PSQLException e) {
         //
         // The connection attempt failed.
         //
         verifyException("org.postgresql.core.v3.ConnectionFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      boolean boolean0 = DBUtil.existsEnvironment("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("b!(OCX'@", level0);
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1C\"T^[u@");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("1C\"T^[u@");
      // Undeclared exception!
      try { 
        DBUtil.runScript("1C\"T^[u@", 'L', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("XDoi.=<MKpf3M_68");
      // Undeclared exception!
      try { 
        DBUtil.runScript("XDoi.=<MKpf3M_68", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(true);
      DBUtil.runScript("--result set(s)", (Connection) null, true, errorHandler0);
      DBUtil.getOpenPreparedStatementCount();
      Recover recover0 = new Recover();
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("?#oY]V", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Connection connection0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JDBC veKrion ");
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "JDBC veKrion ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      String string0 = "";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "", "", (String) null, "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "^TI<1P0H P)._xFC";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("^TI<1P0H P)._xFC", "^TI<1P0H P)._xFC", (String) null, "^TI<1P0H P)._xFC", "k<=8.U>I]{1pi%iZ1{", "^TI<1P0H P)._xFC");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting ^TI<1P0H P)._xFC failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = null;
      try { 
        DBUtil.connect((String) null, (String) null, "()1@DK", "()1@DK", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      String string0 = SchemaDescriptor.SYSTEM_SCHEMA_UUID;
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JDBC version ");
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "JDBC version ", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: JDBC version 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JDBC version ");
      // Undeclared exception!
      try { 
        DBUtil.query("JDBC version ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "~r]JBU=vK", "GnF-5|F5y<-D", "Qlp=:^L+", "Qlp=:^L+", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      DBSequence dBSequence0 = new DBSequence("", "", "");
      tableContainerSupport0.getTables();
      dBSequence0.setName("");
      tableContainerSupport0.getComponents();
      tableContainerSupport0.addSequence(dBSequence0);
      DBUtil.dependencyOrderedTables(tableContainerSupport0);
      DBUtil.getOpenConnectionCount();
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata(" as number", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DBUtil.getOpenResultSetCount();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((long) 2, (-725));
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1C\"T^[u@");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("1C\"T^[u@");
      // Undeclared exception!
      try { 
        DBUtil.runScript("1C\"T^[u@", 'L', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<DBTable> arrayList0 = new ArrayList<DBTable>();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.escape("Tried to mutate a database with read-only settings: ");
      ErrorHandler errorHandler0 = new ErrorHandler("XDoi.=<MKpf5MG68");
      // Undeclared exception!
      try { 
        DBUtil.runScript("Connecting the database failed silently - probably due to wrong driver (", "Tried to mutate a database with read-only settings: ", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: Connecting the database failed silently - probably due to wrong driver (
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Connection connection0 = null;
      boolean boolean0 = FileUtil.fsIsIgnoreCase;
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      String string0 = "z7X~SWoX2#P+4WFm@2;";
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      VersionNumber versionNumber0 = VersionNumber.valueOf("louDScap");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase(")q@)$/uz$fkg-4OBVx", "z7X~SWoX2#P+4WFm@2;", versionNumber0);
      // Undeclared exception!
      try { 
        defaultDatabase0.getSchema("louDScap");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table ')q@)$/uz$fkg-4OBVx'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      String string0 = "~SqTv3$'lvt{]mW?|";
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("~SqTv3$'lvt{]mW?|", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "";
      Boolean.valueOf("");
      ArrayList<DBTable> arrayList0 = new ArrayList<DBTable>();
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "", "", "", "");
      DBUtil.getOpenStatementCount();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.countRows("T[", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
