/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:40:58 GMT 2018
 */

package org.apache.commons.jxpath.ri.model.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.PropertyIterator;
import org.apache.commons.jxpath.ri.model.beans.PropertyPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyIterator_ESTest extends PropertyIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((Locale) null, "");
      PropertyIterator propertyIterator0 = null;
      try {
        propertyIterator0 = new PropertyIterator(nullPointer0, "", true, nullPointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      NullPointer nullPointer0 = new NullPointer(locale0, "");
      PropertyIterator propertyIterator0 = null;
      try {
        propertyIterator0 = new PropertyIterator(nullPointer0, "", false, nullPointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, (QName) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      int int0 = propertyIterator0.getPosition();
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("1w-|8.'O::M93}g", "1w-|8.'O::M93}g");
      Locale locale0 = Locale.ITALY;
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      QName qName1 = new QName("<<unknown namespace>>");
      nullPointer0.getValue();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      Object object0 = new Object();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", false, nullPropertyPointer0);
      propertyIterator0.getPosition();
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      NullPointer nullPointer0 = new NullPointer(locale0, "p");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      QName qName0 = nullPropertyPointer0.getName();
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.getNodePointer();
      assertEquals(1, beanAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      nullPropertyPointer0.toString();
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.ITALIAN;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      int int0 = PropertyPointer.UNSPECIFIED_PROPERTY;
      BeanPointer beanPointer1 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("1w-|8.'O::M93}g");
      Locale locale0 = Locale.ITALY;
      NullPointer nullPointer0 = new NullPointer(locale0, "1w-|8.'O::M93}g");
      Class<Object> class0 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPointer0, jXPathBasicBeanInfo0);
      Object object0 = beanPropertyPointer0.bean;
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, (Object) null, jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPropertyPointer0);
      QName qName1 = nullPropertyPointer0.getName();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, true, beanPropertyPointer0);
      propertyIterator0.getNodePointer();
      NullPointer nullPointer1 = new NullPointer(locale0, "<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName1, "<<unknown namespace>>", locale0);
      BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(nodePointer0, jXPathBasicBeanInfo0);
      // Undeclared exception!
      try { 
        nodePointer0.setValue(beanPropertyPointer1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot replace the root object
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      QName qName0 = new QName("]5gZ3;T=F%J");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, "Z[vqgN``88w,qPT_X_", jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, false, (NodePointer) null);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNotNull(nodePointer0);
      
      propertyIterator0.getPosition();
      int int0 = propertyIterator0.getPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.CHINESE;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      BeanPointer beanPointer1 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      FileSystemHandling.shouldAllThrowIOExceptions();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, false, nullPropertyPointer1);
      propertyIterator0.getNodePointer();
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer1, jXPathBasicBeanInfo0);
      beanPointer1.getImmediateParentPointer();
      BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      // Undeclared exception!
      try { 
        beanPointer0.setValue(beanPropertyPointer1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot replace the root object
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, (QName) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      propertyIterator0.prepareForIndividualProperty("java.lang.Integer");
      propertyIterator0.getNodePointer();
      propertyIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("~|hgV");
      Locale locale0 = new Locale("~|hgV", "~|hgV");
      QName qName1 = new QName("~|hgV", "~|hgV");
      NullPointer nullPointer0 = new NullPointer(qName1, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.setPosition(2452);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("root");
      Locale locale0 = Locale.US;
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.getNodePointer();
      beanAttributeIterator0.setPosition(1060);
      beanAttributeIterator0.reset();
      beanAttributeIterator0.getPosition();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      NullPointer nullPointer0 = new NullPointer(locale0, "Cannot modify property: ");
      Class<Integer> class0 = Integer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPointer0, jXPathBasicBeanInfo0);
      QName qName0 = beanPropertyPointer0.getName();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      BeanPointer beanPointer0 = new BeanPointer(qName0, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName0);
      beanAttributeIterator0.setPosition(Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      QName qName0 = new QName("Z[vqgN``88w,qPT_X_");
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, (Object) null, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      propertyIterator0.getPosition();
      propertyIterator0.getNodePointer();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, (QName) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("java.lang.Integer");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      QName qName0 = new QName("Z[vqgN``88w,qPT_X_");
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, (Object) null, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      propertyIterator0.getPosition();
      propertyIterator0.getNodePointer();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.ITALIAN;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      int int0 = PropertyPointer.UNSPECIFIED_PROPERTY;
      BeanPointer beanPointer1 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer((NodePointer) null);
      NullPropertyPointer nullPropertyPointer2 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, nullPropertyPointer2);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.getNodePointer();
      propertyIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      nullPropertyPointer0.toString();
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.ITALIAN;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      int int0 = PropertyPointer.UNSPECIFIED_PROPERTY;
      nullPropertyPointer0.getNodeValue();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer((NodePointer) null);
      NullPropertyPointer nullPropertyPointer2 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale0 = Locale.KOREAN;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, nullPropertyPointer1);
      Locale locale1 = Locale.TAIWAN;
      Locale locale2 = Locale.TRADITIONAL_CHINESE;
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      propertyIterator0.prepareForIndividualProperty("empty");
      nullPropertyPointer1.printPointerChain();
      propertyIterator0.prepareForIndividualProperty("empty");
      propertyIterator0.setPosition(44);
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      jXPathBasicBeanInfo0.getPropertyDescriptor("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.JAPANESE;
      Object object0 = new Object();
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, nullPropertyPointer1);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale.getISOLanguages();
      locale0.getDisplayName(locale1);
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("empty");
      propertyIterator0.getPropertyPointer();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.JAPANESE;
      Object object0 = new Object();
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, nullPropertyPointer1);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      beanPointer0.isLeaf();
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale.getISOLanguages();
      locale0.getDisplayName(locale1);
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("empty");
      propertyIterator0.getNodePointer();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale0 = Locale.KOREA;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      Locale locale1 = Locale.TAIWAN;
      NullPointer nullPointer0 = new NullPointer((QName) null, locale0);
      Locale locale2 = Locale.TRADITIONAL_CHINESE;
      propertyIterator0.prepareForIndividualProperty("empty");
      propertyIterator0.setPosition(44);
      locale0.stripExtensions();
      jXPathBasicBeanInfo0.getPropertyDescriptor("@Z6bGqs5c");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.reset();
      // Undeclared exception!
      try { 
        Locale.filterTags((List<Locale.LanguageRange>) null, (Collection<String>) set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, (Class) null);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale0 = Locale.JAPANESE;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.CANADA;
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      locale0.getUnicodeLocaleAttributes();
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, nullPropertyPointer1);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      Locale locale3 = Locale.forLanguageTag("<<unknown namespace>>");
      NullPointer nullPointer0 = new NullPointer((QName) null, locale3);
      locale2.getExtensionKeys();
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("empty");
      nullPropertyPointer1.printPointerChain();
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.setPosition((-1));
      propertyIterator0.setPosition(442);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      variablePointer0.getImmediateValuePointer();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.JAPANESE;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      propertyIterator0.reset();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayName(locale1);
      propertyIterator0.setPosition(2147483644);
      propertyIterator0.prepareForIndividualProperty("bytes");
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      propertyIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      Locale locale0 = Locale.JAPANESE;
      Object object0 = new Object();
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      propertyIterator0.reset();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale.forLanguageTag("%L)5");
      propertyIterator0.prepareForIndividualProperty("bytes");
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.getNodePointer();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale0 = Locale.JAPANESE;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.CANADA;
      propertyIterator0.reset();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      Locale locale2 = Locale.FRANCE;
      locale0.getDisplayScript(locale2);
      beanPointer0.getImmediateValuePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      propertyIterator0.getNodePointer();
      locale3.getExtensionKeys();
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("empty");
      propertyIterator0.setPosition(1);
      propertyIterator0.reset();
      propertyIterator0.getPropertyPointer();
      NullPointer nullPointer0 = new NullPointer(beanPointer0, (QName) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Locale locale0 = Locale.JAPANESE;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, nullPropertyPointer0, jXPathBasicBeanInfo0, locale0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.CANADA;
      propertyIterator0.reset();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      Locale locale2 = Locale.FRANCE;
      locale0.getDisplayScript(locale2);
      beanPointer0.getImmediateValuePointer();
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      propertyIterator0.getNodePointer();
      locale3.getExtensionKeys();
      propertyIterator0.reset();
      propertyIterator0.prepareForIndividualProperty("empty");
      propertyIterator0.setPosition(1);
      propertyIterator0.getPropertyPointer();
      NullPointer nullPointer0 = new NullPointer(beanPointer0, (QName) null);
      propertyIterator0.prepareForIndividualProperty((String) null);
  }
}
