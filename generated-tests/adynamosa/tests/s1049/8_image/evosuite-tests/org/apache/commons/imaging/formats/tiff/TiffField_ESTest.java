/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 09:05:57 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)72;
      TiffField tiffField0 = new TiffField((byte)22, (byte)72, fieldTypeShort0, (byte)72, (byte)22, byteArray0, byteOrder0, (byte)73);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(72, int0);
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getOffset());
      assertEquals(22, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 0L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-848), fieldTypeShort0, (-848), 12800L, byteArray0, byteOrder0, (-848));
      tiffField0.dump();
      assertEquals((-848), tiffField0.getDirectoryType());
      assertEquals((-848), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(12800, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1293), fieldTypeFloat0, 511, (-1293), byteArray0, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1293), tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-1293), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1, 2146511496, fieldTypeShort0, 2146511496, (-3075), byteArray0, byteOrder0, 1732);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1), tagInfo0.tag);
      assertEquals((-3075), tiffField0.getOffset());
      assertEquals(1732, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2146511496, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "Unknown value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (-1L), 0, byteArray0, byteOrder0, (-6423));
      int int0 = tiffField0.getTag();
      assertEquals((-6423), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34, "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)62);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(50, int0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-78);
      byteArray0[2] = (byte) (-78);
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0.ASCII, 3298, 3426, byteArray0, byteOrder0, (-1206));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1206), tiffField0.getSortHint());
      assertEquals(3426, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 225L, 0, byteArray0, (ByteOrder) null, 469);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(469, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1301), "(u5!}u61pFA 8");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-633), 474, fieldTypeLong0, (-999L), (-3828L), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1717986917), int0);
      assertEquals((-633), tiffField0.getTag());
      assertEquals(474, tiffField0.getDirectoryType());
      assertEquals((-3828), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 225L, 0, byteArray0, (ByteOrder) null, 469);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(469, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "o{%$al[");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(900, 900, fieldTypeAscii0, 4L, 3440L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(900, tiffField0.getTag());
      assertEquals(900, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3440, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "2ow('Pp/PZvM-w:");
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)33;
      byteArray0[4] = (byte) (-53);
      TiffField tiffField0 = new TiffField(850, 344, fieldTypeDouble0.RATIONAL, 6, 850, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(850, tiffField0.getTag());
      assertEquals(344, tiffField0.getDirectoryType());
      assertEquals(41, int0);
      assertEquals(850, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1301), "(u5!}u61pFA 8");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-4);
      TiffField tiffField0 = new TiffField(2252, (-1301), fieldTypeLong0, (byte)72, (-359L), byteArray0, byteOrder0, (-2847));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2847), tiffField0.getSortHint());
      assertEquals((-1301), tiffField0.getDirectoryType());
      assertEquals(2252, tiffField0.getTag());
      assertEquals((-359), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(2146511496, 2146511496, fieldTypeShort0, 1L, (-3075L), byteArray0, byteOrder0, (-643));
      tiffField0.getIntValue();
      assertEquals(2146511496, tiffField0.getDirectoryType());
      assertEquals(2146511496, tiffField0.getTag());
      assertEquals((-643), tiffField0.getSortHint());
      assertEquals((-3075), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      tiffField0.getIntValue();
      assertEquals(270, tiffField0.getTag());
      assertEquals(1067, tiffField0.getDirectoryType());
      assertEquals((-755), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-79);
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      tiffField0.getIntValue();
      assertEquals((-755), tiffField0.getSortHint());
      assertEquals(270, tiffField0.getTag());
      assertEquals(1067, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(131, (String) null);
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-737), (-737), fieldTypeDouble0, (-737), 512L, byteArray0, byteOrder0, 34152);
      tiffField0.getFieldTypeName();
      assertEquals(512, tiffField0.getOffset());
      assertEquals(34152, tiffField0.getSortHint());
      assertEquals((-737), tiffField0.getTag());
      assertEquals((-737), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      TiffField tiffField0 = new TiffField(50, 5042, fieldTypeFloat0, 50, 5042, byteArray0, byteOrder0, 7);
      tiffField0.getFieldTypeName();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(5042, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(5042, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-253), (-608), (FieldType) null, (byte)69, (-2233L), byteArray0, byteOrder0, 1657);
      tiffField0.getFieldType();
      assertEquals((-608), tiffField0.getDirectoryType());
      assertEquals((-253), tiffField0.getTag());
      assertEquals((-2233), tiffField0.getOffset());
      assertEquals(1657, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "o{%$al[");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 294, fieldTypeAscii0, (-15360L), (byte)83, byteArray0, byteOrder0, (byte)13);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(83, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(294, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2170, ", ");
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField(2170, 2095105998, fieldTypeRational0, 4L, 2755, byteArray0, byteOrder0, 2170);
      tiffField0.getFieldType();
      assertEquals(2755, tiffField0.getOffset());
      assertEquals(2170, tiffField0.getSortHint());
      assertEquals(2095105998, tiffField0.getDirectoryType());
      assertEquals(2170, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      tiffField0.getDoubleValue();
      assertEquals(270, tiffField0.getTag());
      assertEquals(1067, tiffField0.getDirectoryType());
      assertEquals((-755), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-79);
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      tiffField0.getDoubleValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(270, tiffField0.getTag());
      assertEquals(1067, tiffField0.getDirectoryType());
      assertEquals((-755), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "Unknown value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (-1L), 0, byteArray0, byteOrder0, (-6423));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-6423), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 10, fieldTypeShort0, 4L, 10, byteArray0, byteOrder0, 3106);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(10, int0);
      assertEquals(3106, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(10, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2170, 1, fieldTypeShort0, 0L, (-2065L), byteArray0, byteOrder0, (byte) (-72));
      tiffField0.getCount();
      assertEquals((-2065), tiffField0.getOffset());
      assertEquals(2170, tiffField0.getTag());
      assertEquals((-72), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1047, 1047, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).RATIONAL).DOUBLE, 1047, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(1047, tiffField0.getDirectoryType());
      assertEquals(1047, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2520), "M\"Emhm");
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2520), (-2520), fieldTypeFloat0, (-2520), 0L, byteArray0, byteOrder0, (byte) (-67));
      tiffField0.getCount();
      assertEquals((-2520), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-67), tiffField0.getSortHint());
      assertEquals((-2520), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, (ByteOrder) null, (byte) (-118));
      tiffField0.getBytesLength();
      assertEquals((-118), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4030), "P)iM(");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4), (-4030), fieldTypeFloat0, 470L, 0L, byteArray0, byteOrder0, (byte) (-39));
      tiffField0.getBytesLength();
      assertEquals((-4030), tiffField0.getDirectoryType());
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-4), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1), "M'LE'C:^");
      TiffField tiffField0 = new TiffField(37381, (-350), fieldTypeDouble0, 4608L, (-1L), byteArray0, (ByteOrder) null, 42240);
      tiffField0.getByteOrder();
      assertEquals((-350), tiffField0.getDirectoryType());
      assertEquals(37381, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(42240, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      tiffField0.getByteOrder();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-755), tiffField0.getSortHint());
      assertEquals(270, tiffField0.getTag());
      assertEquals(1067, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "2ow('Pp/PZvM-w:");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, (-1547), fieldTypeDouble0.UNDEFINED, 1, (-999L), byteArray0, byteOrder0, 48);
      tiffField0.getByteArrayValue();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-999), tiffField0.getOffset());
      assertEquals((-1547), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((-3075), 2146511496, fieldTypeShort0.SLONG, (-2147483648L), 4293022992L, byteArray0, byteOrder0, 1732);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getByteArrayValue();
      assertEquals((-1944304), tiffField0.getOffset());
      assertEquals(2146511496, tiffField0.getDirectoryType());
      assertEquals((-3075), tiffField0.getTag());
      assertEquals(1732, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 225L, 0, byteArray0, (ByteOrder) null, 469);
      MockFile mockFile0 = new MockFile("\"[");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(39L, mockFile0.length());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(469, tiffField0.getSortHint());
      assertEquals(1800, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[41];
      TiffField tiffField0 = new TiffField((-55), 2601, fieldTypeByte0.LONG, (-55), 53L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, (FieldType) null, (-5041L), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField(1647, 32, fieldTypeByte0, (-3076L), 898L, byteArray0, byteOrder0, 34732);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[267];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (byte) (-25), fieldTypeFloat0, (-1), (-1), byteArray0, byteOrder0, (byte) (-25));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-848), fieldTypeShort0, (-848), 12800L, byteArray0, byteOrder0, (-848));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "Unknown value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (-1L), 0, byteArray0, byteOrder0, (-6423));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2708, (byte) (-114), (FieldType) null, (-2789L), (-2166L), byteArray0, byteOrder0, (byte) (-114));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2426), "IFD2");
      CharBuffer charBuffer0 = CharBuffer.allocate(32809);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(3829, 1093, fieldTypeLong0, (-784L), (-15360L), byteArray0, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField(65108, 65108, fieldTypeByte0.SHORT, 65108, 65108, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1109, 1109, (FieldType) null, 1109, 1109, byteArray0, byteOrder0, 1109);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-25), (-4239), fieldTypeFloat0.DOUBLE, (byte) (-25), (-4239), byteArray0, byteOrder0, (-401));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-176), 680, fieldTypeByte0, (-176), 373L, byteArray0, byteOrder0, 1273);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, (-466L), 0, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1645), (-1645), fieldTypeLong0, (-1L), 546L, byteArray0, byteOrder0, (byte) (-37));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "o<* DjsX");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-700), (byte)15, fieldTypeLong0, (byte)97, (byte) (-101), byteArray0, byteOrder0, 2132253267);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(2132253267, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals((-101), tiffField0.getOffset());
      assertEquals((-700), tiffField0.getTag());
      assertEquals(388, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1301), "(u5!}u61pFA 8");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 2252);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2252, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1301), "(u5!}u61pFA 8");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2252, (-1301), fieldTypeLong0, (byte)72, (-359L), byteArray0, byteOrder0, (-2847));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2847), tiffField0.getSortHint());
      assertEquals((-359), tiffField0.getOffset());
      assertEquals(2252, tiffField0.getTag());
      assertEquals((-1301), tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte) (-69), " for: ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-69), fieldTypeAscii0, 692L, 4172L, byteArray0, byteOrder0, (-1387));
      tiffField0.getFieldType();
      assertEquals((-69), tiffField0.getDirectoryType());
      assertEquals((-1387), tiffField0.getSortHint());
      assertEquals(4172, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)26);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3551), (-3551), fieldTypeByte0, (-1L), (-1L), byteArray0, byteOrder0, 805);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(330, (byte)42, fieldTypeByte0, 330, 5308L, byteArray0, byteOrder0, (byte) (-76));
      tiffField0.getValue();
      assertEquals(5308, tiffField0.getOffset());
      assertEquals(330, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals((-76), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2708, (byte) (-114), (FieldType) null, (-2789L), (-2166L), byteArray0, byteOrder0, (byte) (-114));
      int int0 = tiffField0.getOffset();
      assertEquals((-114), tiffField0.getSortHint());
      assertEquals(2708, tiffField0.getTag());
      assertEquals((-2166), int0);
      assertEquals((-114), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(330, (byte)42, fieldTypeByte0, 330, 5308L, byteArray0, byteOrder0, (byte) (-76));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tagInfo0.tag);
      assertEquals((-76), tiffField0.getSortHint());
      assertEquals(5308, tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
      assertEquals(42, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-103), (-719), fieldTypeByte0, 881L, (-6918L), byteArray0, (ByteOrder) null, (-103));
      int int0 = tiffField0.getTag();
      assertEquals((-103), tiffField0.getSortHint());
      assertEquals((-103), int0);
      assertEquals((-6918), tiffField0.getOffset());
      assertEquals((-719), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-360), "Ccv`kU_w.");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4714), 0, fieldTypeAscii0, (-974L), 4L, byteArray0, byteOrder0, (-304));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-974), int0);
      assertEquals((-4714), tiffField0.getTag());
      assertEquals((-304), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      tiffField0.getDoubleValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1067, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getTag());
      assertEquals((-755), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1, (-3075), fieldTypeShort0, 1732, 4293022992L, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1301), "(u5!}u61pFA 8");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2252, (-1301), fieldTypeLong0, (byte)72, (-359L), byteArray0, byteOrder0, (-2847));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2847), tiffField0.getSortHint());
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals((-1301), tiffField0.getDirectoryType());
      assertEquals(2252, tiffField0.getTag());
      assertEquals((-359), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50713, 0, fieldTypeByte0, 50713, (-8L), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1405b64c for: 50713 (0xc619: BlackLevelRepeatDim): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-103), 4, fieldTypeByte0, (byte)1, 0L, byteArray0, byteOrder0, 7);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1047, 1047, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).SRATIONAL).DOUBLE, 1047, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(1047, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1047L, tiffField0.getCount());
      assertEquals(1047, tiffField0.getTag());
      assertEquals(8376, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-4739), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1085, 70, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).DOUBLE).FLOAT, (byte)102, (-50L), byteArray0, byteOrder0, (byte)2);
      tiffField0.getDoubleArrayValue();
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(102L, tiffField0.getCount());
      assertEquals(1085, tiffField0.getTag());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(408, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50713, 50713, fieldTypeLong0, (byte)15, 50713, byteArray0, byteOrder0, (byte)97);
      tiffField0.getDoubleArrayValue();
      assertEquals(50713, tiffField0.getOffset());
      assertEquals(15L, tiffField0.getCount());
      assertEquals(50713, tiffField0.getDirectoryType());
      assertEquals(50713, tiffField0.getTag());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[54];
      TiffField tiffField0 = new TiffField((byte)53, (byte)53, fieldTypeByte0.ASCII, (byte)53, (byte)53, byteArray0, byteOrder0, (byte)53);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@8fa5b7e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2170, ", ");
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField(2170, 2095105998, fieldTypeRational0, 4L, 2755, byteArray0, byteOrder0, 2170);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2170, tiffField0.getSortHint());
      assertEquals(2755, tiffField0.getOffset());
      assertEquals(2170, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(4L, tiffField0.getCount());
      assertEquals(2095105998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, 877, fieldTypeShort0, 1L, (-2221L), byteArray0, byteOrder0, 877);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2221), tiffField0.getOffset());
      assertEquals(877, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(877, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(34857, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[108];
      TiffField tiffField0 = new TiffField(65108, 65108, fieldTypeByte0.SHORT, 65108, 65108, byteArray0, byteOrder0, 65108);
      tiffField0.getDoubleArrayValue();
      assertEquals(65108L, tiffField0.getCount());
      assertEquals(65108, tiffField0.getTag());
      assertEquals(65108, tiffField0.getDirectoryType());
      assertEquals(130216, tiffField0.getBytesLength());
      assertEquals(65108, tiffField0.getSortHint());
      assertEquals(65108, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(513, 4682, fieldTypeLong0, (byte)8, 2114, byteArray0, byteOrder0, (byte)7);
      tiffField0.getIntArrayValue();
      assertEquals(2114, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(513, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(4682, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[108];
      TiffField tiffField0 = new TiffField(65108, 65108, fieldTypeByte0.SHORT, 65108, 65108, byteArray0, byteOrder0, 65108);
      tiffField0.getIntArrayValue();
      assertEquals(65108, tiffField0.getDirectoryType());
      assertEquals(65108, tiffField0.getSortHint());
      assertEquals(130216, tiffField0.getBytesLength());
      assertEquals(65108, tiffField0.getTag());
      assertEquals(65108, tiffField0.getOffset());
      assertEquals(65108L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34, "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)62);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)43, 10, fieldTypeRational0, 3731L, 512L, byteArray0, byteOrder0, 42035);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-1), fieldTypeRational0, 4406L, 469, byteArray0, byteOrder0, 3426);
      tiffField0.getIntArrayValue();
      assertEquals(7, tiffField0.getTag());
      assertEquals(3426, tiffField0.getSortHint());
      assertEquals(35248, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(469, tiffField0.getOffset());
      assertEquals(4406L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1507, (-1405), fieldTypeRational0, 1L, 255L, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(330, (byte)42, fieldTypeByte0, 330, 5308L, byteArray0, byteOrder0, (byte) (-76));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@207f65a2 for: 330 (0x14a: SubIFDs): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "2wJ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 0L, (-1951L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1951), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[108];
      TiffField tiffField0 = new TiffField(65108, 65108, fieldTypeByte0.SHORT, 65108, 65108, byteArray0, byteOrder0, 65108);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@38a64867
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "o{%$al[");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 900, 0, byteArray0, byteOrder0, (byte)13);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(330, (byte)42, fieldTypeByte0, 330, 5308L, byteArray0, byteOrder0, (byte) (-76));
      String string0 = tiffField0.getTagName();
      assertEquals("SubIFDs", string0);
      assertEquals((-76), tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(5308, tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1047, 1047, fieldTypeShort0, 27, 27, byteArray0, byteOrder0, 27);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", ");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27L, tiffField0.getCount());
      assertEquals(54, tiffField0.getBytesLength());
      assertEquals(1047, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(1047, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1364, (-489), fieldTypeFloat0, 1364, 1364, byteArray0, byteOrder0, 1364);
      String string0 = tiffField0.toString();
      assertEquals(5456, tiffField0.getBytesLength());
      assertEquals((-489), tiffField0.getDirectoryType());
      assertEquals(1364, tiffField0.getOffset());
      assertEquals(1364, tiffField0.getSortHint());
      assertEquals("1364 (0x554: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (1364 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 65108, 5168L, byteArray0, byteOrder0, 1247);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65108, tiffField0.getBytesLength());
      assertEquals(1247, tiffField0.getSortHint());
      assertEquals(5168, tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (65108 SByte)", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField((-1333), 2531, fieldTypeByte0.FLOAT, 771L, (-1100L), byteArray0, byteOrder0, (-1333));
      String string0 = tiffField0.toString();
      assertEquals(2531, tiffField0.getDirectoryType());
      assertEquals(3084, tiffField0.getBytesLength());
      assertEquals((-1333), tiffField0.getSortHint());
      assertEquals((-1100), tiffField0.getOffset());
      assertEquals("-1333 (0xfffffacb: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (771 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[267];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2755, (byte) (-25), fieldTypeFloat0.DOUBLE, 2755, (-4203L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.dump();
      assertEquals((-4203), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(22040, tiffField0.getBytesLength());
      assertEquals(2755, tiffField0.getTag());
      assertEquals((-25), tiffField0.getDirectoryType());
      assertEquals(2755L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1374, 41, fieldTypeFloat0.SLONG, 245L, 245L, byteArray0, byteOrder0, 1374);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(980, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(245L, tiffField0.getCount());
      assertEquals(1374, tiffField0.getSortHint());
      assertEquals(1374, tiffField0.getTag());
      assertEquals(245, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[108];
      TiffField tiffField0 = new TiffField(65108, 65108, fieldTypeByte0.SHORT, 65108, 65108, byteArray0, byteOrder0, 65108);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65108, tiffField0.getDirectoryType());
      assertEquals(130216, tiffField0.getBytesLength());
      assertEquals(65108L, tiffField0.getCount());
      assertEquals(65108, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65108, tiffField0.getSortHint());
      assertEquals(65108, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[54];
      TiffField tiffField0 = new TiffField((byte)53, (byte)53, fieldTypeByte0.ASCII, (byte)53, (byte)53, byteArray0, byteOrder0, (byte)53);
      tiffField0.dump();
      assertEquals(53, tiffField0.getOffset());
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(53, tiffField0.getTag());
      assertEquals(53L, tiffField0.getCount());
      assertEquals(53, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte) (-69), " for: ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-69), fieldTypeAscii0, 692L, 4172L, byteArray0, byteOrder0, (-1387));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-69), tiffField0.getDirectoryType());
      assertEquals((-1387), tiffField0.getSortHint());
      assertEquals(692, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(4172, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField(270, 1067, fieldTypeByte0, 1L, (-2147483648L), byteArray0, byteOrder0, (-755));
      String string0 = tiffField0.getValueDescription();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-755), tiffField0.getSortHint());
      assertEquals(270, tiffField0.getTag());
      assertEquals(1067, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-375), (-430), fieldTypeShort0, (-430), (-375), byteArray0, byteOrder0, (-375));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2117, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-375), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-430), tiffField0.getDirectoryType());
      assertEquals((-375), tiffField0.getTag());
      assertEquals((-375), tiffField0.getSortHint());
      assertEquals((-430L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (-744));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(325, 173);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Byte", string0);
      assertEquals((-744), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte) (-69), " for: ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-69), fieldTypeAscii0, 692L, 4172L, byteArray0, byteOrder0, (-1387));
      tiffField0.getFieldTypeName();
      assertEquals((-69), tiffField0.getDirectoryType());
      assertEquals((-1387), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(4172, tiffField0.getOffset());
      assertEquals(692L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "2ow(XPp/|ZvM-w:");
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-341), (-341), fieldTypeDouble0, (byte)0, 1732, byteArray0, byteOrder0, (byte)121);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-341), int0);
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(1732, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-341), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField((-3076), (byte)42, fieldTypeByte0.ASCII, (byte)42, (-3247L), byteArray0, byteOrder0, (-3076));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals((-3076), tiffField0.getSortHint());
      assertEquals("-3076 (0xfffff3fc: Unknown Tag): ", string0);
      assertEquals(42L, tiffField0.getCount());
      assertEquals((-3247), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(330, (byte)42, fieldTypeByte0, 330, 5308L, byteArray0, byteOrder0, (byte) (-76));
      tiffField0.dump();
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(330L, tiffField0.getCount());
      assertEquals(330, tiffField0.getBytesLength());
      assertEquals(330, tiffField0.getTag());
      assertEquals((-76), tiffField0.getSortHint());
      assertEquals(5308, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1, 2146511496, fieldTypeShort0, 2146511496, (-3075), byteArray0, byteOrder0, 1732);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-3075L), tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(2146511496, tiffField0.getDirectoryType());
      assertEquals(1732, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }
}
