/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 06:01:48 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-11);
      byteArray1[1] = (byte)99;
      byteArray1[2] = (byte) (-16);
      byteArray1[3] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4065, (-1), 0);
      JavaCharStream.hexval('8');
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "XS{";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("XS{");
      int int0 = 11;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (-1));
      stringReader0.skip((-1));
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-646);
      javaCharStream0.ExpandBuff(false);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      JavaCharStream.hexval('c');
      intArray0[2] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.inputStream = (Reader) stringReader0;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(101);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.read();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)15);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^\"6RIYhLlrx");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1684), (-3092));
      StringReader stringReader0 = new StringReader("$NECHtVf}T#B\u0005O0y3");
      stringReader0.reset();
      stringReader0.skip((-1992L));
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.ReInit((Reader) stringReader0, (-1684), 3399);
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
      
      char char0 = javaCharStream0.ReadByte();
      assertEquals('$', char0);
      
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaCharStream.hexval('7');
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[5];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      long long0 = (-1L);
      // Undeclared exception!
      try { 
        stringReader0.mark((-1500));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PVM{h*%Ib= ,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.adjustBeginLineColumn((-415), 1);
      javaCharStream0.ReInit((Reader) stringReader0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PVM{h*%Ib= ,");
      javaCharStream0.column = 77;
      javaCharStream0.ReInit((Reader) stringReader0, 190, (-4524), 410);
      PipedInputStream pipedInputStream0 = new PipedInputStream(410);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-574), 410);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(1433);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, 28, 28, 28);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (-19), 1207);
      javaCharStream0.GetSuffix(0);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1870), 11);
      int int0 = (-2164);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaCharStream0.bufsize = (-2164);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("nJQ!n{X` q<@<HD`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 52, 52);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#RFa9&TV>m7");
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 6, 6, (-504));
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.getBeginColumn();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaCharStream.hexval('d');
      StringReader stringReader0 = new StringReader("!>Ob\"s)&1RtT{");
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      stringReader0.read(charArray0);
      charArray0[1] = 'd';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[2] = 'Q';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1982), 4053);
      javaCharStream0.inBuf = 947;
      javaCharStream0.ReInit((Reader) stringReader0, 13, 1715, 4085);
      javaCharStream0.backup(4072);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(13, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1298));
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      intArray0[1] = 0;
      intArray0[2] = 174;
      intArray0[3] = (-1);
      intArray0[4] = (-1298);
      intArray0[5] = 0;
      intArray0[6] = (-1);
      intArray0[7] = 0;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.GetSuffix(76);
      stringReader0.skip((-1));
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      javaCharStream0.getLine();
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup((-1));
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9.A.DdD*Q(hkT");
      stringReader0.mark(1321);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 4, 4);
      javaCharStream0.readChar();
      JavaCharStream.hexval('9');
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-214), 83);
      char[] charArray0 = new char[5];
      charArray0[0] = 'w';
      charArray0[1] = '8';
      charArray0[2] = '%';
      charArray0[3] = 'h';
      charArray0[4] = '7';
      stringReader0.read(charArray0);
      javaCharStream0.backup(83);
      javaCharStream0.readChar();
      javaCharStream0.backup((-1618));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 418);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char char0 = '4';
      JavaCharStream.hexval('4');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 473, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 4315, 4315);
      stringReader0.skip((-1173L));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 4315, 4315, (-919));
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char char0 = '0';
      JavaCharStream.hexval('0');
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('0');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.getBeginLine();
      bufferedInputStream0.mark(0);
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      int int1 = 82;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-39);
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte) (-46);
      // Undeclared exception!
      try { 
        bufferedInputStream0.read(byteArray0, 829, (int) (byte) (-124));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 64, 13);
      char[] charArray0 = javaCharStream0.GetSuffix(13);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(13, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)88);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, (byte)99);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 2367, (byte)99, 0);
      bufferedInputStream1.close();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      int int0 = 8;
      javaCharStream0.inBuf = (-2999);
      JavaCharStream.hexval('3');
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 12;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4061, 12);
      int int1 = 1;
      javaCharStream0.adjustBeginLineColumn(4061, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JavaCharStream.hexval('b');
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 11, 11, (-880));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-872), 1);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-71), (byte)1);
      javaCharStream0.nextCharInd = (-1);
      javaCharStream0.backup((byte) (-71));
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn((-1), 11);
      assertEquals(11, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1867), (-1867));
      javaCharStream0.inBuf = (-1867);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte)83;
      byteArray0[6] = (byte)56;
      byteArray0[7] = (byte)94;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'C';
      charArray0[1] = '4';
      charArray0[2] = '/';
      javaCharStream0.nextCharBuf = charArray0;
      charArray0[3] = 'w';
      charArray0[4] = 'F';
      charArray0[5] = '}';
      charArray0[6] = '$';
      javaCharStream0.buffer = charArray0;
      InputStream inputStream0 = null;
      javaCharStream0.bufsize = 359;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(";A=");
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = 'm';
      charArray0[2] = ',';
      charArray0[3] = '*';
      charArray0[4] = '.';
      char[] charArray1 = new char[7];
      charArray1[0] = 'm';
      charArray1[1] = '*';
      charArray1[2] = '*';
      charArray1[3] = ',';
      charArray1[4] = ',';
      charArray1[5] = 'm';
      charArray1[6] = 'i';
      stringReader0.read(charArray1);
      charArray0[5] = 'y';
      charArray0[6] = '9';
      charArray0[7] = '/';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(3721, (-1));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Reader reader0 = null;
      int int0 = 459;
      int int1 = 102;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 459, 102, 459);
      javaCharStream0.ReInit((Reader) null, 459, 459);
      boolean boolean0 = true;
      javaCharStream0.column = 72;
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.line = 459;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.Done();
      javaCharStream0.available = 459;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.Done();
      javaCharStream0.bufpos = (-1139);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('J');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1228);
      int int0 = 60;
      int int1 = (-3866);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 60, (-3866));
      javaCharStream0.GetImage();
      pipedInputStream0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('[');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        stringReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      int int0 = 5160;
      int int1 = 11;
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      stringReader0.ready();
      charArray0[1] = 'M';
      charArray0[2] = '/';
      charArray0[3] = 'x';
      char char0 = 'g';
      charArray0[4] = 'g';
      stringReader0.read(charArray0);
      int int2 = 4118;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5160, 11, 4118);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{}xw23*=*{f<4b");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0);
      stringReader0.close();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(p%2*|9h<*0bX#Dib#D");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "d");
      StringReader stringReader0 = new StringReader("d");
      int int0 = 15;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-107), 15, 15);
      int int1 = 2;
      javaCharStream0.adjustBeginLineColumn(2, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup((-336));
      char char0 = 'h';
      try { 
        JavaCharStream.hexval('h');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5 d-`p>~N");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 595);
      javaCharStream0.ReInit((Reader) stringReader0, 595, 1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5 d-`p>~N");
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = ' ';
      charArray0[5] = ' ';
      charArray0[6] = ' ';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[7] = '5';
      charArray0[8] = '5';
      stringReader0.read(charArray0);
      javaCharStream0.backup(595);
      javaCharStream0.adjustBeginLineColumn(595, 1);
      javaCharStream0.UpdateLineColumn(' ');
      javaCharStream0.getEndColumn();
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 1, (-2042));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KiJ'");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 6, (byte)6);
      javaCharStream0.Done();
      StringReader stringReader0 = new StringReader("F~i;e=1iDs");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-1142));
      sequenceInputStream0.close();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte) (-38);
      byteArray0[4] = (byte)1;
      sequenceInputStream0.read(byteArray0, (-1142), (int) (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1189), 71, (-1189));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aULD9.-)o+F}Gm+}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1087), 365);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = 93;
      PipedInputStream pipedInputStream0 = new PipedInputStream(93);
      int int1 = 1517;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1517, 15);
      javaCharStream0.inBuf = 93;
      int int2 = (-1026);
      javaCharStream0.maxNextCharInd = (-1026);
      javaCharStream0.backup(93);
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
