/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:08:09 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "racA5V^BLj";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1386, "", "racA5V^BLj", "", stringArray0, false, false);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-15));
      classWriter0.thisName = "?m\fTr";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?m\fTr";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "?m\fTr", "?m\fTr", "?m\fTr", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(884);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "Ima` %", "Ima` %", "Ima` %", (String[]) null, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 33;
      intArray0[1] = 2885;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-471), 188);
      assertEquals(692, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[1] = 18;
      intArray0[2] = (-3000);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 18, (-1692));
      assertEquals((-1728), int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(459);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1180), "Jj|fWziSET'Q29?", ". \"", ". \"", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.newConstItem("7eSpxoT@)QU");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7eSpxoT@)QU";
      stringArray0[1] = "7eSpxoT@)QU";
      stringArray0[2] = "7eSpxoT@)QU";
      stringArray0[3] = "7eSpxoT@)QU";
      stringArray0[4] = "7eSpxoT@)QU";
      stringArray0[5] = "7eSpxoT@)QU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "7eSpxoT@)QU", "7eSpxoT@)QU", "7eSpxoT@)QU", stringArray0, false, true);
      methodWriter0.visitIincInsn(2, 2);
      methodWriter0.visitVarInsn(9, 9);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2878, "~h[2g`#/LzZQO1aM", "2)N}R>*.2}UU5b", "2)N}R>*.2}UU5b", (String[]) null, false, false);
      methodWriter0.visitTypeInsn((-3140), "~h[2g`#/LzZQO1aM");
      methodWriter0.visitFieldInsn(723, "", "RuntimeVisibleParameterAnnotations", "#GE");
      Attribute attribute0 = new Attribute("Ljava/lang/Synthetic;");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitIntInsn((-3140), 2);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "RuntimeInvisibleAnnotations";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "BF", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      methodWriter0.visitInsn(0);
      int int0 = (-200);
      methodWriter0.visitFrame(0, 0, stringArray0, (-1261), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-200), "RuntimeInvisibleAnnotations", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      classWriter0.newClass("~h[2g`#/LzZWO1aM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "^;<W";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "2)N}R>*.2}UU5b", "d$evz ?2k\"/tTzK", "~h[2g`#/LzZWO1aM", stringArray0, false, false);
      methodWriter0.visitMethodInsn(200, "^;<W", "d$evz ?2k\"/tTzK", "^;<W");
      methodWriter0.visitVarInsn(7, 2);
      Label label0 = new Label();
      Label label1 = label0.successor;
      Object object0 = label0.info;
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-15));
      boolean boolean0 = ClassReader.RESIZE;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&|}U\u0003l*)";
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2022384927), "Class tfond", "QwQ3", "&|}U\u0003l*)", stringArray1, false, false);
      methodWriter0.signature = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-15), stringArray0, 643, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) methodWriter1;
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(1, 1236, objectArray0, (-2949), objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.MethodWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "Ljava/lang/Synthetic;", "int", " 3DJ*UOku]uC*cIM*?", (String[]) null, false, false);
      methodWriter0.visitTypeInsn((-16), "H=O");
      methodWriter0.visitFrame(73, (-3146), (Object[]) null, 1, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      ClassWriter classWriter0 = new ClassWriter(10);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = ClassReader.FRAMES;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE";
      stringArray0[1] = "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE";
      stringArray0[2] = "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, false, false);
      int int0 = Frame.UNINITIALIZED;
      methodWriter0.visitIincInsn((-345), 10);
      methodWriter0.visitFrame(2, 10, stringArray0, 10, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 10, stringArray0, 0, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1241));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-451), ":~flrEAq*buCO/", "LbXAxW:4", "LbXAxW:4", (String[]) null, false, false);
      methodWriter0.visitAnnotation("Synthetic", true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)29;
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-72), 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -72
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      classWriter0.newClass("~h[2g`#/LzZQO1aM");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "~h[2g`#/LzZQO1aM", "aIl#<XeIsTj#", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      methodWriter0.visitIincInsn(1807, 1807);
      methodWriter0.visitMultiANewArrayInsn("aIl#<XeIsTj#", (-2905));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitVarInsn(1445, 1807);
      methodWriter0.visitMaxs(1445, 127);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&|}U\u0003l*)";
      stringArray0[1] = "\"CZ`y?Ri";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 127, "\"CZ`y?Ri", "&|}U\u0003l*)", "\"CZ`y?Ri", stringArray0, false, false);
      boolean boolean0 = ClassReader.FRAMES;
      Label label0 = new Label();
      methodWriter0.visitJumpInsn((byte)36, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(127, "M,+D_l", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      classWriter0.newClass("~h[2g`#/LzZQO1aM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "d$evz ?2k\"/tTzK";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 329, "d$evz ?2k\"/tTzK", "d$evz ?2k\"/tTzK", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "I+h_|0V/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1928, "I+h_|0V/", "I+h_|0V/", "I+h_|0V/", stringArray0, false, false);
      methodWriter0.visitMaxs(1928, 0);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(2, 609);
      methodWriter0.visitVarInsn(1, 1742);
      methodWriter0.visitTypeInsn(166, "I+h_|0V/");
      methodWriter0.visitTypeInsn(26, "a/;C -&");
      methodWriter0.visitTypeInsn(166, "a/;C -&");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7eSHxoT@)U";
      stringArray0[1] = "7eSHxoT@)U";
      stringArray0[2] = "7eSHxoT@)U";
      stringArray0[3] = "7eSHxoT@)U";
      classWriter0.newClass("7eSHxoT@)U");
      stringArray0[4] = "7eSHxoT@)U";
      stringArray0[5] = "7eSHxoT@)U";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 6, "7eSHxoT@)U", "7eSHxoT@)U", "7eSHxoT@)U", stringArray0, true, true);
      methodWriter0.visitIincInsn(131, 131);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitVarInsn(3, 3);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1687);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1687, "", "d$evz ?2k\"/tTzK", "d$evz ?2k\"/tTzK", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      methodWriter0.getSize();
      methodWriter0.visitFieldInsn(297, "", "x!", "4lZVozSEqF");
      methodWriter0.visitLdcInsn("");
      methodWriter0.visitAnnotationDefault();
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-1463344227), "427P", (String) null, "427P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3022));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E))S=";
      stringArray0[1] = "E))S=";
      stringArray0[2] = "E))S=";
      stringArray0[3] = "E))S=";
      stringArray0[4] = "E))S=";
      stringArray0[5] = "E))S=";
      stringArray0[6] = "E))S=";
      stringArray0[7] = "E))S=";
      stringArray0[8] = "E))S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "E))S=", "E))S=", "E))S=", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter0.next = methodWriter0;
      boolean boolean0 = ClassReader.RESIZE;
      Label label0 = new Label();
      methodWriter2.next = methodWriter0.next;
      methodWriter0.next.visitLocalVariable("E))S=", "E))S=", "RuntimeVisibleAnnotations", label0, label0, (-3022));
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs((-3022), (-3022));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      classWriter0.newClass("~h[2g`#/LzZWO1aM");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "'^CMYcQP";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'^CMYcQP", "'^CMYcQP", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitLdcInsn("'^CMYcQP");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-230));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "StackMap", ")()eT_8 9<k>5{F", "d$evz ?2k\"/tTzK", stringArray0, false, true);
      methodWriter0.visitTypeInsn(2, "?=\fTr");
      methodWriter0.visitFieldInsn(1, "", "u?88", "IrnnerClasses");
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-230), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      byte[] byteArray0 = ClassWriter.TYPE;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "cJoH<qh", ")N}nR>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      classWriter0.threshold = (-2006461165);
      methodWriter0.visitMethodInsn(267386880, "cJoH<qh", "CornstantVa2ue", ")N}nR>*.2}UU5b");
      ByteVector byteVector0 = classWriter0.pool;
      boolean boolean0 = classWriter0.invalidFrames;
      methodWriter0.visitTypeInsn(186, "CornstantVa2ue");
      Attribute attribute0 = new Attribute("296'11\"Hj");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("CornstantVa2ue");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "aIl<XeIswj#";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      methodWriter0.visitFrame(1, 1, stringArray0, (-3170), stringArray0);
      classWriter0.newClassItem("SynZhetic");
      methodWriter0.visitLdcInsn("2)N}R>*.2}UU5b");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte) (-71));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -71
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " '";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " '");
      stringArray0[1] = " '";
      stringArray0[2] = " '";
      stringArray0[3] = " '";
      stringArray0[4] = " '";
      stringArray0[5] = " '";
      stringArray0[6] = " '";
      stringArray0[7] = " '";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " '");
      stringArray0[8] = " '";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, " '", " '", " '", stringArray0, false, false);
      methodWriter0.visitInsn(0);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      Label[] labelArray0 = new Label[10];
      methodWriter0.exceptionCount = 2;
      label0.info = (Object) label0;
      label0.next = labelArray0[0];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-636), labelArray0, 76, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2357);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\\fC9(Q`+";
      stringArray0[1] = "\\fC9(Q`+";
      stringArray0[2] = "\\fC9(Q`+";
      stringArray0[3] = "E$GLD8C";
      stringArray0[4] = "\\fC9(Q`+";
      stringArray0[5] = "\\fC9(Q`+";
      stringArray0[6] = "\\fC9(Q`+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2357, "\\fC9(Q`+", "\\fC9(Q`+", "\\fC9(Q`+", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLabel(label1);
      methodWriter0.visitLocalVariable("\\fC9(Q`+", "\\fC9(Q`+", "SourceFile", label1, label0, 1);
      methodWriter0.visitMethodInsn(1, "RuntimeInvisibleAnnotations", "\\fC9(Q`+", "LineNumberTable");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "aIl#<XeIsTj#";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      classWriter0.visitAnnotation("~h[2g`#/LzZQO1aM", false);
      methodWriter0.visitVarInsn(7, 2);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitAnnotation("RuntimeInvisibleParameterAnnotations", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1840);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "oE)So";
      stringArray0[1] = "`9";
      stringArray0[2] = ")N}R>*.2}UU#b";
      stringArray0[3] = "`9";
      stringArray0[4] = "`9";
      stringArray0[5] = "oE)So";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1151, "oE)So", "`9", "oE)So", stringArray0, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Label label0 = new Label();
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "`9");
      methodWriter1.visitMaxs(3, 2);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      classWriter0.newClass("~h[2g`#/LzZWO1aM");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "'^CMYcQP";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'^CMYcQP", "'^CMYcQP", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "uK*=)[CnX]m");
      ClassWriter classWriter0 = new ClassWriter(16);
      Integer integer0 = new Integer(16);
      String[] stringArray0 = new String[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[0] = "uK*=)[CnX]m";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "uK*=)[CnX]m", "uK*=)[CnX]m", "uK*=)[CnX]m", stringArray0, false, false);
      byte[] byteArray0 = new byte[5];
      methodWriter0.classReaderLength = 2608;
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      boolean boolean0 = ClassReader.RESIZE;
      Label label0 = new Label();
      methodWriter1.visitJumpInsn((byte) (-56), label0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      label0.getFirst();
      Edge edge0 = label0.successors;
      Label label1 = label0.getFirst();
      methodWriter0.visitLocalVariable("LocalVariableTypeTable", "uK*=)[CnX]m", (String) null, label0, label1, 2878);
      methodWriter1.visitIntInsn(2878, 6);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777169);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LOZgO1a/";
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringArray0[1] = "~h[2g`#/LOZgO1a/";
      stringArray0[2] = "~h[2g`#/LOZgO1a/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777169, "~h[2g`#/LOZgO1a/", "~h[2g`#/LOZgO1a/", "~h[2g`#/LOZgO1a/", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      methodWriter0.visitMultiANewArrayInsn("~h[2g`#/LOZgO1a/", 1);
      methodWriter0.visitIincInsn(2, 16777169);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      label0.toString();
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(4, 16777169, label0, labelArray0);
      methodWriter0.visitFrame(4, 1, stringArray0, 4, stringArray0);
      methodWriter0.visitMethodInsn(4, "~h[2g`#/LOZgO1a/", "~h[2g`#/LOZgO1a/", "~h[2g`#/LOZgO1a/");
      MethodWriter methodWriter1 = methodWriter0.next;
      int int0 = Type.SHORT;
      int int1 = MethodWriter.readUnsignedShort(byteArray0, 0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      String string0 = "2)N}R>*.2}UU5b";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJuH,<qh", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      methodWriter0.visitIntInsn(186, (-3291));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn((-3291), (String) null, "<untimeInvisibleParam:terAnnotations", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Sy.tetic";
      stringArray0[1] = "Sy.tetic";
      stringArray0[2] = "Sy.tetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJuH,<qh", "2)N}R>*.2}wU5b", "Sy.tetic", stringArray0, false, false);
      methodWriter0.classReaderLength = (-2);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitIntInsn(2, 2);
      methodWriter1.visitFrame(2, 7, stringArray0, 7, stringArray0);
      int int0 = Frame.ELEMENT_OF;
      Edge edge0 = new Edge();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitEnd();
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A=nUm~";
      stringArray0[1] = "A=nUm~";
      stringArray0[2] = "";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "2)N}R>*.2}UU5b", "P+j0KsVBTl}r{V}8)M'", "A=nUm~", stringArray1, true, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(0, "A=nUm~", "", "P+j0KsVBTl}r{V}8)M'");
      Integer integer0 = new Integer(197);
      methodWriter0.visitLdcInsn("A=nUm~");
      methodWriter0.visitFrame(2, 0, stringArray1, 197, stringArray0);
      methodWriter0.visitCode();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A=nUm~";
      stringArray0[1] = "A=nUm~";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      String[] stringArray1 = new String[1];
      stringArray1[0] = "P+j0KsVBTl}r{V}8)M'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "2)N}R>*.2}UU5b", "P+j0KsVBTl}r{V}8)M'", "A=nUm~", stringArray1, true, true);
      methodWriter0.visitTypeInsn(197, "A=nUm~");
      Attribute attribute0 = new Attribute(stringArray0[2]);
      methodWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.putByte(2);
      byteVector2.put11(3, 647);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1273));
      FieldWriter fieldWriter0 = classWriter0.firstField;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "d$evz ?2k\"/tTzK";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = "";
      stringArray0[3] = "d$evz ?2k\"/tTzK";
      stringArray0[4] = "RuntimeInvisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "d$evz ?2k\"/tTzK", "RuntimeInvisibleAnnotations", "", stringArray0, false, false);
      methodWriter0.visitInsn(28);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      MethodWriter.getNewOffset(intArray0, intArray0, 1188, 0);
      methodWriter0.visitParameterAnnotation(201, "Ljava/lang/Synthetic;", true);
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = "&|}U\u0003l*)";
      stringArray0[3] = "d$evz ?2k\"/tTzK";
      stringArray0[4] = "RuntimeInvisibleAnnotations";
      stringArray0[5] = "RuntimeInvisibleAnnotations";
      stringArray0[6] = "RuntimeInvisibleAnnotations";
      stringArray0[7] = "RuntimeInvisibleAnnotations";
      stringArray0[8] = "&|}U\u0003l*)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      int[] intArray0 = new int[6];
      intArray0[1] = 0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "RuntimeInvisibleAnnotations");
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitVarInsn(1742, 1);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "aIl#<XeIsTj#";
      stringArray0[1] = "aIl#<XeIsTj#";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      classWriter0.newNameTypeItem("aIl#<XeIsTj#", "aIl#<XeIsTj#");
      Label label0 = new Label();
      label0.status = (-4409);
      Label label1 = label0.getFirst();
      label1.next = label0;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label1, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " '";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      stringArray0[1] = " '";
      stringArray0[2] = " '";
      stringArray0[3] = " '";
      stringArray0[4] = " '";
      stringArray0[5] = " '";
      stringArray0[6] = " '";
      stringArray0[7] = " '";
      stringArray0[8] = " '";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, " '", " '", " '", stringArray0, false, false);
      methodWriter0.visitInsn(2);
      int[] intArray0 = new int[7];
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      Label[] labelArray0 = new Label[2];
      methodWriter0.visitMethodInsn(0, "b&", "", " '");
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 15, labelArray0, 2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newClass("~h[2g`#/LzZQO1aM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "2)NrR>*.2}UU5b";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      Item item0 = classWriter0.key2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)NR^%.2}F@UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      methodWriter0.visitAnnotationDefault();
      classWriter0.newNameTypeItem("~h[2g`#/LzZQO1aM", "2)NrR>*.2}UU5b");
      methodWriter0.visitVarInsn(184, (-2543));
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "d$evz ?2k\"/tTzK";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "d$evz ?2k\"/tTzK";
      int[] intArray0 = new int[10];
      intArray0[1] = 695;
      Label label0 = new Label();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1972063998), "d$evz ?2k\"/tTzK", "", "biRb;j?Rq{DL*_tE", stringArray0, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      classWriter0.newClass("~h[2g`#/LzZQO1aM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "^;<W";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "^;<W", "2)N}R>*.2}UU5b", "2)N}R>*.2}UU5b", stringArray0, true, false);
      Integer integer0 = new Integer(695);
      methodWriter0.visitLdcInsn("^;<W");
      methodWriter0.visitIntInsn(2, 1812);
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*2}UU5b";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      methodWriter0.visitIincInsn(2, 723);
      methodWriter0.visitFrame(4, 1, stringArray0, (-3170), stringArray0);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(723, label0);
      ByteVector byteVector0 = new ByteVector();
      label0.put(methodWriter0, byteVector0, (-1895), false);
      methodWriter0.visitLineNumber((-3181), label0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      String string0 = "Synthetic";
      String string1 = "cJuH,<qh";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "cJuH,<qh";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 26, "Synthetic", "2)N}R>*.2}UU5b", "cJuH,<qh", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(34, 1783);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.newDouble(3782.097447);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Sy.tetic";
      stringArray0[1] = "Sy.tetic";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[2] = "Sy.tetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJuH,<qh", "2)N}R>*.2}wU5b", "Sy.tetic", stringArray0, true, true);
      Item[] itemArray0 = new Item[0];
      classWriter0.typeTable = itemArray0;
      classWriter0.visitAnnotation("Sy.tetic", false);
      methodWriter0.visitFrame(2, 7, stringArray0, 7, stringArray0);
      int[] intArray0 = new int[18];
      intArray0[0] = 2;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 7, 7);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A=nUm~");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      stringArray0[1] = "";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "d$evz ?2k\"/tTzK", "", stringArray0, false, false);
      methodWriter0.visitTypeInsn((-2813), "2)N}R>*.2}UU5b");
      Attribute attribute0 = new Attribute("");
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "?=\fTr");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitIntInsn(93, (-2813));
      methodWriter0.visitFrame(2, (-611), stringArray0, 2, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(1);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(687);
      classWriter0.newFieldItem("RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)38;
      byteArray0[4] = (byte)0;
      boolean boolean0 = ClassReader.SIGNATURES;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "j";
      classWriter0.newFloat(687);
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      stringArray0[2] = "j";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 687, "j", "j", "j", stringArray0, false, false);
      int int0 = 112;
      boolean boolean1 = ClassReader.WRITER;
      methodWriter0.visitLdcInsn("RuntimeVisibleParameterAnnotations");
      methodWriter0.classReaderOffset = (int) (byte)38;
      ByteVector byteVector0 = new ByteVector(70);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(689);
      classWriter0.newFieldItem("RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations");
      boolean boolean0 = ClassReader.SIGNATURES;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "j";
      classWriter0.newFloat(689);
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      stringArray0[2] = "j";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 689, "j", "j", "j", stringArray0, false, false);
      methodWriter0.visitIntInsn(112, 112);
      boolean boolean1 = ClassReader.WRITER;
      methodWriter0.visitLdcInsn("RuntimeVisibleParameterAnnotations");
      methodWriter0.visitMethodInsn(186, "j", "`meV/ YJ4", "j");
      methodWriter0.visitTypeInsn(689, "Ga=7ZqxI|kf(");
      Label label0 = new Label();
      Label label1 = label0.next;
      Edge edge0 = label0.successors;
      assertNull(edge0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      String[] stringArray0 = new String[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      classWriter0.newField("", "~h[2g`#/LzZQO1aM", "{\n\"}H^Pcee&t");
      classWriter0.visitAnnotation("~h[2g`#/LzZQO1aM", false);
      methodWriter0.visitVarInsn(7, 2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~h[2g`#/LzZQO1aM");
      methodWriter0.visitFrame(49, 49, stringArray0, 695, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(7);
      ByteVector byteVector2 = byteVector1.putByte(3);
      methodWriter0.getSize();
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "I?!_hV.C8V(");
      methodWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(2, "Deprecated", "Deprecated", "Deprecated", (Object) null);
      assertNotNull(fieldVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "]y)tetic";
      stringArray0[1] = "]y)tetic";
      stringArray0[2] = "]y)tetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "]y)tetic", "]y)tetic", "]y)tetic", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(30, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-345), (-3021));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 10, stringArray0, 10, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 10, stringArray0, 0, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "/2K{*33=z/N/ <r2L_S", "", "d$evz ?2k\"/tTzK", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn((-1390));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.lastMethod = methodWriter0;
      methodWriter0.visitIntInsn((-1482), 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      label0.successors = null;
      Edge edge2 = label0.successors;
      assertNull(edge2);
      
      Edge edge3 = new Edge();
      assertNotNull(edge3);
      assertFalse(edge3.equals((Object)edge0));
      
      Label label1 = edge3.successor;
      assertNull(label1);
      
      methodWriter0.visitLineNumber(283, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte) (-1);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "d$evz ?2k\"/tTzK";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "-~h[2g`#/L{zZQO1ae", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newConstItem("Synthetic");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(83, (-3291));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.threshold = 83;
      methodWriter0.visitFrame(2, (-3291), stringArray0, (-2543), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(695);
      assertEquals(695, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn("d$evz ?2k\"/tTzK");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "2)N}R>*.2}UU5b";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)N}R>*.2}UU5b", "2)N}R>*.2}UU5b", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-6451), "2)N}R>*.2}UU5b", "Ea>w{it{)`f", "~h[2g`#/LzZQO1aM");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(695);
      assertEquals(695, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn("2)N}R>*.2}UU5b");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("d$evz ?2k\"/tTzK", "^;<W", "2)N}R>*.2}UU5b");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((-2543), 127);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-1712), 695);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1712
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "]y)tetic";
      stringArray0[1] = "]y)tetic";
      stringArray0[2] = "]y)tetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "]y)tetic", "]y)tetic", "]y)tetic", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(30, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(659, 30, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-345), 247);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 10, stringArray0, 10, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 10, stringArray0, 0, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I+h_|0V/";
      stringArray0[1] = "I+h_|0V/";
      stringArray0[2] = "I+h_|0V/";
      stringArray0[3] = "I+h_|0V/";
      stringArray0[4] = "I+h_|0V/";
      stringArray0[5] = "I+h_|0V/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "7eSpxoT@)QU", "7eSpxoT@)QU", "I+h_|0V/", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(1, "7eSpxoT@)QU", "I+h_|0V/", "I+h_|0V/");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 1950;
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-2543));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "`M";
      stringArray0[2] = "`M";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "`M", "`M", "Synthetic", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2, "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-129);
      methodWriter0.visitIntInsn(186, (-3291));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("`M", "Synthetic", "Synthetic", label0, label0, 932);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(101, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3994), "`M", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "VI";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[2] = "VI";
      stringArray0[3] = "VI";
      stringArray0[4] = "VI";
      classWriter0.version = 695;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "VI", "VI", "VI", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(283, 695);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[10];
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1972063998), "VI", "VI", "biRb;j?Rq{DL*_tE", stringArray0, false, false);
      assertNotNull(methodWriter1);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label1, label0);
      assertSame(label0, label1);
      
      labelArray0[1] = label1;
      labelArray0[2] = label0;
      methodWriter1.visitTableSwitchInsn(200, 200, label0, labelArray0);
      assertSame(label0, label1);
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(65, 2);
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(0);
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(200, "|3FOj=H+}AE.Fy]I^K", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "I+h_|0V/";
      stringArray0[1] = "I+h_|0V/";
      stringArray0[2] = "I+h_|0V/";
      stringArray0[3] = "I+h_|0V/";
      stringArray0[4] = "I+h_|0V/";
      stringArray0[5] = "I+h_|0V/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "7eSpxoT@)QU", "7eSpxoT@)QU", "I+h_|0V/", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(1950, 1950);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(9, 9);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("~h[2g`#/LzZQO1aM");
      assertEquals(2, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "2)N}R>*.2}UU5b";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      Item item0 = classWriter0.newInteger((-2164));
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)NR^%.2}F@UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newNameTypeItem("~h[2g`#/LzZQO1aM", "2)N}R>*.2}UU5b");
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(187, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(1, 183);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Member.PUBLIC;
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "~h[2g`#/LzZQO1aM", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "t2)NrR>*.2}UU5b";
      stringArray0[1] = "t2)NrR>*.2}UU5b";
      stringArray0[2] = "t2)NrR>*.2}UU5b";
      int int0 = classWriter0.newConst("t2)NrR>*.2}UU5b");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.2}UU5b", "t2)NrR>*.2}UU5b", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("{)~D&");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 695);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      stringArray0[1] = "t2)NrR>*.2}UU5b";
      stringArray0[2] = "t2)NrR>*.2}UU5b";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.2}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-1461511761), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFrame(695, 695, stringArray0, (-1856118277), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label0.info = (Object) label1;
      // Undeclared exception!
      try { 
        label1.getOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Label offset position has not been resolved yet
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Ljava/lang/Synthetic;", "d2)N}R2T>*.2}UU5", "Ljava/lang/Synthetic;", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label2 = edge0.successor;
      assertNull(label2);
      
      Item item0 = classWriter0.newFloat(1175.0786F);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(695, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#$evz ?2k\"/tTz";
      stringArray0[1] = "#$evz ?2k\"/tTz";
      stringArray0[2] = "#$evz ?2k\"/tTz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "#$evz ?2k\"/tTz", "2)N}R>*.2}UU5b", "#$evz ?2k\"/tTz", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitTypeInsn(1, "#$evz ?2k\"/tTz");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      methodWriter0.classReaderOffset = (-1006);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("Exceptions", ":wlN\"Q1#I#Dd", "h1X;\"5LWo=");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(45);
      assertEquals(45, (int)integer0);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      
      methodWriter0.visitLdcInsn("h1X;\"5LWo=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn((-1006), 45, label0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2}UU5b";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 723);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(4, 1, stringArray0, (-3170), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitMethodInsn(723, "~h[2g`#/LzZQO1aM", "uw**s", "2)N}R>*.2}UU5b");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("~h[2g`#/LzZQO1aM");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newConstItem("7eSpxoT@)QU");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7eSpxoT@)QU";
      stringArray0[1] = "7eSpxoT@)QU";
      stringArray0[2] = "7eSpxoT@)QU";
      stringArray0[3] = "7eSpxoT@)QU";
      stringArray0[4] = "7eSpxoT@)QU";
      stringArray0[5] = "7eSpxoT@)QU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "7eSpxoT@)QU", "7eSpxoT@)QU", "7eSpxoT@)QU", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("7eSpxoT@)QU", (String) null, (String) null, 17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(9, 9);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("k-Q|}~", (-1198));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("~h[2g`#/LzZQO1aM");
      assertEquals(2, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitTypeInsn(2, "org.objectweb.asm.jip.Type");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("~h[2g`#/LzZQO1aM");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("0>Npt/", 17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A=nUm~";
      stringArray0[1] = "A=nUm~";
      stringArray0[2] = "A=nUm~";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "P+j0KsVBTl}r{V}8)M'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "2)N}R>*.2}UU5b", "P+j0KsVBTl}r{V}8)M'", "A=nUm~", stringArray1, true, true);
      assertNotNull(methodWriter0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(197, "A=nUm~");
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("A=nUm~");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("StackMap", "A=nUm~", "LocalVariableTable");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("~h[2g`#/LzZQO1aM");
      assertEquals(2, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "d$evz ?2k\"/tTzK";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(1, "~h[2g`#/LzZQO1aM", "d$evz ?2k\"/tTzK", "~h[2g`#/LzZQO1aM");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(695);
      assertEquals(695, (int)integer0);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      
      methodWriter0.visitLdcInsn("d$evz ?2k\"/tTzK");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2, "d$evz ?2k\"/tTzK");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("cJoH<qh");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      Item item0 = classWriter0.newFieldItem("2)N}R>*.2}UU5b", "LocalVariableTable", "cJoH<qh");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(180);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")S.=";
      stringArray0[1] = ")S.=";
      stringArray0[2] = "";
      stringArray0[3] = ")S.=";
      stringArray0[4] = ")S.=";
      stringArray0[5] = ")S.=";
      stringArray0[6] = ")S.=";
      stringArray0[7] = ")S.=";
      stringArray0[8] = ")S.=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3140), ")S.=", "2)N}R>*.2}UU5b", "Ljava/lang/Synthetic;", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute(")S.=");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisibleAnnotations");
      assertFalse(boolean0);
      
      Item item0 = classWriter0.newLong(21);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(16, 35);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newClass("~h[2g`#/LzZQO1aM");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 2721, stringArray0, 33, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(4, "[]", ".s.IFJDCS", "2)N}R>*.2}UU5b");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(673);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      int int0 = classWriter0.addType("Exceptions");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[1] = "t2)NrR>*.}UU5b";
      stringArray0[2] = "t2)NrR>*.}UU5b";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "J|Hqh", "t2)NrR>*.}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      FieldWriter fieldWriter1 = classWriter0.firstField;
      assertNull(fieldWriter1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter1.visitCode();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1312, ";", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "t2)NrR>*.2}UU5b";
      stringArray0[1] = "t2)NrR>*.2}UU5b";
      stringArray0[2] = "t2)NrR>*.2}UU5b";
      int int0 = classWriter0.newConst("t2)NrR>*.2}UU5b");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.2}UU5b", "t2)NrR>*.2}UU5b", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("{)~D&");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitMethodInsn(695, ".s.IFJDCS", "cJoH<qh", "{)~D&");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn(695, "UZ.X");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute1 = new Attribute("?W8e(");
      assertNotNull(attribute1);
      assertTrue(attribute1.isUnknown());
      assertFalse(attribute1.isCodeAttribute());
      assertFalse(attribute1.equals((Object)attribute0));
      
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = false;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      int int0 = classWriter0.addType("g86GK76");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "Synthetic", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newDouble(683.903884506);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("2)N}R>*.2}UU5b", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(186, (-864));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newFieldItem("Synthetic", "S9uR/Q+YOHA<rJ", "S9uR/Q+YOHA<rJ");
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(68, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("2)N}R>*.2}UU5b");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "Synthetic", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      stringArray0[1] = "t2)NrR>*.2}UU5b";
      stringArray0[2] = "t2)NrR>*.2}UU5b";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.2}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      frame0.owner = label0;
      methodWriter0.visitJumpInsn(178, label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ClassWriter@5
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 4;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@rvy";
      stringArray0[1] = "oE)So";
      stringArray0[2] = "@rvy";
      stringArray0[3] = "oE)So";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "oE)So", "oE)So", "@rvy", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(695, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      stringArray0[2] = "7)S=";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3165), "7)S=", "7)S=", "LjavaTlang/Synthetic;", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, (-1341));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      label0.frame = null;
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("P:F R3*tJ", false);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.addToSubroutine(1, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(12, label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, 723);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitMethodInsn(723, "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte) (-1), 99, stringArray0, 3140, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      stringArray0[2] = "7)S=";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3140), "7)S=", "7)S=", "Ljava/lang/Synthetic;", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = null;
      methodWriter0.visitTypeInsn(19, "7)S=");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7)S=");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("7)S=");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      methodWriter0.visitIntInsn(16, 16);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(69, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, (-2602));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "'QOloo`D8", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(186, (-3291));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertEquals("L14", string0);
      assertNotNull(string0);
      
      Item item0 = classWriter0.newClassItem("L14");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 64;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(1, 64, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2672, 178, stringArray0, 188, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 188, labelArray0, 0, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("~h[2g`#/LzZQO1aM");
      assertEquals(2, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn((-2716), 17, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3033), "2)N}R>*.2}UU5b", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3033
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      int int0 = classWriter0.addType("g86GK76");
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "Synthetic", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newDouble(683.903884506);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("2)N}R>*.2}UU5b", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-958), 6, stringArray0, (-2267), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(186, (-864));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "S9uR/Q+YOHA<rJ";
      Item item1 = classWriter0.newFieldItem("Synthetic", "S9uR/Q+YOHA<rJ", "S9uR/Q+YOHA<rJ");
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(76, int1);
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("2)N}R>*.2}UU5b");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "Synthetic", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = classWriter0.newClass("~h[2g`#/LzZQO1aM");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "2)NrR>*.2}UU5b";
      stringArray0[2] = "2)NrR>*.2}UU5b";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJoH<qh", "2)NrR>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(184, (-2543));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((-1091), 183);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Frame.SHORT;
      assertEquals(16777228, int1);
      assertFalse(int1 == int0);
      
      methodWriter0.visitMethodInsn(184, "LocalVariableTable", "2)NrR>*.2}UU5b", "2)NrR>*.2}UU5b");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1838, "2)NrR>*.2}UU5b", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1838
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^<W");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(16);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[1];
      classWriter0.version = (-262);
      stringArray0[0] = ".";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, ".", ".", ".", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(16, 16, stringArray0, (-1290), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1795, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(16, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(23, 16, stringArray0, 16, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[7];
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put11(255, (-64));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "C";
      stringArray0[1] = "C";
      stringArray0[2] = "";
      stringArray0[3] = "C";
      stringArray0[4] = "C";
      stringArray0[5] = "C";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      stringArray0[6] = "C";
      stringArray0[7] = "C";
      stringArray0[8] = "C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3140), "C", "2)N}R>*.2}UU5b", "Ljava/lang/Synthetic;", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(1, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-2515), "cbvLVx\bFB.6J+UB", "", "C");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter0;
      int int0 = methodWriter0.next.getSize();
      assertEquals(78, int0);
      assertSame(methodWriter0.next, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(83, 83);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitLineNumber(188, label0);
      assertSame(methodWriter0.next, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      int int1 = methodWriter0.next.getSize();
      assertEquals(92, int1);
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 644);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 644
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 12;
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      stringArray0[2] = "7)S=";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3165), "7)S=", "7)S=", "7)S=", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, (-1341));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(74, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = frame0.owner;
      assertNull(label1);
      
      label0.next = null;
      methodWriter0.visitJumpInsn(12, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-3165), 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "d$evz ?2k\"/tTzK";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "d2)N}R2T>*.2}UU5";
      stringArray0[1] = "d2)N}R2T>*.2}UU5";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "d2)N}R2T>*.2}UU5", "d2)N}R2T>*.2}UU5", "d2)N}R2T>*.2}UU5", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(695);
      assertEquals(695, (int)integer0);
      assertNotNull(integer0);
      
      byte[] byteArray0 = new byte[18];
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(30, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(17, (byte)0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 30);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(636);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java/lag/dyn/Dynamic");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2)N}R>*.2dX5b";
      stringArray0[1] = "2)N}R>*.2dX5b";
      stringArray0[2] = "java/lag/dyn/Dynamic";
      boolean boolean2 = ClassReader.ANNOTATIONS;
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "java/lag/dyn/Dynamic", "2)N}R>*.2dX5b", "2)N}R>*.2dX5b", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      boolean boolean3 = ClassReader.RESIZE;
      assertTrue(boolean3);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("java/lag/dyn/Dynamic", "LO)(", "LO)(", label0, label0, 1);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      methodWriter0.visitMethodInsn(6, "2)N}R>*.2dX5b", "2)N}R>*.2dX5b", "2)N}R>*.2dX5b");
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter4 = methodWriter0.next;
      assertNull(methodWriter4);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      int int1 = Frame.SHORT;
      assertEquals(16777228, int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A=nUm~";
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[1] = "A=nUm~";
      stringArray0[2] = "";
      stringArray0[3] = "A=nUm~";
      stringArray0[4] = "A=nUm~";
      stringArray0[5] = "A=nUm~";
      stringArray0[6] = "A=nUm~";
      stringArray0[7] = "A=nUm~";
      stringArray0[8] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3140), "A=nUm~", "2)N}R>*.2}UU5b", "Cav6langSyZnhtic~", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("A=nUm~");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.next = methodWriter0;
      methodWriter0.visitMaxs(12, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.next.visitMultiANewArrayInsn("A=nUm~", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<init>";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 185, "<init>", "<init>", "<init>", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(670);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^P2)N}R>*.2UU5b";
      stringArray0[1] = "^P2)N}R>*.2UU5b";
      stringArray0[2] = "d$ev&za?2k\"/StTzK";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(268435455, "java/lag/dyn/Dynamic", "'^bMeQ*QP", "java/lag/dyn/Dynamic", 2);
      assertNotNull(fieldVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "java/lag/dyn/Dynamic", "^P2)N}R>*.2UU5b", "^P2)N}R>*.2UU5b", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(670, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(268435455, "Ea>w{iOt{Gf", "^P2)N}R>*.2UU5b", "HO;r(T5CmvK$:D;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("sNqSb");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("wHqY4bb", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("sNqSb", 36);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitLineNumber((-3191), label0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 36);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 36
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "d$ev&za?2k\"/StTzK";
      stringArray0[1] = "d$ev&za?2k\"/StTzK";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      stringArray0[2] = "d$ev&za?2k\"/StTzK";
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "2)N}R>*.2}UU5b", "d$ev&za?2k\"/StTzK", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[1];
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      label0.line = 2;
      ByteVector byteVector1 = byteVector0.putInt(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putInt(4073);
      assertNotNull(byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector3 = byteVector2.putInt((-2));
      assertNotNull(byteVector3);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn((-2716), 17, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-2), "2)N}R>*.2}UU5b", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "`M";
      stringArray0[2] = "`M";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2543), "cJuH,<qh", "`M", "Synthetic", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.version = (-129);
      methodWriter0.visitIntInsn(186, (-3291));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("`M", "Synthetic", "Synthetic", label0, label0, 932);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Synthetic");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Edge edge0 = label1.successors;
      assertNull(edge0);
      
      methodWriter0.visitLocalVariable("cJuH,<qh", "LXro/iE8.zK;?AVZ;", (String) null, label1, label0, 186);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "`M";
      stringArray0[2] = "`M";
      FieldVisitor fieldVisitor0 = classWriter0.visitField(4, " &RiPNg$80?Nt'CsXn1", "Synthetic", "`M", "`M");
      assertNotNull(fieldVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "Synthetic", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(186, (-864));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("Exceptions", "S9uR/Q+YOHA<rJ", "S9uR/Q+YOHA<rJ");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("`M", "2)N}R>*.2}UU5b", "2)N}R>*.2}UU5b", label0, label0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(92, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderLength = 695;
      // Undeclared exception!
      try { 
        label0.addToSubroutine((-2393L), 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(673);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      int int0 = classWriter0.addType("Exceptions");
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[1] = "t2)NrR>*.}UU5b";
      stringArray0[2] = "t2)NrR>*.}UU5b";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("zHXl7B96#\tn");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(173, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("t2)NrR>*.}UU5b");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("zHXl7B96#\tn", "Exceptions", "{**aCzY}e3K", 673);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(517, (-126));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(517, 278);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(656);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synvthetyic";
      stringArray0[1] = "Synvthetyic";
      stringArray0[2] = "Synvthetyic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2)N}R>*.2}UU5b", "2)N}R>*.2}UU5b", "Synvthetyic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((-89), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.invalidFrames = false;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.visitFieldInsn(1, "Synvthetyic", "2)N}R>*.2}UU5b", "Synvthetyic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synvthetyic", "2)N}R>*.2}UU5b", "Synvthetyic", "D(p@$.!k|\"}r");
      assertNotNull(fieldWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstField = fieldWriter0;
      methodWriter0.visitLdcInsn("Synvthetyic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(61, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("Synvthetyic", 192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, (Label) null, "Synvthetyic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-283), 292552704);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3055));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "oE)So";
      stringArray0[1] = "oE)So";
      stringArray0[2] = "oE)So";
      stringArray0[3] = "oE)So";
      stringArray0[4] = "oE)So";
      stringArray0[5] = "oE)So";
      stringArray0[6] = "oE)So";
      stringArray0[7] = "oE)So";
      stringArray0[8] = "oE)So";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "oE)So", "oE)So", "oE)So", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "oE)So");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(2, (-1032));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1840);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newLong(1840);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LO)(");
      assertFalse(boolean0);
      
      stringArray0[0] = "LO)(";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LO)(", "LO)(", ";M", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      int int0 = classWriter0.newClass("2&n~oC>2");
      assertEquals(6, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.visitSubroutine(label1, 1840, 6);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLocalVariable("LO)(", "LO)(", "2&n~oC>2", label1, label1, 6);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LO)(");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(1840);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      label0.position = 168;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean2 = ClassReader.RESIZE;
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("QQ3", false);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      Label label3 = new Label();
      assertNotNull(label3);
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label2));
      
      methodWriter1.visitLocalVariable("~o?:Q+.')bl", "r?w6k5ar$W'ky3!1@ .", "RuntimeVisibleAnnotations", label3, label1, 50331648);
      assertNotSame(label3, label1);
      assertNotSame(label3, label0);
      assertNotSame(label3, label2);
      assertNotSame(label0, label3);
      assertNotSame(label0, label2);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotSame(label1, label3);
      assertNotSame(label1, label2);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label2));
      assertFalse(label0.equals((Object)label3));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label3));
      assertFalse(label1.equals((Object)label2));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(168, 1840);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "~h[2g`#/LzZQO1aM";
      stringArray0[1] = "~h[2g`#/LzZQO1aM";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "cJoH<qh", ")N}nR>*.2}UU5b", "~h[2g`#/LzZQO1aM", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.threshold = (-2006461165);
      methodWriter0.visitMethodInsn(3, "cJoH<qh", "ConstantValue", ")N}nR>*.2}UU5b");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(51, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(17, 16711680);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(17, 16711680, stringArray0, 256, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2006461165));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      int int0 = classWriter0.addUninitializedType("java/lang/Throwable", 12);
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[2] = "java/lang/Throwable";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3166), "7)S=", "7)S=", "LjavaTlang/Syntetic;", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("java/lang/Throwable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("7)S=");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "boolean");
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(9, "od", "7)S=", "7)S=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitInnerClass((String) null, "d{ghFCyV9vWC=N;C", "7)S=", 745);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(16, 16);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, (-2644));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      methodWriter0.visitVarInsn(1, (-83));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean3 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-24);
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte) (-24));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -24
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.DIM;
      assertEquals((-268435456), int0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "'QOloo`D8", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(186, (-3291));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMultiANewArrayInsn("RuntimeVisibleParameterAnnotations", 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.visitInnerClass("Code", ".jar", "d4ghFCRGV9vWCWN;C", (-3291));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 1);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(186, "LineNumberTable", "d4ghFCRGV9vWCWN;C", "LineNumberTable");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "br/V^";
      int int0 = classWriter0.addType("br/V^");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[1] = "br/V^";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray0[2] = "t2)NrR1>*.2}UU5b";
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<q9h", "t2)NrR1>*.2}UU5b", "br/V^", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label1.next = label0;
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "br/V^");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = ClassReader.RESIZE;
      assertTrue(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {}, intArray0);
      assertSame(label0, label1);
      
      methodWriter0.visitJumpInsn(172, label0);
      assertSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(695, 1442);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = label1.successors;
      assertNull(edge0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "Synthetic";
      stringArray0[2] = "Synthetic";
      FieldVisitor fieldVisitor0 = classWriter0.visitField(695, " &RiPNg80?Nt'CsXn1", "Synthetic", "Synthetic", "Synthetic");
      assertNotNull(fieldVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 695, "'QOlDo`D8", "2)N}R>*.2}UU5b", "Synthetic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(186, (-3291));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2, "Code", "d4ghFCRGV9vWCWN;C", "2)N}R>*.2}UU5b");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 1);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-3291), 2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      stringArray0[1] = "t2)NrR>*.}UU5b";
      stringArray0[2] = "t2)NrR>*.}UU5b";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("zHXl7B96#\tn");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(184, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zHXl7B96#\tn");
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(178, "-~h[2g`#/L{zZQO1ae", "-~h[2g`#/L{zZQO1ae", "-~h[2g`#/L{zZQO1ae");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(184, "t2)NrR>*.}UU5b", "t2)NrR>*.}UU5b", "t2)NrR>*.}UU5b");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstField = null;
      methodWriter0.visitTypeInsn(80, "AAjz");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "t2)NrR>*.2}UU5b";
      stringArray0[1] = "t2)NrR>*.2}UU5b";
      stringArray0[2] = "t2)NrR>*.2}UU5b";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.2}UU5b", "t2)NrR>*.2}UU5b", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 169;
      Attribute attribute0 = new Attribute("\"GP/)jw?Q5C)");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      int int1 = 195;
      methodWriter0.visitVarInsn(195, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(695, 169);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newNameType("QQ3", "&|}U\u0003l*)");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Deprecated");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "QQ3";
      stringArray0[1] = "d$evz ?2k\"/tTzK";
      stringArray0[2] = "d$evz ?2k\"/tTzK";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 127, "&|}U\u0003l*)", "&|}U\u0003l*)", "&|}U\u0003l*)", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFrame(3, 256, stringArray0, 3, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(178);
      assertEquals(178, (int)integer0);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(910);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      assertNotNull(bufferedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(bufferedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.BufferedInputStream@4fb18abd
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "aIl#<XeIsTj#";
      stringArray0[1] = "aIl#<XeIsTj#";
      stringArray0[2] = "~h[2g`#/LzZQO1aM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 723, "2)N}R>*.2}UU5b", "~h[2g`#/LzZQO1aM", "~h[2g`#/LzZQO1aM", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newNameTypeItem("aIl#<XeIsTj#", "aIl#<XeIsTj#");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = (-4409);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label1.next = label0;
      methodWriter0.visitJumpInsn(144, label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(7, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(723, "~h[2g`#/LzZQO1aM", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(695);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      stringArray0[1] = "-~h[2g`#/L{zZQO1ae";
      stringArray0[2] = "t2)NrR>*.2}UU5b";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "cJoH<qh", "t2)NrR>*.2}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label0.info = (Object) label1;
      methodWriter0.visitJumpInsn(168, label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1000, 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ClassWriter@5
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(267386880);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      stringArray0[2] = "7)S=";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3166), "7)S=", "7)S=", "7)S=", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      classWriter0.firstField = null;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("7)S=", "Ljava/lang/Synthetic;", "C]><Q'D9", label0, label0, (byte)73);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("7)S=");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[3] = (-3166);
      intArray0[4] = 15;
      methodWriter1.visitMaxs(15, 2868);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("7)S=", false);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      methodWriter0.visitLineNumber(0, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, (-83));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean3 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-24);
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("7)S=", "n/~B:Luh)v|~(");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      int int0 = classWriter0.addUninitializedType("jva/lang/Throwable", 12);
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[2] = "jva/lang/Throwable";
      stringArray0[3] = "n/~B:Luh)v|~(";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "n/~B:Luh)v|~(";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3166), "7)S=", "7)S=", "LjavaTlang/Syntetic;", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("jva/lang/Throwable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 178;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "boolean");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte((-4));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(82, int1);
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label1, label1, label1, "7)S=");
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(687);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.addType("j");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeVisibleParameterAnnotations";
      stringArray0[1] = "j";
      stringArray0[2] = "j";
      stringArray0[3] = "Exceptions";
      stringArray0[4] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 687, "", "", "j", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("j");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(169, (-916));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(178, 687);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-916), "zHXl7B96#\tn", "N\u0002@;*%v![p>$M4", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-2545), "j", "Code", "QqF{$R|A519");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-2545), 173);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2537
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3055));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E7)S=";
      stringArray0[1] = "E7)S=";
      stringArray0[2] = "E7)S=";
      stringArray0[3] = "E7)S=";
      stringArray0[4] = "E7)S=";
      stringArray0[5] = "E7)S=";
      stringArray0[6] = "E7)S=";
      stringArray0[7] = "E7)S=";
      int int0 = classWriter0.addUninitializedType("e)bmUCKw*)#!JldHh", 1665);
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[8] = "E7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "E7)S=", "E7)S=", "E7)S=", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      methodWriter0.next = methodWriter1;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      label0.frame = null;
      label0.line = 2;
      methodWriter0.visitJumpInsn(2, label0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.outputStackMax = (-3055);
      methodWriter0.next.visitTryCatchBlock(label0, label0, label0, "vO)S_3@o7lsg2");
      assertSame(methodWriter0.next, methodWriter1);
      assertSame(methodWriter0.next, methodWriter0);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      methodWriter1.visitJumpInsn(2, label0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      methodWriter1.visitFieldInsn(2, "E7)S=", "java/lang/Throwable", "E7)S=");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(107, (-562));
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(107, 16777230);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      stringArray0[2] = "7)S=";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3182), "7)S=", "7)S=", "LjavaTlang/Synthetic;", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, (-1341));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(12, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-3182), 12);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(12, ":<P+}`Jq joyt$");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(12, "5$fX", "LjavaTlang/Synthetic;", "6c$H$.O9EI9nl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, (-2561));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("7)S=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7)S=";
      stringArray0[1] = "7)S=";
      stringArray0[2] = "7)S=";
      stringArray0[3] = "7)S=";
      stringArray0[4] = "7)S=";
      stringArray0[5] = "7)S=";
      stringArray0[6] = "7)S=";
      stringArray0[7] = "7)S=";
      stringArray0[8] = "7)S=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3182), "7)S=", "7)S=", "LjavaTlang/Synthetic;", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(2, (-1341));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(12, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-3182), 12);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(12, ":<P+}`Jq joyt$");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter0.visitMethodInsn(12, "5$fX", "LjavaTlang/Synthetic;", "6c$H$.O9EI9nl");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 12;
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      
      labelArray0[1] = label2;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {2, 1, 12, 0}, intArray0);
      assertNotSame(label0, label2);
      assertFalse(label0.equals((Object)label2));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-3070), (-2561));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("7)S=");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newNameType("QQ3", "LocalVariableTable");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[3];
      FieldWriter fieldWriter0 = classWriter0.firstField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      stringArray0[1] = "QQ3";
      String[] stringArray1 = new String[0];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2049), "Class not found", "QQ3", "LocalVariableTable", stringArray1, false, false);
      assertNotNull(methodWriter0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[0];
      methodWriter0.visitVarInsn(2, 33554432);
      assertNotSame(stringArray1, stringArray0);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {}, intArray0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 5, stringArray0, 659, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(673);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "-~h[2g`#/L{zZQO1ae";
      int int0 = classWriter0.addType("-~h[2g`#/L{zZQO1ae");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[1] = "t2)NrR>*.}UU5b";
      stringArray0[2] = "t2)NrR>*.}UU5b";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "J1Q\"h", "t2)NrR>*.}UU5b", "-~h[2g`#/L{zZQO1ae", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("t2)NrR>*.}UU5b");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(178, "-~h[2g`#/L{zZQO1ae", "-~h[2g`#/L{zZQO1ae", "-~h[2g`#/L{zZQO1ae");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(173, "t2)NrR>*.}UU5b", "t2)NrR>*.}UU5b", "t2)NrR>*.}UU5b");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      Edge edge1 = new Edge();
      assertNotNull(edge1);
      
      methodWriter0.visitLocalVariable("t2)NrR>*.}UU5b", "J1Q\"h", "Class not found", label0, label0, 178);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(2, "=p$Gae=zD", "t2)NrR>*.}UU5b", "&J");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(656);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Synvthetyic";
      stringArray0[1] = "Synvthetyic";
      stringArray0[2] = "Synvthetyic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2)N}R>*.2}UU5b", "2)N}R>*.2}UU5b", "Synvthetyic", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(188, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visit(165, 165, "D(p@$.!k|\"}r", "Synvthetyic", "Synvthetyic", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      int int0 = 1962;
      String string0 = "94Cto/6C3D}T_W";
      methodWriter0.visitFieldInsn(1962, "94Cto/6C3D}T_W", "2)N}R>*.2}UU5b", "StackMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synvthetyic", "Synvthetyic", "j 'gT]wap#Tj-B,|T(K", "94Cto/6C3D}T_W");
      assertNotNull(fieldWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Synvthetyic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(61, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn((String) null, 1962);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(723);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      ClassWriter classWriter1 = new ClassWriter((-1823));
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "_^}/>fQIy\"D-\\_w%6=";
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_^}/>fQIy\"D-_w%6=");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      boolean boolean3 = ClassReader.ANNOTATIONS;
      assertTrue(boolean3);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      
      int int0 = classWriter0.newConst("StackMapTable");
      assertEquals(2, int0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Class tfond";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 3515, "2)N}R>*.2dX5b", "Class tfond", (String) null, stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, 3265);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "LZ4(OyJ", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }
}
