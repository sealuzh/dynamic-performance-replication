/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 02:24:26 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-107);
      byteArray0[4] = (byte)60;
      TiffField tiffField0 = new TiffField(50, 52, fieldTypeRational0, 50, (-525L), byteArray0, byteOrder0, 52);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-525), tiffField0.getOffset());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)60;
      TiffField tiffField0 = new TiffField(50, 52, fieldTypeRational0, 50, (-525L), byteArray0, byteOrder0, 52);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-525), tiffField0.getOffset());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-904), (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-904), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals("", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (byte)61, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 41996);
      tiffField0.getValue();
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(41996, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-696), fieldTypeRational0, 27, 36L, byteArray0, (ByteOrder) null, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-696), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Expected String value(");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 1L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3240), (-3240), fieldTypeShort0, (-3240), (-3240), byteArray0, byteOrder0, 41989);
      int int0 = tiffField0.getTag();
      assertEquals((-3240), tiffField0.getOffset());
      assertEquals((-3240), tiffField0.getDirectoryType());
      assertEquals((-3240), int0);
      assertEquals(41989, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-82);
      TiffField tiffField0 = new TiffField((-1277), (-1), fieldTypeAscii0, 1L, (-1), byteArray0, byteOrder0, 2657);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(2657, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1277), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-490), fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 33922);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(33922, int0);
      assertEquals((-490), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(5071, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(5071, (-1728), fieldTypeDouble0, (-1946L), (-1221L), byteArray0, (ByteOrder) null, (byte) (-116));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1221), tiffField0.getOffset());
      assertEquals((-116), int0);
      assertEquals(5071, tiffField0.getTag());
      assertEquals((-1728), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 5, fieldTypeByte0, 411L, 4L, byteArray0, byteOrder0, (-2209));
      int int0 = tiffField0.getOffset();
      assertEquals(4, int0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-2209), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1802, (byte) (-59), fieldTypeAscii0, 2198L, (-1L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1802, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 678, fieldTypeLong0, 10540L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(678, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(42160, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-77);
      TiffField tiffField0 = new TiffField(1802, 1802, fieldTypeShort0, 1306, (byte) (-77), byteArray0, byteOrder0, (-1587));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1587), tiffField0.getSortHint());
      assertEquals(2612, tiffField0.getBytesLength());
      assertEquals((-77), tiffField0.getOffset());
      assertEquals((-19712), int0);
      assertEquals(1802, tiffField0.getDirectoryType());
      assertEquals(1802, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(31, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)76;
      TiffField tiffField0 = new TiffField(3886, 3886, fieldTypeShort0, 1L, 9912L, byteArray0, byteOrder0, 2146369807);
      tiffField0.getIntValue();
      assertEquals(3886, tiffField0.getTag());
      assertEquals(9912, tiffField0.getOffset());
      assertEquals(2146369807, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(3886, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeFloat0, 1L, 169L, byteArray0, byteOrder0, (byte) (-19));
      tiffField0.getIntValue();
      assertEquals(169, tiffField0.getOffset());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(17, tiffField0.getTag());
      assertEquals((-19), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(22, (String) null);
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1104), (-1104), fieldTypeByte0, 22, 1789569706L, byteArray0, byteOrder0, 18);
      tiffField0.getFieldTypeName();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals((-1104), tiffField0.getTag());
      assertEquals(1789569706, tiffField0.getOffset());
      assertEquals((-1104), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2157), "");
      TiffField tiffField0 = new TiffField((-2157), (-1), fieldTypeRational0, 97L, (-54L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-54), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-2157), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2780), "h8n^ah,cgAG");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2780), 517, fieldTypeShort0, (-2780), (-2780), byteArray0, byteOrder0, (-2473));
      tiffField0.getFieldType();
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals((-2473), tiffField0.getSortHint());
      assertEquals((-2780), tiffField0.getTag());
      assertEquals((-2780), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "-+y}E@qP1F");
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 34328L, (-2451L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2451), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).UNDEFINED).FLOAT, 1, 4L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-92);
      TiffField tiffField0 = new TiffField((-1717986917), 50, fieldTypeLong0, 1L, 4285L, byteArray0, (ByteOrder) null, (-1717986917));
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4285, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-77);
      TiffField tiffField0 = new TiffField(4338, (-1437), fieldTypeShort0, 1L, (-1), byteArray0, byteOrder0, 677);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-1437), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(677, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4338, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 2024L, 762L, byteArray0, byteOrder0, 432);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(432, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(762, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (byte)61, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 41996);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(61, int0);
      assertEquals(41996, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4066, 0, fieldTypeRational0, 0L, (-90L), byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(4066, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-90), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-107), (byte) (-107), fieldTypeRational0, (-1514L), 850L, byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals((-107), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1514L), long0);
      assertEquals(850, tiffField0.getOffset());
      assertEquals((-107), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4066, 0, fieldTypeRational0, 0L, (-90L), byteArray0, byteOrder0, (-15));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4066, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-90), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(4, "$#SR(}%A5~lPup/\",v");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-3265), fieldTypeFloat0, (-329L), (-1), byteArray0, byteOrder0, 34152);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1316), int0);
      assertEquals((-3265), tiffField0.getDirectoryType());
      assertEquals(34152, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(2341);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1894, (byte) (-43), fieldTypeLong0, 2635L, (-1L), byteArray0, byteOrder0, (-620));
      tiffField0.getByteOrder();
      assertEquals((-620), tiffField0.getSortHint());
      assertEquals(1894, tiffField0.getTag());
      assertEquals((-43), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-95), fieldTypeLong0, (byte)34, (byte) (-95), byteArray0, byteOrder0, (byte) (-95));
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals((-95), tiffField0.getDirectoryType());
      assertEquals(136, tiffField0.getBytesLength());
      assertEquals((-95), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "X~!0Jf]eJa[N4C[");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-32), fieldTypeLong0, 0L, 50, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals((-32), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1637, 1637, fieldTypeAscii0, 1637, 1637, byteArray0, byteOrder0, 1503);
      MockFileWriter mockFileWriter0 = new MockFileWriter("OpcodeList3", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1503, tiffField0.getSortHint());
      assertEquals(1637, tiffField0.getBytesLength());
      assertEquals(1637L, tiffField0.getCount());
      assertEquals(1637, tiffField0.getDirectoryType());
      assertEquals(1637, tiffField0.getTag());
      assertEquals(1637, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1549), (-3746), fieldTypeAscii0, 2136L, (-1549), byteArray0, byteOrder0, (byte)1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-1549), tiffField0.getOffset());
      assertEquals(2136, tiffField0.getBytesLength());
      assertEquals((-1549), tiffField0.getTag());
      assertEquals((-3746), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2136L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-1961), (byte)106, fieldTypeByte0, (-1961), (byte)106, (byte[]) null, byteOrder0, (-1961));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2106), (-2106), fieldTypeRational0, (-2106), (-2106), byteArray0, byteOrder0, (-2106));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (byte)0, 1112L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 65535, fieldTypeRational0, 65535, 107, (byte[]) null, byteOrder0, 107);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-20), (byte) (-20), fieldTypeShort0, (byte) (-20), (byte) (-20), byteArray0, byteOrder0, (byte) (-20));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, 1L, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-696), fieldTypeRational0, 27, 36L, byteArray0, (ByteOrder) null, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, Integer.MAX_VALUE, fieldTypeLong0, Integer.MAX_VALUE, 2147483647L, byteArray0, byteOrder0, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, (-324), fieldTypeRational0, 1, 22, byteArray0, byteOrder0, 1432);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, fieldTypeShort0, (byte)125, (byte)125, (byte[]) null, byteOrder0, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0.DOUBLE, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)81, (byte)81, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)81);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)38, (byte)38, fieldTypeRational0, (byte)38, (byte)38, (byte[]) null, byteOrder0, (byte)38);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeFloat0, (byte)105, (byte)105, (byte[]) null, byteOrder0, (byte)105);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-28), (byte) (-28), fieldTypeShort0, (byte) (-28), (byte) (-28), byteArray0, byteOrder0, (byte) (-28));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (-387), fieldTypeShort0, (-387), (byte)27, byteArray0, byteOrder0, (-387));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, (FieldType) null, (byte)125, (byte)125, byteArray0, byteOrder0, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-6), (byte) (-6), fieldTypeRational0, (byte) (-6), (byte) (-6), byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, fieldTypeRational0, 1L, (byte)125, byteArray0, byteOrder0, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)26, (byte)26, fieldTypeRational0, (byte)26, (byte)26, (byte[]) null, byteOrder0, (byte)26);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-95), (byte) (-95), fieldTypeShort0, (byte) (-95), (byte) (-95), byteArray0, byteOrder0, (byte) (-95));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(6, (byte)71, (FieldType) null, (byte)71, (byte)71, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[401];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 2594, fieldTypeDouble0, (-1483L), 2147483647L, byteArray0, byteOrder0, (-337));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (byte)27, fieldTypeRational0, (byte)27, (byte)27, (byte[]) null, byteOrder0, (byte)27);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-121), (byte) (-121), fieldTypeRational0, (byte) (-121), (byte) (-121), byteArray0, byteOrder0, (byte) (-121));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)117, (byte)117, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)117);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)119, (byte)119, (FieldType) null, (byte)119, (byte)119, byteArray0, byteOrder0, (byte)119);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-24), (byte) (-24), fieldTypeShort0, (byte) (-24), (byte) (-24), byteArray0, byteOrder0, (byte) (-24));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, (FieldType) null, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)81, (-459), fieldTypeRational0, (-459), (-459), (byte[]) null, byteOrder0, (byte)81);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeRational0, (-24912L), 1196L, byteArray0, byteOrder0, (byte)98);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v7");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "v7");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)96, (byte)96, fieldTypeRational0, (-4163L), (byte)96, byteArray0, byteOrder0, (byte)96);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "Invalid value, numerator: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 3604);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)25, 2147048317, fieldTypeShort0, 2147048317, (byte)25, byteArray0, byteOrder0, 2147048317);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(16, (byte)76, fieldTypeRational0, 1L, (byte)76, byteArray0, byteOrder0, (byte)76);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1306, 32766, fieldTypeShort0, 0L, 1306, byteArray0, byteOrder0, (byte) (-68));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(39, charArrayWriter0.size());
      assertEquals("1306 (0x51a: Unknown Tag):  (0 SShort)\n", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-939), fieldTypeByte0, 762L, (-1L), byteArray0, byteOrder0, (-2806));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals((-2806), tiffField0.getSortHint());
      assertEquals((-939), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(5536, 0, fieldTypeByte0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(5536, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-881), (-881), fieldTypeByte0, (-881), (-1L), byteArray0, (ByteOrder) null, (-881));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50964, 1, (FieldType) null, 32L, 264L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(264, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50964, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(6, (byte) (-108), fieldTypeDouble0, 6, 50, byteArray0, byteOrder0, (byte) (-108));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(6, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-108), int0);
      assertEquals((-108), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[79];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)51, (byte)51, fieldTypeLong0, (byte)51, (byte)51, byteArray0, byteOrder0, (byte)51);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeByte0, 86, 86, (byte[]) null, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeAscii0, (-1077L), 0L, byteArray0, byteOrder0, 7);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)96, 4, fieldTypeLong0, 411L, 567L, byteArray0, byteOrder0, (byte)96);
      int int0 = tiffField0.getTag();
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(567, tiffField0.getOffset());
      assertEquals(96, int0);
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeLong0, 40092, (-1), byteArray0, byteOrder0, (byte)29);
      long long0 = tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(40092, tiffField0.getTag());
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals(40092L, long0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-858), 3, fieldTypeLong0, 3, 4285L, byteArray0, byteOrder0, 513);
      int int0 = tiffField0.getBytesLength();
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-858), tiffField0.getTag());
      assertEquals(12, int0);
      assertEquals(4285, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeShort0, (byte)9, (byte)9, byteArray0, byteOrder0, (byte)9);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(9, tiffField0.getOffset());
      assertEquals("9 (0x9: Unknown Tag): ", string0);
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)25, (byte)25, fieldTypeShort0, (byte)25, (byte)25, byteArray0, byteOrder0, (byte)25);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[117];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(430, 430, fieldTypeFloat0, 430, 430, byteArray0, byteOrder0, 430);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5217b3e5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)26, (byte)26, fieldTypeRational0, (byte)26, (byte)26, byteArray0, byteOrder0, (byte)26);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)123, (byte)123, fieldTypeAscii0, (byte)123, (byte)123, byteArray0, byteOrder0, (byte)123);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6736b891 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[188];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(141, 141, fieldTypeDouble0, 141, 141, byteArray0, byteOrder0, 141);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(141, tiffField0.getSortHint());
      assertEquals(141, tiffField0.getTag());
      assertEquals(23, doubleArray0.length);
      assertEquals(141, tiffField0.getDirectoryType());
      assertEquals(141L, tiffField0.getCount());
      assertEquals(141, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[117];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(419, 419, fieldTypeFloat0, 419, 419, byteArray0, byteOrder0, 419);
      tiffField0.getDoubleArrayValue();
      assertEquals(419, tiffField0.getSortHint());
      assertEquals(419, tiffField0.getTag());
      assertEquals(419, tiffField0.getOffset());
      assertEquals(1676, tiffField0.getBytesLength());
      assertEquals(419L, tiffField0.getCount());
      assertEquals(419, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)61, (byte)61, fieldTypeShort0, (byte)61, (byte)61, byteArray0, byteOrder0, (byte)61);
      tiffField0.getDoubleArrayValue();
      assertEquals(61L, tiffField0.getCount());
      assertEquals(122, tiffField0.getBytesLength());
      assertEquals(61, tiffField0.getOffset());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(61, tiffField0.getTag());
      assertEquals(61, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)61, (byte)61, fieldTypeShort0, (byte)61, (byte)61, byteArray0, byteOrder0, (byte)61);
      tiffField0.getDoubleArrayValue();
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getOffset());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(61, tiffField0.getTag());
      assertEquals(122, tiffField0.getBytesLength());
      assertEquals(61L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(75, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(600, tiffField0.getBytesLength());
      assertEquals(75, tiffField0.getTag());
      assertEquals(75L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[79];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeLong0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      tiffField0.getDoubleArrayValue();
      assertEquals(75, tiffField0.getTag());
      assertEquals(75L, tiffField0.getCount());
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals(75, tiffField0.getOffset());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(75, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[79];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeLong0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      tiffField0.getIntArrayValue();
      assertEquals(75, tiffField0.getTag());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(75L, tiffField0.getCount());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals(75, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)61, (byte)61, fieldTypeShort0, (byte)61, (byte)61, byteArray0, byteOrder0, (byte)61);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(61, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(122, tiffField0.getBytesLength());
      assertEquals(61, tiffField0.getTag());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(61L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)61, (byte)61, fieldTypeShort0, (byte)61, (byte)61, byteArray0, byteOrder0, (byte)61);
      tiffField0.getIntArrayValue();
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(61, tiffField0.getTag());
      assertEquals(61, tiffField0.getOffset());
      assertEquals(122, tiffField0.getBytesLength());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(61L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)70, (byte)70, fieldTypeRational0, (byte)70, (byte)70, byteArray0, byteOrder0, (byte)70);
      tiffField0.getIntArrayValue();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getTag());
      assertEquals(560, tiffField0.getBytesLength());
      assertEquals(70, tiffField0.getOffset());
      assertEquals(70L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1523), (-1869), fieldTypeRational0, 4054L, (-1869), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)34, (byte)34, fieldTypeShort0, (byte)34, (byte)34, byteArray0, byteOrder0, (byte)34);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@28ae9d8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[43];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x32)", string0);
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals("ProcessingSoftware", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeShort0, (byte)92, (byte)92, byteArray0, byteOrder0, (byte)92);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "loqyo8<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[241];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1557, 34025, fieldTypeFloat0, 1557, 1557, byteArray0, byteOrder0, 1557);
      String string0 = tiffField0.toString();
      assertEquals(1557, tiffField0.getSortHint());
      assertEquals(6228, tiffField0.getBytesLength());
      assertEquals(1557, tiffField0.getOffset());
      assertEquals(34025, tiffField0.getDirectoryType());
      assertEquals("1557 (0x615: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (60) (1557 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37381, 37381, fieldTypeByte0, 37381, 37381, byteArray0, byteOrder0, 37381);
      String string0 = tiffField0.toString();
      assertEquals("37381 (0x9205: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (37381 SByte)", string0);
      assertEquals(37381, tiffField0.getOffset());
      assertEquals(37381, tiffField0.getBytesLength());
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals(37381, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[98];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(419, 419, fieldTypeFloat0, 419, 419, byteArray0, byteOrder0, 419);
      String string0 = tiffField0.getValueDescription();
      assertEquals(419, tiffField0.getDirectoryType());
      assertEquals(419, tiffField0.getSortHint());
      assertEquals(419, tiffField0.getTag());
      assertEquals(419L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1676, tiffField0.getBytesLength());
      assertEquals(419, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[427];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2624, 34310, fieldTypeDouble0, 34310, 34310, byteArray0, byteOrder0, 4);
      tiffField0.dump();
      assertEquals(34310, tiffField0.getOffset());
      assertEquals(34310, tiffField0.getDirectoryType());
      assertEquals(34310L, tiffField0.getCount());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(274480, tiffField0.getBytesLength());
      assertEquals(2624, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeFloat0.DOUBLE, 39, 39, byteArray0, byteOrder0, 39);
      String string0 = tiffField0.toString();
      assertEquals("39 (0x27: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (39 Double)", string0);
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeFloat0.SLONG, 83, 38, byteArray0, byteOrder0, 83);
      String string0 = tiffField0.toString();
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals(83, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getOffset());
      assertEquals("83 (0x53: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (83 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[90];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeByte0, (byte)111, (byte)111, byteArray0, byteOrder0, 36);
      String string0 = tiffField0.toString();
      assertEquals(36, tiffField0.getSortHint());
      assertEquals("111 (0x6f: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (90) (111 Byte)", string0);
      assertEquals(111, tiffField0.getOffset());
      assertEquals(111, tiffField0.getBytesLength());
      assertEquals(111, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[228];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)91, (byte)91, fieldTypeShort0, (byte)91, (byte)91, byteArray0, byteOrder0, (byte)91);
      String string0 = tiffField0.getValueDescription();
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(91, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (91)", string0);
      assertEquals(91L, tiffField0.getCount());
      assertEquals(91, tiffField0.getOffset());
      assertEquals(91, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[300];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)111, (String) null);
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeAscii0, (byte)111, (-2844L), byteArray0, byteOrder0, (byte)111);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals((-2844), tiffField0.getOffset());
      assertEquals(111, tiffField0.getBytesLength());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40960, 686, fieldTypeAscii0, 0L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.toString();
      assertEquals(686, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(40960, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[189];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-122), (byte) (-122), fieldTypeRational0, (byte) (-122), (byte) (-122), byteArray0, byteOrder0, (byte) (-122));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-122), tiffField0.getOffset());
      assertEquals((-122), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals((-122), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)34, 1, fieldTypeLong0, (byte)106, 468L, byteArray0, byteOrder0, (byte)34);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, (-3755));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(106L, tiffField0.getCount());
      assertEquals(468, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-904), (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)50, (-904));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-904), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Missing value: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5493), 65002, fieldTypeByte0, 4L, 65002, byteArray0, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65002, tiffField0.getDirectoryType());
      assertEquals((-5493), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(65002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-106), (byte) (-106), fieldTypeShort0, (byte) (-106), (byte) (-106), byteArray0, byteOrder0, (byte) (-106));
      tiffField0.getFieldTypeName();
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals((-106), tiffField0.getDirectoryType());
      assertEquals((-106), tiffField0.getTag());
      assertEquals((-106), tiffField0.getOffset());
      assertEquals((-106L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-490), fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-490), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-1599), fieldTypeRational0, (-1599), (-1599), byteArray0, byteOrder0, (-1599));
      String string0 = tiffField0.toString();
      assertEquals((-1599), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1599), tiffField0.getDirectoryType());
      assertEquals((-1599), tiffField0.getSortHint());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (-1599 Rational)", string0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1288), (-1288), fieldTypeShort0, (-1288), (-1288), (byte[]) null, byteOrder0, (-1288));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[139];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeFloat0, 47, 47, byteArray0, (ByteOrder) null, 47);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@67b90deb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[90];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeFloat0.SSHORT, 9, 9, byteArray0, byteOrder0, 9);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(9L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
  }
}
