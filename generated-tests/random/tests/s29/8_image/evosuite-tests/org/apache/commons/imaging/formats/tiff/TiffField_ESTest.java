/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 13:52:23 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-28);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 4, (-8568L), byteArray0, byteOrder0, 343);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals((-7168), int0);
      assertEquals(343, tiffField0.getSortHint());
      assertEquals((-8568), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, ", fieldType: ");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)102;
      byteArray0[4] = (byte)104;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3743), fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, (byte)104);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(251, int0);
      assertEquals((-3743), tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "OQZBy0C%$5_c-");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeShort0, 527L, (-956L), byteArray0, byteOrder0, (-45));
      int int0 = tiffField0.getTag();
      assertEquals((-45), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-956), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1717986917), fieldTypeShort0, 1, (-1717986917), byteArray0, byteOrder0, 6);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1717986917), int0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)29;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2142732576), (-2142732576), fieldType0, 1, 3809L, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2142732576), tiffField0.getTag());
      assertEquals(3809, tiffField0.getOffset());
      assertEquals((-2142732576), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-11);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(122, 2564, fieldTypeLong0, 3719L, (-335L), byteArray0, byteOrder0, (-3867));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-3867), tiffField0.getSortHint());
      assertEquals(14876, tiffField0.getBytesLength());
      assertEquals(2564, tiffField0.getDirectoryType());
      assertEquals(122, tiffField0.getTag());
      assertEquals((-335), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3188, 3188, fieldTypeRational0, 200L, 1L, byteArray0, byteOrder0, (-1200));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3188, int0);
      assertEquals(3188, tiffField0.getTag());
      assertEquals((-1200), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3188, 3188, fieldTypeRational0, 200L, 1L, byteArray0, byteOrder0, (-1200));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1200), tiffField0.getSortHint());
      assertEquals(3188, tiffField0.getTag());
      assertEquals(3188, tiffField0.getDirectoryType());
      assertEquals(1600, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      tiffField0.getByteArrayValue();
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals((-1473), tiffField0.getSortHint());
      assertEquals(1040, tiffField0.getBytesLength());
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-1473), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-460), (-460), (FieldType) null, (-460), (-460), (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 4L, 618L, byteArray0, byteOrder0, 3);
      tiffField0.getByteOrder();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(618, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1191, 1191, fieldTypeByte0, 1191, 643L, byteArray0, byteOrder0, (byte) (-5));
      tiffField0.getByteArrayValue();
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(1191, tiffField0.getTag());
      assertEquals(1191, tiffField0.getBytesLength());
      assertEquals(1191, tiffField0.getDirectoryType());
      assertEquals(643, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, ", fieldType: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3743), fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, (byte)104);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3743), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(104, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-1473), tiffField0.getSortHint());
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals(1040, tiffField0.getBytesLength());
      assertEquals((-1473), tiffField0.getTag());
      assertEquals(47L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2015), "): ");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-2015), fieldTypeByte0, (-2015), 65535, byteArray0, byteOrder0, 34023);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(971, "v>m\"7_r[H]@Vk&,E;");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-382), 971, fieldTypeByte0, 971, (-2147483648L), byteArray0, byteOrder0, (-2880));
      tiffField0.getTagInfo();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-382), tiffField0.getTag());
      assertEquals((-2880), tiffField0.getSortHint());
      assertEquals(971, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3188, 3188, fieldTypeRational0, 200L, 1L, byteArray0, byteOrder0, (-1200));
      int int0 = tiffField0.getTag();
      assertEquals((-1200), tiffField0.getSortHint());
      assertEquals(3188, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3188, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1170), (-1170), fieldTypeByte0, 255L, (-1170), byteArray0, byteOrder0, (-1170));
      tiffField0.getCount();
      assertEquals((-1170), tiffField0.getSortHint());
      assertEquals((-1170), tiffField0.getOffset());
      assertEquals((-1170), tiffField0.getTag());
      assertEquals((-1170), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(615, 320, fieldTypeLong0, 0L, 320, byteArray0, (ByteOrder) null, (byte)1);
      int int0 = tiffField0.getBytesLength();
      assertEquals(615, tiffField0.getTag());
      assertEquals(320, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(320, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1477, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1096, 1096, fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(971, "v>m\"7_r[H]@Vk&,E;");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-382), 971, fieldTypeByte0, 971, (-2147483648L), byteArray0, byteOrder0, (-2880));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@f941ed0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 4, (-8568L), byteArray0, byteOrder0, 343);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals((-8568), tiffField0.getOffset());
      assertEquals(343, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(917, "ISO-8859-1");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 917, fieldTypeAscii0, 917, 917, byteArray0, byteOrder0, (-1717986917));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@465b264d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-316), "oI");
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(41489, 41489, fieldTypeDouble0, 41489, (-316), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(41489, tiffField0.getDirectoryType());
      assertEquals((-316), tiffField0.getOffset());
      assertEquals(41489, tiffField0.getTag());
      assertEquals(331912, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(601, 601, fieldTypeLong0, 601, 601, byteArray0, byteOrder0, (byte)30);
      tiffField0.getDoubleArrayValue();
      assertEquals(2404, tiffField0.getBytesLength());
      assertEquals(601, tiffField0.getOffset());
      assertEquals(601, tiffField0.getDirectoryType());
      assertEquals(601, tiffField0.getTag());
      assertEquals(30, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(4223, "+n\"o{p6n~?7^&(v1HGS");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 4223, fieldTypeFloat0, 152L, 2147483647L, byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getDoubleArrayValue();
      assertEquals(608, tiffField0.getBytesLength());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(4223, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2147273459), (-600), fieldTypeRational0, 522L, (-2147273459), byteArray0, (ByteOrder) null, (-600));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-600), tiffField0.getDirectoryType());
      assertEquals(4176, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-2147273459), tiffField0.getTag());
      assertEquals((-2147273459), tiffField0.getOffset());
      assertEquals((-600), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(3);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(901, 901, fieldType0, 1L, 1L, byteArray0, (ByteOrder) null, 33550);
      tiffField0.getDoubleArrayValue();
      assertEquals(901, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(901, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(33550, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1149, (-2146940392), fieldTypeShort0, 400L, 1787L, byteArray0, byteOrder0, (-250));
      tiffField0.getDoubleArrayValue();
      assertEquals(800, tiffField0.getBytesLength());
      assertEquals(1149, tiffField0.getTag());
      assertEquals((-250), tiffField0.getSortHint());
      assertEquals(1787, tiffField0.getOffset());
      assertEquals((-2146940392), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2129), "Unknown: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6686, (-2129), fieldTypeDouble0, 0L, 2147483647L, byteArray0, byteOrder0, 2646);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2bbf4ec7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1149, (-2146940392), fieldTypeShort0, 400L, 1787L, byteArray0, byteOrder0, (-250));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2146940392), tiffField0.getDirectoryType());
      assertEquals(1149, tiffField0.getTag());
      assertEquals((-250), tiffField0.getSortHint());
      assertEquals(1787, tiffField0.getOffset());
      assertEquals(800, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48325, 2147237179, fieldTypeRational0, 3926L, (-840L), byteArray0, byteOrder0, 2042);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 4L, 618L, byteArray0, byteOrder0, 3);
      tiffField0.getIntArrayValue();
      assertEquals(618, tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "j5Z\"\"RUsQ~-I3u92{e");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2514), (-2514), fieldTypeFloat0, 1, (-1116L), byteArray0, byteOrder0, 50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2514), tiffField0.getDirectoryType());
      assertEquals((-2514), tiffField0.getTag());
      assertEquals((-1116), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1477, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1096, 1096, fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(1096, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(1096, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-55), "65-$A?b");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-55), (-1921), fieldTypeAscii0, 0L, 4L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1921), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-55), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1170), (-1170), fieldTypeByte0, 255L, (-1170), byteArray0, byteOrder0, (-1170));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@4ab9a8eb
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      String string0 = tiffField0.getTagName();
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffffa3f)", string0);
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals((-1473), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(40094, "EXIF_DIRECTORY_IFD0");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 40094, fieldTypeRational0, 4L, (-1L), byteArray0, byteOrder0, (-2650));
      String string0 = tiffField0.getTagName();
      assertEquals(40094, tiffField0.getDirectoryType());
      assertEquals(40094, tiffField0.getTag());
      assertEquals("XPKeywords", string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-2650), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1477, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1096, 1096, fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "[!SX[M#BQObC=PxA[");
      assertEquals(1096, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(1096, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2142732576), (-2142732576), fieldTypeFloat0, 4991L, 1477L, byteArray0, byteOrder0, Integer.MAX_VALUE);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2142732576), tiffField0.getDirectoryType());
      assertEquals(4991L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1477, tiffField0.getOffset());
      assertEquals(19964, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getSortHint());
      assertEquals((-2142732576), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(284, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(284, 284, fieldTypeDouble0, 284, 284, byteArray0, byteOrder0, 1987);
      String string0 = tiffField0.getValueDescription();
      assertEquals(284, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2272, tiffField0.getBytesLength());
      assertEquals(1987, tiffField0.getSortHint());
      assertEquals(284, tiffField0.getDirectoryType());
      assertEquals(284L, tiffField0.getCount());
      assertEquals(284, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1170), (-1170), fieldTypeByte0, 255L, (-1170), byteArray0, byteOrder0, (-1170));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(255L, tiffField0.getCount());
      assertEquals((-1170), tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-1170), tiffField0.getOffset());
      assertEquals((-1170), tiffField0.getTag());
      assertEquals((-1170), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(53, (-1020), fieldTypeLong0, 53, (-113L), byteArray0, byteOrder0, 2147312846);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147312846, tiffField0.getSortHint());
      assertEquals(212, tiffField0.getBytesLength());
      assertEquals((-1020), tiffField0.getDirectoryType());
      assertEquals((-113), tiffField0.getOffset());
      assertEquals(53, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(53L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(615, 320, fieldTypeLong0, 0L, 320, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.dump();
      assertEquals(615, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(320, tiffField0.getDirectoryType());
      assertEquals(320, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1149, (-2146940392), fieldTypeShort0, 400L, 1787L, byteArray0, byteOrder0, (-250));
      tiffField0.dump();
      assertEquals((-250), tiffField0.getSortHint());
      assertEquals(1149, tiffField0.getTag());
      assertEquals((-2146940392), tiffField0.getDirectoryType());
      assertEquals(1787, tiffField0.getOffset());
      assertEquals(400L, tiffField0.getCount());
      assertEquals(800, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-113), "Y>\"uF");
      byte[] byteArray0 = new byte[24];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)17);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-113), (-113), fieldTypeRational0, 2207L, 2207L, byteArray0, byteOrder0, 1810);
      tiffField0.toString();
      assertEquals((-113), tiffField0.getDirectoryType());
      assertEquals(17656, tiffField0.getBytesLength());
      assertEquals(2207L, tiffField0.getCount());
      assertEquals(2207, tiffField0.getOffset());
      assertEquals(1810, tiffField0.getSortHint());
      assertEquals((-113), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-361), (-1663), fieldTypeAscii0, 3809L, (-1858L), byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals((-1858), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(3809, tiffField0.getBytesLength());
      assertEquals((-1663), tiffField0.getDirectoryType());
      assertEquals((-361), tiffField0.getTag());
      assertEquals(3809L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1717986917), fieldTypeShort0, 1, (-1717986917), byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "OQZBy0C%$5_c-");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeShort0, 527L, (-956L), byteArray0, byteOrder0, (-45));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-45), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-956), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-45), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1054, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(201, 201);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1473), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1473), tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals(1040, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(990, 990, fieldTypeFloat0, 1L, 990, byteArray0, byteOrder0, (-2005));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(990, tiffField0.getTag());
      assertEquals(990, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-2005), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(990, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "OQZBy0C%$5_c-");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeShort0, 527L, (-956L), byteArray0, byteOrder0, (-45));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-45), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-956L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      tiffField0.getFieldTypeName();
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals(130L, tiffField0.getCount());
      assertEquals((-1473), tiffField0.getSortHint());
      assertEquals((-1473), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 4L, 618L, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getOffset();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(618, int0);
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1473), int0);
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-1473), tiffField0.getSortHint());
      assertEquals(130L, tiffField0.getCount());
      assertEquals((-1473), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals((-1473), tiffField0.getTag());
      assertEquals(130L, tiffField0.getCount());
      assertEquals((-1473), int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1473), (-1473), fieldTypeDouble0, 130L, (-1853L), byteArray0, byteOrder0, (-1473));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-1473 (0xfffffa3f: Unknown Tag): ", string0);
      assertEquals((-1473), tiffField0.getDirectoryType());
      assertEquals((-1473), tiffField0.getSortHint());
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals(1040, tiffField0.getBytesLength());
  }
}
