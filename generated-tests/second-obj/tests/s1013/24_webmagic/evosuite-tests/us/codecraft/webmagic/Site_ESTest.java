/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:51:12 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Site;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Site_ESTest extends Site_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Site site0 = Site.me();
      site0.setRetrySleepTime(1000);
      site0.getCharset();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Site site0 = new Site();
      site0.addHeader("", "");
      boolean boolean0 = site0.isUseGzip();
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertTrue(boolean0);
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Site site0 = Site.me();
      site0.setTimeOut(62);
      site0.toString();
      assertEquals(62, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setCycleRetryTimes((-2082));
      int int0 = site1.getRetrySleepTime();
      assertEquals((-2082), site0.getCycleRetryTimes());
      assertEquals(1000, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Site site0 = new Site();
      site0.hashCode();
      site0.setUseGzip(false);
      assertFalse(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Site site0 = Site.me();
      site0.getHeaders();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Site site0 = new Site();
      site0.getRetrySleepTime();
      site0.setSleepTime(1000);
      assertEquals(1000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Site site0 = new Site();
      site0.getDomain();
      Site site1 = site0.setDomain((String) null);
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(0, site1.getRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setCharset(", headers=");
      site1.hashCode();
      assertEquals(0, site1.getCycleRetryTimes());
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Site site0 = Site.me();
      site0.getUserAgent();
      Site site1 = site0.addCookie((String) null, (String) null, (String) null);
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
      assertTrue(site1.isUseGzip());
      assertEquals(0, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.addCookie((String) null, (String) null, "\"tX}4cz9 ");
      Site site2 = site1.addCookie((String) null, "!4{(Y4O3a$r", "!4{(Y4O3a$r");
      assertEquals(5000, site2.getSleepTime());
      assertTrue(site2.isUseGzip());
      assertEquals(1000, site2.getRetrySleepTime());
      assertEquals(0, site2.getCycleRetryTimes());
      assertEquals(5000, site2.getTimeOut());
      assertEquals(0, site2.getRetryTimes());
      assertFalse(site2.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getCycleRetryTimes();
      int int1 = site0.getRetryTimes();
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(int1 == int0);
      assertEquals(5000, site0.getTimeOut());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Site site0 = new Site();
      boolean boolean0 = site0.isDisableCookieManagement();
      assertFalse(boolean0);
      
      site0.getAllCookies();
      assertEquals(5000, site0.getSleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Site site0 = new Site();
      site0.getCookies();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getTimeOut();
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, int0);
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      boolean boolean0 = site0.equals(site1);
      assertFalse(site1.isDisableCookieManagement());
      assertTrue(boolean0);
      assertEquals(0, site1.getCycleRetryTimes());
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Site site0 = new Site();
      site0.addCookie("787+dv*R9bbjL#f+", "787+dv*R9bbjL#f+");
      Site site1 = Site.me();
      site1.equals(site0);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      assertEquals(0, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Site site0 = Site.me();
      boolean boolean0 = site0.equals((Object) null);
      assertEquals(5000, site0.getTimeOut());
      assertFalse(boolean0);
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      site1.setCycleRetryTimes((-2134998275));
      boolean boolean0 = site0.equals(site1);
      assertEquals((-2134998275), site1.getCycleRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.setCharset(";Mo#W9");
      Site site2 = site1.setDomain("$fji`\"fKpJljDKs(uq");
      boolean boolean0 = site0.equals(site2);
      assertFalse(boolean0);
      
      site0.getCharset();
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Site site0 = Site.me();
      site0.setDomain(", cycleRetryTimes=");
      site0.hashCode();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(1000, site0.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      site1.setTimeOut((-2134998275));
      boolean boolean0 = site0.equals(site1);
      assertEquals((-2134998275), site1.getTimeOut());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      site0.setSleepTime((-2134998275));
      boolean boolean0 = site0.equals(site1);
      assertEquals((-2134998275), site0.getSleepTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      Site site2 = site0.setSleepTime((-2134998275));
      site2.setRetryTimes((-506));
      boolean boolean0 = site0.equals(site1);
      assertEquals((-506), site0.getRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setAcceptStatCode((Set<Integer>) null);
      site1.hashCode();
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setCharset("");
      Site site2 = Site.me();
      site2.toTask();
      boolean boolean0 = site1.equals(site2);
      assertFalse(boolean0);
      
      site0.getDomain();
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      Site site2 = site1.setAcceptStatCode((Set<Integer>) null);
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
      
      site0.getAcceptStatCode();
      assertFalse(site0.equals((Object)site2));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setUserAgent("sXd9aT,Eua)");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      Site site2 = site1.addHeader("$fji`\"fKpJljDKs(uq", "$fji`\"fKpJljDKs(uq");
      boolean boolean0 = site0.equals(site2);
      assertFalse(boolean0);
      
      site0.getCharset();
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Site site0 = Site.me();
      site0.setDomain("s@,8& h}`@b@Il5a");
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
      
      Site site2 = site1.setCharset("s@,8& h}`@b@Il5a");
      assertEquals(1000, site2.getRetrySleepTime());
      assertEquals(5000, site2.getTimeOut());
      assertEquals(0, site2.getRetryTimes());
      assertEquals(0, site2.getCycleRetryTimes());
      assertFalse(site2.isDisableCookieManagement());
      assertEquals(5000, site2.getSleepTime());
      assertTrue(site2.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setUserAgent("787+dv*R9bbjL#+");
      Site site2 = Site.me();
      site2.equals(site0);
      site0.isUseGzip();
      site1.setDomain("787+dv*R9bbjL#+");
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      assertEquals(0, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      Site.me();
      Site site2 = site0.addHeader("|n 6?[VY`}!6", "|n 6?[VY`}!6");
      Site site3 = site1.setDomain("|n 6?[VY`}!6");
      Site site4 = site3.setRetrySleepTime(1);
      site3.setUserAgent("|n 6?[VY`}!6");
      site0.getAllCookies();
      Site site5 = site2.setUserAgent("-c");
      site5.setUseGzip(true);
      site5.setDomain("|n 6?[VY`}!6");
      site1.toTask();
      Site site6 = site1.addCookie("-c", "|n 6?[VY`}!6", ", cookies=");
      site1.setUserAgent("i");
      site6.toTask();
      site2.equals(site4);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      assertEquals(0, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      Site site2 = site1.setDomain("$fji`\"fKpJljDKs(uq");
      boolean boolean0 = site0.equals(site2);
      assertFalse(boolean0);
      
      site0.getCharset();
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site0.setCharset("8$9%&Q.#m4dM");
      site1.toTask();
      Site site2 = site0.addCookie("8$9%&Q.#m4dM", "8$9%&Q.#m4dM", "8$9%&Q.#m4dM");
      Site site3 = site0.setDisableCookieManagement(true);
      Site site4 = site1.setUserAgent("8$9%&Q.#m4dM");
      site0.toString();
      Site site5 = site4.setCycleRetryTimes(0);
      site1.equals(site5);
      site5.setCharset("8$9%&Q.#m4dM");
      site4.equals(site0);
      site3.getCharset();
      int int0 = site2.getCycleRetryTimes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Site site0 = new Site();
      site0.setAcceptStatCode((Set<Integer>) null);
      site0.setUserAgent("787+dv*R9bbjL#+");
      Site site1 = Site.me();
      boolean boolean0 = site0.equals(site1);
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertFalse(boolean0);
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertTrue(site1.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setAcceptStatCode((Set<Integer>) null);
      Site site2 = Site.me();
      assertFalse(site2.equals((Object)site1));
      
      site2.setAcceptStatCode((Set<Integer>) null);
      boolean boolean0 = site0.equals(site2);
      assertTrue(site2.equals((Object)site0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Site site0 = Site.me();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn("3|6GM.?o?eNZh'o_T").when(biFunction0).apply(any() , any());
      hashMap0.compute("3|6GM.?o?eNZh'o_T", biFunction0);
      Site site1 = site0.setUserAgent("\"-NWsf");
      site1.hashCode();
      Object object0 = new Object();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Site site2 = new Site();
      Site site3 = site2.setUserAgent("\"-NWsf");
      site3.toTask();
      Object object1 = new Object();
      boolean boolean0 = site1.equals(object1);
      assertFalse(boolean0);
      
      site2.equals(site0);
      assertTrue(site2.equals((Object)site1));
      
      site3.setAcceptStatCode(linkedHashSet0);
      site1.setCharset("3|6GM.?o?eNZh'o_T");
      int int0 = site2.getSleepTime();
      assertEquals(5000, int0);
  }
}
