/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:08:50 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.lang.reflect.Member;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      // Undeclared exception!
      try { 
        parser0.parse("@else", "@else", 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("V", "V", 24);
      assertEquals("\u0087'\u0001VQ\u0001", parser0.getEncodedSource());
      assertEquals(24, scriptOrFnNode0.getBaseLineno());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("? niDOA0<),! a9Vb,-", "? niDOA0<),! a9Vb,-", 69);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.bad.var", "fontcolor", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (fontcolor#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("while ", "while ", 1279);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before condition (while #1279)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("ZXP", "msg.in.after.for.name");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      Context context0 = new Context(contextFactory0);
      boolean boolean0 = context0.isContinuationsTopCall;
      // Undeclared exception!
      try { 
        parser0.parse("continue", "msg.in.after.for.name", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // continue must be inside loop (msg.in.after.for.name#100)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      context0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning(":&4Yy'E]+N", "error reporter");
      contextFactory0.exit();
      parser0.addStrictWarning(":&4Yy'E]+N", ":&4Yy'E]+N");
      // Undeclared exception!
      try { 
        parser0.parse(";kvdfz~g", "language version", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addError("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "p}D\\%";
      // Undeclared exception!
      try { 
        parser0.parse("0Q8-@)WH6Ds+", "p}D%", (-3434));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3434
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("msg.no.paren.cond", "msg.no.paren.cond");
      StringReader stringReader0 = new StringReader("msg.no.paren.cond");
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '/';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse((Reader) charArrayReader0, "", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("ke%>Co<PL;>c@l", "ke%>Co<PL;>c@l", 113);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (ke%>Co<PL;>c@l#113)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("void", "msg.var.hides.arg", (-596));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.no.paren.for.ctrl", "msg.no.paren.for.ctrl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      // Undeclared exception!
      try { 
        parser0.parse("W4>Q\u00019%+-G2%}!", "|m0.?P7o64aDt'*L ", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (|m0.?P7o64aDt'*L #130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser1.parse("8@else", "8@else", 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("!x.`OU|e9G!cJm", "", 2188);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (#2188)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      defaultErrorReporter0.runtimeError("org.mozilla.javascript.ScriptRuntime$IdEnumeration", (String) null, 10, (String) null, 96);
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[4] = 'S';
      charArray0[2] = ':';
      charArray0[3] = ':';
      charArray0[4] = 'S';
      charArray0[5] = '[';
      charArray0[2] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, (String) null, 23);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("[", "[", 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[6];
      charArray0[1] = '\u0000';
      charArray0[2] = ':';
      charArray0[3] = 'f';
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      String string0 = "7k|i;L.@n*";
      // Undeclared exception!
      try { 
        parser0.parse("T=lsOj{", "language version", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("9x{_LYJq%[)kr9I-U");
      parser0.pushScope(functionNode0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(315, false, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "<>";
      // Undeclared exception!
      try { 
        parser0.parse("for", "<>", 30);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( after for (<>#30)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("fE&.R)UY8F d7B`", "'p7", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ('p7#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("w?IlWx", "=*N7FW#.U", 890);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing : in conditional expression (=*N7FW#.U#890)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "o<";
      // Undeclared exception!
      try { 
        parser0.parse("o<", "", 160);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      errorReporter0.runtimeError("language version", "error reporter", 1048575, "r", 12);
      String string0 = "msg.return.inconsistent";
      String string1 = "6-Ds8hf\\Z@I;\\b=LH;";
      // Undeclared exception!
      try { 
        parser0.parse("6-Ds8hfZ@I;\b=LH;", "P", (-4864));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4864
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("-~<An^:G}F;E Z", "language version", 88);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (language version#88)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("language version");
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = 'J';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "/Pnn^}+LyO4Q6 ";
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "/Pnn^}+LyO4Q6 ", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (/Pnn^}+LyO4Q6 #130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      boolean boolean0 = false;
      compilerEnvirons0.setGeneratingSource(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.addStrictWarning("", "");
      parser0.parse("", "", 26);
      // Undeclared exception!
      try { 
        parser0.addError("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      String string0 = "org.mozilla.javascript.NativeCall";
      // Undeclared exception!
      try { 
        parser0.parse("K*lPKF`MKovoP.", "[QbuzW'B_rW\":GDl", 160);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      String string0 = "throw";
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      String string1 = "7}OlDj3?t-$xG3W";
      Parser parser1 = new Parser((CompilerEnvirons) null, errorReporter1);
      // Undeclared exception!
      try { 
        parser1.parse("7}OlDj3?t-$xG3W", "throw", 2041);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = Context.errorReporterProperty;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<9Ju$DAHP&vYFFJ");
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter2);
      parser1.insideFunction();
      // Undeclared exception!
      try { 
        parser0.parse("@hJv`", "<<9Ju$DAHP&vYFFJ", 6929);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (<<9Ju$DAHP&vYFFJ#6929)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[4];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = ':';
      charArray0[3] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      parser0.parse((Reader) charArrayReader0, "<><9Ju$DAHP&vYFF", 116);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      String string0 = parser0.getEncodedSource();
      assertEquals("\u0087'\u0002OOf\u0001'\u0001SQ\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      contextFactory0.getE4xImplementationFactory();
      Context.enter(context0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons2, errorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("r^`t>]4.pI<Z5>%B", "try ", (-2268));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2268
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.addStrictWarning(" TgnM@yz(.y8'G_{k", "Q-F");
      // Undeclared exception!
      try { 
        parser0.parse("[dj~F", ";M`<8UcwN`E^", 40);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      char[] charArray0 = new char[7];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = 'a';
      charArray0[3] = 'a';
      charArray0[4] = 'a';
      charArray0[5] = 'a';
      charArray0[6] = 'a';
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "Co;gjj$v\\FpS;";
      // Undeclared exception!
      try { 
        parser0.parse("Co;gjj$vFpS;", "void", (-596));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      compilerEnvirons0.setGenerateDebugInfo(false);
      String string0 = "FPVVhlHP7}LL#~/4E";
      // Undeclared exception!
      try { 
        parser0.parse("(#s", "cU]+gRu3#J,G", 161);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("{,~J-)dzSf5nSsGX@", "Tu>QL@v'8~W^pU$,5", 1633);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (Tu>QL@v'8~W^pU$,5#1633)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = '2';
      charArray0[3] = 'f';
      charArray0[4] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      charArrayReader0.skip(1827L);
      DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse((Reader) charArrayReader0, "setUTCMinutes", 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      contextFactory0.makeContext();
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Set<String> set0 = context0.activationNames;
      compilerEnvirons0.activationNames = null;
      parser0.defineSymbol(86, false, "error reporter");
      parser0.popScope();
      parser0.pushScope(scriptOrFnNode0);
      assertEquals("\u0087", parser0.getEncodedSource());
      assertEquals(0, scriptOrFnNode0.getEndLineno());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("uZQF2+", "adapter", 74);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file (adapter#74)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      parser0.addStrictWarning((String) null, (String) null);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Node.Scope node_Scope0 = null;
      // Undeclared exception!
      try { 
        parser0.parse("+", "language version", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("P[/#S=U)``v", "msg.dup.label", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (msg.dup.label#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("factory == null", "error reporter", 130);
      assertEquals(130, scriptOrFnNode0.getLineno());
      
      parser0.insideFunction();
      boolean boolean0 = parser0.insideFunction();
      assertEquals("\u0087'\u0007factory\f*Q\u0001", parser0.getEncodedSource());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.setXmlAvailable(true);
      // Undeclared exception!
      try { 
        parser0.parse("null", "msg.no.return.value", (-2621));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.addStrictWarning("S&0b,lhT(Y)`6Q ", "S&0b,lhT(Y)`6Q ");
      String string0 = "for ";
      // Undeclared exception!
      try { 
        parser0.parse("byte", "OP", 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.activationNames = (Set<String>) linkedHashSet0;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.parse("", "", 1597);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      Context context0 = contextFactory0.enterContext((Context) null);
      compilerEnvirons0.initFromContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse("<-Q{#q", "error reporter", 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "<9Ju$DAHP&vYFF\\{&<";
      // Undeclared exception!
      try { 
        parser0.parse("<9Ju$DAHP&vYFF{&<", "", 52);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("const", "const", 53);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing variable name (const#53)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      DefaultErrorReporter.forEval(errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("throw", "throw", (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[5];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = '(';
      String string0 = "<9Ju$DAHP&vYFF\\{&<";
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      defaultErrorReporter0.runtimeError("<9Ju$DAHP&vYFF{&<", "error reporter", 130, "language version", 2126);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "c'4(OHLyWaU#9j]", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (c'4(OHLyWaU#9j]#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      compilerEnvirons0.setGenerateObserverCount(false);
      // Undeclared exception!
      try { 
        parser0.parse("mPUH(dV%\"f/U", ".?", 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("U1zK(9v2y", "uZQF2+", (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("co|sM", "co|sM", 49);
      assertEquals("\u0087'\u0002co\t'\u0002sMQ\u0001", parser0.getEncodedSource());
      assertEquals(49, scriptOrFnNode0.getLineno());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      compilerEnvirons0.setGeneratingSource(true);
      Context context0 = contextFactory0.makeContext();
      compilerEnvirons0.getErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      boolean boolean0 = context0.useDynamicScope;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("W,}goFLBYo", "{kSF!%+", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ({kSF!%+#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = ':';
      charArray0[3] = 'S';
      defaultErrorReporter0.runtimeError(":", "error reporter", 11, "=z:xFYjbl}o~Tm in5", 96);
      charArray0[4] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "=z:xFYjbl}o~Tm in5", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "with";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "with");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      boolean boolean0 = parser0.calledByCompileFunction;
      // Undeclared exception!
      try { 
        parser0.parse("with", "with", 46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("coost", "coost", 53);
      assertEquals("\u0087'\u0005coostQ\u0001", parser0.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.exit();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.setGenerateObserverCount(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      parser0.addStrictWarning("Qu\"@gb`s2>", "Qu\"@gb`s2>");
      parser0.addStrictWarning("language version", "Qu\"@gb`s2>");
      contextFactory0.seal();
      parser0.getEncodedSource();
      Context.enter(context0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      // Undeclared exception!
      try { 
        parser0.parse("SiPu(V&v,!jfi:D6 M/", "S", 129);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (S#129)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      String string0 = " !== ";
      // Undeclared exception!
      try { 
        parser0.parse("delete ", " !== ", (-653));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -653
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "msg.no.paren.after.cond");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = ':';
      charArray0[3] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, (String) null, 160);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "75#=zHP@mN6Fb,P+";
      defaultErrorReporter0.runtimeError("75#=zHP@mN6Fb,P+", "75#=zHP@mN6Fb,P+", 'O', "75#=zHP@mN6Fb,P+", ':');
      char[] charArray0 = new char[10];
      charArray0[0] = 'O';
      charArray0[4] = 'R';
      charArray0[2] = ':';
      charArray0[3] = ':';
      charArray0[4] = 'R';
      charArray0[6] = 'R';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse((Reader) charArrayReader0, "75#=zHP@mN6Fb,P+", 23);
      parser0.eof();
      // Undeclared exception!
      try { 
        parser0.defineSymbol(3, false, "75#=zHP@mN6Fb,P+");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      parser0.parse("", "@M~eAw", 156);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setXmlAvailable(false);
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter1 = context0.getErrorReporter();
      Parser parser2 = new Parser(compilerEnvirons1, errorReporter1);
      Context context1 = new Context();
      boolean boolean0 = context1.isContinuationsTopCall;
      Parser parser3 = new Parser(compilerEnvirons1, errorReporter1);
      Parser parser4 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser4.parse("msg.no.bracket.arg", "language version", (-290));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setReservedKeywordAsIdentifier(false);
      String string0 = "r";
      errorReporter0.runtimeError("language version", "error reporter", 1048589, "r", 12);
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter0);
      parser0.addStrictWarning("yWZz", "error reporter");
      String string1 = "switch";
      // Undeclared exception!
      try { 
        parser0.parse("switch", "error reporter", 108);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before switch expression (error reporter#108)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.setXmlAvailable(false);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      compilerEnvirons0.setXmlAvailable(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      Context context0 = new Context(contextFactory0);
      boolean boolean0 = context0.isContinuationsTopCall;
      // Undeclared exception!
      try { 
        parser0.parse("<-", "$QKB", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ($QKB#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser1.createDecompiler(compilerEnvirons1);
      Parser parser2 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[4];
      charArray0[0] = ';';
      charArray0[1] = ';';
      charArray0[2] = 'G';
      charArray0[3] = 'G';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FunctionNode functionNode0 = new FunctionNode("%4JZ|z.GC$");
      // Undeclared exception!
      try { 
        parser2.parse("var ", "<9", (-1349));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = new Context();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "language version");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@i4E");
      DefaultErrorReporter.forEval(errorReporter0);
      compilerEnvirons0.setXmlAvailable(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons2.getErrorReporter();
      Context context1 = contextFactory0.enterContext();
      boolean boolean0 = context1.isContinuationsTopCall;
      String string0 = "toLowerCase";
      // Undeclared exception!
      try { 
        parser0.parse("@i4E", "toLowerCase", 1973);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (toLowerCase#1973)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      Context context1 = contextFactory0.enterContext(context0);
      compilerEnvirons0.initFromContext(context1);
      ContextFactory.getGlobal();
      compilerEnvirons0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      StringReader stringReader0 = new StringReader("false");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse((Reader) stringReader0, "~-.K)p]^_(sU|tT9@", 10);
      parser0.insideFunction();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      defaultErrorReporter0.runtimeError("org.mozilla.javascript.ScriptRuntime$IdEnumeration", "org.mozilla.javascript.ScriptRuntime$IdEnumeration", 47, "", 47);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sup");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-.JtJcS");
      compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/clp&");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("", "]-", 10);
      parser0.pushScope(scriptOrFnNode0);
      // Undeclared exception!
      try { 
        parser0.pushScope(scriptOrFnNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "msg.bad.throw.eol";
      parser0.parse("msg.bad.throw.eol", "T8vAPZN;7c(tRN@", 5);
      parser0.getCurrentLineNumber();
      // Undeclared exception!
      try { 
        parser0.addWarning("", "<9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "try ";
      // Undeclared exception!
      try { 
        parser1.parse("try ", "try ", 21);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing { before try block (try #21)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }
}
