/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 16:41:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      classWriter0.index = (-12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-12), "4eKJ6=iGtG", "4eKJ6=iGtG", "4eKJ6=iGtG", "4eKJ6=iGtG");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-115));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-115), "F 9", "F 9", "F 9", "F 9");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-23));
      classWriter0.index = (-23);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-23), "6?!,I;{gSTzljsD5", "6?!,I;{gSTzljsD5", "6?!,I;{gSTzljsD5", "6?!,I;{gSTzljsD5");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "ConstantValue", "org.apache.commons.io.IOCase", "4eKV6=iGtG", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 96, "4eKV6=iGtG", "4eKV6=iGtG", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 96, "4eKV6=iGtG", "4eKV6=iGtG", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-645), "%e;-<*:Y'ly\"m", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2548), (String) null, "RuntimeVisibleAnnotations", "4eKV6=iGtG", "org.apache.commons.io.IOCase");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 96, "4eKV6=iGtG", "4eKV6=iGtG", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("4eKV6=iGtG", true);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2460, "5SL", "org.apache.commons.io.IOCase", "m^ik'@M.M=?E51", annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.AnnotationWriter@b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-27), "d", "X4VaC*/", "b0yR18P", "b0yR18P");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("U]98=JnWdM<}J?w7iJ*");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "F", "F", "F", "F");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("67,/n/x ", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 96, "4eKV6=iGtG", "4eKV6=iGtG", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      fieldWriter0.visitAnnotation("4eKV6=iGtG", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(190);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1278), "4eKJ6=iGtG", "4eKJ6=iGtG", "4eKJ6=iGtG", (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      classWriter0.version = 190;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-645), "%e;-<*:Y'ly\"m", "", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "F", "F", "F", "F");
      Attribute attribute0 = new Attribute("%, >>TyZxvWfeW5:C");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-23));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-23), "6?!,I;{gSTzljsD5", "6?!,I;{gSTzljsD5", "6?!,I;{gSTzljsD5", "6?!,I;{gSTzljsD5");
      fieldWriter0.visitAnnotation("zI", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(190);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1278), "4eKJ6=iGtG", "4eKJ6=iGtG", "4eKJ6=iGtG", (Object) null);
      classWriter0.version = 190;
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1068, "", "", "", "b0yR18P");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-645), "%e;-<*:Y'ly\"m", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "F", "F", "F", "F");
      fieldWriter0.visitAnnotation("67,/n/x ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-645), "%e;-<*:Y'ly\"m", "", (String) null, (Object) null);
      fieldWriter0.visitEnd();
  }
}
