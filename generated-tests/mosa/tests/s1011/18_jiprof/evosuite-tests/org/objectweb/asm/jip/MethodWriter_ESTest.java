/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:50:44 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)69;
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)34;
      short short0 = MethodWriter.readShort(byteArray0, 0);
      assertEquals((short)17733, short0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-61);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3522));
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 924, 186);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 924
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[2] = (byte)61;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.visitIincInsn((-1506), (-3016));
      methodWriter0.visitIntInsn((-3016), (-3016));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 15, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, true);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3551), "LocalVariableTable", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = 953;
      MethodWriter.getNewOffset(intArray0, intArray0, 3, (-346));
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      assertNull(label0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3016), "Signature", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3535));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", (String[]) null, false, false);
      methodWriter0.visitMethodInsn((-3535), "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet");
      Label label0 = new Label();
      methodWriter0.visitInsn(2);
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "abel offset poiion has not been r?solbed ylt", "4Y", "4Y", (String[]) null, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 1);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3562));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("k(&/X#ggM)W8aL~5");
      methodWriter0.getSize();
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3016), ":[t,9'}|wZQ5R", ":[t,9'}|wZQ5R", "Signature", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 16777219);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-2094030112), "Re$n3/)S|60Q?@>eYEL", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 1);
      methodWriter0.visitFieldInsn((-3016), "Signature", "Signature", "Signature");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3539), "+", "+", "StackMapTable", (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      Label label0 = new Label();
      int int0 = Frame.BYTE;
      methodWriter0.visitMaxs(16777226, (-3539));
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, false);
      methodWriter0.visitIntInsn((-3539), (-380));
      methodWriter0.visitFrame(2, 2, (Object[]) null, (-380), (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3539), "void", "void", (String) null, (String[]) null, false, false);
      methodWriter0.visitIincInsn((-3539), (-3539));
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, objectArray0, 1, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "", "za` - ~\"1@RhO{Ofsb5", "za` - ~\"1@RhO{Ofsb5", (String[]) null, false, false);
      methodWriter0.visitIincInsn((-3539), 2);
      methodWriter0.visitFrame((-2560), (-2560), (Object[]) null, (-3539), (Object[]) null);
      int int0 = methodWriter0.getSize();
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3562));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(2, "k(&/X#ggM)W8aL~5", "8 bj ", "k(&/X#ggM)W8aL~5");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(7, "k(&/X#ggM)W8aL~5", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3539), "vid", "vid", (String) null, (String[]) null, false, false);
      methodWriter0.visitIincInsn((-3539), (-3539));
      int int0 = methodWriter0.getSize();
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3029));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "k(&/X#gjM)W8aL~5";
      stringArray0[1] = "k(&/X#gjM)W8aL~5";
      stringArray0[2] = "k(&/X#gjM)W8aL~5";
      stringArray0[3] = "k(&/X#gjM)W8aL~5";
      stringArray0[4] = "k(&/X#gjM)W8aL~5";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", stringArray0, true, false);
      methodWriter0.visitLdcInsn("k(&/X#gjM)W8aL~5");
      int int0 = methodWriter0.getSize();
      assertEquals(54, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", (String[]) null, false, false);
      methodWriter0.visitVarInsn(3, 185);
      methodWriter0.visitIincInsn(2367, 2367);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", "Exceptions", "Exceptions", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", (String[]) null, false, false);
      int int0 = 185;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt", "abel offset poiion has not been r?solbed ylt");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4246), "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, false, false);
      methodWriter0.visitLdcInsn("k(&/X#gjM)W8aL~5");
      Object object0 = new Object();
      int int0 = methodWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      methodWriter0.visitLdcInsn("k(&/X#gjM)W8aL~5");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "k(&/X#gjM)W8aL~5", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3562));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "b_+Hj@\n33a+Ng`&", "k(&/X#gjM)W8aL~5", "b_+Hj@\n33a+Ng`&", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      Label label1 = new Label();
      methodWriter0.visitMethodInsn(1, "b_+Hj@\n33a+Ng`&", "b_+Hj@\n33a+Ng`&", "Exceptions");
      methodWriter0.visitInsn(1);
      methodWriter0.visitLabel(label1);
      Label label2 = label1.getFirst();
      methodWriter0.visitLocalVariable("M=cJ/'TOt))m*S]D 0", "Exceptions", "k(&/X#gjM)W8aL~5", label2, label0, (-3569));
      assertNotSame(label0, label2);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3528));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "jP=g", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, true);
      methodWriter0.visitMultiANewArrayInsn("k(&/X#gjM)W8aL~5", 1);
      methodWriter0.visitFrame(1, 1, (Object[]) null, (-3528), (Object[]) null);
      int int0 = methodWriter0.getSize();
      assertEquals(38, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Sigznature", "Sigznature", "Sigznature", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 1);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.visitMaxs(247, 255);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "jP=g", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, true);
      methodWriter0.exceptionCount = 2041;
      methodWriter0.visitIincInsn(2, (-1395));
      classWriter0.newClass("jP=g");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("a");
      ByteVector byteVector1 = byteVector0.putByte(1);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3535));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "k(&/X#}jM)W8aL~5", "a", (String[]) null, true, true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitLdcInsn("a");
      Label label0 = new Label();
      label0.status = (-425);
      methodWriter0.visitJumpInsn(177, label0);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "a";
      stringArray0[1] = "a";
      stringArray0[2] = "a";
      stringArray0[3] = "k(&/X#gjM)W8aL~5";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "a", stringArray0, false, false);
      methodWriter0.visitIincInsn(1, 822);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("RuntimeInvisibleParameterAnnotations");
      byteVector1.putByte((-3539));
      methodWriter0.put(byteVector0);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1995957525));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "jP=g", "k^&#/X#gjM)W8a{~5", "a", (String[]) null, true, true);
      methodWriter0.visitIincInsn(2, 2);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(5, (-1995957525), label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position has not been resolbed ylt", "Label offset position has not been resolbed ylt", "Label offset position has not been resolbed ylt", (String[]) null, false, false);
      methodWriter0.visitMethodInsn((-3539), "Label offset position has not been resolbed ylt", "JCGulrdW!", "Label offset position has not been resolbed ylt");
      Label label0 = new Label();
      Attribute attribute0 = new Attribute("byte");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitIincInsn((-3539), (-3539));
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = (-3539);
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitMaxs(1, 169);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 15, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, true);
      methodWriter0.visitVarInsn(15, 2);
      methodWriter0.visitTypeInsn((-3539), "k(&/X#gjM)W8aL~5");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "k(&/X#gjM)W8aL~5", "", (String[]) null, true, true);
      String string0 = "<init>";
      boolean boolean0 = false;
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 21, "<init>", "", "k(&/X#gjM)W8aL~5", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(1, "ZMOM'V0MuoVIS", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3029));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.classReaderOffset = (-3029);
      methodWriter0.visitVarInsn(1, 3714);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, false, false);
      methodWriter0.visitVarInsn(2, 191);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3511));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "|(&/X#gjM)W8a~5", "a", (String[]) null, true, true);
      methodWriter0.visitMultiANewArrayInsn("|(&/X#gjM)W8a~5", 1);
      methodWriter0.visitIincInsn(56, 2);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, true);
      methodWriter0.visitIincInsn(2, 2);
      Label label0 = new Label();
      methodWriter0.visitLineNumber((-3539), label0);
      Label label1 = new Label();
      methodWriter0.visitJumpInsn(1, label1);
      assertNotSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "|(&/X#gjM)W8a~5", "W~x'Iy~", "W~x'Iy~", (String[]) null, false, false);
      methodWriter0.visitVarInsn(56, 56);
      int int0 = Frame.BYTE;
      methodWriter0.visitMaxs(56, 2);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.visitFrame(2, 1, (Object[]) null, 184, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1302), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 1);
      methodWriter0.visitTypeInsn(24, "Signature");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter0.threshold = 169;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "~)$Cf}0t|T5oDc", "5~8W'", (String) null, (String[]) null, false, false);
      methodWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      Label label0 = new Label();
      boolean boolean0 = ClassReader.FRAMES;
      int int0 = Frame.BYTE;
      methodWriter0.visitFieldInsn(179, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "org.objectweb.asm.jip.Edge");
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.Edge", true);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1053);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 59, "@", "k(&/X#gjM)W8aL~5", "@", (String[]) null, false, true);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3562));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("k(&/X#ggM)W8aL~5", "Label offset position has not been resolved yet", "k(&/X#ggM)W8aL~5", label0, label0, 256);
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      methodWriter0.visitIincInsn(1, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "IAl3 3.|", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3535));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-3535), "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      methodWriter0.visitFrame(2, 2, (Object[]) null, (-3535), objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3526));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "|(&/X#gjM)W8a~5", "a", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(56, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(56, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(44, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3511));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "|(&/MX#gjM)W8a~5", "a", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("|(&/MX#gjM)W8a~5", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(32, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(methodWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.MethodWriter@9
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = (-3016);
      ClassWriter classWriter0 = new ClassWriter((-3016));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "Siature";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Siature", "Siature", "Siature", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-286), (Object[]) null, 1015, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1114, 1, (Object[]) null, 170, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", "void", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      int int0 = classWriter0.newNameType("void", "Label offset position $as not been resolved yet");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("Label offset position $as not been resolved yet", 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newMethodItem("void", "Label offset position $as not been resolved yet", ".JAR", false);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation(".JAR", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-1757), (-3539), (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put11((-1757), 1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.signature = "Signature";
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("k(&/X#gjM)W8aL~5", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitFieldInsn(2131, "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", "StackMapTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = new ByteVector();
      assertNotNull(byteVector1);
      assertFalse(byteVector1.equals((Object)byteVector0));
      
      methodWriter0.put(byteVector1);
      assertNotSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(byteVector1.equals((Object)byteVector0));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "Signature", "Signature", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Signature", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-3539), "k0fR*^6#7t0=X?", "AfJa43 I", "Label offset position has not been resolved yet");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "k0fR*^6#7t0=X?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(1, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "<init>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-3539), "Label offset position has not been resolved yet", "AfJa43 I", "Label offset position has not been resolved yet");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTypeInsn(1, "AfJa43 I");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = (-341);
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label1, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Siature", "Siature", "Siature", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, (-286), (Object[]) null, 1015, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-191), "Siature", "(8r)btCtR^c,0SAD", "j@o]jZfm{{[,2#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-2897), 1, (Object[]) null, 272, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3544));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newLong((-3544));
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-3544), "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet", "Label offset positionhas not been rsolved yet");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Label offset positionhas not been rsolved yet");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitFieldInsn(179, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "org.objectweb.asm.jip.Edge");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("org.objectweb.asm.jip.Edge", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(49, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(2, "k0fR*^6#7t0=X?", "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = (-2267);
      methodWriter0.visitIntInsn(17, 268435455);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(292552704, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label2 = frame0.owner;
      assertNull(label2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("Label offset position $as not been resolved yet", "Synthetic", "Label offset position $as not been resolved yet", label0, (Label) null, 292552704);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoLVIS", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderOffset = 90;
      methodWriter0.visitLdcInsn("ZMOM'V0MuoLVIS");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "bel offset position has nt ben resolbed lt", "bel offset position has nt ben resolbed lt", "bel offset position has nt ben resolbed lt", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-3539), "bel offset position has nt ben resolbed lt", "bel offset position has nt ben resolbed lt", "bel offset position has nt ben resolbed lt");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("bys|");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(1, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "K,;s/9N[MeldtJ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = (-3551);
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn((-3551), 22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-3551), (-1859));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 0, (Object[]) null, 22, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = (-3539);
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = (-1722);
      ClassWriter classWriter1 = new ClassWriter(978);
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 280, "NToFv#}Hp/(vP-W-", "NToFv#}Hp/(vP-W-", "void", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter1.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitIincInsn((-1722), 280);
      assertNotSame(classWriter1, classWriter0);
      assertSame(methodWriter2, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 1, (Object[]) null, 9, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitVarInsn(2, 191);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(6, "i", "LocalVariableTable", "ConstantValue");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("ConstantValue", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "jP=g", "k(&/X#gjM)W8aL~5", "", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, (-1395));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      classWriter0.cr = null;
      ByteVector byteVector2 = byteVector0.putByte(1);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(5, (-1395), label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitTableSwitchInsn(1, 49, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(636, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitMaxs(16777226, (-3539));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3539), "k(&/X#gjM)W8aL~5", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "abel offet poiion has otbeen rsolbed ylt", "abel offet poiion has otbeen rsolbed ylt", "abel offet poiion has otbeen rsolbed ylt", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, (-1528));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(4307, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      label0.next = null;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(44, 4307, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(6, "ConstantValue", "LocalVariableTable", "ConstantValue");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.thisName = ".class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(6, "ConstantValue", "LocalVariableTable", "ConstantValue");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((-1007), 6);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1936));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-683), "ZMOM'V0MuoVIS", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      int int0 = methodWriter0.getSize();
      assertEquals(49, int0);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("k(&/X#gjM)W8aL~5", false);
      assertNotNull(annotationVisitor0);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      int int1 = methodWriter0.getSize();
      assertEquals(61, int1);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", "void", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      int int0 = classWriter0.newNameType("void", "Label offset position $as not been resolved yet");
      assertEquals(3, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("Label offset position $as not been resolved yet", 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newMethodItem("void", "Label offset position $as not been resolved yet", ".JAR", false);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 1, (Object[]) null, (-1572), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      methodWriter0.visitFrame(3, 2903, (Object[]) null, 3, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(3, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "jP=g", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("a");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(6, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter0.visitLocalVariable("M1", "M1", "jP=g", label0, label0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber((-3539), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable(">b4)wIt5zum", ">b4)wIt5zum", "RuntimeInvisibleAnnotations", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3528));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-161), "b1P)DcU3Z~0x!b", "|(&/X#gjM)W8a~5", "b1P)DcU3Z~0x!b", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(56, (-3605));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitMaxs(16777226, (-1955));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoLVIS", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("ZMOM'V0MuoLVIS");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation(2, "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, 893);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@23d66178
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", "void", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      int int0 = classWriter0.newNameType("void", "Label offset position $as not been resolved yet");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      methodWriter0.visitMultiANewArrayInsn("Label offset position $as not been resolved yet", 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderOffset = 1306;
      Item item0 = classWriter0.newMethodItem("void", "Label offset position $as not been resolved yet", ".JAR", false);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation(".JAR", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-1757), (-3539), (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put11((-1757), 1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "Label offset position $as not been resolved yet";
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, (-3539));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("Label offset position $as not been resolved yet", (-3539));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-3539), (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newInteger((-3539));
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("k(&/X#gjM)W8aL~5", "StackMapTable", (String) null, label0, label0, 285212681);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(121, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3562));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitVarInsn(2, (-3562));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[0];
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitInsn(201);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      ClassWriter classWriter1 = new ClassWriter(68);
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      AnnotationVisitor annotationVisitor0 = classWriter1.visitAnnotation("~2;", true);
      assertNotNull(annotationVisitor0);
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "k(&/X#gjM)W8aL~5";
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[1] = object0;
      methodWriter0.visitFrame(1, 1, objectArray0, 1, (Object[]) null);
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      ByteVector byteVector0 = classWriter1.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("k(&/X#gjM)W8aL~5");
      assertNotNull(byteVector1);
      assertNotSame(classWriter1, classWriter0);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      ByteVector byteVector2 = byteVector1.put11(1, 2);
      assertNotNull(byteVector2);
      assertNotSame(classWriter1, classWriter0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.put(byteVector0);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(classWriter1, classWriter0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter1.equals((Object)classWriter0));
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "x~2lsQ", ".+D8TYuO?:+v", "Deprecated", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter((-3539));
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      MethodWriter methodWriter1 = classWriter1.lastMethod;
      assertNull(methodWriter1);
      
      methodWriter0.visitIincInsn(185, 1);
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitIntInsn((-1), 2);
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-3539), (Object[]) null, 185, (Object[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visit(247, 255, "=P4kMvmYMjTJ+BwH", "Siature", "Siature", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Siature", "Siature", "Siature", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1, (-286), (Object[]) null, 1015, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-3016), "Siature", "(8r)btCtR^c,0SAD", "j@o]jZfm{{[,2#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(132, "k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Label offset position $as not been resolved yet", "Label offset position $as not been resolved yet", "void", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      classWriter0.version = (-3539);
      int int0 = classWriter0.newNameType("void", "Label offset position $as not been resolved yet");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("Label offset position $as not been resolved yet", 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation(".JAR", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-1757), (-3539), (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put11((-1757), 1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitTableSwitchInsn(1, 49, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {}, intArray0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      methodWriter0.visitInsn(172);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "jP=g", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("a");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber((-3539), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLocalVariable("M1", "M1", "jP=g", label0, label0, 1);
      assertNotSame(label0, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      
      int int0 = methodWriter0.getSize();
      assertEquals(85, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3522));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "k(&/X#gjM)W8aL~5", "", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, (-3522));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(783, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(52, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(1, (-3162));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(255, "k(&/X#gjM)W8aL~5", "h0yPv", "h0yPv");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(169, (-3539));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn((String) null, (-1320));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMaxs((-3539), 187);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(187, "k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "pXt\"k>aL", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      String string0 = "L,\"}Isgw,!$*xEL=X7Y";
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(186, "L,\"}Isgw,!$*xEL=X7Y", "pXt\"k>aL", "pXt\"k>aL");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 7;
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      classWriter0.visitSource("k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(170, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "J_[(");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("k(&/X#gjM)W8aL~5", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("StackMapTable");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-3539), 187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitJumpInsn(185, label1);
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitIntInsn(188, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("char", 188);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[7];
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "Label offset position has not been reolbed ylt", "Label offset position has not been reolbed ylt", "Label offset position has not been reolbed ylt", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(186, "YPnsEy(gZ0sJ]st9hV", "Label offset position has not been resolved yet", "Label offset position has not been reolbed ylt");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("Label offset position has not been reolbed ylt");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("L,\"}Isgw,!$*xEL=X7Y");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "ZMOM'V0MuoVIS", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMultiANewArrayInsn("k(&/X#gjM)W8aL~5", (-3539));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-3539), "L,\"}Isgw,!$*xEL=X7Y", "ZMOM'V0MuoVIS", "k(&/X#gjM)W8aL~5");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "L,\"}Isgw,!$*xEL=X7Y", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderLength = (-3539);
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitMaxs(16777226, (-3539));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3016), "+", "a", "+", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      edge0.info = 252;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "k(&/X#}jM)W8aL~5", "a", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitLdcInsn("a");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLdcInsn("k(&/X#}jM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(2, "a", "Ib+v=zoAz77l", "F' q2IzAt.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("xJ,t:Bns(D~&l");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("AnnotationDefault");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(20, "AnnotationDefault", "RuntimeInvisibleParameterAnnotations", "AnnotationDefault");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, (int[]) null, label0);
      assertArrayEquals(new int[] {}, intArray0);
      
      MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3016));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a");
      assertFalse(boolean0);
      
      classWriter0.version = (-3016);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3016), "+", "a", "+", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3562));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", "k(&/X#ggM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(185);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "k(&/X#gjM)W8aL~5", "a", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "a", "wxvJ%+9?8`", label0, label0, (-4189));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber((-3539), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("M1", "M1", "a", label0, label0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-3539), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-3539), 187);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFloat(1);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("k(&/X#gjM)W8aL~5", "Deprecated", "Deprecated", label0, label0, 342);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2040140809), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2040140809
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3539), "vid", "vid", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object[] objectArray0 = new Object[2];
      methodWriter0.visitFrame(3, 2, objectArray0, 2, objectArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitVarInsn(2, (-3539));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "k(&/X#gjM)W8aL~5", "", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[1];
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0}, intArray0);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn("k(&/X#gjM)W8aL~5", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3535));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "a", "k(&/X#}jM)W8aL~5", "a", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitLdcInsn("a");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 191;
      label0.status = (-425);
      methodWriter0.visitJumpInsn(177, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(542);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Item item0 = classWriter0.newInteger((-2871));
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "k(&/X#gjM)W8aL~5";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 542, (Object[]) null, 1, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3539));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("J_[(", "J_[(", "J_[(");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      classWriter0.visitSource("k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(179, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "J_[(");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("k(&/X#gjM)W8aL~5", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3551));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTable", "k(&/X#gjM)W8aL~5", "LocalVariableTable", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn((-3551), 22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-3551), (-1859));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.thisName = "k(&/X#gjM)W8aL~5";
      methodWriter0.visitFrame(0, 0, (Object[]) null, (-2297), (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer((-835));
      assertNotNull(integer0);
      assertEquals((-835), (int)integer0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(22, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(22, "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5", "k(&/X#gjM)W8aL~5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }
}
