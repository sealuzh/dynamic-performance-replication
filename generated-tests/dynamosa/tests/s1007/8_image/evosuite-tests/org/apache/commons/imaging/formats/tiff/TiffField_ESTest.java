/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 08:32:36 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "*H^h");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-795), (-795), fieldTypeShort0, 537L, 537L, byteArray0, byteOrder0, (byte) (-3));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-795), tiffField0.getDirectoryType());
      assertEquals((-795), tiffField0.getTag());
      assertEquals(47, int0);
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals(537, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField((byte)4, 50, fieldTypeRational0, 1744L, 1L, byteArray0, byteOrder0, (byte)74);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField((byte)4, 50, fieldTypeRational0, 1744L, 1L, byteArray0, byteOrder0, (byte)74);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(17, "yN'j");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (byte) (-15), fieldTypeByte0, (byte) (-15), (-1883L), byteArray0, byteOrder0, 2812);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1883), tiffField0.getOffset());
      assertEquals(2812, tiffField0.getSortHint());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(44, (byte)0, fieldTypeShort0, 4L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(44, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(324, 324, fieldTypeDouble0, 324, 324, byteArray0, byteOrder0, (byte)26);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tagInfo0.tag);
      assertEquals(324, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(324, tiffField0.getTag());
      assertEquals(324, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-31), 311, fieldTypeAscii0, (-826L), (-469L), byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getTag();
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals((-31), int0);
      assertEquals((-469), tiffField0.getOffset());
      assertEquals(311, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-15);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(313, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2101792506, 2101792506, fieldTypeAscii0, 1879, 2101792506, byteArray0, byteOrder0, 2101792506);
      int int0 = tiffField0.getSortHint();
      assertEquals(2101792506, tiffField0.getOffset());
      assertEquals(2101792506, tiffField0.getTag());
      assertEquals(2101792506, int0);
      assertEquals(2101792506, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "*H^h");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-795), (-795), fieldTypeShort0, 537L, 537L, byteArray0, byteOrder0, (byte) (-3));
      int int0 = tiffField0.getSortHint();
      assertEquals((-3), int0);
      assertEquals((-795), tiffField0.getTag());
      assertEquals((-795), tiffField0.getDirectoryType());
      assertEquals(537, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-2));
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-6526), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-6526), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[15];
      byteArray0[1] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4420, (-1795), fieldTypeByte0.SLONG, 4420, (-2790L), byteArray0, byteOrder0, 4420);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1795), tiffField0.getDirectoryType());
      assertEquals((-2790), tiffField0.getOffset());
      assertEquals(4420, tiffField0.getTag());
      assertEquals(4420, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte) (-125);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-125), (byte) (-125), fieldTypeByte0, (byte)1, 2656L, byteArray0, byteOrder0, 719);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2656, tiffField0.getOffset());
      assertEquals(719, tiffField0.getSortHint());
      assertEquals((-125), tiffField0.getTag());
      assertEquals((-125), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (-575), fieldTypeShort0, 1L, (-1449L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-575), tiffField0.getDirectoryType());
      assertEquals((-1449), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(18, (byte)1, fieldTypeShort0, (byte)1, 18, byteArray0, byteOrder0, 18);
      tiffField0.getIntValue();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals(18, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      TiffField tiffField0 = new TiffField(2143329907, 3686, fieldTypeByte0, 1L, 3686, byteArray0, byteOrder0, (-312));
      tiffField0.getIntValue();
      assertEquals(3686, tiffField0.getOffset());
      assertEquals((-312), tiffField0.getSortHint());
      assertEquals(3686, tiffField0.getDirectoryType());
      assertEquals(2143329907, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      TiffField tiffField0 = new TiffField(0, 34030, fieldTypeDouble0, (-2), 4L, byteArray0, byteOrder0, 2892);
      tiffField0.getFieldTypeName();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2892, tiffField0.getSortHint());
      assertEquals(34030, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1712, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-744), 2147452889, fieldTypeByte0, 1096L, (-1987L), byteArray0, byteOrder0, (-1505));
      tiffField0.getFieldTypeName();
      assertEquals((-1987), tiffField0.getOffset());
      assertEquals((-744), tiffField0.getTag());
      assertEquals(2147452889, tiffField0.getDirectoryType());
      assertEquals((-1505), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2147483638, fieldTypeAscii0, 65535, 1L, byteArray0, byteOrder0, 75);
      tiffField0.getFieldType();
      assertEquals(2147483638, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1840700269, (-1), fieldTypeLong0, 1840700269, 255L, byteArray0, byteOrder0, (-317));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-317), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1840700269, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2125), "l\u0006xKns,.x");
      TiffField tiffField0 = new TiffField(1879, (-2125), fieldTypeShort0, 1879, 1879, byteArray0, byteOrder0, 2147274035);
      tiffField0.getFieldType();
      assertEquals(2147274035, tiffField0.getSortHint());
      assertEquals((-2125), tiffField0.getDirectoryType());
      assertEquals(1879, tiffField0.getOffset());
      assertEquals(1879, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-43), (byte)0, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-43), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(2143329907, (-969), fieldTypeShort0, (byte)1, (-2147483648L), byteArray0, byteOrder0, 11);
      tiffField0.getDoubleValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals((-969), tiffField0.getDirectoryType());
      assertEquals(2143329907, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-126);
      TiffField tiffField0 = new TiffField(42033, 1, fieldTypeShort0, 1, (-96L), byteArray0, byteOrder0, (-2838));
      tiffField0.getDoubleValue();
      assertEquals((-96), tiffField0.getOffset());
      assertEquals((-2838), tiffField0.getSortHint());
      assertEquals(42033, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1840700269, (-1), fieldTypeLong0, 1840700269, 255L, byteArray0, byteOrder0, (-317));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals((-317), tiffField0.getSortHint());
      assertEquals(1840700269, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-2017), fieldTypeRational0, (-1804L), (-1804L), byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals((-1804), tiffField0.getOffset());
      assertEquals((-2017), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      tiffField0.getBytesLength();
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2147452889, 33550, fieldTypeShort0, (-185L), 2176L, byteArray0, byteOrder0, 2147452889);
      tiffField0.getBytesLength();
      assertEquals(33550, tiffField0.getDirectoryType());
      assertEquals(2147452889, tiffField0.getTag());
      assertEquals(2147452889, tiffField0.getSortHint());
      assertEquals(2176, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, 1840, fieldTypeRational0, 2L, 2140556281, byteArray0, (ByteOrder) null, 1404);
      tiffField0.getByteOrder();
      assertEquals(2140556281, tiffField0.getOffset());
      assertEquals(1840, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1404, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2147303202, fieldTypeByte0, 4L, 1506L, byteArray0, byteOrder0, 44);
      tiffField0.getByteArrayValue();
      assertEquals(1506, tiffField0.getOffset());
      assertEquals(2147303202, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(313, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145665287, 2145665287, fieldTypeAscii0, 1105L, (-167L), byteArray0, byteOrder0, 521);
      MockFile mockFile0 = new MockFile("GPSDestLatitude", "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(78L, mockFile0.length());
      assertEquals(521, tiffField0.getSortHint());
      assertEquals(2145665287, tiffField0.getTag());
      assertEquals(2145665287, tiffField0.getDirectoryType());
      assertEquals((-167), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-2));
      MockFileWriter mockFileWriter0 = new MockFileWriter("P=Fj7&F,++-X.");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeByte0, (byte)9, (byte)9, (byte[]) null, byteOrder0, (byte)9);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1531), (-1531), fieldTypeByte0, (-1531), (-1531), byteArray0, byteOrder0, (-1531));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(37398, 37398, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 37398);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34152, 34152, (FieldType) null, 34152, 34152, byteArray0, (ByteOrder) null, 34152);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-80), (byte) (-80), fieldTypeByte0.RATIONAL, (byte) (-80), (byte) (-80), byteArray0, byteOrder0, (byte) (-80));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 1L, 12, byteArray0, (ByteOrder) null, 12);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-781), fieldTypeShort0, 28, 28, byteArray0, byteOrder0, (byte)30);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (byte)40);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, (FieldType) null, (byte)29, (byte)29, byteArray0, byteOrder0, (byte)29);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), (byte) (-25), fieldTypeByte0.RATIONAL, (byte) (-25), (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 1L, 12, byteArray0, (ByteOrder) null, 12);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34152, 34152, (FieldType) null, 34152, 34152, byteArray0, (ByteOrder) null, 34152);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1875, 1875, fieldTypeByte0, 1875, 1875, (byte[]) null, byteOrder0, 1875);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-2), (byte) (-2), fieldTypeByte0.RATIONAL, (byte) (-2), (byte) (-2), byteArray0, byteOrder0, (byte) (-2));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-83), fieldTypeAscii0.FLOAT, (-83), 1L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-35), (-35), fieldTypeByte0, (-35), (-35), byteArray0, byteOrder0, (-35));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), 2647, fieldTypeRational0, 1L, (byte)30, byteArray0, byteOrder0, 2647);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeByte0.SRATIONAL, 1, 40L, byteArray0, byteOrder0, (-862));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2389, 2389, fieldTypeShort0, 2389, 2389, (byte[]) null, byteOrder0, 2389);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2072), (-2072), fieldTypeByte0, (-2072), (-2072), byteArray0, byteOrder0, (-2072));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-464), (FieldType) null, (-2), (-464), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, (byte)7, fieldTypeAscii0, (byte)7, (byte)25, byteArray0, byteOrder0, (byte)7);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, fieldTypeByte0, (byte)29, (byte)29, (byte[]) null, byteOrder0, (byte)29);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-19), (byte) (-19), fieldTypeByte0.RATIONAL, (byte) (-19), (byte) (-19), byteArray0, byteOrder0, (byte) (-19));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)58, (byte)58, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)58);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1168), (-1168), fieldTypeShort0, (-1168), (-1168), (byte[]) null, byteOrder0, (-1168));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-114), (byte) (-114), fieldTypeByte0.RATIONAL, (byte) (-114), (byte) (-114), byteArray0, byteOrder0, (byte) (-114));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.SRATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-334), (-334), fieldTypeFloat0, (-334), (-334), byteArray0, byteOrder0, (-334));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 2147303215, fieldTypeDouble0, (-3715L), 2147303215, byteArray0, byteOrder0, 2147303215);
      MockFile mockFile0 = new MockFile("'(\"z=CVm\"@`#Y3*", "a%[e;yOOlw;'mj}O");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "a%[e;yOOlw;'mj}O");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte) (-14), (byte)0, fieldTypeShort0, (byte) (-14), (byte) (-14), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)40);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)4, 1, (FieldType) null, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3883, 3883, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 32932);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2083), (-2083), fieldTypeDouble0.BYTE, 0, 0L, (byte[]) null, byteOrder0, 41494);
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1712, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3065), 2147313819, fieldTypeByte0, 4L, (byte)54, byteArray0, byteOrder0, 2146819409);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(54, tiffField0.getOffset());
      assertEquals(2147313819, tiffField0.getDirectoryType());
      assertEquals(2146819409, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-3065), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(313, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34910, (byte)1, fieldTypeAscii0.SSHORT, 34910, (-3600L), byteArray0, byteOrder0, 245);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(34910, tiffField0.getTag());
      assertEquals((-3600), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(245, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (-575), fieldTypeShort0, 1L, (-1449L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals((-1449), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-575), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34152, 34152, (FieldType) null, 34152, 34152, byteArray0, (ByteOrder) null, 34152);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-211), 12, (FieldType) null, 4L, (-2136L), byteArray0, byteOrder0, (-988));
      tiffField0.getFieldType();
      assertEquals((-988), tiffField0.getSortHint());
      assertEquals((-211), tiffField0.getTag());
      assertEquals((-2136), tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeByte0, 1840, 1840, byteArray0, byteOrder0, (byte) (-11));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1840, int0);
      assertEquals(1840, tiffField0.getTag());
      assertEquals(1840, tiffField0.getOffset());
      assertEquals((-11), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3104), (-3104), (FieldType) null, (-3104), (-3104), byteArray0, byteOrder0, (-3104));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3, (-1), fieldTypeDouble0.ASCII, 0L, (-691L), byteArray0, byteOrder0, 1477);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1477, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-691), int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-310), fieldTypeAscii0, 1993L, (-310), byteArray0, byteOrder0, 9);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals((-310), tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-310), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-1417), (FieldType) null, (-408L), (-1417), (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(65535, int0);
      assertEquals((-1417), tiffField0.getOffset());
      assertEquals((-1417), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2138609747), (-2138609747), (FieldType) null, 0L, 255L, byteArray0, byteOrder0, 333);
      tiffField0.getCount();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-2138609747), tiffField0.getDirectoryType());
      assertEquals(333, tiffField0.getSortHint());
      assertEquals((-2138609747), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1945, fieldTypeRational0, 0L, 2909L, (byte[]) null, byteOrder0, 1945);
      tiffField0.getBytesLength();
      assertEquals(2909, tiffField0.getOffset());
      assertEquals(1945, tiffField0.getDirectoryType());
      assertEquals(1945, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 1L, 12, byteArray0, (ByteOrder) null, 12);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals("12 (0xc: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeByte0.RATIONAL, (byte)32, (byte)32, byteArray0, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@52f16196 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1875, 1875, fieldTypeByte0, 1875, 1875, byteArray0, byteOrder0, 1875);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@205d0408 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeByte0.FLOAT, 11, 11, byteArray0, byteOrder0, 11);
      tiffField0.getDoubleArrayValue();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)4, (byte)4, fieldTypeLong0, (byte)4, (byte)4, byteArray0, byteOrder0, (byte)4);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(101, 101, fieldTypeShort0, 101, 101, byteArray0, byteOrder0, 101);
      tiffField0.getDoubleArrayValue();
      assertEquals(101, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(101, tiffField0.getOffset());
      assertEquals(101, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)26, (byte)26, fieldTypeByte0.RATIONAL, (byte)26, (byte)26, byteArray0, byteOrder0, (byte)26);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2917), (-2917), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-2917));
      assertEquals(8, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-2917), tiffField0.getSortHint());
      assertEquals((-2917), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[177];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)23, (byte)23, fieldTypeAscii0.DOUBLE, (byte)23, (byte)23, byteArray0, byteOrder0, (byte)23);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(22, doubleArray0.length);
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte)30, (byte)0, fieldTypeShort0, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getTag());
      assertEquals(30, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)69, (byte)69, fieldTypeByte0.RATIONAL, (byte)69, (byte)69, byteArray0, byteOrder0, (byte)69);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.RATIONAL, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@23d30e23 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@7155096b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[49];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33918, 33918, fieldTypeAscii0, 33918, 33918, byteArray0, byteOrder0, 33918);
      String string0 = tiffField0.getTagName();
      assertEquals("IntergraphPacketData", string0);
      assertEquals(33918, tiffField0.getDirectoryType());
      assertEquals(33918, tiffField0.getSortHint());
      assertEquals(33918, tiffField0.getTag());
      assertEquals(33918, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-955), (-955), fieldTypeAscii0, 313, (-1537), byteArray0, byteOrder0, 3325);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "WC'DJesd_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)108, (byte)108, fieldTypeFloat0, (byte)108, (-1693L), byteArray0, byteOrder0, (byte)108);
      String string0 = tiffField0.getValueDescription();
      assertEquals(108, tiffField0.getTag());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(108L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (60)", string0);
      assertNotNull(string0);
      assertEquals((-1693), tiffField0.getOffset());
      assertEquals(108, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1, (-4291), fieldTypeByte0, 1916L, (-503L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1916L, tiffField0.getCount());
      assertEquals((-4291), tiffField0.getDirectoryType());
      assertEquals((-503), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1916, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeByte0, 1840, 1840, byteArray0, byteOrder0, 1840);
      String string0 = tiffField0.toString();
      assertEquals(1840, tiffField0.getSortHint());
      assertEquals(1840, tiffField0.getDirectoryType());
      assertEquals(1840, tiffField0.getBytesLength());
      assertEquals("1840 (0x730: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1840 Undefined)", string0);
      assertEquals(1840, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeByte0.FLOAT, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getValueDescription();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(11L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)91, (-304), fieldTypeLong0, 3426L, (-1937L), byteArray0, byteOrder0, (-304));
      String string0 = tiffField0.toString();
      assertEquals((-304), tiffField0.getDirectoryType());
      assertEquals((-304), tiffField0.getSortHint());
      assertEquals("91 (0x5b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (60) (3426 SLong)", string0);
      assertEquals((-1937), tiffField0.getOffset());
      assertEquals(13704, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)108, (byte)108, fieldTypeShort0, (byte)108, 2624L, byteArray0, byteOrder0, (byte)108);
      String string0 = tiffField0.toString();
      assertEquals(2624, tiffField0.getOffset());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals("108 (0x6c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (108) (108 SShort)", string0);
      assertEquals(108, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte)66, (byte)0, fieldTypeShort0, (byte)66, (byte)66, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(66, tiffField0.getOffset());
      assertEquals(66L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(132, tiffField0.getBytesLength());
      assertEquals(66, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-78), (byte)0, fieldTypeShort0, (byte)0, (byte) (-78), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-78), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-78), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33918, 33918, fieldTypeAscii0, 33918, 33918, byteArray0, byteOrder0, 33918);
      tiffField0.toString();
      assertEquals(33918, tiffField0.getSortHint());
      assertEquals(33918, tiffField0.getTag());
      assertEquals(33918, tiffField0.getDirectoryType());
      assertEquals(33918, tiffField0.getBytesLength());
      assertEquals(33918L, tiffField0.getCount());
      assertEquals(33918, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[49];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33918, 33918, fieldTypeAscii0, 33918, 33918, byteArray0, byteOrder0, 33918);
      tiffField0.toString();
      assertEquals(33918, tiffField0.getBytesLength());
      assertEquals(33918, tiffField0.getDirectoryType());
      assertEquals(33918L, tiffField0.getCount());
      assertEquals(33918, tiffField0.getOffset());
      assertEquals(33918, tiffField0.getTag());
      assertEquals(33918, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 10);
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[191];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)23, (byte)23, fieldTypeAscii0.DOUBLE, (byte)23, (byte)23, byteArray0, byteOrder0, (byte)23);
      String string0 = tiffField0.getValueDescription();
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(23L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(313, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2101792506, 2101792506, fieldTypeAscii0, 1879, 2101792506, byteArray0, byteOrder0, 2101792506);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, 1879);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(2101792506, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2101792506, tiffField0.getTag());
      assertEquals(2101792506, tiffField0.getSortHint());
      assertEquals(2101792506, tiffField0.getDirectoryType());
      assertEquals(1879, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.IFD, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)26, (byte)26, fieldTypeByte0.RATIONAL, (byte)26, (byte)26, byteArray0, byteOrder0, (byte)26);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(26L, tiffElement0.offset);
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-43), fieldTypeRational0, (byte)0, 2L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-43), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-878), (-878), fieldTypeAscii0, (-878), (-878), byteArray0, byteOrder0, (-878));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(313, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 5, fieldTypeAscii0, 1, 313, byteArray0, byteOrder0, 313);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(5, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(313, tiffField0.getSortHint());
      assertEquals(313, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertNull(string0);
  }
}
